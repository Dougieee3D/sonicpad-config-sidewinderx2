2023-06-18 14:56:09,697 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2023-06-18 14:56:09,698 [functions.py:log_start()] - KlipperScreen Version: v0.3.9-11-g2c778cc
2023-06-18 14:56:09,698 [functions.py:log_start()] - Python version: 3.9
2023-06-18 14:56:09,922 [config.py:get_config_file_location()] - Passed config (-c): .
2023-06-18 14:56:09,925 [config.py:__init__()] - Config path location: /home/sonic/KlipperScreen/ks_includes/defaults.conf
2023-06-18 14:56:09,938 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2023-06-18 14:56:10,050 [config.py:create_translations()] - Selected lang: None OS lang: en_US
2023-06-18 14:56:10,050 [config.py:install_language()] - Using lang en
2023-06-18 14:56:10,110 [screen.py:__init__()] - Monitors: 1 using number: 0
2023-06-18 14:56:10,114 [screen.py:__init__()] - Screen resolution: 1024x600
2023-06-18 14:56:10,117 [KlippyGtk.py:__init__()] - Font size: 20.7 (medium)
2023-06-18 14:56:10,848 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2023-06-18 14:56:10,860 [screen.py:set_screenblanking_timeout()] - Using DPMS
2023-06-18 14:56:10,870 [screen.py:initial_connection()] - Default printer: None
2023-06-18 14:56:10,928 [screen.py:connect_printer()] - Connecting to printer: Printer
2023-06-18 14:56:10,929 [screen.py:_load_panel()] - Loading panel: splash_screen
2023-06-18 14:56:11,004 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-06-18 14:56:11,016 [KlippyWebsocket.py:connect()] - Attempting to connect
2023-06-18 14:56:11,032 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2023-06-18 14:56:20,829 [KlippyWebsocket.py:connect()] - Attempting to connect
2023-06-18 14:56:20,846 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-06-18 14:56:20,861 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/access/oneshot_token
2023-06-18 14:56:20,863 [KlippyWebsocket.py:connect()] - Starting websocket thread
2023-06-18 14:56:20,876 [_logging.py:info()] - Websocket connected
2023-06-18 14:56:20,876 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2023-06-18 14:56:20,891 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-06-18 14:56:20,905 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-06-18 14:56:20,906 [printer.py:configure_cameras()] - Cameras: []
2023-06-18 14:56:20,906 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'history', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-319-gf0ae517', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-06-18 14:56:20,906 [screen.py:init_klipper()] - Klipper not connected
2023-06-18 14:56:23,840 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-06-18 14:56:23,841 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'history', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-319-gf0ae517', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-06-18 14:56:23,842 [screen.py:init_klipper()] - Klipper not connected
2023-06-18 14:56:26,840 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-06-18 14:56:26,842 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'history', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-319-gf0ae517', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-06-18 14:56:26,842 [screen.py:init_klipper()] - Klipper not connected
2023-06-18 14:56:29,840 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-06-18 14:56:29,841 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'history', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-319-gf0ae517', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-06-18 14:56:29,842 [screen.py:init_klipper()] - Klipper not connected
2023-06-18 14:56:32,838 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-06-18 14:56:32,839 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'history', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-319-gf0ae517', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-06-18 14:56:32,854 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-06-18 14:56:32,869 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-06-18 14:56:32,870 [screen.py:init_klipper()] - {'configfile': {'config': {'mcu': {'serial': '/dev/serial/by-id/<your-mcu-id>'}, 'printer': {'kinematics': 'none', 'max_velocity': '1000', 'max_accel': '1000'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/<your-mcu-id>', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'max_accel_to_decel': 500.0, 'square_corner_velocity': 5.0, 'kinematics': 'none'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-06-18 14:56:32,870 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2023-06-18 14:56:32,870 [printer.py:reinit()] - Klipper version: v0.12.0-116-g31de734d
2023-06-18 14:56:32,871 [printer.py:reinit()] - # Extruders: 0
2023-06-18 14:56:32,871 [printer.py:reinit()] - # Temperature devices: 0
2023-06-18 14:56:32,871 [printer.py:reinit()] - # Fans: 0
2023-06-18 14:56:32,871 [printer.py:reinit()] - # Output pins: 0
2023-06-18 14:56:32,871 [printer.py:reinit()] - # Leds: 0
2023-06-18 14:56:32,886 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-06-18 14:56:32,887 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-06-18 14:56:33,122 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe
2023-06-18 14:56:33,128 [files.py:set_gcodes_path()] - Gcodes path: None
2023-06-18 14:56:33,128 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-06-18 14:56:33,130 [screen.py:init_klipper()] - Printer initialized
2023-06-18 14:56:33,131 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2023-06-18 14:56:33,131 [printer.py:change_state()] - Adding callback for state: startup
2023-06-18 14:56:45,349 [screen.py:_go_to_submenu()] - #### Go to submenu 
2023-06-18 14:56:45,350 [screen.py:_go_to_submenu()] - #### Menu __splashscreen
2023-06-18 14:56:45,352 [screen.py:_load_panel()] - Loading panel: menu
2023-06-18 14:56:45,367 [menu.py:evaluate_enable()] - moonraker connected True
2023-06-18 14:56:45,422 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen > 
2023-06-18 14:56:45,427 [menu.py:arrangeMenuItems()] - X > power
2023-06-18 14:56:45,430 [menu.py:evaluate_enable()] - moonraker connected True
2023-06-18 14:56:46,145 [screen.py:_load_panel()] - Loading panel: network
2023-06-18 14:56:46,184 [network.py:__init__()] - Found wireless interfaces: ['wlan0']
2023-06-18 14:56:46,185 [network.py:__init__()] - Using NetworkManager
2023-06-18 14:56:46,499 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen >  > network
2023-06-18 14:56:50,938 [keyboard.py:__init__()] - Keyboard es
2023-06-18 14:56:51,115 [screen.py:update_size()] - Size changed: 1024x600
2023-06-18 14:57:03,491 [KlippyGtk.py:Dialog()] - Showing dialog Starting WiFi Association (width=1024, height=600)
2023-06-18 14:57:03,493 [wifi_nm.py:connect()] - Connecting to: NETGEAR19
2023-06-18 14:57:07,648 [network.py:connected_callback()] - Now connected to a new network
2023-06-18 14:57:10,054 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2023-06-18 14:57:16,625 [screen.py:_menu_go_back()] - #### Menu go back
2023-06-18 14:57:16,637 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen > 
2023-06-18 14:57:16,643 [menu.py:arrangeMenuItems()] - X > power
2023-06-18 14:57:16,646 [menu.py:evaluate_enable()] - moonraker connected True
2023-06-18 14:57:18,292 [screen.py:_load_panel()] - Loading panel: system
2023-06-18 14:57:18,323 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/system_info
2023-06-18 14:57:18,356 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen >  > system
2023-06-18 14:57:18,370 [system.py:get_updates()] - {'jsonrpc': '2.0', 'result': {'github_rate_limit': None, 'github_requests_remaining': None, 'github_limit_reset_time': None, 'version_info': {'system': {'package_count': 0, 'package_list': []}, 'moonraker': {'channel': 'dev', 'debug_enabled': False, 'channel_invalid': False, 'is_valid': False, 'configured_type': 'git_repo', 'info_tags': [], 'detected_type': 'git_repo', 'remote_alias': '?', 'branch': '?', 'owner': '?', 'repo_name': '?', 'remote_url': '?', 'recovery_url': '?', 'version': '?', 'remote_version': '?', 'rollback_version': '?', 'current_hash': '?', 'remote_hash': '?', 'is_dirty': False, 'detached': False, 'commits_behind': [], 'commits_behind_count': 0, 'git_messages': [], 'full_version_string': '?', 'pristine': True, 'corrupt': False, 'warnings': ['Failed to detect git branch', 'Failed to detect repo url'], 'anomalies': []}, 'klipper': {'channel': 'dev', 'debug_enabled': False, 'channel_invalid': False, 'is_valid': False, 'configured_type': 'git_repo', 'info_tags': [], 'detected_type': 'git_repo', 'remote_alias': '?', 'branch': '?', 'owner': '?', 'repo_name': '?', 'remote_url': '?', 'recovery_url': '?', 'version': '?', 'remote_version': '?', 'rollback_version': '?', 'current_hash': '?', 'remote_hash': '?', 'is_dirty': False, 'detached': False, 'commits_behind': [], 'commits_behind_count': 0, 'git_messages': [], 'full_version_string': '?', 'pristine': True, 'corrupt': False, 'warnings': ['Failed to detect git branch', 'Failed to detect repo url'], 'anomalies': []}, 'KlipperScreen': {'channel': 'dev', 'debug_enabled': False, 'channel_invalid': False, 'is_valid': False, 'configured_type': 'git_repo', 'info_tags': [], 'detected_type': 'git_repo', 'remote_alias': '?', 'branch': '?', 'owner': '?', 'repo_name': '?', 'remote_url': '?', 'recovery_url': '?', 'version': '?', 'remote_version': '?', 'rollback_version': '?', 'current_hash': '?', 'remote_hash': '?', 'is_dirty': False, 'detached': False, 'commits_behind': [], 'commits_behind_count': 0, 'git_messages': [], 'full_version_string': '?', 'pristine': True, 'corrupt': False, 'warnings': ['Failed to detect git branch', 'Failed to detect repo url'], 'anomalies': []}}, 'busy': False}, 'id': 3}
2023-06-18 14:57:18,377 [system.py:update_program_info()] - Invalid KlipperScreen ?
2023-06-18 14:57:18,385 [system.py:update_program_info()] - Invalid klipper ?
2023-06-18 14:57:18,392 [system.py:update_program_info()] - Invalid moonraker ?
2023-06-18 14:57:26,142 [screen.py:_menu_go_back()] - #### Menu go back
2023-06-18 14:57:26,153 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen > 
2023-06-18 14:57:26,159 [menu.py:arrangeMenuItems()] - X > power
2023-06-18 14:57:26,162 [menu.py:evaluate_enable()] - moonraker connected True
2023-06-18 14:57:27,192 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen >  > network
2023-06-18 14:57:30,118 [screen.py:_menu_go_back()] - #### Menu go back
2023-06-18 14:57:30,129 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen > 
2023-06-18 14:57:30,135 [menu.py:arrangeMenuItems()] - X > power
2023-06-18 14:57:30,137 [menu.py:evaluate_enable()] - moonraker connected True
2023-06-18 14:57:30,720 [screen.py:_menu_go_back()] - #### Menu go back
2023-06-18 14:57:30,729 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-06-18 14:57:32,665 [screen.py:_go_to_submenu()] - #### Go to submenu 
2023-06-18 14:57:32,665 [screen.py:_go_to_submenu()] - #### Menu __splashscreen
2023-06-18 14:57:32,677 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen > 
2023-06-18 14:57:32,683 [menu.py:arrangeMenuItems()] - X > power
2023-06-18 14:57:32,685 [menu.py:evaluate_enable()] - moonraker connected True
2023-06-18 14:57:33,445 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen >  > network
2023-06-18 14:57:38,458 [screen.py:_menu_go_back()] - #### Menu go back
2023-06-18 14:57:38,469 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen > 
2023-06-18 14:57:38,476 [menu.py:arrangeMenuItems()] - X > power
2023-06-18 14:57:38,479 [menu.py:evaluate_enable()] - moonraker connected True
2023-06-18 14:57:39,585 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen >  > network
2023-06-18 14:58:00,606 [printer.py:change_state()] - Changing state from 'startup' to 'error'
2023-06-18 14:58:00,606 [printer.py:change_state()] - Adding callback for state: error
2023-06-18 14:58:00,610 [screen.py:show_panel()] - Reinitializing panel
2023-06-18 14:58:00,668 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 01:09:03,303 [network.py:connected_callback()] - Now connected to a new network
2025-08-25 01:14:04,993 [KlippyWebsocket.py:on_close()] - Server Shutdown
2025-08-25 01:14:04,994 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2025-08-25 01:14:04,995 [screen.py:websocket_disconnected()] - ### websocket_disconnected
2025-08-25 01:14:04,998 [screen.py:show_panel()] - Reinitializing panel
2025-08-25 01:14:05,072 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 01:14:05,158 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-08-25 01:14:05,160 [screen.py:show_panel()] - Reinitializing panel
2025-08-25 01:14:05,229 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 01:14:05,243 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-08-25 01:14:05,251 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-08-25 01:14:15,339 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-08-25 01:14:15,354 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2025-08-25 01:14:15,368 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/access/oneshot_token
2025-08-25 01:14:15,369 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-08-25 01:14:15,381 [_logging.py:info()] - Websocket connected
2025-08-25 01:14:15,382 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-08-25 01:14:15,395 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2025-08-25 01:14:15,408 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2025-08-25 01:14:15,409 [printer.py:configure_cameras()] - Cameras: []
2025-08-25 01:14:15,410 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-319-gf0ae517', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-08-25 01:14:15,425 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2025-08-25 01:14:15,486 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2025-08-25 01:14:15,487 [screen.py:init_klipper()] - {'configfile': {'config': {'mcu': {'serial': '/dev/serial/by-id/<your-mcu-id>'}, 'printer': {'kinematics': 'none', 'max_velocity': '1000', 'max_accel': '1000'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/<your-mcu-id>', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'max_accel_to_decel': 500.0, 'square_corner_velocity': 5.0, 'kinematics': 'none'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-08-25 01:14:15,487 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-08-25 01:14:15,488 [printer.py:reinit()] - Klipper version: v0.12.0-116-g31de734d
2025-08-25 01:14:15,488 [printer.py:reinit()] - # Extruders: 0
2025-08-25 01:14:15,488 [printer.py:reinit()] - # Temperature devices: 0
2025-08-25 01:14:15,488 [printer.py:reinit()] - # Fans: 0
2025-08-25 01:14:15,488 [printer.py:reinit()] - # Output pins: 0
2025-08-25 01:14:15,488 [printer.py:reinit()] - # Leds: 0
2025-08-25 01:14:15,505 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2025-08-25 01:14:15,506 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 01:14:15,744 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe
2025-08-25 01:14:15,746 [files.py:set_gcodes_path()] - Gcodes path: None
2025-08-25 01:14:15,746 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 01:14:15,747 [screen.py:init_klipper()] - Printer initialized
2025-08-25 01:14:15,747 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-08-25 01:14:15,747 [printer.py:change_state()] - Adding callback for state: error
2025-08-25 01:14:15,750 [screen.py:show_panel()] - Reinitializing panel
2025-08-25 01:14:15,814 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 01:14:34,856 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-08-25 01:14:34,857 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-25 01:14:34,857 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-25 01:14:34,858 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-08-25 01:14:34,860 [screen.py:show_panel()] - Reinitializing panel
2025-08-25 01:14:34,929 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 01:14:38,352 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2025-08-25 01:14:38,369 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2025-08-25 01:14:38,370 [printer.py:configure_cameras()] - Cameras: []
2025-08-25 01:14:38,371 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-319-gf0ae517', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-08-25 01:14:38,386 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2025-08-25 01:14:38,411 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2025-08-25 01:14:38,414 [screen.py:init_klipper()] - {'configfile': {'config': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f401xc_12345-if00', 'restart_method': 'command'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '300', 'max_accel': '6000', 'square_corner_velocity': '5.0', 'max_z_velocity': '5', 'max_z_accel': '100'}, 'extruder': {'max_extrude_only_distance': '100.0', 'max_extrude_cross_section': '50.0', 'step_pin': 'PA7', 'dir_pin': 'PA6', 'enable_pin': '!PC4', 'microsteps': '16', 'rotation_distance': '7.1910', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'PC9', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'PC0', 'control': 'pid', 'pid_kp': '22.533', 'pid_ki': '1.113', 'pid_kd': '114.073', 'min_temp': '0', 'max_temp': '250', 'pressure_advance': '0.05', 'pressure_advance_smooth_time': '0.06'}, 'heater_bed': {'heater_pin': 'PA8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'PC1', 'control': 'pid', 'pid_kp': '45.986', 'pid_ki': '0.757', 'pid_kd': '698.409', 'min_temp': '0', 'max_temp': '130'}, 'fan': {'pin': 'PC8'}, 'heater_fan hotend_fan': {'pin': 'PC7', 'heater': 'extruder', 'heater_temp': '50.0'}, 'controller_fan stepper_fan': {'pin': 'PC6', 'idle_timeout': '300'}, 'stepper_x': {'step_pin': '!PB14', 'dir_pin': 'PB13', 'enable_pin': '!PB15', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '!PA2', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '50'}, 'stepper_y': {'step_pin': 'PB10', 'dir_pin': 'PB2', 'enable_pin': '!PB12', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '!PA1', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '50'}, 'stepper_z': {'step_pin': 'PB0', 'dir_pin': '!PC5', 'enable_pin': '!PB1', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_max': '400', 'position_min': '-10'}, 'bltouch': {'sensor_pin': 'PC2', 'control_pin': 'PC3', 'x_offset': '27.25', 'y_offset': '-12.8', 'z_offset': '0.1', 'speed': '10', 'samples': '3', 'samples_result': 'average'}, 'safe_z_home': {'home_xy_position': '150,150', 'speed': '100', 'z_hop': '10', 'z_hop_speed': '5'}, 'bed_mesh': {'speed': '100', 'mesh_min': '30, 20', 'mesh_max': '300, 290', 'algorithm': 'bicubic', 'probe_count': '7,7', 'mesh_pps': '2,3'}, 'screws_tilt_adjust': {'screw1': '23,63', 'screw1_name': 'front left', 'screw2': '223,63', 'screw2_name': 'front right', 'screw3': '223,263', 'screw3_name': 'back right', 'screw4': '23,263', 'screw4_name': 'back left', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'neopixel my_neopixel': {'pin': 'PB7', 'color_order': 'GRB', 'initial_red': '0.0', 'initial_green': '0.0', 'initial_blue': '0.0'}, 'input_shaper': {'shaper_freq_x': '43.26', 'shaper_freq_y': '45.28', 'shaper_type': 'mzv'}, 'virtual_sdcard': {'path': '/home/sonic/virtual_sd'}, 'display_status': {}, 'pause_resume': {}, 'exclude_object': {}, 'idle_timeout': {'timeout': '86400'}, 'gcode_macro PRINT_START': {'gcode': '\nG90\nG28\nLED_ON\nSET_GCODE_OFFSET Z_ADJUST=-2.185 MOVE=1\nBED_MESH_CLEAR\n{% if printer.exclude_object.objects|length > 0 %}\n{% set min_x = printer.exclude_object.objects[0].polygon[0][0] %}\n{% set min_y = printer.exclude_object.objects[0].polygon[0][1] %}\n{% set max_x = min_x %}\n{% set max_y = min_y %}\n{% for obj in printer.exclude_object.objects %}\n{% for p in obj.polygon %}\n{% set min_x = [min_x, p[0]]|min %}\n{% set min_y = [min_y, p[1]]|min %}\n{% set max_x = [max_x, p[0]]|max %}\n{% set max_y = [max_y, p[1]]|max %}\n{% endfor %}\n{% endfor %}\n{% set min_x = min_x - 5 %}\n{% set min_y = min_y - 5 %}\n{% set max_x = max_x + 5 %}\n{% set max_y = max_y + 5 %}\nBED_MESH_CALIBRATE AREA_START={min_x},{min_y} AREA_END={max_x},{max_y}\n{% else %}\nBED_MESH_CALIBRATE\n{% endif %}\nG1 Z5 F3000\nG1 Z0.15 F300\n_PURGE_LINE'}, 'gcode_macro PRINT_END': {'gcode': '\nM400\nG92 E0\nG1 E-2.0 F300\nG91\nG1 Z10 F600\nG90\nG1 X0 Y300 F6000\nM104 S0\nM140 S0\nM106 S0\nM84\nSET_GCODE_OFFSET Z=0\nFIRMWARE_RESTART'}, 'gcode_macro _PURGE_LINE': {'gcode': '\nSAVE_GCODE_STATE NAME=Pre_Prime\nG90\nG92 E0\nG1 Z10.0 F3000\nG1 X10 Y10\nG1 Z0.24 F5000.0\nG1 X100 Y10 Z0.24 F1500.0 E35\nG92 E0\nG1 Z10 F6000\nRESTORE_GCODE_STATE NAME=Pre_Prime'}, 'gcode_macro LED_ON': {'gcode': 'SET_LED LED=my_neopixel RED=1 GREEN=1 BLUE=1'}, 'gcode_macro LED_OFF': {'gcode': 'SET_LED LED=my_neopixel RED=0 GREEN=0 BLUE=0'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'variable_extrude': '1.0', 'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - 2.0) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\nPAUSE_BASE\nG91\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG1 E-{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY) %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG91\nG1 E{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}'}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\nTURN_OFF_HEATERS\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z4.5 F300\nG90\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}\nG28 X Y\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\nG1 Y{y_park} F2000\nM84\nCANCEL_PRINT_BASE'}, 'gcode_macro UNLOAD_FILAMENT': {'description': 'Unloads Filament from extruder', 'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=UNLOAD_state\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG91\nG0 Z{ z_safe_lift }\nG92 E0\nG1 E5.0 F300\nG1 E-50 F{ 10 * 60 }\nG1 E-50 F{ 5 * 60 }\nRESTORE_GCODE_STATE NAME=UNLOAD_state\n{% endif %}'}, 'gcode_macro LOAD_FILAMENT': {'description': 'Loads filament into the extruder', 'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=LOAD_state\nG91\nG1 E50 F{ 5 * 60 }\nG4 P{ 0.9 * 1000 }\nG1 E25.0 F{ 5 * 60 }\n_ENABLE_FS\nRESTORE_GCODE_STATE NAME=LOAD_state\n{% endif %}'}, 'gcode_macro _ENABLE_FS': {'description': 'enables filament sensor', 'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=1'}, 'gcode_macro _DISABLE_FS': {'description': 'disables filament sensor', 'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=0'}, 'gcode_macro HEAT': {'description': 'Heats up the extruder', 'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}\n{% set Z = params.Z|default(50)|float %}\n{% set X = params.X|default(110)|float %}\n{% set Y = params.Y|default(110)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X{X} Y{Y} F6000'}, 'gcode_macro COOL': {'description': 'Turns off all heaters', 'gcode': '\nTURN_OFF_HEATERS'}, 'gcode_macro PREHEAT_PLA': {'description': 'Preheats extruder and bed for PLA', 'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(150)|float %}\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}'}, 'gcode_macro BED_TRAMMING_1': {'description': 'Heats bed and starts screw leveling', 'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nSCREWS_TILT_CALCULATE'}, 'gcode_macro BED_TRAMMING_2': {'description': 'Continues bed screw leveling', 'gcode': '\nSCREWS_TILT_CALCULATE'}, 'gcode_macro BED_MESH': {'description': 'Heats bed, makes a mesh, and saves it', 'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nBED_MESH_CLEAR\nBED_MESH_CALIBRATE\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro DISABLE_STEPPERS': {'description': 'Disables stepper motors', 'gcode': '\nM84 X Y E'}, 'gcode_macro PID_EXTRUDER': {'description': 'PID Tune for Extruder', 'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(200)|float %}\nPID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro PID_BED': {'description': 'PID Tune for Bed', 'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %}\nPID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro NOZZLE_MID': {'description': 'Moves nozzle to bed center', 'gcode': '\n{% set Z = params.Z|default(10)|float %}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X110 Y110 F6000'}, 'gcode_macro home_check': {'description': 'Checks if printer is homed', 'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nG28\n{% endif %}'}, 'gcode_macro SHOW_PRINT': {'description': 'Moves extruder out of the way', 'gcode': '\nHOME_CHECK\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG1 Z{ z_safe_lift }\nG1 X10 Y220 F4000'}, 'gcode_macro ZOffset_Setup': {'description': 'Starts Z-Offset Calibration', 'gcode': '\n{% if printer.heater_bed.temperature > 70 %}\n{action_respond_info("Bed temperature too high")}\n{% elif printer.extruder.temperature > 290 %}\n{action_respond_info("Extruder temperature too high")}\n{% else %}\nG28\nPROBE_CALIBRATE\n{% endif %}'}, 'gcode_macro Z_Down_01': {'description': 'Moves Z down by 0.1', 'gcode': '\nTESTZ Z=-.1'}, 'gcode_macro Z_Up_01': {'description': 'Moves Z up by 0.1', 'gcode': '\nTESTZ Z=+.1'}, 'gcode_macro Z_Low_Half': {'description': 'Sets Z between current and previous lower', 'gcode': '\nTESTZ Z=-'}, 'gcode_macro Z_High_Half': {'description': 'Sets Z between current and previous higher', 'gcode': '\nTESTZ Z=+'}, 'gcode_macro Accept_Save': {'description': 'Accepts Z-Offset', 'gcode': '\nACCEPT\nSAVE_CONFIG'}, 'gcode_macro Abort_Setup': {'description': 'Aborts Z-Offset', 'gcode': '\nABORT'}, 'gcode_macro G29': {'gcode': '\nG28\nbed_mesh_calibrate\nG1 X0 Y0 Z10 F4200'}, 'gcode_macro QUICK_Z_TEST': {'description': 'Move to center for manual Z adjustment', 'gcode': '\nG28\nG90\nG1 X150 Y150 Z5 F6000\nG1 Z1.0 F600'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f401xc_12345-if00', 'baud': 250000, 'restart_method': 'command', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC1', 'min_temp': 0.0, 'max_temp': 130.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 45.986, 'pid_ki': 0.757, 'pid_kd': 698.409, 'heater_pin': 'PA8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PC8'}, 'heater_fan hotend_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'PC7', 'fan_speed': 1.0}, 'controller_fan stepper_fan': {'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PC6', 'fan_speed': 1.0, 'idle_speed': 1.0, 'idle_timeout': 300, 'heater': ['extruder']}, 'bltouch': {'z_offset': 0.1, 'stow_on_each_sample': True, 'probe_with_touch_mode': False, 'control_pin': 'PC3', 'sensor_pin': 'PC2', 'pin_up_reports_not_triggered': True, 'pin_up_touch_mode_reports_triggered': True, 'pin_move_time': 0.68, 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 27.25, 'y_offset': -12.8, 'samples': 3, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [150.0, 150.0], 'z_hop': 10.0, 'z_hop_speed': 5.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'adaptive_margin': 0.0, 'probe_count': [7, 7], 'mesh_min': [30.0, 20.0], 'mesh_max': [300.0, 290.0], 'mesh_pps': [2, 3], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 100.0, 'fade_start': 1.0, 'fade_end': 0.0, 'split_delta_z': 0.025, 'move_check_distance': 5.0}, 'screws_tilt_adjust': {'screw1': [23.0, 63.0], 'screw1_name': 'front left', 'screw2': [223.0, 63.0], 'screw2_name': 'front right', 'screw3': [223.0, 263.0], 'screw3_name': 'back right', 'screw4': [23.0, 263.0], 'screw4_name': 'back left', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'neopixel my_neopixel': {'pin': 'PB7', 'chain_count': 1, 'color_order': ['GRB'], 'initial_red': 0.0, 'initial_green': 0.0, 'initial_blue': 0.0, 'initial_white': 0.0}, 'input_shaper': {'shaper_type': 'mzv', 'shaper_type_x': 'mzv', 'damping_ratio_x': 0.1, 'shaper_freq_x': 43.26, 'shaper_type_y': 'mzv', 'damping_ratio_y': 0.1, 'shaper_freq_y': 45.28}, 'virtual_sdcard': {'path': '/home/sonic/virtual_sd', 'on_error_gcode': ''}, 'pause_resume': {'recover_velocity': 50.0}, 'idle_timeout': {'timeout': 86400.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'gcode_macro print_start': {'gcode': '\nG90\nG28\nLED_ON\nSET_GCODE_OFFSET Z_ADJUST=-2.185 MOVE=1\nBED_MESH_CLEAR\n{% if printer.exclude_object.objects|length > 0 %}\n{% set min_x = printer.exclude_object.objects[0].polygon[0][0] %}\n{% set min_y = printer.exclude_object.objects[0].polygon[0][1] %}\n{% set max_x = min_x %}\n{% set max_y = min_y %}\n{% for obj in printer.exclude_object.objects %}\n{% for p in obj.polygon %}\n{% set min_x = [min_x, p[0]]|min %}\n{% set min_y = [min_y, p[1]]|min %}\n{% set max_x = [max_x, p[0]]|max %}\n{% set max_y = [max_y, p[1]]|max %}\n{% endfor %}\n{% endfor %}\n{% set min_x = min_x - 5 %}\n{% set min_y = min_y - 5 %}\n{% set max_x = max_x + 5 %}\n{% set max_y = max_y + 5 %}\nBED_MESH_CALIBRATE AREA_START={min_x},{min_y} AREA_END={max_x},{max_y}\n{% else %}\nBED_MESH_CALIBRATE\n{% endif %}\nG1 Z5 F3000\nG1 Z0.15 F300\n_PURGE_LINE', 'description': 'G-Code macro'}, 'gcode_macro print_end': {'gcode': '\nM400\nG92 E0\nG1 E-2.0 F300\nG91\nG1 Z10 F600\nG90\nG1 X0 Y300 F6000\nM104 S0\nM140 S0\nM106 S0\nM84\nSET_GCODE_OFFSET Z=0\nFIRMWARE_RESTART', 'description': 'G-Code macro'}, 'gcode_macro _purge_line': {'gcode': '\nSAVE_GCODE_STATE NAME=Pre_Prime\nG90\nG92 E0\nG1 Z10.0 F3000\nG1 X10 Y10\nG1 Z0.24 F5000.0\nG1 X100 Y10 Z0.24 F1500.0 E35\nG92 E0\nG1 Z10 F6000\nRESTORE_GCODE_STATE NAME=Pre_Prime', 'description': 'G-Code macro'}, 'gcode_macro led_on': {'gcode': 'SET_LED LED=my_neopixel RED=1 GREEN=1 BLUE=1', 'description': 'G-Code macro'}, 'gcode_macro led_off': {'gcode': 'SET_LED LED=my_neopixel RED=0 GREEN=0 BLUE=0', 'description': 'G-Code macro'}, 'gcode_macro pause': {'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - 2.0) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\nPAUSE_BASE\nG91\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG1 E-{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print', 'variable_extrude': '1.0'}, 'gcode_macro resume': {'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY) %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG91\nG1 E{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print'}, 'gcode_macro cancel_print': {'gcode': '\nTURN_OFF_HEATERS\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z4.5 F300\nG90\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}\nG28 X Y\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\nG1 Y{y_park} F2000\nM84\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro unload_filament': {'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=UNLOAD_state\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG91\nG0 Z{ z_safe_lift }\nG92 E0\nG1 E5.0 F300\nG1 E-50 F{ 10 * 60 }\nG1 E-50 F{ 5 * 60 }\nRESTORE_GCODE_STATE NAME=UNLOAD_state\n{% endif %}', 'description': 'Unloads Filament from extruder'}, 'gcode_macro load_filament': {'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=LOAD_state\nG91\nG1 E50 F{ 5 * 60 }\nG4 P{ 0.9 * 1000 }\nG1 E25.0 F{ 5 * 60 }\n_ENABLE_FS\nRESTORE_GCODE_STATE NAME=LOAD_state\n{% endif %}', 'description': 'Loads filament into the extruder'}, 'gcode_macro _enable_fs': {'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=1', 'description': 'enables filament sensor'}, 'gcode_macro _disable_fs': {'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=0', 'description': 'disables filament sensor'}, 'gcode_macro heat': {'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}\n{% set Z = params.Z|default(50)|float %}\n{% set X = params.X|default(110)|float %}\n{% set Y = params.Y|default(110)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X{X} Y{Y} F6000', 'description': 'Heats up the extruder'}, 'gcode_macro cool': {'gcode': '\nTURN_OFF_HEATERS', 'description': 'Turns off all heaters'}, 'gcode_macro preheat_pla': {'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(150)|float %}\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}', 'description': 'Preheats extruder and bed for PLA'}, 'gcode_macro bed_tramming_1': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nSCREWS_TILT_CALCULATE', 'description': 'Heats bed and starts screw leveling'}, 'gcode_macro bed_tramming_2': {'gcode': '\nSCREWS_TILT_CALCULATE', 'description': 'Continues bed screw leveling'}, 'gcode_macro bed_mesh': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nBED_MESH_CLEAR\nBED_MESH_CALIBRATE\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'Heats bed, makes a mesh, and saves it'}, 'gcode_macro disable_steppers': {'gcode': '\nM84 X Y E', 'description': 'Disables stepper motors'}, 'gcode_macro pid_extruder': {'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(200)|float %}\nPID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'PID Tune for Extruder'}, 'gcode_macro pid_bed': {'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %}\nPID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'PID Tune for Bed'}, 'gcode_macro nozzle_mid': {'gcode': '\n{% set Z = params.Z|default(10)|float %}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X110 Y110 F6000', 'description': 'Moves nozzle to bed center'}, 'gcode_macro home_check': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nG28\n{% endif %}', 'description': 'Checks if printer is homed'}, 'gcode_macro show_print': {'gcode': '\nHOME_CHECK\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG1 Z{ z_safe_lift }\nG1 X10 Y220 F4000', 'description': 'Moves extruder out of the way'}, 'gcode_macro zoffset_setup': {'gcode': '\n{% if printer.heater_bed.temperature > 70 %}\n{action_respond_info("Bed temperature too high")}\n{% elif printer.extruder.temperature > 290 %}\n{action_respond_info("Extruder temperature too high")}\n{% else %}\nG28\nPROBE_CALIBRATE\n{% endif %}', 'description': 'Starts Z-Offset Calibration'}, 'gcode_macro z_down_01': {'gcode': '\nTESTZ Z=-.1', 'description': 'Moves Z down by 0.1'}, 'gcode_macro z_up_01': {'gcode': '\nTESTZ Z=+.1', 'description': 'Moves Z up by 0.1'}, 'gcode_macro z_low_half': {'gcode': '\nTESTZ Z=-', 'description': 'Sets Z between current and previous lower'}, 'gcode_macro z_high_half': {'gcode': '\nTESTZ Z=+', 'description': 'Sets Z between current and previous higher'}, 'gcode_macro accept_save': {'gcode': '\nACCEPT\nSAVE_CONFIG', 'description': 'Accepts Z-Offset'}, 'gcode_macro abort_setup': {'gcode': '\nABORT', 'description': 'Aborts Z-Offset'}, 'gcode_macro g29': {'gcode': '\nG28\nbed_mesh_calibrate\nG1 X0 Y0 Z10 F4200', 'description': 'G-Code macro'}, 'gcode_macro quick_z_test': {'gcode': '\nG28\nG90\nG1 X150 Y150 Z5 F6000\nG1 Z1.0 F600', 'description': 'Move to center for manual Z adjustment'}, 'printer': {'max_velocity': 300.0, 'max_accel': 6000.0, 'max_accel_to_decel': 3000.0, 'square_corner_velocity': 5.0, 'kinematics': 'cartesian', 'max_z_velocity': 5.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': '!PB14', 'dir_pin': 'PB13', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB15', 'endstop_pin': '!PA2', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'PB10', 'dir_pin': 'PB2', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB12', 'endstop_pin': '!PA1', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'PB0', 'dir_pin': '!PC5', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB1', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -10.0, 'position_max': 400.0, 'homing_speed': 5.0, 'second_homing_speed': 2.5, 'homing_retract_speed': 5.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC0', 'min_temp': 0.0, 'max_temp': 250.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 22.533, 'pid_ki': 1.113, 'pid_kd': 114.073, 'heater_pin': 'PC9', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 50.0, 'max_extrude_only_velocity': 79.82432411074329, 'max_extrude_only_accel': 1596.4864822148659, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PA7', 'pressure_advance': 0.05, 'pressure_advance_smooth_time': 0.06, 'dir_pin': 'PA6', 'rotation_distance': 7.191, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PC4'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-08-25 01:14:38,416 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-08-25 01:14:38,417 [printer.py:reinit()] - Klipper version: v0.12.0-116-g31de734d
2025-08-25 01:14:38,418 [printer.py:reinit()] - # Extruders: 1
2025-08-25 01:14:38,418 [printer.py:reinit()] - # Temperature devices: 1
2025-08-25 01:14:38,418 [printer.py:reinit()] - # Fans: 3
2025-08-25 01:14:38,419 [printer.py:reinit()] - # Output pins: 0
2025-08-25 01:14:38,419 [printer.py:reinit()] - # Leds: 1
2025-08-25 01:14:38,442 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2025-08-25 01:14:38,444 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 01:14:38,697 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&controller_fan stepper_fan&heater_fan hotend_fan&neopixel my_neopixel
2025-08-25 01:14:38,706 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/virtual_sd
2025-08-25 01:14:38,707 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 01:14:38,713 [screen.py:init_klipper()] - Printer initialized
2025-08-25 01:14:38,713 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2025-08-25 01:14:38,714 [printer.py:change_state()] - Adding callback for state: startup
2025-08-25 01:14:47,813 [printer.py:change_state()] - Changing state from 'startup' to 'disconnected'
2025-08-25 01:14:47,813 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-25 01:14:47,818 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-25 01:14:47,820 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-08-25 01:14:47,825 [screen.py:show_panel()] - Reinitializing panel
2025-08-25 01:14:47,918 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 01:14:51,353 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2025-08-25 01:14:51,367 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2025-08-25 01:14:51,368 [printer.py:configure_cameras()] - Cameras: []
2025-08-25 01:14:51,368 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-319-gf0ae517', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-08-25 01:14:51,385 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2025-08-25 01:14:51,517 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2025-08-25 01:14:51,519 [screen.py:init_klipper()] - {'configfile': {'config': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f401xc_12345-if00', 'restart_method': 'command'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '300', 'max_accel': '6000', 'square_corner_velocity': '5.0', 'max_z_velocity': '5', 'max_z_accel': '100'}, 'extruder': {'max_extrude_only_distance': '100.0', 'max_extrude_cross_section': '50.0', 'step_pin': 'PA7', 'dir_pin': 'PA6', 'enable_pin': '!PC4', 'microsteps': '16', 'rotation_distance': '7.1910', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'PC9', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'PC0', 'control': 'pid', 'pid_kp': '22.533', 'pid_ki': '1.113', 'pid_kd': '114.073', 'min_temp': '0', 'max_temp': '250', 'pressure_advance': '0.05', 'pressure_advance_smooth_time': '0.06'}, 'heater_bed': {'heater_pin': 'PA8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'PC1', 'control': 'pid', 'pid_kp': '45.986', 'pid_ki': '0.757', 'pid_kd': '698.409', 'min_temp': '0', 'max_temp': '130'}, 'fan': {'pin': 'PC8'}, 'heater_fan hotend_fan': {'pin': 'PC7', 'heater': 'extruder', 'heater_temp': '50.0'}, 'controller_fan stepper_fan': {'pin': 'PC6', 'idle_timeout': '300'}, 'stepper_x': {'step_pin': '!PB14', 'dir_pin': 'PB13', 'enable_pin': '!PB15', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '!PA2', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '50'}, 'stepper_y': {'step_pin': 'PB10', 'dir_pin': 'PB2', 'enable_pin': '!PB12', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '!PA1', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '50'}, 'stepper_z': {'step_pin': 'PB0', 'dir_pin': '!PC5', 'enable_pin': '!PB1', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_max': '400', 'position_min': '-10'}, 'bltouch': {'sensor_pin': 'PC2', 'control_pin': 'PC3', 'x_offset': '27.25', 'y_offset': '-12.8', 'z_offset': '0.1', 'speed': '10', 'samples': '3', 'samples_result': 'average'}, 'safe_z_home': {'home_xy_position': '150,150', 'speed': '100', 'z_hop': '10', 'z_hop_speed': '5'}, 'bed_mesh': {'speed': '100', 'mesh_min': '30, 20', 'mesh_max': '300, 290', 'algorithm': 'bicubic', 'probe_count': '7,7', 'mesh_pps': '2,3'}, 'screws_tilt_adjust': {'screw1': '23,63', 'screw1_name': 'front left', 'screw2': '223,63', 'screw2_name': 'front right', 'screw3': '223,263', 'screw3_name': 'back right', 'screw4': '23,263', 'screw4_name': 'back left', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'neopixel my_neopixel': {'pin': 'PB7', 'color_order': 'GRB', 'initial_red': '0.0', 'initial_green': '0.0', 'initial_blue': '0.0'}, 'input_shaper': {'shaper_freq_x': '43.26', 'shaper_freq_y': '45.28', 'shaper_type': 'mzv'}, 'virtual_sdcard': {'path': '/home/sonic/virtual_sd'}, 'display_status': {}, 'pause_resume': {}, 'exclude_object': {}, 'idle_timeout': {'timeout': '86400'}, 'gcode_macro PRINT_START': {'gcode': '\nG90\nG28\nLED_ON\nSET_GCODE_OFFSET Z_ADJUST=-2.185 MOVE=1\nBED_MESH_CLEAR\n{% if printer.exclude_object.objects|length > 0 %}\n{% set min_x = printer.exclude_object.objects[0].polygon[0][0] %}\n{% set min_y = printer.exclude_object.objects[0].polygon[0][1] %}\n{% set max_x = min_x %}\n{% set max_y = min_y %}\n{% for obj in printer.exclude_object.objects %}\n{% for p in obj.polygon %}\n{% set min_x = [min_x, p[0]]|min %}\n{% set min_y = [min_y, p[1]]|min %}\n{% set max_x = [max_x, p[0]]|max %}\n{% set max_y = [max_y, p[1]]|max %}\n{% endfor %}\n{% endfor %}\n{% set min_x = min_x - 5 %}\n{% set min_y = min_y - 5 %}\n{% set max_x = max_x + 5 %}\n{% set max_y = max_y + 5 %}\nBED_MESH_CALIBRATE AREA_START={min_x},{min_y} AREA_END={max_x},{max_y}\n{% else %}\nBED_MESH_CALIBRATE\n{% endif %}\nG1 Z5 F3000\nG1 Z0.15 F300\n_PURGE_LINE'}, 'gcode_macro PRINT_END': {'gcode': '\nM400\nG92 E0\nG1 E-2.0 F300\nG91\nG1 Z10 F600\nG90\nG1 X0 Y300 F6000\nM104 S0\nM140 S0\nM106 S0\nM84\nSET_GCODE_OFFSET Z=0\nFIRMWARE_RESTART'}, 'gcode_macro _PURGE_LINE': {'gcode': '\nSAVE_GCODE_STATE NAME=Pre_Prime\nG90\nG92 E0\nG1 Z10.0 F3000\nG1 X10 Y10\nG1 Z0.24 F5000.0\nG1 X100 Y10 Z0.24 F1500.0 E35\nG92 E0\nG1 Z10 F6000\nRESTORE_GCODE_STATE NAME=Pre_Prime'}, 'gcode_macro LED_ON': {'gcode': 'SET_LED LED=my_neopixel RED=1 GREEN=1 BLUE=1'}, 'gcode_macro LED_OFF': {'gcode': 'SET_LED LED=my_neopixel RED=0 GREEN=0 BLUE=0'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'variable_extrude': '1.0', 'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - 2.0) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\nPAUSE_BASE\nG91\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG1 E-{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY) %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG91\nG1 E{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}'}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\nTURN_OFF_HEATERS\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z4.5 F300\nG90\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}\nG28 X Y\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\nG1 Y{y_park} F2000\nM84\nCANCEL_PRINT_BASE'}, 'gcode_macro UNLOAD_FILAMENT': {'description': 'Unloads Filament from extruder', 'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=UNLOAD_state\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG91\nG0 Z{ z_safe_lift }\nG92 E0\nG1 E5.0 F300\nG1 E-50 F{ 10 * 60 }\nG1 E-50 F{ 5 * 60 }\nRESTORE_GCODE_STATE NAME=UNLOAD_state\n{% endif %}'}, 'gcode_macro LOAD_FILAMENT': {'description': 'Loads filament into the extruder', 'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=LOAD_state\nG91\nG1 E50 F{ 5 * 60 }\nG4 P{ 0.9 * 1000 }\nG1 E25.0 F{ 5 * 60 }\n_ENABLE_FS\nRESTORE_GCODE_STATE NAME=LOAD_state\n{% endif %}'}, 'gcode_macro _ENABLE_FS': {'description': 'enables filament sensor', 'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=1'}, 'gcode_macro _DISABLE_FS': {'description': 'disables filament sensor', 'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=0'}, 'gcode_macro HEAT': {'description': 'Heats up the extruder', 'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}\n{% set Z = params.Z|default(50)|float %}\n{% set X = params.X|default(110)|float %}\n{% set Y = params.Y|default(110)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X{X} Y{Y} F6000'}, 'gcode_macro COOL': {'description': 'Turns off all heaters', 'gcode': '\nTURN_OFF_HEATERS'}, 'gcode_macro PREHEAT_PLA': {'description': 'Preheats extruder and bed for PLA', 'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(150)|float %}\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}'}, 'gcode_macro BED_TRAMMING_1': {'description': 'Heats bed and starts screw leveling', 'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nSCREWS_TILT_CALCULATE'}, 'gcode_macro BED_TRAMMING_2': {'description': 'Continues bed screw leveling', 'gcode': '\nSCREWS_TILT_CALCULATE'}, 'gcode_macro BED_MESH': {'description': 'Heats bed, makes a mesh, and saves it', 'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nBED_MESH_CLEAR\nBED_MESH_CALIBRATE\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro DISABLE_STEPPERS': {'description': 'Disables stepper motors', 'gcode': '\nM84 X Y E'}, 'gcode_macro PID_EXTRUDER': {'description': 'PID Tune for Extruder', 'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(200)|float %}\nPID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro PID_BED': {'description': 'PID Tune for Bed', 'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %}\nPID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro NOZZLE_MID': {'description': 'Moves nozzle to bed center', 'gcode': '\n{% set Z = params.Z|default(10)|float %}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X110 Y110 F6000'}, 'gcode_macro home_check': {'description': 'Checks if printer is homed', 'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nG28\n{% endif %}'}, 'gcode_macro SHOW_PRINT': {'description': 'Moves extruder out of the way', 'gcode': '\nHOME_CHECK\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG1 Z{ z_safe_lift }\nG1 X10 Y220 F4000'}, 'gcode_macro ZOffset_Setup': {'description': 'Starts Z-Offset Calibration', 'gcode': '\n{% if printer.heater_bed.temperature > 70 %}\n{action_respond_info("Bed temperature too high")}\n{% elif printer.extruder.temperature > 290 %}\n{action_respond_info("Extruder temperature too high")}\n{% else %}\nG28\nPROBE_CALIBRATE\n{% endif %}'}, 'gcode_macro Z_Down_01': {'description': 'Moves Z down by 0.1', 'gcode': '\nTESTZ Z=-.1'}, 'gcode_macro Z_Up_01': {'description': 'Moves Z up by 0.1', 'gcode': '\nTESTZ Z=+.1'}, 'gcode_macro Z_Low_Half': {'description': 'Sets Z between current and previous lower', 'gcode': '\nTESTZ Z=-'}, 'gcode_macro Z_High_Half': {'description': 'Sets Z between current and previous higher', 'gcode': '\nTESTZ Z=+'}, 'gcode_macro Accept_Save': {'description': 'Accepts Z-Offset', 'gcode': '\nACCEPT\nSAVE_CONFIG'}, 'gcode_macro Abort_Setup': {'description': 'Aborts Z-Offset', 'gcode': '\nABORT'}, 'gcode_macro G29': {'gcode': '\nG28\nbed_mesh_calibrate\nG1 X0 Y0 Z10 F4200'}, 'gcode_macro QUICK_Z_TEST': {'description': 'Move to center for manual Z adjustment', 'gcode': '\nG28\nG90\nG1 X150 Y150 Z5 F6000\nG1 Z1.0 F600'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f401xc_12345-if00', 'baud': 250000, 'restart_method': 'command', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC1', 'min_temp': 0.0, 'max_temp': 130.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 45.986, 'pid_ki': 0.757, 'pid_kd': 698.409, 'heater_pin': 'PA8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PC8'}, 'heater_fan hotend_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'PC7', 'fan_speed': 1.0}, 'controller_fan stepper_fan': {'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PC6', 'fan_speed': 1.0, 'idle_speed': 1.0, 'idle_timeout': 300, 'heater': ['extruder']}, 'bltouch': {'z_offset': 0.1, 'stow_on_each_sample': True, 'probe_with_touch_mode': False, 'control_pin': 'PC3', 'sensor_pin': 'PC2', 'pin_up_reports_not_triggered': True, 'pin_up_touch_mode_reports_triggered': True, 'pin_move_time': 0.68, 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 27.25, 'y_offset': -12.8, 'samples': 3, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [150.0, 150.0], 'z_hop': 10.0, 'z_hop_speed': 5.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'adaptive_margin': 0.0, 'probe_count': [7, 7], 'mesh_min': [30.0, 20.0], 'mesh_max': [300.0, 290.0], 'mesh_pps': [2, 3], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 100.0, 'fade_start': 1.0, 'fade_end': 0.0, 'split_delta_z': 0.025, 'move_check_distance': 5.0}, 'screws_tilt_adjust': {'screw1': [23.0, 63.0], 'screw1_name': 'front left', 'screw2': [223.0, 63.0], 'screw2_name': 'front right', 'screw3': [223.0, 263.0], 'screw3_name': 'back right', 'screw4': [23.0, 263.0], 'screw4_name': 'back left', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'neopixel my_neopixel': {'pin': 'PB7', 'chain_count': 1, 'color_order': ['GRB'], 'initial_red': 0.0, 'initial_green': 0.0, 'initial_blue': 0.0, 'initial_white': 0.0}, 'input_shaper': {'shaper_type': 'mzv', 'shaper_type_x': 'mzv', 'damping_ratio_x': 0.1, 'shaper_freq_x': 43.26, 'shaper_type_y': 'mzv', 'damping_ratio_y': 0.1, 'shaper_freq_y': 45.28}, 'virtual_sdcard': {'path': '/home/sonic/virtual_sd', 'on_error_gcode': ''}, 'pause_resume': {'recover_velocity': 50.0}, 'idle_timeout': {'timeout': 86400.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'gcode_macro print_start': {'gcode': '\nG90\nG28\nLED_ON\nSET_GCODE_OFFSET Z_ADJUST=-2.185 MOVE=1\nBED_MESH_CLEAR\n{% if printer.exclude_object.objects|length > 0 %}\n{% set min_x = printer.exclude_object.objects[0].polygon[0][0] %}\n{% set min_y = printer.exclude_object.objects[0].polygon[0][1] %}\n{% set max_x = min_x %}\n{% set max_y = min_y %}\n{% for obj in printer.exclude_object.objects %}\n{% for p in obj.polygon %}\n{% set min_x = [min_x, p[0]]|min %}\n{% set min_y = [min_y, p[1]]|min %}\n{% set max_x = [max_x, p[0]]|max %}\n{% set max_y = [max_y, p[1]]|max %}\n{% endfor %}\n{% endfor %}\n{% set min_x = min_x - 5 %}\n{% set min_y = min_y - 5 %}\n{% set max_x = max_x + 5 %}\n{% set max_y = max_y + 5 %}\nBED_MESH_CALIBRATE AREA_START={min_x},{min_y} AREA_END={max_x},{max_y}\n{% else %}\nBED_MESH_CALIBRATE\n{% endif %}\nG1 Z5 F3000\nG1 Z0.15 F300\n_PURGE_LINE', 'description': 'G-Code macro'}, 'gcode_macro print_end': {'gcode': '\nM400\nG92 E0\nG1 E-2.0 F300\nG91\nG1 Z10 F600\nG90\nG1 X0 Y300 F6000\nM104 S0\nM140 S0\nM106 S0\nM84\nSET_GCODE_OFFSET Z=0\nFIRMWARE_RESTART', 'description': 'G-Code macro'}, 'gcode_macro _purge_line': {'gcode': '\nSAVE_GCODE_STATE NAME=Pre_Prime\nG90\nG92 E0\nG1 Z10.0 F3000\nG1 X10 Y10\nG1 Z0.24 F5000.0\nG1 X100 Y10 Z0.24 F1500.0 E35\nG92 E0\nG1 Z10 F6000\nRESTORE_GCODE_STATE NAME=Pre_Prime', 'description': 'G-Code macro'}, 'gcode_macro led_on': {'gcode': 'SET_LED LED=my_neopixel RED=1 GREEN=1 BLUE=1', 'description': 'G-Code macro'}, 'gcode_macro led_off': {'gcode': 'SET_LED LED=my_neopixel RED=0 GREEN=0 BLUE=0', 'description': 'G-Code macro'}, 'gcode_macro pause': {'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - 2.0) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\nPAUSE_BASE\nG91\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG1 E-{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print', 'variable_extrude': '1.0'}, 'gcode_macro resume': {'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY) %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG91\nG1 E{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print'}, 'gcode_macro cancel_print': {'gcode': '\nTURN_OFF_HEATERS\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z4.5 F300\nG90\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}\nG28 X Y\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\nG1 Y{y_park} F2000\nM84\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro unload_filament': {'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=UNLOAD_state\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG91\nG0 Z{ z_safe_lift }\nG92 E0\nG1 E5.0 F300\nG1 E-50 F{ 10 * 60 }\nG1 E-50 F{ 5 * 60 }\nRESTORE_GCODE_STATE NAME=UNLOAD_state\n{% endif %}', 'description': 'Unloads Filament from extruder'}, 'gcode_macro load_filament': {'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=LOAD_state\nG91\nG1 E50 F{ 5 * 60 }\nG4 P{ 0.9 * 1000 }\nG1 E25.0 F{ 5 * 60 }\n_ENABLE_FS\nRESTORE_GCODE_STATE NAME=LOAD_state\n{% endif %}', 'description': 'Loads filament into the extruder'}, 'gcode_macro _enable_fs': {'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=1', 'description': 'enables filament sensor'}, 'gcode_macro _disable_fs': {'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=0', 'description': 'disables filament sensor'}, 'gcode_macro heat': {'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}\n{% set Z = params.Z|default(50)|float %}\n{% set X = params.X|default(110)|float %}\n{% set Y = params.Y|default(110)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X{X} Y{Y} F6000', 'description': 'Heats up the extruder'}, 'gcode_macro cool': {'gcode': '\nTURN_OFF_HEATERS', 'description': 'Turns off all heaters'}, 'gcode_macro preheat_pla': {'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(150)|float %}\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}', 'description': 'Preheats extruder and bed for PLA'}, 'gcode_macro bed_tramming_1': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nSCREWS_TILT_CALCULATE', 'description': 'Heats bed and starts screw leveling'}, 'gcode_macro bed_tramming_2': {'gcode': '\nSCREWS_TILT_CALCULATE', 'description': 'Continues bed screw leveling'}, 'gcode_macro bed_mesh': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nBED_MESH_CLEAR\nBED_MESH_CALIBRATE\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'Heats bed, makes a mesh, and saves it'}, 'gcode_macro disable_steppers': {'gcode': '\nM84 X Y E', 'description': 'Disables stepper motors'}, 'gcode_macro pid_extruder': {'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(200)|float %}\nPID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'PID Tune for Extruder'}, 'gcode_macro pid_bed': {'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %}\nPID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'PID Tune for Bed'}, 'gcode_macro nozzle_mid': {'gcode': '\n{% set Z = params.Z|default(10)|float %}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X110 Y110 F6000', 'description': 'Moves nozzle to bed center'}, 'gcode_macro home_check': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nG28\n{% endif %}', 'description': 'Checks if printer is homed'}, 'gcode_macro show_print': {'gcode': '\nHOME_CHECK\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG1 Z{ z_safe_lift }\nG1 X10 Y220 F4000', 'description': 'Moves extruder out of the way'}, 'gcode_macro zoffset_setup': {'gcode': '\n{% if printer.heater_bed.temperature > 70 %}\n{action_respond_info("Bed temperature too high")}\n{% elif printer.extruder.temperature > 290 %}\n{action_respond_info("Extruder temperature too high")}\n{% else %}\nG28\nPROBE_CALIBRATE\n{% endif %}', 'description': 'Starts Z-Offset Calibration'}, 'gcode_macro z_down_01': {'gcode': '\nTESTZ Z=-.1', 'description': 'Moves Z down by 0.1'}, 'gcode_macro z_up_01': {'gcode': '\nTESTZ Z=+.1', 'description': 'Moves Z up by 0.1'}, 'gcode_macro z_low_half': {'gcode': '\nTESTZ Z=-', 'description': 'Sets Z between current and previous lower'}, 'gcode_macro z_high_half': {'gcode': '\nTESTZ Z=+', 'description': 'Sets Z between current and previous higher'}, 'gcode_macro accept_save': {'gcode': '\nACCEPT\nSAVE_CONFIG', 'description': 'Accepts Z-Offset'}, 'gcode_macro abort_setup': {'gcode': '\nABORT', 'description': 'Aborts Z-Offset'}, 'gcode_macro g29': {'gcode': '\nG28\nbed_mesh_calibrate\nG1 X0 Y0 Z10 F4200', 'description': 'G-Code macro'}, 'gcode_macro quick_z_test': {'gcode': '\nG28\nG90\nG1 X150 Y150 Z5 F6000\nG1 Z1.0 F600', 'description': 'Move to center for manual Z adjustment'}, 'printer': {'max_velocity': 300.0, 'max_accel': 6000.0, 'max_accel_to_decel': 3000.0, 'square_corner_velocity': 5.0, 'kinematics': 'cartesian', 'max_z_velocity': 5.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': '!PB14', 'dir_pin': 'PB13', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB15', 'endstop_pin': '!PA2', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'PB10', 'dir_pin': 'PB2', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB12', 'endstop_pin': '!PA1', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'PB0', 'dir_pin': '!PC5', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB1', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -10.0, 'position_max': 400.0, 'homing_speed': 5.0, 'second_homing_speed': 2.5, 'homing_retract_speed': 5.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC0', 'min_temp': 0.0, 'max_temp': 250.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 22.533, 'pid_ki': 1.113, 'pid_kd': 114.073, 'heater_pin': 'PC9', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 50.0, 'max_extrude_only_velocity': 79.82432411074329, 'max_extrude_only_accel': 1596.4864822148659, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PA7', 'pressure_advance': 0.05, 'pressure_advance_smooth_time': 0.06, 'dir_pin': 'PA6', 'rotation_distance': 7.191, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PC4'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-08-25 01:14:51,521 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-08-25 01:14:51,523 [printer.py:reinit()] - Klipper version: v0.12.0-116-g31de734d
2025-08-25 01:14:51,523 [printer.py:reinit()] - # Extruders: 1
2025-08-25 01:14:51,523 [printer.py:reinit()] - # Temperature devices: 1
2025-08-25 01:14:51,523 [printer.py:reinit()] - # Fans: 3
2025-08-25 01:14:51,523 [printer.py:reinit()] - # Output pins: 0
2025-08-25 01:14:51,523 [printer.py:reinit()] - # Leds: 1
2025-08-25 01:14:51,540 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2025-08-25 01:14:51,542 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 01:14:51,795 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&controller_fan stepper_fan&heater_fan hotend_fan&neopixel my_neopixel
2025-08-25 01:14:51,804 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/virtual_sd
2025-08-25 01:14:51,804 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 01:14:51,805 [screen.py:init_klipper()] - Printer initialized
2025-08-25 01:14:51,806 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 01:14:51,806 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 01:14:51,827 [screen.py:_load_panel()] - Loading panel: main_menu
2025-08-25 01:14:51,966 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 01:14:51,980 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 01:14:51,989 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 01:14:52,046 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 01:14:52,063 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2025-08-25 01:14:52,064 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2025-08-25 01:14:52,065 [main_menu.py:update_graph_visibility()] - Could not create graph tempstore: None
2025-08-25 01:14:57,350 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2025-08-25 01:14:57,368 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 01:14:57,384 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2025-08-25 01:14:57,385 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 01:16:29,475 [screen.py:show_popup_message()] - error: Unable to open file
2025-08-25 01:23:06,368 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-25 01:23:06,369 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-25 01:23:06,370 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-25 01:23:06,370 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-08-25 01:23:06,373 [screen.py:show_panel()] - Reinitializing panel
2025-08-25 01:23:06,433 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 01:23:09,351 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2025-08-25 01:23:09,354 [screen.py:show_popup_message()] - warning: 
Moonraker warnings:
GCode path received from Klipper does not match expected location.

Received:
 '/home/sonic/virtual_sd'
Expected:
 '/home/sonic/printer_data/gcodes'

Modify the [virtual_sdcard] section Klipper's configuration to correct this error.

[virtual_sdcard]
path:
 /home/sonic/printer_data/gcodes

2025-08-25 01:23:09,372 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2025-08-25 01:23:09,373 [printer.py:configure_cameras()] - Cameras: []
2025-08-25 01:23:09,373 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': ["GCode path received from Klipper does not match expected location.<br/><br/>Received: '/home/sonic/virtual_sd'<br/>Expected: '/home/sonic/printer_data/gcodes'<br/><br/>Modify the [virtual_sdcard] section Klipper's configuration to correct this error.<br/><br/>[virtual_sdcard]<br/>path: /home/sonic/printer_data/gcodes"], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-319-gf0ae517', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-08-25 01:23:09,387 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2025-08-25 01:23:09,408 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2025-08-25 01:23:09,410 [screen.py:init_klipper()] - {'configfile': {'config': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f401xc_12345-if00', 'restart_method': 'command'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '300', 'max_accel': '6000', 'square_corner_velocity': '5.0', 'max_z_velocity': '5', 'max_z_accel': '100'}, 'extruder': {'max_extrude_only_distance': '100.0', 'max_extrude_cross_section': '50.0', 'step_pin': 'PA7', 'dir_pin': 'PA6', 'enable_pin': '!PC4', 'microsteps': '16', 'rotation_distance': '7.1910', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'PC9', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'PC0', 'control': 'pid', 'pid_kp': '22.533', 'pid_ki': '1.113', 'pid_kd': '114.073', 'min_temp': '0', 'max_temp': '250', 'pressure_advance': '0.05', 'pressure_advance_smooth_time': '0.06'}, 'heater_bed': {'heater_pin': 'PA8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'PC1', 'control': 'pid', 'pid_kp': '45.986', 'pid_ki': '0.757', 'pid_kd': '698.409', 'min_temp': '0', 'max_temp': '130'}, 'fan': {'pin': 'PC8'}, 'heater_fan hotend_fan': {'pin': 'PC7', 'heater': 'extruder', 'heater_temp': '50.0'}, 'controller_fan stepper_fan': {'pin': 'PC6', 'idle_timeout': '300'}, 'stepper_x': {'step_pin': '!PB14', 'dir_pin': 'PB13', 'enable_pin': '!PB15', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '!PA2', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '50'}, 'stepper_y': {'step_pin': 'PB10', 'dir_pin': 'PB2', 'enable_pin': '!PB12', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '!PA1', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '50'}, 'stepper_z': {'step_pin': 'PB0', 'dir_pin': '!PC5', 'enable_pin': '!PB1', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_max': '400', 'position_min': '-10'}, 'bltouch': {'sensor_pin': 'PC2', 'control_pin': 'PC3', 'x_offset': '27.25', 'y_offset': '-12.8', 'z_offset': '0.1', 'speed': '10', 'samples': '3', 'samples_result': 'average'}, 'safe_z_home': {'home_xy_position': '150,150', 'speed': '100', 'z_hop': '10', 'z_hop_speed': '5'}, 'bed_mesh': {'speed': '100', 'mesh_min': '30, 20', 'mesh_max': '300, 290', 'algorithm': 'bicubic', 'probe_count': '7,7', 'mesh_pps': '2,3'}, 'screws_tilt_adjust': {'screw1': '23,63', 'screw1_name': 'front left', 'screw2': '223,63', 'screw2_name': 'front right', 'screw3': '223,263', 'screw3_name': 'back right', 'screw4': '23,263', 'screw4_name': 'back left', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'neopixel my_neopixel': {'pin': 'PB7', 'color_order': 'GRB', 'initial_red': '0.0', 'initial_green': '0.0', 'initial_blue': '0.0'}, 'input_shaper': {'shaper_freq_x': '43.26', 'shaper_freq_y': '45.28', 'shaper_type': 'mzv'}, 'virtual_sdcard': {'path': '/home/sonic/virtual_sd'}, 'display_status': {}, 'pause_resume': {}, 'exclude_object': {}, 'idle_timeout': {'timeout': '86400'}, 'gcode_macro PRINT_START': {'gcode': '\nG90\nG28\nLED_ON\nSET_GCODE_OFFSET Z_ADJUST=-2.185 MOVE=1\nBED_MESH_CLEAR\n{% if printer.exclude_object.objects|length > 0 %}\n{% set min_x = printer.exclude_object.objects[0].polygon[0][0] %}\n{% set min_y = printer.exclude_object.objects[0].polygon[0][1] %}\n{% set max_x = min_x %}\n{% set max_y = min_y %}\n{% for obj in printer.exclude_object.objects %}\n{% for p in obj.polygon %}\n{% set min_x = [min_x, p[0]]|min %}\n{% set min_y = [min_y, p[1]]|min %}\n{% set max_x = [max_x, p[0]]|max %}\n{% set max_y = [max_y, p[1]]|max %}\n{% endfor %}\n{% endfor %}\n{% set min_x = min_x - 5 %}\n{% set min_y = min_y - 5 %}\n{% set max_x = max_x + 5 %}\n{% set max_y = max_y + 5 %}\nBED_MESH_CALIBRATE AREA_START={min_x},{min_y} AREA_END={max_x},{max_y}\n{% else %}\nBED_MESH_CALIBRATE\n{% endif %}\nG1 Z5 F3000\nG1 Z0.15 F300\n_PURGE_LINE'}, 'gcode_macro PRINT_END': {'gcode': '\nM400\nG92 E0\nG1 E-2.0 F300\nG91\nG1 Z10 F600\nG90\nG1 X0 Y300 F6000\nM104 S0\nM140 S0\nM106 S0\nM84\nSET_GCODE_OFFSET Z=0\nFIRMWARE_RESTART'}, 'gcode_macro _PURGE_LINE': {'gcode': '\nSAVE_GCODE_STATE NAME=Pre_Prime\nG90\nG92 E0\nG1 Z10.0 F3000\nG1 X10 Y10\nG1 Z0.24 F5000.0\nG1 X100 Y10 Z0.24 F1500.0 E35\nG92 E0\nG1 Z10 F6000\nRESTORE_GCODE_STATE NAME=Pre_Prime'}, 'gcode_macro LED_ON': {'gcode': 'SET_LED LED=my_neopixel RED=1 GREEN=1 BLUE=1'}, 'gcode_macro LED_OFF': {'gcode': 'SET_LED LED=my_neopixel RED=0 GREEN=0 BLUE=0'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'variable_extrude': '1.0', 'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - 2.0) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\nPAUSE_BASE\nG91\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG1 E-{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY) %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG91\nG1 E{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}'}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\nTURN_OFF_HEATERS\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z4.5 F300\nG90\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}\nG28 X Y\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\nG1 Y{y_park} F2000\nM84\nCANCEL_PRINT_BASE'}, 'gcode_macro UNLOAD_FILAMENT': {'description': 'Unloads Filament from extruder', 'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=UNLOAD_state\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG91\nG0 Z{ z_safe_lift }\nG92 E0\nG1 E5.0 F300\nG1 E-50 F{ 10 * 60 }\nG1 E-50 F{ 5 * 60 }\nRESTORE_GCODE_STATE NAME=UNLOAD_state\n{% endif %}'}, 'gcode_macro LOAD_FILAMENT': {'description': 'Loads filament into the extruder', 'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=LOAD_state\nG91\nG1 E50 F{ 5 * 60 }\nG4 P{ 0.9 * 1000 }\nG1 E25.0 F{ 5 * 60 }\n_ENABLE_FS\nRESTORE_GCODE_STATE NAME=LOAD_state\n{% endif %}'}, 'gcode_macro _ENABLE_FS': {'description': 'enables filament sensor', 'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=1'}, 'gcode_macro _DISABLE_FS': {'description': 'disables filament sensor', 'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=0'}, 'gcode_macro HEAT': {'description': 'Heats up the extruder', 'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}\n{% set Z = params.Z|default(50)|float %}\n{% set X = params.X|default(110)|float %}\n{% set Y = params.Y|default(110)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X{X} Y{Y} F6000'}, 'gcode_macro COOL': {'description': 'Turns off all heaters', 'gcode': '\nTURN_OFF_HEATERS'}, 'gcode_macro PREHEAT_PLA': {'description': 'Preheats extruder and bed for PLA', 'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(150)|float %}\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}'}, 'gcode_macro BED_TRAMMING_1': {'description': 'Heats bed and starts screw leveling', 'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nSCREWS_TILT_CALCULATE'}, 'gcode_macro BED_TRAMMING_2': {'description': 'Continues bed screw leveling', 'gcode': '\nSCREWS_TILT_CALCULATE'}, 'gcode_macro BED_MESH': {'description': 'Heats bed, makes a mesh, and saves it', 'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nBED_MESH_CLEAR\nBED_MESH_CALIBRATE\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro DISABLE_STEPPERS': {'description': 'Disables stepper motors', 'gcode': '\nM84 X Y E'}, 'gcode_macro PID_EXTRUDER': {'description': 'PID Tune for Extruder', 'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(200)|float %}\nPID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro PID_BED': {'description': 'PID Tune for Bed', 'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %}\nPID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro NOZZLE_MID': {'description': 'Moves nozzle to bed center', 'gcode': '\n{% set Z = params.Z|default(10)|float %}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X110 Y110 F6000'}, 'gcode_macro home_check': {'description': 'Checks if printer is homed', 'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nG28\n{% endif %}'}, 'gcode_macro SHOW_PRINT': {'description': 'Moves extruder out of the way', 'gcode': '\nHOME_CHECK\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG1 Z{ z_safe_lift }\nG1 X10 Y220 F4000'}, 'gcode_macro ZOffset_Setup': {'description': 'Starts Z-Offset Calibration', 'gcode': '\n{% if printer.heater_bed.temperature > 70 %}\n{action_respond_info("Bed temperature too high")}\n{% elif printer.extruder.temperature > 290 %}\n{action_respond_info("Extruder temperature too high")}\n{% else %}\nG28\nPROBE_CALIBRATE\n{% endif %}'}, 'gcode_macro Z_Down_01': {'description': 'Moves Z down by 0.1', 'gcode': '\nTESTZ Z=-.1'}, 'gcode_macro Z_Up_01': {'description': 'Moves Z up by 0.1', 'gcode': '\nTESTZ Z=+.1'}, 'gcode_macro Z_Low_Half': {'description': 'Sets Z between current and previous lower', 'gcode': '\nTESTZ Z=-'}, 'gcode_macro Z_High_Half': {'description': 'Sets Z between current and previous higher', 'gcode': '\nTESTZ Z=+'}, 'gcode_macro Accept_Save': {'description': 'Accepts Z-Offset', 'gcode': '\nACCEPT\nSAVE_CONFIG'}, 'gcode_macro Abort_Setup': {'description': 'Aborts Z-Offset', 'gcode': '\nABORT'}, 'gcode_macro G29': {'gcode': '\nG28\nbed_mesh_calibrate\nG1 X0 Y0 Z10 F4200'}, 'gcode_macro QUICK_Z_TEST': {'description': 'Move to center for manual Z adjustment', 'gcode': '\nG28\nG90\nG1 X150 Y150 Z5 F6000\nG1 Z1.0 F600'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f401xc_12345-if00', 'baud': 250000, 'restart_method': 'command', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC1', 'min_temp': 0.0, 'max_temp': 130.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 45.986, 'pid_ki': 0.757, 'pid_kd': 698.409, 'heater_pin': 'PA8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PC8'}, 'heater_fan hotend_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'PC7', 'fan_speed': 1.0}, 'controller_fan stepper_fan': {'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PC6', 'fan_speed': 1.0, 'idle_speed': 1.0, 'idle_timeout': 300, 'heater': ['extruder']}, 'bltouch': {'z_offset': 0.1, 'stow_on_each_sample': True, 'probe_with_touch_mode': False, 'control_pin': 'PC3', 'sensor_pin': 'PC2', 'pin_up_reports_not_triggered': True, 'pin_up_touch_mode_reports_triggered': True, 'pin_move_time': 0.68, 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 27.25, 'y_offset': -12.8, 'samples': 3, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [150.0, 150.0], 'z_hop': 10.0, 'z_hop_speed': 5.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'adaptive_margin': 0.0, 'probe_count': [7, 7], 'mesh_min': [30.0, 20.0], 'mesh_max': [300.0, 290.0], 'mesh_pps': [2, 3], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 100.0, 'fade_start': 1.0, 'fade_end': 0.0, 'split_delta_z': 0.025, 'move_check_distance': 5.0}, 'screws_tilt_adjust': {'screw1': [23.0, 63.0], 'screw1_name': 'front left', 'screw2': [223.0, 63.0], 'screw2_name': 'front right', 'screw3': [223.0, 263.0], 'screw3_name': 'back right', 'screw4': [23.0, 263.0], 'screw4_name': 'back left', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'neopixel my_neopixel': {'pin': 'PB7', 'chain_count': 1, 'color_order': ['GRB'], 'initial_red': 0.0, 'initial_green': 0.0, 'initial_blue': 0.0, 'initial_white': 0.0}, 'input_shaper': {'shaper_type': 'mzv', 'shaper_type_x': 'mzv', 'damping_ratio_x': 0.1, 'shaper_freq_x': 43.26, 'shaper_type_y': 'mzv', 'damping_ratio_y': 0.1, 'shaper_freq_y': 45.28}, 'virtual_sdcard': {'path': '/home/sonic/virtual_sd', 'on_error_gcode': ''}, 'pause_resume': {'recover_velocity': 50.0}, 'idle_timeout': {'timeout': 86400.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'gcode_macro print_start': {'gcode': '\nG90\nG28\nLED_ON\nSET_GCODE_OFFSET Z_ADJUST=-2.185 MOVE=1\nBED_MESH_CLEAR\n{% if printer.exclude_object.objects|length > 0 %}\n{% set min_x = printer.exclude_object.objects[0].polygon[0][0] %}\n{% set min_y = printer.exclude_object.objects[0].polygon[0][1] %}\n{% set max_x = min_x %}\n{% set max_y = min_y %}\n{% for obj in printer.exclude_object.objects %}\n{% for p in obj.polygon %}\n{% set min_x = [min_x, p[0]]|min %}\n{% set min_y = [min_y, p[1]]|min %}\n{% set max_x = [max_x, p[0]]|max %}\n{% set max_y = [max_y, p[1]]|max %}\n{% endfor %}\n{% endfor %}\n{% set min_x = min_x - 5 %}\n{% set min_y = min_y - 5 %}\n{% set max_x = max_x + 5 %}\n{% set max_y = max_y + 5 %}\nBED_MESH_CALIBRATE AREA_START={min_x},{min_y} AREA_END={max_x},{max_y}\n{% else %}\nBED_MESH_CALIBRATE\n{% endif %}\nG1 Z5 F3000\nG1 Z0.15 F300\n_PURGE_LINE', 'description': 'G-Code macro'}, 'gcode_macro print_end': {'gcode': '\nM400\nG92 E0\nG1 E-2.0 F300\nG91\nG1 Z10 F600\nG90\nG1 X0 Y300 F6000\nM104 S0\nM140 S0\nM106 S0\nM84\nSET_GCODE_OFFSET Z=0\nFIRMWARE_RESTART', 'description': 'G-Code macro'}, 'gcode_macro _purge_line': {'gcode': '\nSAVE_GCODE_STATE NAME=Pre_Prime\nG90\nG92 E0\nG1 Z10.0 F3000\nG1 X10 Y10\nG1 Z0.24 F5000.0\nG1 X100 Y10 Z0.24 F1500.0 E35\nG92 E0\nG1 Z10 F6000\nRESTORE_GCODE_STATE NAME=Pre_Prime', 'description': 'G-Code macro'}, 'gcode_macro led_on': {'gcode': 'SET_LED LED=my_neopixel RED=1 GREEN=1 BLUE=1', 'description': 'G-Code macro'}, 'gcode_macro led_off': {'gcode': 'SET_LED LED=my_neopixel RED=0 GREEN=0 BLUE=0', 'description': 'G-Code macro'}, 'gcode_macro pause': {'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - 2.0) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\nPAUSE_BASE\nG91\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG1 E-{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print', 'variable_extrude': '1.0'}, 'gcode_macro resume': {'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY) %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG91\nG1 E{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print'}, 'gcode_macro cancel_print': {'gcode': '\nTURN_OFF_HEATERS\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z4.5 F300\nG90\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}\nG28 X Y\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\nG1 Y{y_park} F2000\nM84\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro unload_filament': {'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=UNLOAD_state\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG91\nG0 Z{ z_safe_lift }\nG92 E0\nG1 E5.0 F300\nG1 E-50 F{ 10 * 60 }\nG1 E-50 F{ 5 * 60 }\nRESTORE_GCODE_STATE NAME=UNLOAD_state\n{% endif %}', 'description': 'Unloads Filament from extruder'}, 'gcode_macro load_filament': {'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=LOAD_state\nG91\nG1 E50 F{ 5 * 60 }\nG4 P{ 0.9 * 1000 }\nG1 E25.0 F{ 5 * 60 }\n_ENABLE_FS\nRESTORE_GCODE_STATE NAME=LOAD_state\n{% endif %}', 'description': 'Loads filament into the extruder'}, 'gcode_macro _enable_fs': {'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=1', 'description': 'enables filament sensor'}, 'gcode_macro _disable_fs': {'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=0', 'description': 'disables filament sensor'}, 'gcode_macro heat': {'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}\n{% set Z = params.Z|default(50)|float %}\n{% set X = params.X|default(110)|float %}\n{% set Y = params.Y|default(110)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X{X} Y{Y} F6000', 'description': 'Heats up the extruder'}, 'gcode_macro cool': {'gcode': '\nTURN_OFF_HEATERS', 'description': 'Turns off all heaters'}, 'gcode_macro preheat_pla': {'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(150)|float %}\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}', 'description': 'Preheats extruder and bed for PLA'}, 'gcode_macro bed_tramming_1': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nSCREWS_TILT_CALCULATE', 'description': 'Heats bed and starts screw leveling'}, 'gcode_macro bed_tramming_2': {'gcode': '\nSCREWS_TILT_CALCULATE', 'description': 'Continues bed screw leveling'}, 'gcode_macro bed_mesh': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nBED_MESH_CLEAR\nBED_MESH_CALIBRATE\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'Heats bed, makes a mesh, and saves it'}, 'gcode_macro disable_steppers': {'gcode': '\nM84 X Y E', 'description': 'Disables stepper motors'}, 'gcode_macro pid_extruder': {'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(200)|float %}\nPID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'PID Tune for Extruder'}, 'gcode_macro pid_bed': {'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %}\nPID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'PID Tune for Bed'}, 'gcode_macro nozzle_mid': {'gcode': '\n{% set Z = params.Z|default(10)|float %}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X110 Y110 F6000', 'description': 'Moves nozzle to bed center'}, 'gcode_macro home_check': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nG28\n{% endif %}', 'description': 'Checks if printer is homed'}, 'gcode_macro show_print': {'gcode': '\nHOME_CHECK\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG1 Z{ z_safe_lift }\nG1 X10 Y220 F4000', 'description': 'Moves extruder out of the way'}, 'gcode_macro zoffset_setup': {'gcode': '\n{% if printer.heater_bed.temperature > 70 %}\n{action_respond_info("Bed temperature too high")}\n{% elif printer.extruder.temperature > 290 %}\n{action_respond_info("Extruder temperature too high")}\n{% else %}\nG28\nPROBE_CALIBRATE\n{% endif %}', 'description': 'Starts Z-Offset Calibration'}, 'gcode_macro z_down_01': {'gcode': '\nTESTZ Z=-.1', 'description': 'Moves Z down by 0.1'}, 'gcode_macro z_up_01': {'gcode': '\nTESTZ Z=+.1', 'description': 'Moves Z up by 0.1'}, 'gcode_macro z_low_half': {'gcode': '\nTESTZ Z=-', 'description': 'Sets Z between current and previous lower'}, 'gcode_macro z_high_half': {'gcode': '\nTESTZ Z=+', 'description': 'Sets Z between current and previous higher'}, 'gcode_macro accept_save': {'gcode': '\nACCEPT\nSAVE_CONFIG', 'description': 'Accepts Z-Offset'}, 'gcode_macro abort_setup': {'gcode': '\nABORT', 'description': 'Aborts Z-Offset'}, 'gcode_macro g29': {'gcode': '\nG28\nbed_mesh_calibrate\nG1 X0 Y0 Z10 F4200', 'description': 'G-Code macro'}, 'gcode_macro quick_z_test': {'gcode': '\nG28\nG90\nG1 X150 Y150 Z5 F6000\nG1 Z1.0 F600', 'description': 'Move to center for manual Z adjustment'}, 'printer': {'max_velocity': 300.0, 'max_accel': 6000.0, 'max_accel_to_decel': 3000.0, 'square_corner_velocity': 5.0, 'kinematics': 'cartesian', 'max_z_velocity': 5.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': '!PB14', 'dir_pin': 'PB13', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB15', 'endstop_pin': '!PA2', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'PB10', 'dir_pin': 'PB2', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB12', 'endstop_pin': '!PA1', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'PB0', 'dir_pin': '!PC5', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB1', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -10.0, 'position_max': 400.0, 'homing_speed': 5.0, 'second_homing_speed': 2.5, 'homing_retract_speed': 5.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC0', 'min_temp': 0.0, 'max_temp': 250.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 22.533, 'pid_ki': 1.113, 'pid_kd': 114.073, 'heater_pin': 'PC9', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 50.0, 'max_extrude_only_velocity': 79.82432411074329, 'max_extrude_only_accel': 1596.4864822148659, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PA7', 'pressure_advance': 0.05, 'pressure_advance_smooth_time': 0.06, 'dir_pin': 'PA6', 'rotation_distance': 7.191, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PC4'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-08-25 01:23:09,413 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-08-25 01:23:09,414 [printer.py:reinit()] - Klipper version: v0.12.0-116-g31de734d
2025-08-25 01:23:09,414 [printer.py:reinit()] - # Extruders: 1
2025-08-25 01:23:09,414 [printer.py:reinit()] - # Temperature devices: 1
2025-08-25 01:23:09,414 [printer.py:reinit()] - # Fans: 3
2025-08-25 01:23:09,414 [printer.py:reinit()] - # Output pins: 0
2025-08-25 01:23:09,414 [printer.py:reinit()] - # Leds: 1
2025-08-25 01:23:09,432 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2025-08-25 01:23:09,434 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 01:23:09,700 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&controller_fan stepper_fan&heater_fan hotend_fan&neopixel my_neopixel
2025-08-25 01:23:09,703 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/virtual_sd
2025-08-25 01:23:09,703 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 01:23:09,704 [screen.py:init_klipper()] - Printer initialized
2025-08-25 01:23:09,704 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 01:23:09,705 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 01:23:09,779 [screen.py:show_panel()] - Reinitializing panel
2025-08-25 01:23:09,878 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 01:23:09,892 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 01:23:09,900 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 01:23:09,948 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 01:23:09,966 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2025-08-25 01:23:09,981 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 01:23:09,996 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2025-08-25 01:23:09,997 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 01:24:20,254 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-25 01:24:20,254 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-25 01:24:20,256 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-25 01:24:20,256 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-08-25 01:24:20,260 [screen.py:show_panel()] - Reinitializing panel
2025-08-25 01:24:20,323 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 01:24:23,350 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2025-08-25 01:24:23,354 [screen.py:show_popup_message()] - warning: 
Moonraker warnings:
GCode path received from Klipper does not match expected location.

Received:
 '/home/sonic/virtual_sd'
Expected:
 '/home/sonic/printer_data/gcodes'

Modify the [virtual_sdcard] section Klipper's configuration to correct this error.

[virtual_sdcard]
path:
 /home/sonic/printer_data/gcodes

2025-08-25 01:24:23,371 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2025-08-25 01:24:23,372 [printer.py:configure_cameras()] - Cameras: []
2025-08-25 01:24:23,372 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': ["GCode path received from Klipper does not match expected location.<br/><br/>Received: '/home/sonic/virtual_sd'<br/>Expected: '/home/sonic/printer_data/gcodes'<br/><br/>Modify the [virtual_sdcard] section Klipper's configuration to correct this error.<br/><br/>[virtual_sdcard]<br/>path: /home/sonic/printer_data/gcodes"], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-319-gf0ae517', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-08-25 01:24:23,387 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2025-08-25 01:24:23,408 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2025-08-25 01:24:23,410 [screen.py:init_klipper()] - {'configfile': {'config': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f401xc_12345-if00', 'restart_method': 'command'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '300', 'max_accel': '6000', 'square_corner_velocity': '5.0', 'max_z_velocity': '5', 'max_z_accel': '100'}, 'extruder': {'max_extrude_only_distance': '100.0', 'max_extrude_cross_section': '50.0', 'step_pin': 'PA7', 'dir_pin': 'PA6', 'enable_pin': '!PC4', 'microsteps': '16', 'rotation_distance': '7.1910', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'PC9', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'PC0', 'control': 'pid', 'pid_kp': '22.533', 'pid_ki': '1.113', 'pid_kd': '114.073', 'min_temp': '0', 'max_temp': '250', 'pressure_advance': '0.05', 'pressure_advance_smooth_time': '0.06'}, 'heater_bed': {'heater_pin': 'PA8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'PC1', 'control': 'pid', 'pid_kp': '45.986', 'pid_ki': '0.757', 'pid_kd': '698.409', 'min_temp': '0', 'max_temp': '130'}, 'fan': {'pin': 'PC8'}, 'heater_fan hotend_fan': {'pin': 'PC7', 'heater': 'extruder', 'heater_temp': '50.0'}, 'controller_fan stepper_fan': {'pin': 'PC6', 'idle_timeout': '300'}, 'stepper_x': {'step_pin': '!PB14', 'dir_pin': 'PB13', 'enable_pin': '!PB15', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '!PA2', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '50'}, 'stepper_y': {'step_pin': 'PB10', 'dir_pin': 'PB2', 'enable_pin': '!PB12', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '!PA1', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '50'}, 'stepper_z': {'step_pin': 'PB0', 'dir_pin': '!PC5', 'enable_pin': '!PB1', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_max': '400', 'position_min': '-10'}, 'bltouch': {'sensor_pin': 'PC2', 'control_pin': 'PC3', 'x_offset': '27.25', 'y_offset': '-12.8', 'z_offset': '0.1', 'speed': '10', 'samples': '3', 'samples_result': 'average'}, 'safe_z_home': {'home_xy_position': '150,150', 'speed': '100', 'z_hop': '10', 'z_hop_speed': '5'}, 'bed_mesh': {'speed': '100', 'mesh_min': '30, 20', 'mesh_max': '300, 290', 'algorithm': 'bicubic', 'probe_count': '7,7', 'mesh_pps': '2,3'}, 'screws_tilt_adjust': {'screw1': '23,63', 'screw1_name': 'front left', 'screw2': '223,63', 'screw2_name': 'front right', 'screw3': '223,263', 'screw3_name': 'back right', 'screw4': '23,263', 'screw4_name': 'back left', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'neopixel my_neopixel': {'pin': 'PB7', 'color_order': 'GRB', 'initial_red': '0.0', 'initial_green': '0.0', 'initial_blue': '0.0'}, 'input_shaper': {'shaper_freq_x': '43.26', 'shaper_freq_y': '45.28', 'shaper_type': 'mzv'}, 'virtual_sdcard': {'path': '/home/sonic/printer_data/gcodes'}, 'display_status': {}, 'pause_resume': {}, 'exclude_object': {}, 'idle_timeout': {'timeout': '86400'}, 'gcode_macro PRINT_START': {'gcode': '\nG90\nG28\nLED_ON\nSET_GCODE_OFFSET Z_ADJUST=-2.185 MOVE=1\nBED_MESH_CLEAR\n{% if printer.exclude_object.objects|length > 0 %}\n{% set min_x = printer.exclude_object.objects[0].polygon[0][0] %}\n{% set min_y = printer.exclude_object.objects[0].polygon[0][1] %}\n{% set max_x = min_x %}\n{% set max_y = min_y %}\n{% for obj in printer.exclude_object.objects %}\n{% for p in obj.polygon %}\n{% set min_x = [min_x, p[0]]|min %}\n{% set min_y = [min_y, p[1]]|min %}\n{% set max_x = [max_x, p[0]]|max %}\n{% set max_y = [max_y, p[1]]|max %}\n{% endfor %}\n{% endfor %}\n{% set min_x = min_x - 5 %}\n{% set min_y = min_y - 5 %}\n{% set max_x = max_x + 5 %}\n{% set max_y = max_y + 5 %}\nBED_MESH_CALIBRATE AREA_START={min_x},{min_y} AREA_END={max_x},{max_y}\n{% else %}\nBED_MESH_CALIBRATE\n{% endif %}\nG1 Z5 F3000\nG1 Z0.15 F300\n_PURGE_LINE'}, 'gcode_macro PRINT_END': {'gcode': '\nM400\nG92 E0\nG1 E-2.0 F300\nG91\nG1 Z10 F600\nG90\nG1 X0 Y300 F6000\nM104 S0\nM140 S0\nM106 S0\nM84\nSET_GCODE_OFFSET Z=0\nFIRMWARE_RESTART'}, 'gcode_macro _PURGE_LINE': {'gcode': '\nSAVE_GCODE_STATE NAME=Pre_Prime\nG90\nG92 E0\nG1 Z10.0 F3000\nG1 X10 Y10\nG1 Z0.24 F5000.0\nG1 X100 Y10 Z0.24 F1500.0 E35\nG92 E0\nG1 Z10 F6000\nRESTORE_GCODE_STATE NAME=Pre_Prime'}, 'gcode_macro LED_ON': {'gcode': 'SET_LED LED=my_neopixel RED=1 GREEN=1 BLUE=1'}, 'gcode_macro LED_OFF': {'gcode': 'SET_LED LED=my_neopixel RED=0 GREEN=0 BLUE=0'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'variable_extrude': '1.0', 'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - 2.0) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\nPAUSE_BASE\nG91\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG1 E-{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY) %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG91\nG1 E{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}'}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\nTURN_OFF_HEATERS\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z4.5 F300\nG90\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}\nG28 X Y\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\nG1 Y{y_park} F2000\nM84\nCANCEL_PRINT_BASE'}, 'gcode_macro UNLOAD_FILAMENT': {'description': 'Unloads Filament from extruder', 'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=UNLOAD_state\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG91\nG0 Z{ z_safe_lift }\nG92 E0\nG1 E5.0 F300\nG1 E-50 F{ 10 * 60 }\nG1 E-50 F{ 5 * 60 }\nRESTORE_GCODE_STATE NAME=UNLOAD_state\n{% endif %}'}, 'gcode_macro LOAD_FILAMENT': {'description': 'Loads filament into the extruder', 'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=LOAD_state\nG91\nG1 E50 F{ 5 * 60 }\nG4 P{ 0.9 * 1000 }\nG1 E25.0 F{ 5 * 60 }\n_ENABLE_FS\nRESTORE_GCODE_STATE NAME=LOAD_state\n{% endif %}'}, 'gcode_macro _ENABLE_FS': {'description': 'enables filament sensor', 'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=1'}, 'gcode_macro _DISABLE_FS': {'description': 'disables filament sensor', 'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=0'}, 'gcode_macro HEAT': {'description': 'Heats up the extruder', 'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}\n{% set Z = params.Z|default(50)|float %}\n{% set X = params.X|default(110)|float %}\n{% set Y = params.Y|default(110)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X{X} Y{Y} F6000'}, 'gcode_macro COOL': {'description': 'Turns off all heaters', 'gcode': '\nTURN_OFF_HEATERS'}, 'gcode_macro PREHEAT_PLA': {'description': 'Preheats extruder and bed for PLA', 'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(150)|float %}\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}'}, 'gcode_macro BED_TRAMMING_1': {'description': 'Heats bed and starts screw leveling', 'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nSCREWS_TILT_CALCULATE'}, 'gcode_macro BED_TRAMMING_2': {'description': 'Continues bed screw leveling', 'gcode': '\nSCREWS_TILT_CALCULATE'}, 'gcode_macro BED_MESH': {'description': 'Heats bed, makes a mesh, and saves it', 'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nBED_MESH_CLEAR\nBED_MESH_CALIBRATE\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro DISABLE_STEPPERS': {'description': 'Disables stepper motors', 'gcode': '\nM84 X Y E'}, 'gcode_macro PID_EXTRUDER': {'description': 'PID Tune for Extruder', 'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(200)|float %}\nPID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro PID_BED': {'description': 'PID Tune for Bed', 'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %}\nPID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro NOZZLE_MID': {'description': 'Moves nozzle to bed center', 'gcode': '\n{% set Z = params.Z|default(10)|float %}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X110 Y110 F6000'}, 'gcode_macro home_check': {'description': 'Checks if printer is homed', 'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nG28\n{% endif %}'}, 'gcode_macro SHOW_PRINT': {'description': 'Moves extruder out of the way', 'gcode': '\nHOME_CHECK\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG1 Z{ z_safe_lift }\nG1 X10 Y220 F4000'}, 'gcode_macro ZOffset_Setup': {'description': 'Starts Z-Offset Calibration', 'gcode': '\n{% if printer.heater_bed.temperature > 70 %}\n{action_respond_info("Bed temperature too high")}\n{% elif printer.extruder.temperature > 290 %}\n{action_respond_info("Extruder temperature too high")}\n{% else %}\nG28\nPROBE_CALIBRATE\n{% endif %}'}, 'gcode_macro Z_Down_01': {'description': 'Moves Z down by 0.1', 'gcode': '\nTESTZ Z=-.1'}, 'gcode_macro Z_Up_01': {'description': 'Moves Z up by 0.1', 'gcode': '\nTESTZ Z=+.1'}, 'gcode_macro Z_Low_Half': {'description': 'Sets Z between current and previous lower', 'gcode': '\nTESTZ Z=-'}, 'gcode_macro Z_High_Half': {'description': 'Sets Z between current and previous higher', 'gcode': '\nTESTZ Z=+'}, 'gcode_macro Accept_Save': {'description': 'Accepts Z-Offset', 'gcode': '\nACCEPT\nSAVE_CONFIG'}, 'gcode_macro Abort_Setup': {'description': 'Aborts Z-Offset', 'gcode': '\nABORT'}, 'gcode_macro G29': {'gcode': '\nG28\nbed_mesh_calibrate\nG1 X0 Y0 Z10 F4200'}, 'gcode_macro QUICK_Z_TEST': {'description': 'Move to center for manual Z adjustment', 'gcode': '\nG28\nG90\nG1 X150 Y150 Z5 F6000\nG1 Z1.0 F600'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f401xc_12345-if00', 'baud': 250000, 'restart_method': 'command', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC1', 'min_temp': 0.0, 'max_temp': 130.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 45.986, 'pid_ki': 0.757, 'pid_kd': 698.409, 'heater_pin': 'PA8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PC8'}, 'heater_fan hotend_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'PC7', 'fan_speed': 1.0}, 'controller_fan stepper_fan': {'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PC6', 'fan_speed': 1.0, 'idle_speed': 1.0, 'idle_timeout': 300, 'heater': ['extruder']}, 'bltouch': {'z_offset': 0.1, 'stow_on_each_sample': True, 'probe_with_touch_mode': False, 'control_pin': 'PC3', 'sensor_pin': 'PC2', 'pin_up_reports_not_triggered': True, 'pin_up_touch_mode_reports_triggered': True, 'pin_move_time': 0.68, 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 27.25, 'y_offset': -12.8, 'samples': 3, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [150.0, 150.0], 'z_hop': 10.0, 'z_hop_speed': 5.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'adaptive_margin': 0.0, 'probe_count': [7, 7], 'mesh_min': [30.0, 20.0], 'mesh_max': [300.0, 290.0], 'mesh_pps': [2, 3], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 100.0, 'fade_start': 1.0, 'fade_end': 0.0, 'split_delta_z': 0.025, 'move_check_distance': 5.0}, 'screws_tilt_adjust': {'screw1': [23.0, 63.0], 'screw1_name': 'front left', 'screw2': [223.0, 63.0], 'screw2_name': 'front right', 'screw3': [223.0, 263.0], 'screw3_name': 'back right', 'screw4': [23.0, 263.0], 'screw4_name': 'back left', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'neopixel my_neopixel': {'pin': 'PB7', 'chain_count': 1, 'color_order': ['GRB'], 'initial_red': 0.0, 'initial_green': 0.0, 'initial_blue': 0.0, 'initial_white': 0.0}, 'input_shaper': {'shaper_type': 'mzv', 'shaper_type_x': 'mzv', 'damping_ratio_x': 0.1, 'shaper_freq_x': 43.26, 'shaper_type_y': 'mzv', 'damping_ratio_y': 0.1, 'shaper_freq_y': 45.28}, 'virtual_sdcard': {'path': '/home/sonic/printer_data/gcodes', 'on_error_gcode': ''}, 'pause_resume': {'recover_velocity': 50.0}, 'idle_timeout': {'timeout': 86400.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'gcode_macro print_start': {'gcode': '\nG90\nG28\nLED_ON\nSET_GCODE_OFFSET Z_ADJUST=-2.185 MOVE=1\nBED_MESH_CLEAR\n{% if printer.exclude_object.objects|length > 0 %}\n{% set min_x = printer.exclude_object.objects[0].polygon[0][0] %}\n{% set min_y = printer.exclude_object.objects[0].polygon[0][1] %}\n{% set max_x = min_x %}\n{% set max_y = min_y %}\n{% for obj in printer.exclude_object.objects %}\n{% for p in obj.polygon %}\n{% set min_x = [min_x, p[0]]|min %}\n{% set min_y = [min_y, p[1]]|min %}\n{% set max_x = [max_x, p[0]]|max %}\n{% set max_y = [max_y, p[1]]|max %}\n{% endfor %}\n{% endfor %}\n{% set min_x = min_x - 5 %}\n{% set min_y = min_y - 5 %}\n{% set max_x = max_x + 5 %}\n{% set max_y = max_y + 5 %}\nBED_MESH_CALIBRATE AREA_START={min_x},{min_y} AREA_END={max_x},{max_y}\n{% else %}\nBED_MESH_CALIBRATE\n{% endif %}\nG1 Z5 F3000\nG1 Z0.15 F300\n_PURGE_LINE', 'description': 'G-Code macro'}, 'gcode_macro print_end': {'gcode': '\nM400\nG92 E0\nG1 E-2.0 F300\nG91\nG1 Z10 F600\nG90\nG1 X0 Y300 F6000\nM104 S0\nM140 S0\nM106 S0\nM84\nSET_GCODE_OFFSET Z=0\nFIRMWARE_RESTART', 'description': 'G-Code macro'}, 'gcode_macro _purge_line': {'gcode': '\nSAVE_GCODE_STATE NAME=Pre_Prime\nG90\nG92 E0\nG1 Z10.0 F3000\nG1 X10 Y10\nG1 Z0.24 F5000.0\nG1 X100 Y10 Z0.24 F1500.0 E35\nG92 E0\nG1 Z10 F6000\nRESTORE_GCODE_STATE NAME=Pre_Prime', 'description': 'G-Code macro'}, 'gcode_macro led_on': {'gcode': 'SET_LED LED=my_neopixel RED=1 GREEN=1 BLUE=1', 'description': 'G-Code macro'}, 'gcode_macro led_off': {'gcode': 'SET_LED LED=my_neopixel RED=0 GREEN=0 BLUE=0', 'description': 'G-Code macro'}, 'gcode_macro pause': {'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - 2.0) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\nPAUSE_BASE\nG91\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG1 E-{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print', 'variable_extrude': '1.0'}, 'gcode_macro resume': {'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY) %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG91\nG1 E{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print'}, 'gcode_macro cancel_print': {'gcode': '\nTURN_OFF_HEATERS\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z4.5 F300\nG90\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}\nG28 X Y\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\nG1 Y{y_park} F2000\nM84\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro unload_filament': {'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=UNLOAD_state\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG91\nG0 Z{ z_safe_lift }\nG92 E0\nG1 E5.0 F300\nG1 E-50 F{ 10 * 60 }\nG1 E-50 F{ 5 * 60 }\nRESTORE_GCODE_STATE NAME=UNLOAD_state\n{% endif %}', 'description': 'Unloads Filament from extruder'}, 'gcode_macro load_filament': {'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=LOAD_state\nG91\nG1 E50 F{ 5 * 60 }\nG4 P{ 0.9 * 1000 }\nG1 E25.0 F{ 5 * 60 }\n_ENABLE_FS\nRESTORE_GCODE_STATE NAME=LOAD_state\n{% endif %}', 'description': 'Loads filament into the extruder'}, 'gcode_macro _enable_fs': {'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=1', 'description': 'enables filament sensor'}, 'gcode_macro _disable_fs': {'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=0', 'description': 'disables filament sensor'}, 'gcode_macro heat': {'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}\n{% set Z = params.Z|default(50)|float %}\n{% set X = params.X|default(110)|float %}\n{% set Y = params.Y|default(110)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X{X} Y{Y} F6000', 'description': 'Heats up the extruder'}, 'gcode_macro cool': {'gcode': '\nTURN_OFF_HEATERS', 'description': 'Turns off all heaters'}, 'gcode_macro preheat_pla': {'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(150)|float %}\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}', 'description': 'Preheats extruder and bed for PLA'}, 'gcode_macro bed_tramming_1': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nSCREWS_TILT_CALCULATE', 'description': 'Heats bed and starts screw leveling'}, 'gcode_macro bed_tramming_2': {'gcode': '\nSCREWS_TILT_CALCULATE', 'description': 'Continues bed screw leveling'}, 'gcode_macro bed_mesh': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nBED_MESH_CLEAR\nBED_MESH_CALIBRATE\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'Heats bed, makes a mesh, and saves it'}, 'gcode_macro disable_steppers': {'gcode': '\nM84 X Y E', 'description': 'Disables stepper motors'}, 'gcode_macro pid_extruder': {'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(200)|float %}\nPID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'PID Tune for Extruder'}, 'gcode_macro pid_bed': {'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %}\nPID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'PID Tune for Bed'}, 'gcode_macro nozzle_mid': {'gcode': '\n{% set Z = params.Z|default(10)|float %}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X110 Y110 F6000', 'description': 'Moves nozzle to bed center'}, 'gcode_macro home_check': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nG28\n{% endif %}', 'description': 'Checks if printer is homed'}, 'gcode_macro show_print': {'gcode': '\nHOME_CHECK\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG1 Z{ z_safe_lift }\nG1 X10 Y220 F4000', 'description': 'Moves extruder out of the way'}, 'gcode_macro zoffset_setup': {'gcode': '\n{% if printer.heater_bed.temperature > 70 %}\n{action_respond_info("Bed temperature too high")}\n{% elif printer.extruder.temperature > 290 %}\n{action_respond_info("Extruder temperature too high")}\n{% else %}\nG28\nPROBE_CALIBRATE\n{% endif %}', 'description': 'Starts Z-Offset Calibration'}, 'gcode_macro z_down_01': {'gcode': '\nTESTZ Z=-.1', 'description': 'Moves Z down by 0.1'}, 'gcode_macro z_up_01': {'gcode': '\nTESTZ Z=+.1', 'description': 'Moves Z up by 0.1'}, 'gcode_macro z_low_half': {'gcode': '\nTESTZ Z=-', 'description': 'Sets Z between current and previous lower'}, 'gcode_macro z_high_half': {'gcode': '\nTESTZ Z=+', 'description': 'Sets Z between current and previous higher'}, 'gcode_macro accept_save': {'gcode': '\nACCEPT\nSAVE_CONFIG', 'description': 'Accepts Z-Offset'}, 'gcode_macro abort_setup': {'gcode': '\nABORT', 'description': 'Aborts Z-Offset'}, 'gcode_macro g29': {'gcode': '\nG28\nbed_mesh_calibrate\nG1 X0 Y0 Z10 F4200', 'description': 'G-Code macro'}, 'gcode_macro quick_z_test': {'gcode': '\nG28\nG90\nG1 X150 Y150 Z5 F6000\nG1 Z1.0 F600', 'description': 'Move to center for manual Z adjustment'}, 'printer': {'max_velocity': 300.0, 'max_accel': 6000.0, 'max_accel_to_decel': 3000.0, 'square_corner_velocity': 5.0, 'kinematics': 'cartesian', 'max_z_velocity': 5.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': '!PB14', 'dir_pin': 'PB13', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB15', 'endstop_pin': '!PA2', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'PB10', 'dir_pin': 'PB2', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB12', 'endstop_pin': '!PA1', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'PB0', 'dir_pin': '!PC5', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB1', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -10.0, 'position_max': 400.0, 'homing_speed': 5.0, 'second_homing_speed': 2.5, 'homing_retract_speed': 5.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC0', 'min_temp': 0.0, 'max_temp': 250.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 22.533, 'pid_ki': 1.113, 'pid_kd': 114.073, 'heater_pin': 'PC9', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 50.0, 'max_extrude_only_velocity': 79.82432411074329, 'max_extrude_only_accel': 1596.4864822148659, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PA7', 'pressure_advance': 0.05, 'pressure_advance_smooth_time': 0.06, 'dir_pin': 'PA6', 'rotation_distance': 7.191, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PC4'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-08-25 01:24:23,412 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-08-25 01:24:23,414 [printer.py:reinit()] - Klipper version: v0.12.0-116-g31de734d
2025-08-25 01:24:23,414 [printer.py:reinit()] - # Extruders: 1
2025-08-25 01:24:23,414 [printer.py:reinit()] - # Temperature devices: 1
2025-08-25 01:24:23,414 [printer.py:reinit()] - # Fans: 3
2025-08-25 01:24:23,414 [printer.py:reinit()] - # Output pins: 0
2025-08-25 01:24:23,414 [printer.py:reinit()] - # Leds: 1
2025-08-25 01:24:23,432 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2025-08-25 01:24:23,434 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 01:24:23,698 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&controller_fan stepper_fan&heater_fan hotend_fan&neopixel my_neopixel
2025-08-25 01:24:23,702 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 01:24:23,702 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 01:24:23,703 [screen.py:init_klipper()] - Printer initialized
2025-08-25 01:24:23,703 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2025-08-25 01:24:23,703 [printer.py:change_state()] - Adding callback for state: startup
2025-08-25 01:24:25,659 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2025-08-25 01:24:25,660 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 01:24:25,664 [screen.py:show_panel()] - Reinitializing panel
2025-08-25 01:24:25,763 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 01:24:25,777 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 01:24:25,785 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 01:24:25,831 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 01:24:25,850 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2025-08-25 01:24:25,864 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 01:24:25,878 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2025-08-25 01:24:25,880 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 01:24:53,003 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-08-25 01:24:53,003 [printer.py:change_state()] - Adding callback for state: printing
2025-08-25 01:24:53,018 [screen.py:_load_panel()] - Loading panel: job_status
2025-08-25 01:24:53,242 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-25 01:24:53,250 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-08-25 01:24:53,268 [job_status.py:update_file_metadata()] - Update Metadata. File: xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m22s.gcode Size: 604833
2025-08-25 01:24:53,284 [job_status.py:show_file_thumbnail()] - xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m22s.gcode
2025-08-25 01:34:11,857 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2025-08-25 01:34:11,857 [printer.py:change_state()] - Adding callback for state: paused
2025-08-25 01:34:11,866 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'paused'
2025-08-25 01:34:11,900 [files.py:remove_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0xe41673b8>>
2025-08-25 01:34:11,901 [screen.py:show_panel()] - Reinitializing panel
2025-08-25 01:34:12,064 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-25 01:34:12,070 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'paused'
2025-08-25 01:34:12,083 [job_status.py:update_file_metadata()] - Update Metadata. File: xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m22s.gcode Size: 604833
2025-08-25 01:34:12,097 [job_status.py:show_file_thumbnail()] - xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m22s.gcode
2025-08-25 01:34:12,104 [files.py:remove_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0xe41673b8>>
2025-08-25 01:34:12,105 [screen.py:_load_panel()] - Loading panel: extrude
2025-08-25 01:34:12,203 [screen.py:attach_panel()] - Current panel hierarchy: job_status > extrude
2025-08-25 01:34:40,184 [printer.py:change_state()] - Changing state from 'paused' to 'ready'
2025-08-25 01:34:40,184 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 01:34:42,774 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-25 01:34:42,775 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-25 01:34:42,776 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-25 01:34:42,776 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-08-25 01:34:42,779 [files.py:remove_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0xe41673b8>>
2025-08-25 01:34:42,780 [screen.py:show_panel()] - Reinitializing panel
2025-08-25 01:34:42,839 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 01:34:46,351 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2025-08-25 01:34:46,364 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2025-08-25 01:34:46,365 [printer.py:configure_cameras()] - Cameras: []
2025-08-25 01:34:46,366 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-319-gf0ae517', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-08-25 01:34:46,380 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2025-08-25 01:34:46,463 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2025-08-25 01:34:46,466 [screen.py:init_klipper()] - {'configfile': {'config': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f401xc_12345-if00', 'restart_method': 'command'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '300', 'max_accel': '6000', 'square_corner_velocity': '5.0', 'max_z_velocity': '5', 'max_z_accel': '100'}, 'extruder': {'max_extrude_only_distance': '100.0', 'max_extrude_cross_section': '50.0', 'step_pin': 'PA7', 'dir_pin': 'PA6', 'enable_pin': '!PC4', 'microsteps': '16', 'rotation_distance': '7.1910', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'PC9', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'PC0', 'control': 'pid', 'pid_kp': '22.533', 'pid_ki': '1.113', 'pid_kd': '114.073', 'min_temp': '0', 'max_temp': '250', 'pressure_advance': '0.05', 'pressure_advance_smooth_time': '0.06'}, 'heater_bed': {'heater_pin': 'PA8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'PC1', 'control': 'pid', 'pid_kp': '45.986', 'pid_ki': '0.757', 'pid_kd': '698.409', 'min_temp': '0', 'max_temp': '130'}, 'fan': {'pin': 'PC8'}, 'heater_fan hotend_fan': {'pin': 'PC7', 'heater': 'extruder', 'heater_temp': '50.0'}, 'controller_fan stepper_fan': {'pin': 'PC6', 'idle_timeout': '300'}, 'stepper_x': {'step_pin': '!PB14', 'dir_pin': 'PB13', 'enable_pin': '!PB15', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '!PA2', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '50'}, 'stepper_y': {'step_pin': 'PB10', 'dir_pin': 'PB2', 'enable_pin': '!PB12', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '!PA1', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '50'}, 'stepper_z': {'step_pin': 'PB0', 'dir_pin': '!PC5', 'enable_pin': '!PB1', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_max': '400', 'position_min': '-10'}, 'bltouch': {'sensor_pin': 'PC2', 'control_pin': 'PC3', 'x_offset': '27.25', 'y_offset': '-12.8', 'z_offset': '0.1', 'speed': '10', 'samples': '3', 'samples_result': 'average'}, 'safe_z_home': {'home_xy_position': '150,150', 'speed': '100', 'z_hop': '10', 'z_hop_speed': '5'}, 'bed_mesh': {'speed': '100', 'mesh_min': '30, 20', 'mesh_max': '300, 290', 'algorithm': 'bicubic', 'probe_count': '7,7', 'mesh_pps': '2,3'}, 'screws_tilt_adjust': {'screw1': '23,63', 'screw1_name': 'front left', 'screw2': '223,63', 'screw2_name': 'front right', 'screw3': '223,263', 'screw3_name': 'back right', 'screw4': '23,263', 'screw4_name': 'back left', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'neopixel my_neopixel': {'pin': 'PB7', 'color_order': 'GRB', 'initial_red': '0.0', 'initial_green': '0.0', 'initial_blue': '0.0'}, 'input_shaper': {'shaper_freq_x': '43.26', 'shaper_freq_y': '45.28', 'shaper_type': 'mzv'}, 'virtual_sdcard': {'path': '/home/sonic/printer_data/gcodes'}, 'display_status': {}, 'pause_resume': {}, 'exclude_object': {}, 'idle_timeout': {'timeout': '86400'}, 'gcode_macro PRINT_START': {'gcode': '\nG90\nG28\nLED_ON\nSET_GCODE_OFFSET Z_ADJUST=-2.185 MOVE=1\nBED_MESH_CLEAR\n{% if printer.exclude_object.objects|length > 0 %}\n{% set min_x = printer.exclude_object.objects[0].polygon[0][0] %}\n{% set min_y = printer.exclude_object.objects[0].polygon[0][1] %}\n{% set max_x = min_x %}\n{% set max_y = min_y %}\n{% for obj in printer.exclude_object.objects %}\n{% for p in obj.polygon %}\n{% set min_x = [min_x, p[0]]|min %}\n{% set min_y = [min_y, p[1]]|min %}\n{% set max_x = [max_x, p[0]]|max %}\n{% set max_y = [max_y, p[1]]|max %}\n{% endfor %}\n{% endfor %}\n{% set min_x = min_x - 5 %}\n{% set min_y = min_y - 5 %}\n{% set max_x = max_x + 5 %}\n{% set max_y = max_y + 5 %}\nBED_MESH_CALIBRATE AREA_START={min_x},{min_y} AREA_END={max_x},{max_y}\n{% else %}\nBED_MESH_CALIBRATE\n{% endif %}\nG1 Z5 F3000\nG1 Z0.15 F300\n_PURGE_LINE'}, 'gcode_macro PRINT_END': {'gcode': '\nM400\nG92 E0\nG1 E-2.0 F300\nG91\nG1 Z10 F600\nG90\nG1 X0 Y300 F6000\nM104 S0\nM140 S0\nM106 S0\nM84\nSET_GCODE_OFFSET Z=0\nFIRMWARE_RESTART'}, 'gcode_macro _PURGE_LINE': {'gcode': '\nSAVE_GCODE_STATE NAME=Pre_Prime\nG90\nG92 E0\nG1 Z10.0 F3000\nG1 X10 Y10\nG1 Z0.24 F5000.0\nG1 X100 Y10 Z0.24 F1500.0 E35\nG92 E0\nG1 Z10 F6000\nRESTORE_GCODE_STATE NAME=Pre_Prime'}, 'gcode_macro LED_ON': {'gcode': 'SET_LED LED=my_neopixel RED=1 GREEN=1 BLUE=1'}, 'gcode_macro LED_OFF': {'gcode': 'SET_LED LED=my_neopixel RED=0 GREEN=0 BLUE=0'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'variable_extrude': '1.0', 'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - 2.0) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\nPAUSE_BASE\nG91\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG1 E-{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY) %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG91\nG1 E{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}'}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\nTURN_OFF_HEATERS\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z4.5 F300\nG90\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}\nG28 X Y\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\nG1 Y{y_park} F2000\nM84\nCANCEL_PRINT_BASE'}, 'gcode_macro UNLOAD_FILAMENT': {'description': 'Unloads Filament from extruder', 'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=UNLOAD_state\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG91\nG0 Z{ z_safe_lift }\nG92 E0\nG1 E5.0 F300\nG1 E-50 F{ 10 * 60 }\nG1 E-50 F{ 5 * 60 }\nRESTORE_GCODE_STATE NAME=UNLOAD_state\n{% endif %}'}, 'gcode_macro LOAD_FILAMENT': {'description': 'Loads filament into the extruder', 'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=LOAD_state\nG91\nG1 E50 F{ 5 * 60 }\nG4 P{ 0.9 * 1000 }\nG1 E25.0 F{ 5 * 60 }\n_ENABLE_FS\nRESTORE_GCODE_STATE NAME=LOAD_state\n{% endif %}'}, 'gcode_macro _ENABLE_FS': {'description': 'enables filament sensor', 'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=1'}, 'gcode_macro _DISABLE_FS': {'description': 'disables filament sensor', 'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=0'}, 'gcode_macro HEAT': {'description': 'Heats up the extruder', 'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}\n{% set Z = params.Z|default(50)|float %}\n{% set X = params.X|default(110)|float %}\n{% set Y = params.Y|default(110)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X{X} Y{Y} F6000'}, 'gcode_macro COOL': {'description': 'Turns off all heaters', 'gcode': '\nTURN_OFF_HEATERS'}, 'gcode_macro PREHEAT_PLA': {'description': 'Preheats extruder and bed for PLA', 'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(150)|float %}\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}'}, 'gcode_macro BED_TRAMMING_1': {'description': 'Heats bed and starts screw leveling', 'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nSCREWS_TILT_CALCULATE'}, 'gcode_macro BED_TRAMMING_2': {'description': 'Continues bed screw leveling', 'gcode': '\nSCREWS_TILT_CALCULATE'}, 'gcode_macro BED_MESH': {'description': 'Heats bed, makes a mesh, and saves it', 'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nBED_MESH_CLEAR\nBED_MESH_CALIBRATE\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro DISABLE_STEPPERS': {'description': 'Disables stepper motors', 'gcode': '\nM84 X Y E'}, 'gcode_macro PID_EXTRUDER': {'description': 'PID Tune for Extruder', 'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(200)|float %}\nPID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro PID_BED': {'description': 'PID Tune for Bed', 'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %}\nPID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro NOZZLE_MID': {'description': 'Moves nozzle to bed center', 'gcode': '\n{% set Z = params.Z|default(10)|float %}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X110 Y110 F6000'}, 'gcode_macro home_check': {'description': 'Checks if printer is homed', 'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nG28\n{% endif %}'}, 'gcode_macro SHOW_PRINT': {'description': 'Moves extruder out of the way', 'gcode': '\nHOME_CHECK\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG1 Z{ z_safe_lift }\nG1 X10 Y220 F4000'}, 'gcode_macro ZOffset_Setup': {'description': 'Starts Z-Offset Calibration', 'gcode': '\n{% if printer.heater_bed.temperature > 70 %}\n{action_respond_info("Bed temperature too high")}\n{% elif printer.extruder.temperature > 290 %}\n{action_respond_info("Extruder temperature too high")}\n{% else %}\nG28\nPROBE_CALIBRATE\n{% endif %}'}, 'gcode_macro Z_Down_01': {'description': 'Moves Z down by 0.1', 'gcode': '\nTESTZ Z=-.1'}, 'gcode_macro Z_Up_01': {'description': 'Moves Z up by 0.1', 'gcode': '\nTESTZ Z=+.1'}, 'gcode_macro Z_Low_Half': {'description': 'Sets Z between current and previous lower', 'gcode': '\nTESTZ Z=-'}, 'gcode_macro Z_High_Half': {'description': 'Sets Z between current and previous higher', 'gcode': '\nTESTZ Z=+'}, 'gcode_macro Accept_Save': {'description': 'Accepts Z-Offset', 'gcode': '\nACCEPT\nSAVE_CONFIG'}, 'gcode_macro Abort_Setup': {'description': 'Aborts Z-Offset', 'gcode': '\nABORT'}, 'gcode_macro G29': {'gcode': '\nG28\nbed_mesh_calibrate\nG1 X0 Y0 Z10 F4200'}, 'gcode_macro QUICK_Z_TEST': {'description': 'Move to center for manual Z adjustment', 'gcode': '\nG28\nG90\nG1 X150 Y150 Z5 F6000\nG1 Z1.0 F600'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f401xc_12345-if00', 'baud': 250000, 'restart_method': 'command', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC1', 'min_temp': 0.0, 'max_temp': 130.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 45.986, 'pid_ki': 0.757, 'pid_kd': 698.409, 'heater_pin': 'PA8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PC8'}, 'heater_fan hotend_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'PC7', 'fan_speed': 1.0}, 'controller_fan stepper_fan': {'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PC6', 'fan_speed': 1.0, 'idle_speed': 1.0, 'idle_timeout': 300, 'heater': ['extruder']}, 'bltouch': {'z_offset': 0.1, 'stow_on_each_sample': True, 'probe_with_touch_mode': False, 'control_pin': 'PC3', 'sensor_pin': 'PC2', 'pin_up_reports_not_triggered': True, 'pin_up_touch_mode_reports_triggered': True, 'pin_move_time': 0.68, 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 27.25, 'y_offset': -12.8, 'samples': 3, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [150.0, 150.0], 'z_hop': 10.0, 'z_hop_speed': 5.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'adaptive_margin': 0.0, 'probe_count': [7, 7], 'mesh_min': [30.0, 20.0], 'mesh_max': [300.0, 290.0], 'mesh_pps': [2, 3], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 100.0, 'fade_start': 1.0, 'fade_end': 0.0, 'split_delta_z': 0.025, 'move_check_distance': 5.0}, 'screws_tilt_adjust': {'screw1': [23.0, 63.0], 'screw1_name': 'front left', 'screw2': [223.0, 63.0], 'screw2_name': 'front right', 'screw3': [223.0, 263.0], 'screw3_name': 'back right', 'screw4': [23.0, 263.0], 'screw4_name': 'back left', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'neopixel my_neopixel': {'pin': 'PB7', 'chain_count': 1, 'color_order': ['GRB'], 'initial_red': 0.0, 'initial_green': 0.0, 'initial_blue': 0.0, 'initial_white': 0.0}, 'input_shaper': {'shaper_type': 'mzv', 'shaper_type_x': 'mzv', 'damping_ratio_x': 0.1, 'shaper_freq_x': 43.26, 'shaper_type_y': 'mzv', 'damping_ratio_y': 0.1, 'shaper_freq_y': 45.28}, 'virtual_sdcard': {'path': '/home/sonic/printer_data/gcodes', 'on_error_gcode': ''}, 'pause_resume': {'recover_velocity': 50.0}, 'idle_timeout': {'timeout': 86400.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'gcode_macro print_start': {'gcode': '\nG90\nG28\nLED_ON\nSET_GCODE_OFFSET Z_ADJUST=-2.185 MOVE=1\nBED_MESH_CLEAR\n{% if printer.exclude_object.objects|length > 0 %}\n{% set min_x = printer.exclude_object.objects[0].polygon[0][0] %}\n{% set min_y = printer.exclude_object.objects[0].polygon[0][1] %}\n{% set max_x = min_x %}\n{% set max_y = min_y %}\n{% for obj in printer.exclude_object.objects %}\n{% for p in obj.polygon %}\n{% set min_x = [min_x, p[0]]|min %}\n{% set min_y = [min_y, p[1]]|min %}\n{% set max_x = [max_x, p[0]]|max %}\n{% set max_y = [max_y, p[1]]|max %}\n{% endfor %}\n{% endfor %}\n{% set min_x = min_x - 5 %}\n{% set min_y = min_y - 5 %}\n{% set max_x = max_x + 5 %}\n{% set max_y = max_y + 5 %}\nBED_MESH_CALIBRATE AREA_START={min_x},{min_y} AREA_END={max_x},{max_y}\n{% else %}\nBED_MESH_CALIBRATE\n{% endif %}\nG1 Z5 F3000\nG1 Z0.15 F300\n_PURGE_LINE', 'description': 'G-Code macro'}, 'gcode_macro print_end': {'gcode': '\nM400\nG92 E0\nG1 E-2.0 F300\nG91\nG1 Z10 F600\nG90\nG1 X0 Y300 F6000\nM104 S0\nM140 S0\nM106 S0\nM84\nSET_GCODE_OFFSET Z=0\nFIRMWARE_RESTART', 'description': 'G-Code macro'}, 'gcode_macro _purge_line': {'gcode': '\nSAVE_GCODE_STATE NAME=Pre_Prime\nG90\nG92 E0\nG1 Z10.0 F3000\nG1 X10 Y10\nG1 Z0.24 F5000.0\nG1 X100 Y10 Z0.24 F1500.0 E35\nG92 E0\nG1 Z10 F6000\nRESTORE_GCODE_STATE NAME=Pre_Prime', 'description': 'G-Code macro'}, 'gcode_macro led_on': {'gcode': 'SET_LED LED=my_neopixel RED=1 GREEN=1 BLUE=1', 'description': 'G-Code macro'}, 'gcode_macro led_off': {'gcode': 'SET_LED LED=my_neopixel RED=0 GREEN=0 BLUE=0', 'description': 'G-Code macro'}, 'gcode_macro pause': {'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - 2.0) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\nPAUSE_BASE\nG91\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG1 E-{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print', 'variable_extrude': '1.0'}, 'gcode_macro resume': {'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY) %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG91\nG1 E{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print'}, 'gcode_macro cancel_print': {'gcode': '\nTURN_OFF_HEATERS\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z4.5 F300\nG90\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}\nG28 X Y\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\nG1 Y{y_park} F2000\nM84\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro unload_filament': {'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=UNLOAD_state\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG91\nG0 Z{ z_safe_lift }\nG92 E0\nG1 E5.0 F300\nG1 E-50 F{ 10 * 60 }\nG1 E-50 F{ 5 * 60 }\nRESTORE_GCODE_STATE NAME=UNLOAD_state\n{% endif %}', 'description': 'Unloads Filament from extruder'}, 'gcode_macro load_filament': {'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=LOAD_state\nG91\nG1 E50 F{ 5 * 60 }\nG4 P{ 0.9 * 1000 }\nG1 E25.0 F{ 5 * 60 }\n_ENABLE_FS\nRESTORE_GCODE_STATE NAME=LOAD_state\n{% endif %}', 'description': 'Loads filament into the extruder'}, 'gcode_macro _enable_fs': {'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=1', 'description': 'enables filament sensor'}, 'gcode_macro _disable_fs': {'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=0', 'description': 'disables filament sensor'}, 'gcode_macro heat': {'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}\n{% set Z = params.Z|default(50)|float %}\n{% set X = params.X|default(110)|float %}\n{% set Y = params.Y|default(110)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X{X} Y{Y} F6000', 'description': 'Heats up the extruder'}, 'gcode_macro cool': {'gcode': '\nTURN_OFF_HEATERS', 'description': 'Turns off all heaters'}, 'gcode_macro preheat_pla': {'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(150)|float %}\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}', 'description': 'Preheats extruder and bed for PLA'}, 'gcode_macro bed_tramming_1': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nSCREWS_TILT_CALCULATE', 'description': 'Heats bed and starts screw leveling'}, 'gcode_macro bed_tramming_2': {'gcode': '\nSCREWS_TILT_CALCULATE', 'description': 'Continues bed screw leveling'}, 'gcode_macro bed_mesh': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nBED_MESH_CLEAR\nBED_MESH_CALIBRATE\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'Heats bed, makes a mesh, and saves it'}, 'gcode_macro disable_steppers': {'gcode': '\nM84 X Y E', 'description': 'Disables stepper motors'}, 'gcode_macro pid_extruder': {'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(200)|float %}\nPID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'PID Tune for Extruder'}, 'gcode_macro pid_bed': {'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %}\nPID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'PID Tune for Bed'}, 'gcode_macro nozzle_mid': {'gcode': '\n{% set Z = params.Z|default(10)|float %}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X110 Y110 F6000', 'description': 'Moves nozzle to bed center'}, 'gcode_macro home_check': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nG28\n{% endif %}', 'description': 'Checks if printer is homed'}, 'gcode_macro show_print': {'gcode': '\nHOME_CHECK\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG1 Z{ z_safe_lift }\nG1 X10 Y220 F4000', 'description': 'Moves extruder out of the way'}, 'gcode_macro zoffset_setup': {'gcode': '\n{% if printer.heater_bed.temperature > 70 %}\n{action_respond_info("Bed temperature too high")}\n{% elif printer.extruder.temperature > 290 %}\n{action_respond_info("Extruder temperature too high")}\n{% else %}\nG28\nPROBE_CALIBRATE\n{% endif %}', 'description': 'Starts Z-Offset Calibration'}, 'gcode_macro z_down_01': {'gcode': '\nTESTZ Z=-.1', 'description': 'Moves Z down by 0.1'}, 'gcode_macro z_up_01': {'gcode': '\nTESTZ Z=+.1', 'description': 'Moves Z up by 0.1'}, 'gcode_macro z_low_half': {'gcode': '\nTESTZ Z=-', 'description': 'Sets Z between current and previous lower'}, 'gcode_macro z_high_half': {'gcode': '\nTESTZ Z=+', 'description': 'Sets Z between current and previous higher'}, 'gcode_macro accept_save': {'gcode': '\nACCEPT\nSAVE_CONFIG', 'description': 'Accepts Z-Offset'}, 'gcode_macro abort_setup': {'gcode': '\nABORT', 'description': 'Aborts Z-Offset'}, 'gcode_macro g29': {'gcode': '\nG28\nbed_mesh_calibrate\nG1 X0 Y0 Z10 F4200', 'description': 'G-Code macro'}, 'gcode_macro quick_z_test': {'gcode': '\nG28\nG90\nG1 X150 Y150 Z5 F6000\nG1 Z1.0 F600', 'description': 'Move to center for manual Z adjustment'}, 'printer': {'max_velocity': 300.0, 'max_accel': 6000.0, 'max_accel_to_decel': 3000.0, 'square_corner_velocity': 5.0, 'kinematics': 'cartesian', 'max_z_velocity': 5.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': '!PB14', 'dir_pin': 'PB13', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB15', 'endstop_pin': '!PA2', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'PB10', 'dir_pin': 'PB2', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB12', 'endstop_pin': '!PA1', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'PB0', 'dir_pin': '!PC5', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB1', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -10.0, 'position_max': 400.0, 'homing_speed': 5.0, 'second_homing_speed': 2.5, 'homing_retract_speed': 5.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC0', 'min_temp': 0.0, 'max_temp': 250.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 22.533, 'pid_ki': 1.113, 'pid_kd': 114.073, 'heater_pin': 'PC9', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 50.0, 'max_extrude_only_velocity': 79.82432411074329, 'max_extrude_only_accel': 1596.4864822148659, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PA7', 'pressure_advance': 0.05, 'pressure_advance_smooth_time': 0.06, 'dir_pin': 'PA6', 'rotation_distance': 7.191, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PC4'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-08-25 01:34:46,468 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-08-25 01:34:46,470 [printer.py:reinit()] - Klipper version: v0.12.0-116-g31de734d
2025-08-25 01:34:46,470 [printer.py:reinit()] - # Extruders: 1
2025-08-25 01:34:46,470 [printer.py:reinit()] - # Temperature devices: 1
2025-08-25 01:34:46,470 [printer.py:reinit()] - # Fans: 3
2025-08-25 01:34:46,470 [printer.py:reinit()] - # Output pins: 0
2025-08-25 01:34:46,470 [printer.py:reinit()] - # Leds: 1
2025-08-25 01:34:46,487 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2025-08-25 01:34:46,489 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 01:34:46,758 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&controller_fan stepper_fan&heater_fan hotend_fan&neopixel my_neopixel
2025-08-25 01:34:46,761 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 01:34:46,761 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 01:34:46,768 [screen.py:init_klipper()] - Printer initialized
2025-08-25 01:34:46,769 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 01:34:46,769 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 01:34:46,783 [files.py:remove_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0xe41673b8>>
2025-08-25 01:34:46,784 [screen.py:show_panel()] - Reinitializing panel
2025-08-25 01:34:46,879 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 01:34:46,893 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 01:34:46,901 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 01:34:46,946 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 01:34:46,973 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2025-08-25 01:34:46,980 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 01:34:47,006 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2025-08-25 01:34:47,007 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 01:36:05,546 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-25 01:36:05,547 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-25 01:36:05,547 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-25 01:36:05,548 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-08-25 01:36:05,551 [files.py:remove_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0xe41673b8>>
2025-08-25 01:36:05,551 [screen.py:show_panel()] - Reinitializing panel
2025-08-25 01:36:05,615 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 01:36:09,349 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2025-08-25 01:36:09,362 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2025-08-25 01:36:09,363 [printer.py:configure_cameras()] - Cameras: []
2025-08-25 01:36:09,364 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-319-gf0ae517', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-08-25 01:36:09,378 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2025-08-25 01:36:09,460 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2025-08-25 01:36:09,462 [screen.py:init_klipper()] - {'configfile': {'config': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f401xc_12345-if00', 'restart_method': 'command'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '300', 'max_accel': '6000', 'square_corner_velocity': '5.0', 'max_z_velocity': '5', 'max_z_accel': '100'}, 'extruder': {'max_extrude_only_distance': '100.0', 'max_extrude_cross_section': '50.0', 'step_pin': 'PA7', 'dir_pin': 'PA6', 'enable_pin': '!PC4', 'microsteps': '16', 'rotation_distance': '7.1910', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'PC9', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'PC0', 'control': 'pid', 'pid_kp': '22.533', 'pid_ki': '1.113', 'pid_kd': '114.073', 'min_temp': '0', 'max_temp': '250', 'pressure_advance': '0.05', 'pressure_advance_smooth_time': '0.06'}, 'heater_bed': {'heater_pin': 'PA8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'PC1', 'control': 'pid', 'pid_kp': '45.986', 'pid_ki': '0.757', 'pid_kd': '698.409', 'min_temp': '0', 'max_temp': '130'}, 'fan': {'pin': 'PC8'}, 'heater_fan hotend_fan': {'pin': 'PC7', 'heater': 'extruder', 'heater_temp': '50.0'}, 'controller_fan stepper_fan': {'pin': 'PC6', 'idle_timeout': '300'}, 'stepper_x': {'step_pin': '!PB14', 'dir_pin': 'PB13', 'enable_pin': '!PB15', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '!PA2', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '50'}, 'stepper_y': {'step_pin': 'PB10', 'dir_pin': 'PB2', 'enable_pin': '!PB12', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '!PA1', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '50'}, 'stepper_z': {'step_pin': 'PB0', 'dir_pin': '!PC5', 'enable_pin': '!PB1', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_max': '400', 'position_min': '-10'}, 'bltouch': {'sensor_pin': 'PC2', 'control_pin': 'PC3', 'x_offset': '27.25', 'y_offset': '-12.8', 'z_offset': '0.1', 'speed': '10', 'samples': '3', 'samples_result': 'average'}, 'safe_z_home': {'home_xy_position': '150,150', 'speed': '100', 'z_hop': '10', 'z_hop_speed': '5'}, 'bed_mesh': {'speed': '100', 'mesh_min': '30, 20', 'mesh_max': '300, 290', 'algorithm': 'bicubic', 'probe_count': '7,7', 'mesh_pps': '2,3'}, 'screws_tilt_adjust': {'screw1': '23,63', 'screw1_name': 'front left', 'screw2': '223,63', 'screw2_name': 'front right', 'screw3': '223,263', 'screw3_name': 'back right', 'screw4': '23,263', 'screw4_name': 'back left', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'neopixel my_neopixel': {'pin': 'PB7', 'color_order': 'GRB', 'initial_red': '0.0', 'initial_green': '0.0', 'initial_blue': '0.0'}, 'input_shaper': {'shaper_freq_x': '43.26', 'shaper_freq_y': '45.28', 'shaper_type': 'mzv'}, 'virtual_sdcard': {'path': '/home/sonic/printer_data/gcodes'}, 'display_status': {}, 'pause_resume': {}, 'exclude_object': {}, 'idle_timeout': {'timeout': '86400'}, 'gcode_macro PRINT_START': {'gcode': '\nG90\nG28\nLED_ON\nSET_GCODE_OFFSET Z_ADJUST=-2.185 MOVE=1\nBED_MESH_CLEAR\n{% if printer.exclude_object.objects|length > 0 %}\n{% set min_x = 9999 %}\n{% set min_y = 9999 %}\n{% set max_x = -9999 %}\n{% set max_y = -9999 %}\n{% for obj in printer.exclude_object.objects %}\n{% for p in obj.polygon %}\n{% set min_x = [min_x, p[0]]|min %}\n{% set min_y = [min_y, p[1]]|min %}\n{% set max_x = [max_x, p[0]]|max %}\n{% set max_y = [max_y, p[1]]|max %}\n{% endfor %}\n{% endfor %}\n{% set min_x = max(min_x - 5, 0) %}\n{% set min_y = max(min_y - 5, 0) %}\n{% set max_x = min(max_x + 5, printer.toolhead.axis_maximum.x) %}\n{% set max_y = min(max_y + 5, printer.toolhead.axis_maximum.y) %}\nBED_MESH_CALIBRATE AREA_START={min_x},{min_y} AREA_END={max_x},{max_y}\n{% else %}\nBED_MESH_CALIBRATE\n{% endif %}\nG1 Z5 F3000\nG1 Z0.15 F300\n_PURGE_LINE'}, 'gcode_macro PRINT_END': {'gcode': '\nM400\nG92 E0\nG1 E-2.0 F300\nG91\nG1 Z10 F600\nG90\nG1 X0 Y300 F6000\nM104 S0\nM140 S0\nM106 S0\nM84\nSET_GCODE_OFFSET Z=0\nFIRMWARE_RESTART'}, 'gcode_macro _PURGE_LINE': {'gcode': '\nSAVE_GCODE_STATE NAME=Pre_Prime\nG90\nG92 E0\nG1 Z10.0 F3000\nG1 X10 Y10\nG1 Z0.24 F5000.0\nG1 X100 Y10 Z0.24 F1500.0 E35\nG92 E0\nG1 Z10 F6000\nRESTORE_GCODE_STATE NAME=Pre_Prime'}, 'gcode_macro LED_ON': {'gcode': 'SET_LED LED=my_neopixel RED=1 GREEN=1 BLUE=1'}, 'gcode_macro LED_OFF': {'gcode': 'SET_LED LED=my_neopixel RED=0 GREEN=0 BLUE=0'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'variable_extrude': '1.0', 'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - 2.0) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\nPAUSE_BASE\nG91\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG1 E-{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY) %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG91\nG1 E{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}'}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\nTURN_OFF_HEATERS\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z4.5 F300\nG90\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}\nG28 X Y\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\nG1 Y{y_park} F2000\nM84\nCANCEL_PRINT_BASE'}, 'gcode_macro UNLOAD_FILAMENT': {'description': 'Unloads Filament from extruder', 'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=UNLOAD_state\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG91\nG0 Z{ z_safe_lift }\nG92 E0\nG1 E5.0 F300\nG1 E-50 F{ 10 * 60 }\nG1 E-50 F{ 5 * 60 }\nRESTORE_GCODE_STATE NAME=UNLOAD_state\n{% endif %}'}, 'gcode_macro LOAD_FILAMENT': {'description': 'Loads filament into the extruder', 'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=LOAD_state\nG91\nG1 E50 F{ 5 * 60 }\nG4 P{ 0.9 * 1000 }\nG1 E25.0 F{ 5 * 60 }\n_ENABLE_FS\nRESTORE_GCODE_STATE NAME=LOAD_state\n{% endif %}'}, 'gcode_macro _ENABLE_FS': {'description': 'enables filament sensor', 'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=1'}, 'gcode_macro _DISABLE_FS': {'description': 'disables filament sensor', 'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=0'}, 'gcode_macro HEAT': {'description': 'Heats up the extruder', 'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}\n{% set Z = params.Z|default(50)|float %}\n{% set X = params.X|default(110)|float %}\n{% set Y = params.Y|default(110)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X{X} Y{Y} F6000'}, 'gcode_macro COOL': {'description': 'Turns off all heaters', 'gcode': '\nTURN_OFF_HEATERS'}, 'gcode_macro PREHEAT_PLA': {'description': 'Preheats extruder and bed for PLA', 'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(150)|float %}\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}'}, 'gcode_macro BED_TRAMMING_1': {'description': 'Heats bed and starts screw leveling', 'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nSCREWS_TILT_CALCULATE'}, 'gcode_macro BED_TRAMMING_2': {'description': 'Continues bed screw leveling', 'gcode': '\nSCREWS_TILT_CALCULATE'}, 'gcode_macro BED_MESH': {'description': 'Heats bed, makes a mesh, and saves it', 'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nBED_MESH_CLEAR\nBED_MESH_CALIBRATE\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro DISABLE_STEPPERS': {'description': 'Disables stepper motors', 'gcode': '\nM84 X Y E'}, 'gcode_macro PID_EXTRUDER': {'description': 'PID Tune for Extruder', 'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(200)|float %}\nPID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro PID_BED': {'description': 'PID Tune for Bed', 'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %}\nPID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro NOZZLE_MID': {'description': 'Moves nozzle to bed center', 'gcode': '\n{% set Z = params.Z|default(10)|float %}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X110 Y110 F6000'}, 'gcode_macro home_check': {'description': 'Checks if printer is homed', 'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nG28\n{% endif %}'}, 'gcode_macro SHOW_PRINT': {'description': 'Moves extruder out of the way', 'gcode': '\nHOME_CHECK\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG1 Z{ z_safe_lift }\nG1 X10 Y220 F4000'}, 'gcode_macro ZOffset_Setup': {'description': 'Starts Z-Offset Calibration', 'gcode': '\n{% if printer.heater_bed.temperature > 70 %}\n{action_respond_info("Bed temperature too high")}\n{% elif printer.extruder.temperature > 290 %}\n{action_respond_info("Extruder temperature too high")}\n{% else %}\nG28\nPROBE_CALIBRATE\n{% endif %}'}, 'gcode_macro Z_Down_01': {'description': 'Moves Z down by 0.1', 'gcode': '\nTESTZ Z=-.1'}, 'gcode_macro Z_Up_01': {'description': 'Moves Z up by 0.1', 'gcode': '\nTESTZ Z=+.1'}, 'gcode_macro Z_Low_Half': {'description': 'Sets Z between current and previous lower', 'gcode': '\nTESTZ Z=-'}, 'gcode_macro Z_High_Half': {'description': 'Sets Z between current and previous higher', 'gcode': '\nTESTZ Z=+'}, 'gcode_macro Accept_Save': {'description': 'Accepts Z-Offset', 'gcode': '\nACCEPT\nSAVE_CONFIG'}, 'gcode_macro Abort_Setup': {'description': 'Aborts Z-Offset', 'gcode': '\nABORT'}, 'gcode_macro G29': {'gcode': '\nG28\nbed_mesh_calibrate\nG1 X0 Y0 Z10 F4200'}, 'gcode_macro QUICK_Z_TEST': {'description': 'Move to center for manual Z adjustment', 'gcode': '\nG28\nG90\nG1 X150 Y150 Z5 F6000\nG1 Z1.0 F600'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f401xc_12345-if00', 'baud': 250000, 'restart_method': 'command', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC1', 'min_temp': 0.0, 'max_temp': 130.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 45.986, 'pid_ki': 0.757, 'pid_kd': 698.409, 'heater_pin': 'PA8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PC8'}, 'heater_fan hotend_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'PC7', 'fan_speed': 1.0}, 'controller_fan stepper_fan': {'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PC6', 'fan_speed': 1.0, 'idle_speed': 1.0, 'idle_timeout': 300, 'heater': ['extruder']}, 'bltouch': {'z_offset': 0.1, 'stow_on_each_sample': True, 'probe_with_touch_mode': False, 'control_pin': 'PC3', 'sensor_pin': 'PC2', 'pin_up_reports_not_triggered': True, 'pin_up_touch_mode_reports_triggered': True, 'pin_move_time': 0.68, 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 27.25, 'y_offset': -12.8, 'samples': 3, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [150.0, 150.0], 'z_hop': 10.0, 'z_hop_speed': 5.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'adaptive_margin': 0.0, 'probe_count': [7, 7], 'mesh_min': [30.0, 20.0], 'mesh_max': [300.0, 290.0], 'mesh_pps': [2, 3], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 100.0, 'fade_start': 1.0, 'fade_end': 0.0, 'split_delta_z': 0.025, 'move_check_distance': 5.0}, 'screws_tilt_adjust': {'screw1': [23.0, 63.0], 'screw1_name': 'front left', 'screw2': [223.0, 63.0], 'screw2_name': 'front right', 'screw3': [223.0, 263.0], 'screw3_name': 'back right', 'screw4': [23.0, 263.0], 'screw4_name': 'back left', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'neopixel my_neopixel': {'pin': 'PB7', 'chain_count': 1, 'color_order': ['GRB'], 'initial_red': 0.0, 'initial_green': 0.0, 'initial_blue': 0.0, 'initial_white': 0.0}, 'input_shaper': {'shaper_type': 'mzv', 'shaper_type_x': 'mzv', 'damping_ratio_x': 0.1, 'shaper_freq_x': 43.26, 'shaper_type_y': 'mzv', 'damping_ratio_y': 0.1, 'shaper_freq_y': 45.28}, 'virtual_sdcard': {'path': '/home/sonic/printer_data/gcodes', 'on_error_gcode': ''}, 'pause_resume': {'recover_velocity': 50.0}, 'idle_timeout': {'timeout': 86400.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'gcode_macro print_start': {'gcode': '\nG90\nG28\nLED_ON\nSET_GCODE_OFFSET Z_ADJUST=-2.185 MOVE=1\nBED_MESH_CLEAR\n{% if printer.exclude_object.objects|length > 0 %}\n{% set min_x = 9999 %}\n{% set min_y = 9999 %}\n{% set max_x = -9999 %}\n{% set max_y = -9999 %}\n{% for obj in printer.exclude_object.objects %}\n{% for p in obj.polygon %}\n{% set min_x = [min_x, p[0]]|min %}\n{% set min_y = [min_y, p[1]]|min %}\n{% set max_x = [max_x, p[0]]|max %}\n{% set max_y = [max_y, p[1]]|max %}\n{% endfor %}\n{% endfor %}\n{% set min_x = max(min_x - 5, 0) %}\n{% set min_y = max(min_y - 5, 0) %}\n{% set max_x = min(max_x + 5, printer.toolhead.axis_maximum.x) %}\n{% set max_y = min(max_y + 5, printer.toolhead.axis_maximum.y) %}\nBED_MESH_CALIBRATE AREA_START={min_x},{min_y} AREA_END={max_x},{max_y}\n{% else %}\nBED_MESH_CALIBRATE\n{% endif %}\nG1 Z5 F3000\nG1 Z0.15 F300\n_PURGE_LINE', 'description': 'G-Code macro'}, 'gcode_macro print_end': {'gcode': '\nM400\nG92 E0\nG1 E-2.0 F300\nG91\nG1 Z10 F600\nG90\nG1 X0 Y300 F6000\nM104 S0\nM140 S0\nM106 S0\nM84\nSET_GCODE_OFFSET Z=0\nFIRMWARE_RESTART', 'description': 'G-Code macro'}, 'gcode_macro _purge_line': {'gcode': '\nSAVE_GCODE_STATE NAME=Pre_Prime\nG90\nG92 E0\nG1 Z10.0 F3000\nG1 X10 Y10\nG1 Z0.24 F5000.0\nG1 X100 Y10 Z0.24 F1500.0 E35\nG92 E0\nG1 Z10 F6000\nRESTORE_GCODE_STATE NAME=Pre_Prime', 'description': 'G-Code macro'}, 'gcode_macro led_on': {'gcode': 'SET_LED LED=my_neopixel RED=1 GREEN=1 BLUE=1', 'description': 'G-Code macro'}, 'gcode_macro led_off': {'gcode': 'SET_LED LED=my_neopixel RED=0 GREEN=0 BLUE=0', 'description': 'G-Code macro'}, 'gcode_macro pause': {'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - 2.0) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\nPAUSE_BASE\nG91\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG1 E-{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print', 'variable_extrude': '1.0'}, 'gcode_macro resume': {'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY) %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG91\nG1 E{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print'}, 'gcode_macro cancel_print': {'gcode': '\nTURN_OFF_HEATERS\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z4.5 F300\nG90\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}\nG28 X Y\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\nG1 Y{y_park} F2000\nM84\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro unload_filament': {'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=UNLOAD_state\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG91\nG0 Z{ z_safe_lift }\nG92 E0\nG1 E5.0 F300\nG1 E-50 F{ 10 * 60 }\nG1 E-50 F{ 5 * 60 }\nRESTORE_GCODE_STATE NAME=UNLOAD_state\n{% endif %}', 'description': 'Unloads Filament from extruder'}, 'gcode_macro load_filament': {'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=LOAD_state\nG91\nG1 E50 F{ 5 * 60 }\nG4 P{ 0.9 * 1000 }\nG1 E25.0 F{ 5 * 60 }\n_ENABLE_FS\nRESTORE_GCODE_STATE NAME=LOAD_state\n{% endif %}', 'description': 'Loads filament into the extruder'}, 'gcode_macro _enable_fs': {'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=1', 'description': 'enables filament sensor'}, 'gcode_macro _disable_fs': {'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=0', 'description': 'disables filament sensor'}, 'gcode_macro heat': {'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}\n{% set Z = params.Z|default(50)|float %}\n{% set X = params.X|default(110)|float %}\n{% set Y = params.Y|default(110)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X{X} Y{Y} F6000', 'description': 'Heats up the extruder'}, 'gcode_macro cool': {'gcode': '\nTURN_OFF_HEATERS', 'description': 'Turns off all heaters'}, 'gcode_macro preheat_pla': {'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(150)|float %}\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}', 'description': 'Preheats extruder and bed for PLA'}, 'gcode_macro bed_tramming_1': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nSCREWS_TILT_CALCULATE', 'description': 'Heats bed and starts screw leveling'}, 'gcode_macro bed_tramming_2': {'gcode': '\nSCREWS_TILT_CALCULATE', 'description': 'Continues bed screw leveling'}, 'gcode_macro bed_mesh': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nBED_MESH_CLEAR\nBED_MESH_CALIBRATE\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'Heats bed, makes a mesh, and saves it'}, 'gcode_macro disable_steppers': {'gcode': '\nM84 X Y E', 'description': 'Disables stepper motors'}, 'gcode_macro pid_extruder': {'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(200)|float %}\nPID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'PID Tune for Extruder'}, 'gcode_macro pid_bed': {'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %}\nPID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'PID Tune for Bed'}, 'gcode_macro nozzle_mid': {'gcode': '\n{% set Z = params.Z|default(10)|float %}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X110 Y110 F6000', 'description': 'Moves nozzle to bed center'}, 'gcode_macro home_check': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nG28\n{% endif %}', 'description': 'Checks if printer is homed'}, 'gcode_macro show_print': {'gcode': '\nHOME_CHECK\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG1 Z{ z_safe_lift }\nG1 X10 Y220 F4000', 'description': 'Moves extruder out of the way'}, 'gcode_macro zoffset_setup': {'gcode': '\n{% if printer.heater_bed.temperature > 70 %}\n{action_respond_info("Bed temperature too high")}\n{% elif printer.extruder.temperature > 290 %}\n{action_respond_info("Extruder temperature too high")}\n{% else %}\nG28\nPROBE_CALIBRATE\n{% endif %}', 'description': 'Starts Z-Offset Calibration'}, 'gcode_macro z_down_01': {'gcode': '\nTESTZ Z=-.1', 'description': 'Moves Z down by 0.1'}, 'gcode_macro z_up_01': {'gcode': '\nTESTZ Z=+.1', 'description': 'Moves Z up by 0.1'}, 'gcode_macro z_low_half': {'gcode': '\nTESTZ Z=-', 'description': 'Sets Z between current and previous lower'}, 'gcode_macro z_high_half': {'gcode': '\nTESTZ Z=+', 'description': 'Sets Z between current and previous higher'}, 'gcode_macro accept_save': {'gcode': '\nACCEPT\nSAVE_CONFIG', 'description': 'Accepts Z-Offset'}, 'gcode_macro abort_setup': {'gcode': '\nABORT', 'description': 'Aborts Z-Offset'}, 'gcode_macro g29': {'gcode': '\nG28\nbed_mesh_calibrate\nG1 X0 Y0 Z10 F4200', 'description': 'G-Code macro'}, 'gcode_macro quick_z_test': {'gcode': '\nG28\nG90\nG1 X150 Y150 Z5 F6000\nG1 Z1.0 F600', 'description': 'Move to center for manual Z adjustment'}, 'printer': {'max_velocity': 300.0, 'max_accel': 6000.0, 'max_accel_to_decel': 3000.0, 'square_corner_velocity': 5.0, 'kinematics': 'cartesian', 'max_z_velocity': 5.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': '!PB14', 'dir_pin': 'PB13', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB15', 'endstop_pin': '!PA2', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'PB10', 'dir_pin': 'PB2', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB12', 'endstop_pin': '!PA1', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'PB0', 'dir_pin': '!PC5', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB1', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -10.0, 'position_max': 400.0, 'homing_speed': 5.0, 'second_homing_speed': 2.5, 'homing_retract_speed': 5.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC0', 'min_temp': 0.0, 'max_temp': 250.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 22.533, 'pid_ki': 1.113, 'pid_kd': 114.073, 'heater_pin': 'PC9', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 50.0, 'max_extrude_only_velocity': 79.82432411074329, 'max_extrude_only_accel': 1596.4864822148659, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PA7', 'pressure_advance': 0.05, 'pressure_advance_smooth_time': 0.06, 'dir_pin': 'PA6', 'rotation_distance': 7.191, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PC4'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-08-25 01:36:09,465 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-08-25 01:36:09,466 [printer.py:reinit()] - Klipper version: v0.12.0-116-g31de734d
2025-08-25 01:36:09,467 [printer.py:reinit()] - # Extruders: 1
2025-08-25 01:36:09,467 [printer.py:reinit()] - # Temperature devices: 1
2025-08-25 01:36:09,467 [printer.py:reinit()] - # Fans: 3
2025-08-25 01:36:09,468 [printer.py:reinit()] - # Output pins: 0
2025-08-25 01:36:09,468 [printer.py:reinit()] - # Leds: 1
2025-08-25 01:36:09,484 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2025-08-25 01:36:09,487 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 01:36:09,743 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&controller_fan stepper_fan&heater_fan hotend_fan&neopixel my_neopixel
2025-08-25 01:36:09,746 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 01:36:09,746 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 01:36:09,752 [screen.py:init_klipper()] - Printer initialized
2025-08-25 01:36:09,753 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 01:36:09,753 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 01:36:09,761 [files.py:remove_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0xe41673b8>>
2025-08-25 01:36:09,761 [screen.py:show_panel()] - Reinitializing panel
2025-08-25 01:36:09,861 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 01:36:09,874 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 01:36:09,882 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 01:36:09,928 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 01:36:09,954 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2025-08-25 01:36:09,961 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 01:36:09,978 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2025-08-25 01:36:09,980 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 01:38:13,782 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-25 01:38:13,783 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-25 01:38:13,784 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-25 01:38:13,785 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-08-25 01:38:13,788 [files.py:remove_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0xe41673b8>>
2025-08-25 01:38:13,788 [screen.py:show_panel()] - Reinitializing panel
2025-08-25 01:38:13,854 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 01:38:17,350 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2025-08-25 01:38:17,363 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2025-08-25 01:38:17,364 [printer.py:configure_cameras()] - Cameras: []
2025-08-25 01:38:17,364 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-319-gf0ae517', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-08-25 01:38:17,379 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2025-08-25 01:38:17,437 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2025-08-25 01:38:17,440 [screen.py:init_klipper()] - {'configfile': {'config': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f401xc_12345-if00', 'restart_method': 'command'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '300', 'max_accel': '6000', 'square_corner_velocity': '5.0', 'max_z_velocity': '5', 'max_z_accel': '100'}, 'extruder': {'max_extrude_only_distance': '100.0', 'max_extrude_cross_section': '50.0', 'step_pin': 'PA7', 'dir_pin': 'PA6', 'enable_pin': '!PC4', 'microsteps': '16', 'rotation_distance': '7.1910', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'PC9', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'PC0', 'control': 'pid', 'pid_kp': '22.533', 'pid_ki': '1.113', 'pid_kd': '114.073', 'min_temp': '0', 'max_temp': '250', 'pressure_advance': '0.05', 'pressure_advance_smooth_time': '0.06'}, 'heater_bed': {'heater_pin': 'PA8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'PC1', 'control': 'pid', 'pid_kp': '45.986', 'pid_ki': '0.757', 'pid_kd': '698.409', 'min_temp': '0', 'max_temp': '130'}, 'fan': {'pin': 'PC8'}, 'heater_fan hotend_fan': {'pin': 'PC7', 'heater': 'extruder', 'heater_temp': '50.0'}, 'controller_fan stepper_fan': {'pin': 'PC6', 'idle_timeout': '300'}, 'stepper_x': {'step_pin': '!PB14', 'dir_pin': 'PB13', 'enable_pin': '!PB15', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '!PA2', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '50'}, 'stepper_y': {'step_pin': 'PB10', 'dir_pin': 'PB2', 'enable_pin': '!PB12', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '!PA1', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '50'}, 'stepper_z': {'step_pin': 'PB0', 'dir_pin': '!PC5', 'enable_pin': '!PB1', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_max': '400', 'position_min': '-10'}, 'bltouch': {'sensor_pin': 'PC2', 'control_pin': 'PC3', 'x_offset': '27.25', 'y_offset': '-12.8', 'z_offset': '0.1', 'speed': '10', 'samples': '3', 'samples_result': 'average'}, 'safe_z_home': {'home_xy_position': '150,150', 'speed': '100', 'z_hop': '10', 'z_hop_speed': '5'}, 'bed_mesh': {'speed': '100', 'mesh_min': '30, 20', 'mesh_max': '300, 290', 'algorithm': 'bicubic', 'probe_count': '7,7', 'mesh_pps': '2,3'}, 'screws_tilt_adjust': {'screw1': '23,63', 'screw1_name': 'front left', 'screw2': '223,63', 'screw2_name': 'front right', 'screw3': '223,263', 'screw3_name': 'back right', 'screw4': '23,263', 'screw4_name': 'back left', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'neopixel my_neopixel': {'pin': 'PB7', 'color_order': 'GRB', 'initial_red': '0.0', 'initial_green': '0.0', 'initial_blue': '0.0'}, 'input_shaper': {'shaper_freq_x': '43.26', 'shaper_freq_y': '45.28', 'shaper_type': 'mzv'}, 'virtual_sdcard': {'path': '/home/sonic/printer_data/gcodes'}, 'display_status': {}, 'pause_resume': {}, 'exclude_object': {}, 'idle_timeout': {'timeout': '86400'}, 'gcode_macro PRINT_START': {'gcode': '\nG90\nG28\nLED_ON\nSET_GCODE_OFFSET Z_ADJUST=-2.080 MOVE=1\nBED_MESH_CLEAR\n{% if printer.exclude_object.objects|length > 0 %}\n{% set min_x = 9999 %}\n{% set min_y = 9999 %}\n{% set max_x = -9999 %}\n{% set max_y = -9999 %}\n{% for obj in printer.exclude_object.objects %}\n{% for p in obj.polygon %}\n{% set min_x = [min_x, p[0]]|min %}\n{% set min_y = [min_y, p[1]]|min %}\n{% set max_x = [max_x, p[0]]|max %}\n{% set max_y = [max_y, p[1]]|max %}\n{% endfor %}\n{% endfor %}\n{% set min_x = max(min_x - 5, 0) %}\n{% set min_y = max(min_y - 5, 0) %}\n{% set max_x = min(max_x + 5, printer.toolhead.axis_maximum.x) %}\n{% set max_y = min(max_y + 5, printer.toolhead.axis_maximum.y) %}\nBED_MESH_CALIBRATE AREA_START={min_x},{min_y} AREA_END={max_x},{max_y}\n{% else %}\nBED_MESH_CALIBRATE\n{% endif %}\nG1 Z5 F3000\nG1 Z0.15 F300\n_PURGE_LINE'}, 'gcode_macro PRINT_END': {'gcode': '\nM400\nG92 E0\nG1 E-2.0 F300\nG91\nG1 Z10 F600\nG90\nG1 X0 Y300 F6000\nM104 S0\nM140 S0\nM106 S0\nM84\nSET_GCODE_OFFSET Z=0\nFIRMWARE_RESTART'}, 'gcode_macro _PURGE_LINE': {'gcode': '\nSAVE_GCODE_STATE NAME=Pre_Prime\nG90\nG92 E0\nG1 Z10.0 F3000\nG1 X10 Y10\nG1 Z0.24 F5000.0\nG1 X100 Y10 Z0.24 F1500.0 E35\nG92 E0\nG1 Z10 F6000\nRESTORE_GCODE_STATE NAME=Pre_Prime'}, 'gcode_macro LED_ON': {'gcode': 'SET_LED LED=my_neopixel RED=1 GREEN=1 BLUE=1'}, 'gcode_macro LED_OFF': {'gcode': 'SET_LED LED=my_neopixel RED=0 GREEN=0 BLUE=0'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'variable_extrude': '1.0', 'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - 2.0) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\nPAUSE_BASE\nG91\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG1 E-{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY) %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG91\nG1 E{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}'}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\nTURN_OFF_HEATERS\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z4.5 F300\nG90\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}\nG28 X Y\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\nG1 Y{y_park} F2000\nM84\nCANCEL_PRINT_BASE'}, 'gcode_macro UNLOAD_FILAMENT': {'description': 'Unloads Filament from extruder', 'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=UNLOAD_state\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG91\nG0 Z{ z_safe_lift }\nG92 E0\nG1 E5.0 F300\nG1 E-50 F{ 10 * 60 }\nG1 E-50 F{ 5 * 60 }\nRESTORE_GCODE_STATE NAME=UNLOAD_state\n{% endif %}'}, 'gcode_macro LOAD_FILAMENT': {'description': 'Loads filament into the extruder', 'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=LOAD_state\nG91\nG1 E50 F{ 5 * 60 }\nG4 P{ 0.9 * 1000 }\nG1 E25.0 F{ 5 * 60 }\n_ENABLE_FS\nRESTORE_GCODE_STATE NAME=LOAD_state\n{% endif %}'}, 'gcode_macro _ENABLE_FS': {'description': 'enables filament sensor', 'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=1'}, 'gcode_macro _DISABLE_FS': {'description': 'disables filament sensor', 'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=0'}, 'gcode_macro HEAT': {'description': 'Heats up the extruder', 'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}\n{% set Z = params.Z|default(50)|float %}\n{% set X = params.X|default(110)|float %}\n{% set Y = params.Y|default(110)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X{X} Y{Y} F6000'}, 'gcode_macro COOL': {'description': 'Turns off all heaters', 'gcode': '\nTURN_OFF_HEATERS'}, 'gcode_macro PREHEAT_PLA': {'description': 'Preheats extruder and bed for PLA', 'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(150)|float %}\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}'}, 'gcode_macro BED_TRAMMING_1': {'description': 'Heats bed and starts screw leveling', 'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nSCREWS_TILT_CALCULATE'}, 'gcode_macro BED_TRAMMING_2': {'description': 'Continues bed screw leveling', 'gcode': '\nSCREWS_TILT_CALCULATE'}, 'gcode_macro BED_MESH': {'description': 'Heats bed, makes a mesh, and saves it', 'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nBED_MESH_CLEAR\nBED_MESH_CALIBRATE\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro DISABLE_STEPPERS': {'description': 'Disables stepper motors', 'gcode': '\nM84 X Y E'}, 'gcode_macro PID_EXTRUDER': {'description': 'PID Tune for Extruder', 'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(200)|float %}\nPID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro PID_BED': {'description': 'PID Tune for Bed', 'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %}\nPID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro NOZZLE_MID': {'description': 'Moves nozzle to bed center', 'gcode': '\n{% set Z = params.Z|default(10)|float %}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X110 Y110 F6000'}, 'gcode_macro home_check': {'description': 'Checks if printer is homed', 'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nG28\n{% endif %}'}, 'gcode_macro SHOW_PRINT': {'description': 'Moves extruder out of the way', 'gcode': '\nHOME_CHECK\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG1 Z{ z_safe_lift }\nG1 X10 Y220 F4000'}, 'gcode_macro ZOffset_Setup': {'description': 'Starts Z-Offset Calibration', 'gcode': '\n{% if printer.heater_bed.temperature > 70 %}\n{action_respond_info("Bed temperature too high")}\n{% elif printer.extruder.temperature > 290 %}\n{action_respond_info("Extruder temperature too high")}\n{% else %}\nG28\nPROBE_CALIBRATE\n{% endif %}'}, 'gcode_macro Z_Down_01': {'description': 'Moves Z down by 0.1', 'gcode': '\nTESTZ Z=-.1'}, 'gcode_macro Z_Up_01': {'description': 'Moves Z up by 0.1', 'gcode': '\nTESTZ Z=+.1'}, 'gcode_macro Z_Low_Half': {'description': 'Sets Z between current and previous lower', 'gcode': '\nTESTZ Z=-'}, 'gcode_macro Z_High_Half': {'description': 'Sets Z between current and previous higher', 'gcode': '\nTESTZ Z=+'}, 'gcode_macro Accept_Save': {'description': 'Accepts Z-Offset', 'gcode': '\nACCEPT\nSAVE_CONFIG'}, 'gcode_macro Abort_Setup': {'description': 'Aborts Z-Offset', 'gcode': '\nABORT'}, 'gcode_macro G29': {'gcode': '\nG28\nbed_mesh_calibrate\nG1 X0 Y0 Z10 F4200'}, 'gcode_macro QUICK_Z_TEST': {'description': 'Move to center for manual Z adjustment', 'gcode': '\nG28\nG90\nG1 X150 Y150 Z5 F6000\nG1 Z1.0 F600'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f401xc_12345-if00', 'baud': 250000, 'restart_method': 'command', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC1', 'min_temp': 0.0, 'max_temp': 130.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 45.986, 'pid_ki': 0.757, 'pid_kd': 698.409, 'heater_pin': 'PA8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PC8'}, 'heater_fan hotend_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'PC7', 'fan_speed': 1.0}, 'controller_fan stepper_fan': {'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PC6', 'fan_speed': 1.0, 'idle_speed': 1.0, 'idle_timeout': 300, 'heater': ['extruder']}, 'bltouch': {'z_offset': 0.1, 'stow_on_each_sample': True, 'probe_with_touch_mode': False, 'control_pin': 'PC3', 'sensor_pin': 'PC2', 'pin_up_reports_not_triggered': True, 'pin_up_touch_mode_reports_triggered': True, 'pin_move_time': 0.68, 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 27.25, 'y_offset': -12.8, 'samples': 3, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [150.0, 150.0], 'z_hop': 10.0, 'z_hop_speed': 5.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'adaptive_margin': 0.0, 'probe_count': [7, 7], 'mesh_min': [30.0, 20.0], 'mesh_max': [300.0, 290.0], 'mesh_pps': [2, 3], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 100.0, 'fade_start': 1.0, 'fade_end': 0.0, 'split_delta_z': 0.025, 'move_check_distance': 5.0}, 'screws_tilt_adjust': {'screw1': [23.0, 63.0], 'screw1_name': 'front left', 'screw2': [223.0, 63.0], 'screw2_name': 'front right', 'screw3': [223.0, 263.0], 'screw3_name': 'back right', 'screw4': [23.0, 263.0], 'screw4_name': 'back left', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'neopixel my_neopixel': {'pin': 'PB7', 'chain_count': 1, 'color_order': ['GRB'], 'initial_red': 0.0, 'initial_green': 0.0, 'initial_blue': 0.0, 'initial_white': 0.0}, 'input_shaper': {'shaper_type': 'mzv', 'shaper_type_x': 'mzv', 'damping_ratio_x': 0.1, 'shaper_freq_x': 43.26, 'shaper_type_y': 'mzv', 'damping_ratio_y': 0.1, 'shaper_freq_y': 45.28}, 'virtual_sdcard': {'path': '/home/sonic/printer_data/gcodes', 'on_error_gcode': ''}, 'pause_resume': {'recover_velocity': 50.0}, 'idle_timeout': {'timeout': 86400.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'gcode_macro print_start': {'gcode': '\nG90\nG28\nLED_ON\nSET_GCODE_OFFSET Z_ADJUST=-2.080 MOVE=1\nBED_MESH_CLEAR\n{% if printer.exclude_object.objects|length > 0 %}\n{% set min_x = 9999 %}\n{% set min_y = 9999 %}\n{% set max_x = -9999 %}\n{% set max_y = -9999 %}\n{% for obj in printer.exclude_object.objects %}\n{% for p in obj.polygon %}\n{% set min_x = [min_x, p[0]]|min %}\n{% set min_y = [min_y, p[1]]|min %}\n{% set max_x = [max_x, p[0]]|max %}\n{% set max_y = [max_y, p[1]]|max %}\n{% endfor %}\n{% endfor %}\n{% set min_x = max(min_x - 5, 0) %}\n{% set min_y = max(min_y - 5, 0) %}\n{% set max_x = min(max_x + 5, printer.toolhead.axis_maximum.x) %}\n{% set max_y = min(max_y + 5, printer.toolhead.axis_maximum.y) %}\nBED_MESH_CALIBRATE AREA_START={min_x},{min_y} AREA_END={max_x},{max_y}\n{% else %}\nBED_MESH_CALIBRATE\n{% endif %}\nG1 Z5 F3000\nG1 Z0.15 F300\n_PURGE_LINE', 'description': 'G-Code macro'}, 'gcode_macro print_end': {'gcode': '\nM400\nG92 E0\nG1 E-2.0 F300\nG91\nG1 Z10 F600\nG90\nG1 X0 Y300 F6000\nM104 S0\nM140 S0\nM106 S0\nM84\nSET_GCODE_OFFSET Z=0\nFIRMWARE_RESTART', 'description': 'G-Code macro'}, 'gcode_macro _purge_line': {'gcode': '\nSAVE_GCODE_STATE NAME=Pre_Prime\nG90\nG92 E0\nG1 Z10.0 F3000\nG1 X10 Y10\nG1 Z0.24 F5000.0\nG1 X100 Y10 Z0.24 F1500.0 E35\nG92 E0\nG1 Z10 F6000\nRESTORE_GCODE_STATE NAME=Pre_Prime', 'description': 'G-Code macro'}, 'gcode_macro led_on': {'gcode': 'SET_LED LED=my_neopixel RED=1 GREEN=1 BLUE=1', 'description': 'G-Code macro'}, 'gcode_macro led_off': {'gcode': 'SET_LED LED=my_neopixel RED=0 GREEN=0 BLUE=0', 'description': 'G-Code macro'}, 'gcode_macro pause': {'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - 2.0) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\nPAUSE_BASE\nG91\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG1 E-{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print', 'variable_extrude': '1.0'}, 'gcode_macro resume': {'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY) %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG91\nG1 E{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print'}, 'gcode_macro cancel_print': {'gcode': '\nTURN_OFF_HEATERS\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z4.5 F300\nG90\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}\nG28 X Y\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\nG1 Y{y_park} F2000\nM84\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro unload_filament': {'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=UNLOAD_state\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG91\nG0 Z{ z_safe_lift }\nG92 E0\nG1 E5.0 F300\nG1 E-50 F{ 10 * 60 }\nG1 E-50 F{ 5 * 60 }\nRESTORE_GCODE_STATE NAME=UNLOAD_state\n{% endif %}', 'description': 'Unloads Filament from extruder'}, 'gcode_macro load_filament': {'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=LOAD_state\nG91\nG1 E50 F{ 5 * 60 }\nG4 P{ 0.9 * 1000 }\nG1 E25.0 F{ 5 * 60 }\n_ENABLE_FS\nRESTORE_GCODE_STATE NAME=LOAD_state\n{% endif %}', 'description': 'Loads filament into the extruder'}, 'gcode_macro _enable_fs': {'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=1', 'description': 'enables filament sensor'}, 'gcode_macro _disable_fs': {'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=0', 'description': 'disables filament sensor'}, 'gcode_macro heat': {'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}\n{% set Z = params.Z|default(50)|float %}\n{% set X = params.X|default(110)|float %}\n{% set Y = params.Y|default(110)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X{X} Y{Y} F6000', 'description': 'Heats up the extruder'}, 'gcode_macro cool': {'gcode': '\nTURN_OFF_HEATERS', 'description': 'Turns off all heaters'}, 'gcode_macro preheat_pla': {'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(150)|float %}\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}', 'description': 'Preheats extruder and bed for PLA'}, 'gcode_macro bed_tramming_1': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nSCREWS_TILT_CALCULATE', 'description': 'Heats bed and starts screw leveling'}, 'gcode_macro bed_tramming_2': {'gcode': '\nSCREWS_TILT_CALCULATE', 'description': 'Continues bed screw leveling'}, 'gcode_macro bed_mesh': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nBED_MESH_CLEAR\nBED_MESH_CALIBRATE\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'Heats bed, makes a mesh, and saves it'}, 'gcode_macro disable_steppers': {'gcode': '\nM84 X Y E', 'description': 'Disables stepper motors'}, 'gcode_macro pid_extruder': {'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(200)|float %}\nPID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'PID Tune for Extruder'}, 'gcode_macro pid_bed': {'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %}\nPID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'PID Tune for Bed'}, 'gcode_macro nozzle_mid': {'gcode': '\n{% set Z = params.Z|default(10)|float %}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X110 Y110 F6000', 'description': 'Moves nozzle to bed center'}, 'gcode_macro home_check': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nG28\n{% endif %}', 'description': 'Checks if printer is homed'}, 'gcode_macro show_print': {'gcode': '\nHOME_CHECK\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG1 Z{ z_safe_lift }\nG1 X10 Y220 F4000', 'description': 'Moves extruder out of the way'}, 'gcode_macro zoffset_setup': {'gcode': '\n{% if printer.heater_bed.temperature > 70 %}\n{action_respond_info("Bed temperature too high")}\n{% elif printer.extruder.temperature > 290 %}\n{action_respond_info("Extruder temperature too high")}\n{% else %}\nG28\nPROBE_CALIBRATE\n{% endif %}', 'description': 'Starts Z-Offset Calibration'}, 'gcode_macro z_down_01': {'gcode': '\nTESTZ Z=-.1', 'description': 'Moves Z down by 0.1'}, 'gcode_macro z_up_01': {'gcode': '\nTESTZ Z=+.1', 'description': 'Moves Z up by 0.1'}, 'gcode_macro z_low_half': {'gcode': '\nTESTZ Z=-', 'description': 'Sets Z between current and previous lower'}, 'gcode_macro z_high_half': {'gcode': '\nTESTZ Z=+', 'description': 'Sets Z between current and previous higher'}, 'gcode_macro accept_save': {'gcode': '\nACCEPT\nSAVE_CONFIG', 'description': 'Accepts Z-Offset'}, 'gcode_macro abort_setup': {'gcode': '\nABORT', 'description': 'Aborts Z-Offset'}, 'gcode_macro g29': {'gcode': '\nG28\nbed_mesh_calibrate\nG1 X0 Y0 Z10 F4200', 'description': 'G-Code macro'}, 'gcode_macro quick_z_test': {'gcode': '\nG28\nG90\nG1 X150 Y150 Z5 F6000\nG1 Z1.0 F600', 'description': 'Move to center for manual Z adjustment'}, 'printer': {'max_velocity': 300.0, 'max_accel': 6000.0, 'max_accel_to_decel': 3000.0, 'square_corner_velocity': 5.0, 'kinematics': 'cartesian', 'max_z_velocity': 5.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': '!PB14', 'dir_pin': 'PB13', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB15', 'endstop_pin': '!PA2', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'PB10', 'dir_pin': 'PB2', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB12', 'endstop_pin': '!PA1', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'PB0', 'dir_pin': '!PC5', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB1', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -10.0, 'position_max': 400.0, 'homing_speed': 5.0, 'second_homing_speed': 2.5, 'homing_retract_speed': 5.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC0', 'min_temp': 0.0, 'max_temp': 250.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 22.533, 'pid_ki': 1.113, 'pid_kd': 114.073, 'heater_pin': 'PC9', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 50.0, 'max_extrude_only_velocity': 79.82432411074329, 'max_extrude_only_accel': 1596.4864822148659, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PA7', 'pressure_advance': 0.05, 'pressure_advance_smooth_time': 0.06, 'dir_pin': 'PA6', 'rotation_distance': 7.191, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PC4'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-08-25 01:38:17,442 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-08-25 01:38:17,443 [printer.py:reinit()] - Klipper version: v0.12.0-116-g31de734d
2025-08-25 01:38:17,444 [printer.py:reinit()] - # Extruders: 1
2025-08-25 01:38:17,444 [printer.py:reinit()] - # Temperature devices: 1
2025-08-25 01:38:17,444 [printer.py:reinit()] - # Fans: 3
2025-08-25 01:38:17,444 [printer.py:reinit()] - # Output pins: 0
2025-08-25 01:38:17,444 [printer.py:reinit()] - # Leds: 1
2025-08-25 01:38:17,460 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2025-08-25 01:38:17,462 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 01:38:17,733 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&controller_fan stepper_fan&heater_fan hotend_fan&neopixel my_neopixel
2025-08-25 01:38:17,738 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 01:38:17,738 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 01:38:17,740 [screen.py:init_klipper()] - Printer initialized
2025-08-25 01:38:17,740 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 01:38:17,741 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 01:38:17,749 [files.py:remove_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0xe41673b8>>
2025-08-25 01:38:17,749 [screen.py:show_panel()] - Reinitializing panel
2025-08-25 01:38:17,846 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 01:38:17,860 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 01:38:17,868 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 01:38:17,913 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 01:38:17,939 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2025-08-25 01:38:17,946 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 01:38:17,963 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2025-08-25 01:38:17,964 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 01:39:23,818 [screen.py:show_popup_message()] - error: Error evaluating 'gcode_macro PRINT_START:gcode': jinja2.exceptions.UndefinedError: 'max' is undefined
2025-08-25 01:40:23,244 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-25 01:40:23,245 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-25 01:40:23,246 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-25 01:40:23,246 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-08-25 01:40:23,249 [files.py:remove_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0xe41673b8>>
2025-08-25 01:40:23,250 [screen.py:show_panel()] - Reinitializing panel
2025-08-25 01:40:23,310 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 01:40:26,350 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2025-08-25 01:40:26,362 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2025-08-25 01:40:26,364 [printer.py:configure_cameras()] - Cameras: []
2025-08-25 01:40:26,364 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-319-gf0ae517', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-08-25 01:40:26,379 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2025-08-25 01:40:26,400 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2025-08-25 01:40:26,402 [screen.py:init_klipper()] - {'configfile': {'config': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f401xc_12345-if00', 'restart_method': 'command'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '300', 'max_accel': '6000', 'square_corner_velocity': '5.0', 'max_z_velocity': '5', 'max_z_accel': '100'}, 'extruder': {'max_extrude_only_distance': '100.0', 'max_extrude_cross_section': '50.0', 'step_pin': 'PA7', 'dir_pin': 'PA6', 'enable_pin': '!PC4', 'microsteps': '16', 'rotation_distance': '7.1910', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'PC9', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'PC0', 'control': 'pid', 'pid_kp': '22.533', 'pid_ki': '1.113', 'pid_kd': '114.073', 'min_temp': '0', 'max_temp': '250', 'pressure_advance': '0.05', 'pressure_advance_smooth_time': '0.06'}, 'heater_bed': {'heater_pin': 'PA8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'PC1', 'control': 'pid', 'pid_kp': '45.986', 'pid_ki': '0.757', 'pid_kd': '698.409', 'min_temp': '0', 'max_temp': '130'}, 'fan': {'pin': 'PC8'}, 'heater_fan hotend_fan': {'pin': 'PC7', 'heater': 'extruder', 'heater_temp': '50.0'}, 'controller_fan stepper_fan': {'pin': 'PC6', 'idle_timeout': '300'}, 'stepper_x': {'step_pin': '!PB14', 'dir_pin': 'PB13', 'enable_pin': '!PB15', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '!PA2', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '50'}, 'stepper_y': {'step_pin': 'PB10', 'dir_pin': 'PB2', 'enable_pin': '!PB12', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '!PA1', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '50'}, 'stepper_z': {'step_pin': 'PB0', 'dir_pin': '!PC5', 'enable_pin': '!PB1', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_max': '400', 'position_min': '-10'}, 'bltouch': {'sensor_pin': 'PC2', 'control_pin': 'PC3', 'x_offset': '27.25', 'y_offset': '-12.8', 'z_offset': '0.1', 'speed': '10', 'samples': '3', 'samples_result': 'average'}, 'safe_z_home': {'home_xy_position': '150,150', 'speed': '100', 'z_hop': '10', 'z_hop_speed': '5'}, 'bed_mesh': {'speed': '100', 'mesh_min': '30, 20', 'mesh_max': '300, 290', 'algorithm': 'bicubic', 'probe_count': '7,7', 'mesh_pps': '2,3'}, 'screws_tilt_adjust': {'screw1': '23,63', 'screw1_name': 'front left', 'screw2': '223,63', 'screw2_name': 'front right', 'screw3': '223,263', 'screw3_name': 'back right', 'screw4': '23,263', 'screw4_name': 'back left', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'neopixel my_neopixel': {'pin': 'PB7', 'color_order': 'GRB', 'initial_red': '0.0', 'initial_green': '0.0', 'initial_blue': '0.0'}, 'input_shaper': {'shaper_freq_x': '43.26', 'shaper_freq_y': '45.28', 'shaper_type': 'mzv'}, 'virtual_sdcard': {'path': '/home/sonic/printer_data/gcodes'}, 'display_status': {}, 'pause_resume': {}, 'exclude_object': {}, 'idle_timeout': {'timeout': '86400'}, 'gcode_macro PRINT_START': {'gcode': '\nG90\nG28\nLED_ON\nSET_GCODE_OFFSET Z_ADJUST=-2.080 MOVE=1\nBED_MESH_CLEAR\n{% if printer.exclude_object.objects|length > 0 %}\n{% set min_x = printer.exclude_object.objects[0].polygon[0][0] %}\n{% set min_y = printer.exclude_object.objects[0].polygon[0][1] %}\n{% set max_x = min_x %}\n{% set max_y = min_y %}\n{% for obj in printer.exclude_object.objects %}\n{% for p in obj.polygon %}\n{% set min_x = [min_x, p[0]]|min %}\n{% set min_y = [min_y, p[1]]|min %}\n{% set max_x = [max_x, p[0]]|max %}\n{% set max_y = [max_y, p[1]]|max %}\n{% endfor %}\n{% endfor %}\n{% set min_x = min_x - 5 %}\n{% set min_y = min_y - 5 %}\n{% set max_x = max_x + 5 %}\n{% set max_y = max_y + 5 %}\nBED_MESH_CALIBRATE AREA_START={min_x},{min_y} AREA_END={max_x},{max_y}\n{% else %}\nBED_MESH_CALIBRATE\n{% endif %}\nG1 Z5 F3000\nG1 Z0.15 F300\n_PURGE_LINE'}, 'gcode_macro PRINT_END': {'gcode': '\nM400\nG92 E0\nG1 E-2.0 F300\nG91\nG1 Z10 F600\nG90\nG1 X0 Y300 F6000\nM104 S0\nM140 S0\nM106 S0\nM84\nSET_GCODE_OFFSET Z=0\nFIRMWARE_RESTART'}, 'gcode_macro _PURGE_LINE': {'gcode': '\nSAVE_GCODE_STATE NAME=Pre_Prime\nG90\nG92 E0\nG1 Z10.0 F3000\nG1 X10 Y10\nG1 Z0.24 F5000.0\nG1 X100 Y10 Z0.24 F1500.0 E35\nG92 E0\nG1 Z10 F6000\nRESTORE_GCODE_STATE NAME=Pre_Prime'}, 'gcode_macro LED_ON': {'gcode': 'SET_LED LED=my_neopixel RED=1 GREEN=1 BLUE=1'}, 'gcode_macro LED_OFF': {'gcode': 'SET_LED LED=my_neopixel RED=0 GREEN=0 BLUE=0'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'variable_extrude': '1.0', 'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - 2.0) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\nPAUSE_BASE\nG91\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG1 E-{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY) %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG91\nG1 E{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}'}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\nTURN_OFF_HEATERS\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z4.5 F300\nG90\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}\nG28 X Y\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\nG1 Y{y_park} F2000\nM84\nCANCEL_PRINT_BASE'}, 'gcode_macro UNLOAD_FILAMENT': {'description': 'Unloads Filament from extruder', 'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=UNLOAD_state\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG91\nG0 Z{ z_safe_lift }\nG92 E0\nG1 E5.0 F300\nG1 E-50 F{ 10 * 60 }\nG1 E-50 F{ 5 * 60 }\nRESTORE_GCODE_STATE NAME=UNLOAD_state\n{% endif %}'}, 'gcode_macro LOAD_FILAMENT': {'description': 'Loads filament into the extruder', 'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=LOAD_state\nG91\nG1 E50 F{ 5 * 60 }\nG4 P{ 0.9 * 1000 }\nG1 E25.0 F{ 5 * 60 }\n_ENABLE_FS\nRESTORE_GCODE_STATE NAME=LOAD_state\n{% endif %}'}, 'gcode_macro _ENABLE_FS': {'description': 'enables filament sensor', 'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=1'}, 'gcode_macro _DISABLE_FS': {'description': 'disables filament sensor', 'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=0'}, 'gcode_macro HEAT': {'description': 'Heats up the extruder', 'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}\n{% set Z = params.Z|default(50)|float %}\n{% set X = params.X|default(110)|float %}\n{% set Y = params.Y|default(110)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X{X} Y{Y} F6000'}, 'gcode_macro COOL': {'description': 'Turns off all heaters', 'gcode': '\nTURN_OFF_HEATERS'}, 'gcode_macro PREHEAT_PLA': {'description': 'Preheats extruder and bed for PLA', 'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(150)|float %}\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}'}, 'gcode_macro BED_TRAMMING_1': {'description': 'Heats bed and starts screw leveling', 'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nSCREWS_TILT_CALCULATE'}, 'gcode_macro BED_TRAMMING_2': {'description': 'Continues bed screw leveling', 'gcode': '\nSCREWS_TILT_CALCULATE'}, 'gcode_macro BED_MESH': {'description': 'Heats bed, makes a mesh, and saves it', 'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nBED_MESH_CLEAR\nBED_MESH_CALIBRATE\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro DISABLE_STEPPERS': {'description': 'Disables stepper motors', 'gcode': '\nM84 X Y E'}, 'gcode_macro PID_EXTRUDER': {'description': 'PID Tune for Extruder', 'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(200)|float %}\nPID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro PID_BED': {'description': 'PID Tune for Bed', 'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %}\nPID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro NOZZLE_MID': {'description': 'Moves nozzle to bed center', 'gcode': '\n{% set Z = params.Z|default(10)|float %}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X110 Y110 F6000'}, 'gcode_macro home_check': {'description': 'Checks if printer is homed', 'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nG28\n{% endif %}'}, 'gcode_macro SHOW_PRINT': {'description': 'Moves extruder out of the way', 'gcode': '\nHOME_CHECK\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG1 Z{ z_safe_lift }\nG1 X10 Y220 F4000'}, 'gcode_macro ZOffset_Setup': {'description': 'Starts Z-Offset Calibration', 'gcode': '\n{% if printer.heater_bed.temperature > 70 %}\n{action_respond_info("Bed temperature too high")}\n{% elif printer.extruder.temperature > 290 %}\n{action_respond_info("Extruder temperature too high")}\n{% else %}\nG28\nPROBE_CALIBRATE\n{% endif %}'}, 'gcode_macro Z_Down_01': {'description': 'Moves Z down by 0.1', 'gcode': '\nTESTZ Z=-.1'}, 'gcode_macro Z_Up_01': {'description': 'Moves Z up by 0.1', 'gcode': '\nTESTZ Z=+.1'}, 'gcode_macro Z_Low_Half': {'description': 'Sets Z between current and previous lower', 'gcode': '\nTESTZ Z=-'}, 'gcode_macro Z_High_Half': {'description': 'Sets Z between current and previous higher', 'gcode': '\nTESTZ Z=+'}, 'gcode_macro Accept_Save': {'description': 'Accepts Z-Offset', 'gcode': '\nACCEPT\nSAVE_CONFIG'}, 'gcode_macro Abort_Setup': {'description': 'Aborts Z-Offset', 'gcode': '\nABORT'}, 'gcode_macro G29': {'gcode': '\nG28\nbed_mesh_calibrate\nG1 X0 Y0 Z10 F4200'}, 'gcode_macro QUICK_Z_TEST': {'description': 'Move to center for manual Z adjustment', 'gcode': '\nG28\nG90\nG1 X150 Y150 Z5 F6000\nG1 Z1.0 F600'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f401xc_12345-if00', 'baud': 250000, 'restart_method': 'command', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC1', 'min_temp': 0.0, 'max_temp': 130.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 45.986, 'pid_ki': 0.757, 'pid_kd': 698.409, 'heater_pin': 'PA8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PC8'}, 'heater_fan hotend_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'PC7', 'fan_speed': 1.0}, 'controller_fan stepper_fan': {'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PC6', 'fan_speed': 1.0, 'idle_speed': 1.0, 'idle_timeout': 300, 'heater': ['extruder']}, 'bltouch': {'z_offset': 0.1, 'stow_on_each_sample': True, 'probe_with_touch_mode': False, 'control_pin': 'PC3', 'sensor_pin': 'PC2', 'pin_up_reports_not_triggered': True, 'pin_up_touch_mode_reports_triggered': True, 'pin_move_time': 0.68, 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 27.25, 'y_offset': -12.8, 'samples': 3, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [150.0, 150.0], 'z_hop': 10.0, 'z_hop_speed': 5.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'adaptive_margin': 0.0, 'probe_count': [7, 7], 'mesh_min': [30.0, 20.0], 'mesh_max': [300.0, 290.0], 'mesh_pps': [2, 3], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 100.0, 'fade_start': 1.0, 'fade_end': 0.0, 'split_delta_z': 0.025, 'move_check_distance': 5.0}, 'screws_tilt_adjust': {'screw1': [23.0, 63.0], 'screw1_name': 'front left', 'screw2': [223.0, 63.0], 'screw2_name': 'front right', 'screw3': [223.0, 263.0], 'screw3_name': 'back right', 'screw4': [23.0, 263.0], 'screw4_name': 'back left', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'neopixel my_neopixel': {'pin': 'PB7', 'chain_count': 1, 'color_order': ['GRB'], 'initial_red': 0.0, 'initial_green': 0.0, 'initial_blue': 0.0, 'initial_white': 0.0}, 'input_shaper': {'shaper_type': 'mzv', 'shaper_type_x': 'mzv', 'damping_ratio_x': 0.1, 'shaper_freq_x': 43.26, 'shaper_type_y': 'mzv', 'damping_ratio_y': 0.1, 'shaper_freq_y': 45.28}, 'virtual_sdcard': {'path': '/home/sonic/printer_data/gcodes', 'on_error_gcode': ''}, 'pause_resume': {'recover_velocity': 50.0}, 'idle_timeout': {'timeout': 86400.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'gcode_macro print_start': {'gcode': '\nG90\nG28\nLED_ON\nSET_GCODE_OFFSET Z_ADJUST=-2.080 MOVE=1\nBED_MESH_CLEAR\n{% if printer.exclude_object.objects|length > 0 %}\n{% set min_x = printer.exclude_object.objects[0].polygon[0][0] %}\n{% set min_y = printer.exclude_object.objects[0].polygon[0][1] %}\n{% set max_x = min_x %}\n{% set max_y = min_y %}\n{% for obj in printer.exclude_object.objects %}\n{% for p in obj.polygon %}\n{% set min_x = [min_x, p[0]]|min %}\n{% set min_y = [min_y, p[1]]|min %}\n{% set max_x = [max_x, p[0]]|max %}\n{% set max_y = [max_y, p[1]]|max %}\n{% endfor %}\n{% endfor %}\n{% set min_x = min_x - 5 %}\n{% set min_y = min_y - 5 %}\n{% set max_x = max_x + 5 %}\n{% set max_y = max_y + 5 %}\nBED_MESH_CALIBRATE AREA_START={min_x},{min_y} AREA_END={max_x},{max_y}\n{% else %}\nBED_MESH_CALIBRATE\n{% endif %}\nG1 Z5 F3000\nG1 Z0.15 F300\n_PURGE_LINE', 'description': 'G-Code macro'}, 'gcode_macro print_end': {'gcode': '\nM400\nG92 E0\nG1 E-2.0 F300\nG91\nG1 Z10 F600\nG90\nG1 X0 Y300 F6000\nM104 S0\nM140 S0\nM106 S0\nM84\nSET_GCODE_OFFSET Z=0\nFIRMWARE_RESTART', 'description': 'G-Code macro'}, 'gcode_macro _purge_line': {'gcode': '\nSAVE_GCODE_STATE NAME=Pre_Prime\nG90\nG92 E0\nG1 Z10.0 F3000\nG1 X10 Y10\nG1 Z0.24 F5000.0\nG1 X100 Y10 Z0.24 F1500.0 E35\nG92 E0\nG1 Z10 F6000\nRESTORE_GCODE_STATE NAME=Pre_Prime', 'description': 'G-Code macro'}, 'gcode_macro led_on': {'gcode': 'SET_LED LED=my_neopixel RED=1 GREEN=1 BLUE=1', 'description': 'G-Code macro'}, 'gcode_macro led_off': {'gcode': 'SET_LED LED=my_neopixel RED=0 GREEN=0 BLUE=0', 'description': 'G-Code macro'}, 'gcode_macro pause': {'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - 2.0) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\nPAUSE_BASE\nG91\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG1 E-{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print', 'variable_extrude': '1.0'}, 'gcode_macro resume': {'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY) %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG91\nG1 E{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print'}, 'gcode_macro cancel_print': {'gcode': '\nTURN_OFF_HEATERS\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z4.5 F300\nG90\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}\nG28 X Y\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\nG1 Y{y_park} F2000\nM84\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro unload_filament': {'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=UNLOAD_state\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG91\nG0 Z{ z_safe_lift }\nG92 E0\nG1 E5.0 F300\nG1 E-50 F{ 10 * 60 }\nG1 E-50 F{ 5 * 60 }\nRESTORE_GCODE_STATE NAME=UNLOAD_state\n{% endif %}', 'description': 'Unloads Filament from extruder'}, 'gcode_macro load_filament': {'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=LOAD_state\nG91\nG1 E50 F{ 5 * 60 }\nG4 P{ 0.9 * 1000 }\nG1 E25.0 F{ 5 * 60 }\n_ENABLE_FS\nRESTORE_GCODE_STATE NAME=LOAD_state\n{% endif %}', 'description': 'Loads filament into the extruder'}, 'gcode_macro _enable_fs': {'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=1', 'description': 'enables filament sensor'}, 'gcode_macro _disable_fs': {'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=0', 'description': 'disables filament sensor'}, 'gcode_macro heat': {'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}\n{% set Z = params.Z|default(50)|float %}\n{% set X = params.X|default(110)|float %}\n{% set Y = params.Y|default(110)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X{X} Y{Y} F6000', 'description': 'Heats up the extruder'}, 'gcode_macro cool': {'gcode': '\nTURN_OFF_HEATERS', 'description': 'Turns off all heaters'}, 'gcode_macro preheat_pla': {'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(150)|float %}\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}', 'description': 'Preheats extruder and bed for PLA'}, 'gcode_macro bed_tramming_1': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nSCREWS_TILT_CALCULATE', 'description': 'Heats bed and starts screw leveling'}, 'gcode_macro bed_tramming_2': {'gcode': '\nSCREWS_TILT_CALCULATE', 'description': 'Continues bed screw leveling'}, 'gcode_macro bed_mesh': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nBED_MESH_CLEAR\nBED_MESH_CALIBRATE\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'Heats bed, makes a mesh, and saves it'}, 'gcode_macro disable_steppers': {'gcode': '\nM84 X Y E', 'description': 'Disables stepper motors'}, 'gcode_macro pid_extruder': {'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(200)|float %}\nPID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'PID Tune for Extruder'}, 'gcode_macro pid_bed': {'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %}\nPID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'PID Tune for Bed'}, 'gcode_macro nozzle_mid': {'gcode': '\n{% set Z = params.Z|default(10)|float %}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X110 Y110 F6000', 'description': 'Moves nozzle to bed center'}, 'gcode_macro home_check': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nG28\n{% endif %}', 'description': 'Checks if printer is homed'}, 'gcode_macro show_print': {'gcode': '\nHOME_CHECK\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG1 Z{ z_safe_lift }\nG1 X10 Y220 F4000', 'description': 'Moves extruder out of the way'}, 'gcode_macro zoffset_setup': {'gcode': '\n{% if printer.heater_bed.temperature > 70 %}\n{action_respond_info("Bed temperature too high")}\n{% elif printer.extruder.temperature > 290 %}\n{action_respond_info("Extruder temperature too high")}\n{% else %}\nG28\nPROBE_CALIBRATE\n{% endif %}', 'description': 'Starts Z-Offset Calibration'}, 'gcode_macro z_down_01': {'gcode': '\nTESTZ Z=-.1', 'description': 'Moves Z down by 0.1'}, 'gcode_macro z_up_01': {'gcode': '\nTESTZ Z=+.1', 'description': 'Moves Z up by 0.1'}, 'gcode_macro z_low_half': {'gcode': '\nTESTZ Z=-', 'description': 'Sets Z between current and previous lower'}, 'gcode_macro z_high_half': {'gcode': '\nTESTZ Z=+', 'description': 'Sets Z between current and previous higher'}, 'gcode_macro accept_save': {'gcode': '\nACCEPT\nSAVE_CONFIG', 'description': 'Accepts Z-Offset'}, 'gcode_macro abort_setup': {'gcode': '\nABORT', 'description': 'Aborts Z-Offset'}, 'gcode_macro g29': {'gcode': '\nG28\nbed_mesh_calibrate\nG1 X0 Y0 Z10 F4200', 'description': 'G-Code macro'}, 'gcode_macro quick_z_test': {'gcode': '\nG28\nG90\nG1 X150 Y150 Z5 F6000\nG1 Z1.0 F600', 'description': 'Move to center for manual Z adjustment'}, 'printer': {'max_velocity': 300.0, 'max_accel': 6000.0, 'max_accel_to_decel': 3000.0, 'square_corner_velocity': 5.0, 'kinematics': 'cartesian', 'max_z_velocity': 5.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': '!PB14', 'dir_pin': 'PB13', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB15', 'endstop_pin': '!PA2', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'PB10', 'dir_pin': 'PB2', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB12', 'endstop_pin': '!PA1', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'PB0', 'dir_pin': '!PC5', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB1', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -10.0, 'position_max': 400.0, 'homing_speed': 5.0, 'second_homing_speed': 2.5, 'homing_retract_speed': 5.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC0', 'min_temp': 0.0, 'max_temp': 250.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 22.533, 'pid_ki': 1.113, 'pid_kd': 114.073, 'heater_pin': 'PC9', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 50.0, 'max_extrude_only_velocity': 79.82432411074329, 'max_extrude_only_accel': 1596.4864822148659, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PA7', 'pressure_advance': 0.05, 'pressure_advance_smooth_time': 0.06, 'dir_pin': 'PA6', 'rotation_distance': 7.191, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PC4'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-08-25 01:40:26,405 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-08-25 01:40:26,406 [printer.py:reinit()] - Klipper version: v0.12.0-116-g31de734d
2025-08-25 01:40:26,406 [printer.py:reinit()] - # Extruders: 1
2025-08-25 01:40:26,406 [printer.py:reinit()] - # Temperature devices: 1
2025-08-25 01:40:26,406 [printer.py:reinit()] - # Fans: 3
2025-08-25 01:40:26,406 [printer.py:reinit()] - # Output pins: 0
2025-08-25 01:40:26,407 [printer.py:reinit()] - # Leds: 1
2025-08-25 01:40:26,423 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2025-08-25 01:40:26,426 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 01:40:26,691 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&controller_fan stepper_fan&heater_fan hotend_fan&neopixel my_neopixel
2025-08-25 01:40:26,694 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 01:40:26,694 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 01:40:26,695 [screen.py:init_klipper()] - Printer initialized
2025-08-25 01:40:26,695 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 01:40:26,696 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 01:40:26,701 [files.py:remove_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0xe41673b8>>
2025-08-25 01:40:26,701 [screen.py:show_panel()] - Reinitializing panel
2025-08-25 01:40:26,800 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 01:40:26,818 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 01:40:26,826 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 01:40:26,871 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 01:40:26,897 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2025-08-25 01:40:26,906 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 01:40:26,921 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2025-08-25 01:40:26,922 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 01:40:33,673 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-08-25 01:40:33,674 [printer.py:change_state()] - Adding callback for state: printing
2025-08-25 01:40:33,690 [files.py:remove_callback()] - callback not found <bound method Panel._callback_metadata of <panels.job_status.Panel object at 0xe41673b8>>
2025-08-25 01:40:33,690 [screen.py:show_panel()] - Reinitializing panel
2025-08-25 01:40:33,870 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-25 01:40:33,877 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-08-25 01:40:33,890 [job_status.py:update_file_metadata()] - Update Metadata. File: xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m22s.gcode Size: 604833
2025-08-25 01:40:33,904 [job_status.py:show_file_thumbnail()] - xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m22s.gcode
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        2025-08-25 01:41:13,088 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-08-25 01:41:13,096 [functions.py:log_start()] - KlipperScreen Version: v0.3.9-11-g2c778cce
2025-08-25 01:41:13,096 [functions.py:log_start()] - Python version: 3.9
2025-08-25 01:41:13,278 [config.py:get_config_file_location()] - Passed config (-c): .
2025-08-25 01:41:13,280 [config.py:__init__()] - Config path location: /home/sonic/KlipperScreen/ks_includes/defaults.conf
2025-08-25 01:41:13,293 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2025-08-25 01:41:13,424 [config.py:create_translations()] - Selected lang: None OS lang: en_US
2025-08-25 01:41:13,424 [config.py:install_language()] - Using lang en
2025-08-25 01:41:13,444 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-08-25 01:41:13,449 [screen.py:__init__()] - Screen resolution: 1024x600
2025-08-25 01:41:13,451 [KlippyGtk.py:__init__()] - Font size: 20.7 (medium)
2025-08-25 01:41:14,039 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2025-08-25 01:41:14,052 [screen.py:set_screenblanking_timeout()] - Using DPMS
2025-08-25 01:41:14,063 [screen.py:initial_connection()] - Default printer: None
2025-08-25 01:41:14,115 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-08-25 01:41:14,116 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-08-25 01:41:14,183 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 01:41:14,195 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-08-25 01:41:14,212 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-08-25 01:41:24,545 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-08-25 01:41:24,552 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-08-25 01:41:34,048 [screen.py:_go_to_submenu()] - #### Go to submenu 
2025-08-25 01:41:34,048 [screen.py:_go_to_submenu()] - #### Menu __splashscreen
2025-08-25 01:41:34,053 [screen.py:_load_panel()] - Loading panel: menu
2025-08-25 01:41:34,065 [menu.py:evaluate_enable()] - moonraker connected False
2025-08-25 01:41:34,126 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen > 
2025-08-25 01:41:34,131 [menu.py:arrangeMenuItems()] - X > power
2025-08-25 01:41:34,134 [menu.py:evaluate_enable()] - moonraker connected False
2025-08-25 01:41:34,134 [menu.py:arrangeMenuItems()] - X > system
2025-08-25 01:41:34,545 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-08-25 01:41:34,564 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2025-08-25 01:41:34,581 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/access/oneshot_token
2025-08-25 01:41:34,582 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-08-25 01:41:34,595 [_logging.py:info()] - Websocket connected
2025-08-25 01:41:34,596 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-08-25 01:41:34,610 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2025-08-25 01:41:34,628 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2025-08-25 01:41:34,629 [printer.py:configure_cameras()] - Cameras: []
2025-08-25 01:41:34,629 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-319-gf0ae517', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-08-25 01:41:34,644 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2025-08-25 01:41:34,862 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2025-08-25 01:41:34,864 [screen.py:init_klipper()] - {'configfile': {'config': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f401xc_12345-if00', 'restart_method': 'command'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '300', 'max_accel': '6000', 'square_corner_velocity': '5.0', 'max_z_velocity': '5', 'max_z_accel': '100'}, 'extruder': {'max_extrude_only_distance': '100.0', 'max_extrude_cross_section': '50.0', 'step_pin': 'PA7', 'dir_pin': 'PA6', 'enable_pin': '!PC4', 'microsteps': '16', 'rotation_distance': '7.1910', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'PC9', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'PC0', 'control': 'pid', 'pid_kp': '22.533', 'pid_ki': '1.113', 'pid_kd': '114.073', 'min_temp': '0', 'max_temp': '250', 'pressure_advance': '0.05', 'pressure_advance_smooth_time': '0.06'}, 'heater_bed': {'heater_pin': 'PA8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'PC1', 'control': 'pid', 'pid_kp': '45.986', 'pid_ki': '0.757', 'pid_kd': '698.409', 'min_temp': '0', 'max_temp': '130'}, 'fan': {'pin': 'PC8'}, 'heater_fan hotend_fan': {'pin': 'PC7', 'heater': 'extruder', 'heater_temp': '50.0'}, 'controller_fan stepper_fan': {'pin': 'PC6', 'idle_timeout': '300'}, 'stepper_x': {'step_pin': '!PB14', 'dir_pin': 'PB13', 'enable_pin': '!PB15', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '!PA2', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '50'}, 'stepper_y': {'step_pin': 'PB10', 'dir_pin': 'PB2', 'enable_pin': '!PB12', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '!PA1', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '50'}, 'stepper_z': {'step_pin': 'PB0', 'dir_pin': '!PC5', 'enable_pin': '!PB1', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_max': '400', 'position_min': '-10'}, 'bltouch': {'sensor_pin': 'PC2', 'control_pin': 'PC3', 'x_offset': '27.25', 'y_offset': '-12.8', 'z_offset': '0.1', 'speed': '10', 'samples': '3', 'samples_result': 'average'}, 'safe_z_home': {'home_xy_position': '150,150', 'speed': '100', 'z_hop': '10', 'z_hop_speed': '5'}, 'bed_mesh': {'speed': '100', 'mesh_min': '30, 20', 'mesh_max': '300, 290', 'algorithm': 'bicubic', 'probe_count': '7,7', 'mesh_pps': '2,3'}, 'screws_tilt_adjust': {'screw1': '23,63', 'screw1_name': 'front left', 'screw2': '223,63', 'screw2_name': 'front right', 'screw3': '223,263', 'screw3_name': 'back right', 'screw4': '23,263', 'screw4_name': 'back left', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'neopixel my_neopixel': {'pin': 'PB7', 'color_order': 'GRB', 'initial_red': '0.0', 'initial_green': '0.0', 'initial_blue': '0.0'}, 'input_shaper': {'shaper_freq_x': '43.26', 'shaper_freq_y': '45.28', 'shaper_type': 'mzv'}, 'virtual_sdcard': {'path': '/home/sonic/printer_data/gcodes'}, 'display_status': {}, 'pause_resume': {}, 'exclude_object': {}, 'idle_timeout': {'timeout': '86400'}, 'gcode_macro PRINT_START': {'gcode': '\nG90\nG28\nLED_ON\nSET_GCODE_OFFSET Z_ADJUST=-2.080 MOVE=1\nBED_MESH_CLEAR\n{% if printer.exclude_object.objects|length > 0 %}\n{% set min_x = printer.exclude_object.objects[0].polygon[0][0] %}\n{% set min_y = printer.exclude_object.objects[0].polygon[0][1] %}\n{% set max_x = min_x %}\n{% set max_y = min_y %}\n{% for obj in printer.exclude_object.objects %}\n{% for p in obj.polygon %}\n{% set min_x = [min_x, p[0]]|min %}\n{% set min_y = [min_y, p[1]]|min %}\n{% set max_x = [max_x, p[0]]|max %}\n{% set max_y = [max_y, p[1]]|max %}\n{% endfor %}\n{% endfor %}\n{% set min_x = min_x - 5 %}\n{% set min_y = min_y - 5 %}\n{% set max_x = max_x + 5 %}\n{% set max_y = max_y + 5 %}\nBED_MESH_CALIBRATE AREA_START={min_x},{min_y} AREA_END={max_x},{max_y}\n{% else %}\nBED_MESH_CALIBRATE\n{% endif %}\nG1 Z5 F3000\nG1 Z0.15 F300\n_PURGE_LINE'}, 'gcode_macro PRINT_END': {'gcode': '\nM400\nG92 E0\nG1 E-2.0 F300\nG91\nG1 Z10 F600\nG90\nG1 X0 Y300 F6000\nM104 S0\nM140 S0\nM106 S0\nM84\nSET_GCODE_OFFSET Z=0\nFIRMWARE_RESTART'}, 'gcode_macro _PURGE_LINE': {'gcode': '\nSAVE_GCODE_STATE NAME=Pre_Prime\nG90\nG92 E0\nG1 Z10.0 F3000\nG1 X10 Y10\nG1 Z0.24 F5000.0\nG1 X100 Y10 Z0.24 F1500.0 E35\nG92 E0\nG1 Z10 F6000\nRESTORE_GCODE_STATE NAME=Pre_Prime'}, 'gcode_macro LED_ON': {'gcode': 'SET_LED LED=my_neopixel RED=1 GREEN=1 BLUE=1'}, 'gcode_macro LED_OFF': {'gcode': 'SET_LED LED=my_neopixel RED=0 GREEN=0 BLUE=0'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'variable_extrude': '1.0', 'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - 2.0) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\nPAUSE_BASE\nG91\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG1 E-{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY) %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG91\nG1 E{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}'}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\nTURN_OFF_HEATERS\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z4.5 F300\nG90\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}\nG28 X Y\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\nG1 Y{y_park} F2000\nM84\nCANCEL_PRINT_BASE'}, 'gcode_macro UNLOAD_FILAMENT': {'description': 'Unloads Filament from extruder', 'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=UNLOAD_state\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG91\nG0 Z{ z_safe_lift }\nG92 E0\nG1 E5.0 F300\nG1 E-50 F{ 10 * 60 }\nG1 E-50 F{ 5 * 60 }\nRESTORE_GCODE_STATE NAME=UNLOAD_state\n{% endif %}'}, 'gcode_macro LOAD_FILAMENT': {'description': 'Loads filament into the extruder', 'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=LOAD_state\nG91\nG1 E50 F{ 5 * 60 }\nG4 P{ 0.9 * 1000 }\nG1 E25.0 F{ 5 * 60 }\n_ENABLE_FS\nRESTORE_GCODE_STATE NAME=LOAD_state\n{% endif %}'}, 'gcode_macro _ENABLE_FS': {'description': 'enables filament sensor', 'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=1'}, 'gcode_macro _DISABLE_FS': {'description': 'disables filament sensor', 'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=0'}, 'gcode_macro HEAT': {'description': 'Heats up the extruder', 'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}\n{% set Z = params.Z|default(50)|float %}\n{% set X = params.X|default(110)|float %}\n{% set Y = params.Y|default(110)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X{X} Y{Y} F6000'}, 'gcode_macro COOL': {'description': 'Turns off all heaters', 'gcode': '\nTURN_OFF_HEATERS'}, 'gcode_macro PREHEAT_PLA': {'description': 'Preheats extruder and bed for PLA', 'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(150)|float %}\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}'}, 'gcode_macro BED_TRAMMING_1': {'description': 'Heats bed and starts screw leveling', 'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nSCREWS_TILT_CALCULATE'}, 'gcode_macro BED_TRAMMING_2': {'description': 'Continues bed screw leveling', 'gcode': '\nSCREWS_TILT_CALCULATE'}, 'gcode_macro BED_MESH': {'description': 'Heats bed, makes a mesh, and saves it', 'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nBED_MESH_CLEAR\nBED_MESH_CALIBRATE\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro DISABLE_STEPPERS': {'description': 'Disables stepper motors', 'gcode': '\nM84 X Y E'}, 'gcode_macro PID_EXTRUDER': {'description': 'PID Tune for Extruder', 'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(200)|float %}\nPID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro PID_BED': {'description': 'PID Tune for Bed', 'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %}\nPID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro NOZZLE_MID': {'description': 'Moves nozzle to bed center', 'gcode': '\n{% set Z = params.Z|default(10)|float %}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X110 Y110 F6000'}, 'gcode_macro home_check': {'description': 'Checks if printer is homed', 'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nG28\n{% endif %}'}, 'gcode_macro SHOW_PRINT': {'description': 'Moves extruder out of the way', 'gcode': '\nHOME_CHECK\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG1 Z{ z_safe_lift }\nG1 X10 Y220 F4000'}, 'gcode_macro ZOffset_Setup': {'description': 'Starts Z-Offset Calibration', 'gcode': '\n{% if printer.heater_bed.temperature > 70 %}\n{action_respond_info("Bed temperature too high")}\n{% elif printer.extruder.temperature > 290 %}\n{action_respond_info("Extruder temperature too high")}\n{% else %}\nG28\nPROBE_CALIBRATE\n{% endif %}'}, 'gcode_macro Z_Down_01': {'description': 'Moves Z down by 0.1', 'gcode': '\nTESTZ Z=-.1'}, 'gcode_macro Z_Up_01': {'description': 'Moves Z up by 0.1', 'gcode': '\nTESTZ Z=+.1'}, 'gcode_macro Z_Low_Half': {'description': 'Sets Z between current and previous lower', 'gcode': '\nTESTZ Z=-'}, 'gcode_macro Z_High_Half': {'description': 'Sets Z between current and previous higher', 'gcode': '\nTESTZ Z=+'}, 'gcode_macro Accept_Save': {'description': 'Accepts Z-Offset', 'gcode': '\nACCEPT\nSAVE_CONFIG'}, 'gcode_macro Abort_Setup': {'description': 'Aborts Z-Offset', 'gcode': '\nABORT'}, 'gcode_macro G29': {'gcode': '\nG28\nbed_mesh_calibrate\nG1 X0 Y0 Z10 F4200'}, 'gcode_macro QUICK_Z_TEST': {'description': 'Move to center for manual Z adjustment', 'gcode': '\nG28\nG90\nG1 X150 Y150 Z5 F6000\nG1 Z1.0 F600'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f401xc_12345-if00', 'baud': 250000, 'restart_method': 'command', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC1', 'min_temp': 0.0, 'max_temp': 130.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 45.986, 'pid_ki': 0.757, 'pid_kd': 698.409, 'heater_pin': 'PA8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PC8'}, 'heater_fan hotend_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'PC7', 'fan_speed': 1.0}, 'controller_fan stepper_fan': {'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PC6', 'fan_speed': 1.0, 'idle_speed': 1.0, 'idle_timeout': 300, 'heater': ['extruder']}, 'bltouch': {'z_offset': 0.1, 'stow_on_each_sample': True, 'probe_with_touch_mode': False, 'control_pin': 'PC3', 'sensor_pin': 'PC2', 'pin_up_reports_not_triggered': True, 'pin_up_touch_mode_reports_triggered': True, 'pin_move_time': 0.68, 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 27.25, 'y_offset': -12.8, 'samples': 3, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [150.0, 150.0], 'z_hop': 10.0, 'z_hop_speed': 5.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'adaptive_margin': 0.0, 'probe_count': [7, 7], 'mesh_min': [30.0, 20.0], 'mesh_max': [300.0, 290.0], 'mesh_pps': [2, 3], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 100.0, 'fade_start': 1.0, 'fade_end': 0.0, 'split_delta_z': 0.025, 'move_check_distance': 5.0}, 'screws_tilt_adjust': {'screw1': [23.0, 63.0], 'screw1_name': 'front left', 'screw2': [223.0, 63.0], 'screw2_name': 'front right', 'screw3': [223.0, 263.0], 'screw3_name': 'back right', 'screw4': [23.0, 263.0], 'screw4_name': 'back left', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'neopixel my_neopixel': {'pin': 'PB7', 'chain_count': 1, 'color_order': ['GRB'], 'initial_red': 0.0, 'initial_green': 0.0, 'initial_blue': 0.0, 'initial_white': 0.0}, 'input_shaper': {'shaper_type': 'mzv', 'shaper_type_x': 'mzv', 'damping_ratio_x': 0.1, 'shaper_freq_x': 43.26, 'shaper_type_y': 'mzv', 'damping_ratio_y': 0.1, 'shaper_freq_y': 45.28}, 'virtual_sdcard': {'path': '/home/sonic/printer_data/gcodes', 'on_error_gcode': ''}, 'pause_resume': {'recover_velocity': 50.0}, 'idle_timeout': {'timeout': 86400.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'gcode_macro print_start': {'gcode': '\nG90\nG28\nLED_ON\nSET_GCODE_OFFSET Z_ADJUST=-2.080 MOVE=1\nBED_MESH_CLEAR\n{% if printer.exclude_object.objects|length > 0 %}\n{% set min_x = printer.exclude_object.objects[0].polygon[0][0] %}\n{% set min_y = printer.exclude_object.objects[0].polygon[0][1] %}\n{% set max_x = min_x %}\n{% set max_y = min_y %}\n{% for obj in printer.exclude_object.objects %}\n{% for p in obj.polygon %}\n{% set min_x = [min_x, p[0]]|min %}\n{% set min_y = [min_y, p[1]]|min %}\n{% set max_x = [max_x, p[0]]|max %}\n{% set max_y = [max_y, p[1]]|max %}\n{% endfor %}\n{% endfor %}\n{% set min_x = min_x - 5 %}\n{% set min_y = min_y - 5 %}\n{% set max_x = max_x + 5 %}\n{% set max_y = max_y + 5 %}\nBED_MESH_CALIBRATE AREA_START={min_x},{min_y} AREA_END={max_x},{max_y}\n{% else %}\nBED_MESH_CALIBRATE\n{% endif %}\nG1 Z5 F3000\nG1 Z0.15 F300\n_PURGE_LINE', 'description': 'G-Code macro'}, 'gcode_macro print_end': {'gcode': '\nM400\nG92 E0\nG1 E-2.0 F300\nG91\nG1 Z10 F600\nG90\nG1 X0 Y300 F6000\nM104 S0\nM140 S0\nM106 S0\nM84\nSET_GCODE_OFFSET Z=0\nFIRMWARE_RESTART', 'description': 'G-Code macro'}, 'gcode_macro _purge_line': {'gcode': '\nSAVE_GCODE_STATE NAME=Pre_Prime\nG90\nG92 E0\nG1 Z10.0 F3000\nG1 X10 Y10\nG1 Z0.24 F5000.0\nG1 X100 Y10 Z0.24 F1500.0 E35\nG92 E0\nG1 Z10 F6000\nRESTORE_GCODE_STATE NAME=Pre_Prime', 'description': 'G-Code macro'}, 'gcode_macro led_on': {'gcode': 'SET_LED LED=my_neopixel RED=1 GREEN=1 BLUE=1', 'description': 'G-Code macro'}, 'gcode_macro led_off': {'gcode': 'SET_LED LED=my_neopixel RED=0 GREEN=0 BLUE=0', 'description': 'G-Code macro'}, 'gcode_macro pause': {'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - 2.0) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\nPAUSE_BASE\nG91\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG1 E-{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print', 'variable_extrude': '1.0'}, 'gcode_macro resume': {'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY) %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG91\nG1 E{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print'}, 'gcode_macro cancel_print': {'gcode': '\nTURN_OFF_HEATERS\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z4.5 F300\nG90\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}\nG28 X Y\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\nG1 Y{y_park} F2000\nM84\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro unload_filament': {'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=UNLOAD_state\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG91\nG0 Z{ z_safe_lift }\nG92 E0\nG1 E5.0 F300\nG1 E-50 F{ 10 * 60 }\nG1 E-50 F{ 5 * 60 }\nRESTORE_GCODE_STATE NAME=UNLOAD_state\n{% endif %}', 'description': 'Unloads Filament from extruder'}, 'gcode_macro load_filament': {'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=LOAD_state\nG91\nG1 E50 F{ 5 * 60 }\nG4 P{ 0.9 * 1000 }\nG1 E25.0 F{ 5 * 60 }\n_ENABLE_FS\nRESTORE_GCODE_STATE NAME=LOAD_state\n{% endif %}', 'description': 'Loads filament into the extruder'}, 'gcode_macro _enable_fs': {'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=1', 'description': 'enables filament sensor'}, 'gcode_macro _disable_fs': {'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=0', 'description': 'disables filament sensor'}, 'gcode_macro heat': {'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}\n{% set Z = params.Z|default(50)|float %}\n{% set X = params.X|default(110)|float %}\n{% set Y = params.Y|default(110)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X{X} Y{Y} F6000', 'description': 'Heats up the extruder'}, 'gcode_macro cool': {'gcode': '\nTURN_OFF_HEATERS', 'description': 'Turns off all heaters'}, 'gcode_macro preheat_pla': {'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(150)|float %}\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}', 'description': 'Preheats extruder and bed for PLA'}, 'gcode_macro bed_tramming_1': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nSCREWS_TILT_CALCULATE', 'description': 'Heats bed and starts screw leveling'}, 'gcode_macro bed_tramming_2': {'gcode': '\nSCREWS_TILT_CALCULATE', 'description': 'Continues bed screw leveling'}, 'gcode_macro bed_mesh': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nBED_MESH_CLEAR\nBED_MESH_CALIBRATE\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'Heats bed, makes a mesh, and saves it'}, 'gcode_macro disable_steppers': {'gcode': '\nM84 X Y E', 'description': 'Disables stepper motors'}, 'gcode_macro pid_extruder': {'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(200)|float %}\nPID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'PID Tune for Extruder'}, 'gcode_macro pid_bed': {'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %}\nPID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'PID Tune for Bed'}, 'gcode_macro nozzle_mid': {'gcode': '\n{% set Z = params.Z|default(10)|float %}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X110 Y110 F6000', 'description': 'Moves nozzle to bed center'}, 'gcode_macro home_check': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nG28\n{% endif %}', 'description': 'Checks if printer is homed'}, 'gcode_macro show_print': {'gcode': '\nHOME_CHECK\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG1 Z{ z_safe_lift }\nG1 X10 Y220 F4000', 'description': 'Moves extruder out of the way'}, 'gcode_macro zoffset_setup': {'gcode': '\n{% if printer.heater_bed.temperature > 70 %}\n{action_respond_info("Bed temperature too high")}\n{% elif printer.extruder.temperature > 290 %}\n{action_respond_info("Extruder temperature too high")}\n{% else %}\nG28\nPROBE_CALIBRATE\n{% endif %}', 'description': 'Starts Z-Offset Calibration'}, 'gcode_macro z_down_01': {'gcode': '\nTESTZ Z=-.1', 'description': 'Moves Z down by 0.1'}, 'gcode_macro z_up_01': {'gcode': '\nTESTZ Z=+.1', 'description': 'Moves Z up by 0.1'}, 'gcode_macro z_low_half': {'gcode': '\nTESTZ Z=-', 'description': 'Sets Z between current and previous lower'}, 'gcode_macro z_high_half': {'gcode': '\nTESTZ Z=+', 'description': 'Sets Z between current and previous higher'}, 'gcode_macro accept_save': {'gcode': '\nACCEPT\nSAVE_CONFIG', 'description': 'Accepts Z-Offset'}, 'gcode_macro abort_setup': {'gcode': '\nABORT', 'description': 'Aborts Z-Offset'}, 'gcode_macro g29': {'gcode': '\nG28\nbed_mesh_calibrate\nG1 X0 Y0 Z10 F4200', 'description': 'G-Code macro'}, 'gcode_macro quick_z_test': {'gcode': '\nG28\nG90\nG1 X150 Y150 Z5 F6000\nG1 Z1.0 F600', 'description': 'Move to center for manual Z adjustment'}, 'printer': {'max_velocity': 300.0, 'max_accel': 6000.0, 'max_accel_to_decel': 3000.0, 'square_corner_velocity': 5.0, 'kinematics': 'cartesian', 'max_z_velocity': 5.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': '!PB14', 'dir_pin': 'PB13', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB15', 'endstop_pin': '!PA2', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'PB10', 'dir_pin': 'PB2', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB12', 'endstop_pin': '!PA1', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'PB0', 'dir_pin': '!PC5', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB1', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -10.0, 'position_max': 400.0, 'homing_speed': 5.0, 'second_homing_speed': 2.5, 'homing_retract_speed': 5.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC0', 'min_temp': 0.0, 'max_temp': 250.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 22.533, 'pid_ki': 1.113, 'pid_kd': 114.073, 'heater_pin': 'PC9', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 50.0, 'max_extrude_only_velocity': 79.82432411074329, 'max_extrude_only_accel': 1596.4864822148659, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PA7', 'pressure_advance': 0.05, 'pressure_advance_smooth_time': 0.06, 'dir_pin': 'PA6', 'rotation_distance': 7.191, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PC4'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-08-25 01:41:34,866 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-08-25 01:41:34,867 [printer.py:reinit()] - Klipper version: v0.12.0-116-g31de734d1
2025-08-25 01:41:34,867 [printer.py:reinit()] - # Extruders: 1
2025-08-25 01:41:34,867 [printer.py:reinit()] - # Temperature devices: 1
2025-08-25 01:41:34,867 [printer.py:reinit()] - # Fans: 3
2025-08-25 01:41:34,868 [printer.py:reinit()] - # Output pins: 0
2025-08-25 01:41:34,868 [printer.py:reinit()] - # Leds: 1
2025-08-25 01:41:34,884 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2025-08-25 01:41:34,887 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 01:41:35,116 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&controller_fan stepper_fan&heater_fan hotend_fan&neopixel my_neopixel
2025-08-25 01:41:35,119 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 01:41:35,119 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 01:41:35,120 [screen.py:init_klipper()] - Printer initialized
2025-08-25 01:41:35,121 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 01:41:35,121 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 01:41:35,126 [screen.py:_load_panel()] - Loading panel: network
2025-08-25 01:41:35,160 [network.py:__init__()] - Found wireless interfaces: ['wlan0']
2025-08-25 01:41:35,161 [network.py:__init__()] - Using NetworkManager
2025-08-25 01:41:35,417 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen >  > network
2025-08-25 01:41:35,450 [screen.py:_load_panel()] - Loading panel: main_menu
2025-08-25 01:41:35,550 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 01:41:35,564 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 01:41:35,572 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 01:41:35,656 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 01:41:35,669 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2025-08-25 01:41:35,687 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 01:41:35,701 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2025-08-25 01:41:35,702 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 01:41:35,727 [functions.py:logging_exception_handler()] - Uncaught exception <class 'KeyError'>: 'NETGEAR19'
  File "/home/sonic/KlipperScreen/panels/network.py", line 101, in load_networks
    self.add_network(net, False)

  File "/home/sonic/KlipperScreen/panels/network.py", line 123, in add_network
    netinfo = self.wifi.get_network_info(ssid)

  File "/home/sonic/KlipperScreen/ks_includes/wifi_nm.py", line 224, in get_network_info
    path = self.path_by_ssid[ssid]
NoneType: None
2025-08-25 01:41:35,735 [functions.py:logging_exception_handler()] - Uncaught exception <class 'KeyError'>: 'NETGEAR19'
  File "/home/sonic/KlipperScreen/panels/network.py", line 101, in load_networks
    self.add_network(net, False)

  File "/home/sonic/KlipperScreen/panels/network.py", line 123, in add_network
    netinfo = self.wifi.get_network_info(ssid)

  File "/home/sonic/KlipperScreen/ks_includes/wifi_nm.py", line 224, in get_network_info
    path = self.path_by_ssid[ssid]
NoneType: None
2025-08-25 01:41:38,813 [network.py:connected_callback()] - Now connected to a new network
2025-08-25 01:42:33,833 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-25 01:42:33,833 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-25 01:42:33,834 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-25 01:42:33,835 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-08-25 01:42:33,837 [screen.py:show_panel()] - Reinitializing panel
2025-08-25 01:42:33,897 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 01:42:37,320 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2025-08-25 01:42:37,333 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2025-08-25 01:42:37,334 [printer.py:configure_cameras()] - Cameras: []
2025-08-25 01:42:37,335 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-319-gf0ae517', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-08-25 01:42:37,349 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2025-08-25 01:42:37,486 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2025-08-25 01:42:37,489 [screen.py:init_klipper()] - {'configfile': {'config': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f401xc_12345-if00', 'restart_method': 'command'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '300', 'max_accel': '6000', 'square_corner_velocity': '5.0', 'max_z_velocity': '5', 'max_z_accel': '100'}, 'extruder': {'max_extrude_only_distance': '100.0', 'max_extrude_cross_section': '50.0', 'step_pin': 'PA7', 'dir_pin': 'PA6', 'enable_pin': '!PC4', 'microsteps': '16', 'rotation_distance': '7.1910', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'PC9', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'PC0', 'control': 'pid', 'pid_kp': '22.533', 'pid_ki': '1.113', 'pid_kd': '114.073', 'min_temp': '0', 'max_temp': '250', 'pressure_advance': '0.05', 'pressure_advance_smooth_time': '0.06'}, 'heater_bed': {'heater_pin': 'PA8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'PC1', 'control': 'pid', 'pid_kp': '45.986', 'pid_ki': '0.757', 'pid_kd': '698.409', 'min_temp': '0', 'max_temp': '130'}, 'fan': {'pin': 'PC8'}, 'heater_fan hotend_fan': {'pin': 'PC7', 'heater': 'extruder', 'heater_temp': '50.0'}, 'controller_fan stepper_fan': {'pin': 'PC6', 'idle_timeout': '300'}, 'stepper_x': {'step_pin': '!PB14', 'dir_pin': 'PB13', 'enable_pin': '!PB15', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '!PA2', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '50'}, 'stepper_y': {'step_pin': 'PB10', 'dir_pin': 'PB2', 'enable_pin': '!PB12', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '!PA1', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '50'}, 'stepper_z': {'step_pin': 'PB0', 'dir_pin': '!PC5', 'enable_pin': '!PB1', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_max': '400', 'position_min': '-10'}, 'bltouch': {'sensor_pin': 'PC2', 'control_pin': 'PC3', 'x_offset': '27.25', 'y_offset': '-12.8', 'z_offset': '0.1', 'speed': '10', 'samples': '3', 'samples_result': 'average'}, 'safe_z_home': {'home_xy_position': '150,150', 'speed': '100', 'z_hop': '10', 'z_hop_speed': '5'}, 'bed_mesh': {'speed': '100', 'mesh_min': '30, 20', 'mesh_max': '300, 290', 'algorithm': 'bicubic', 'probe_count': '7,7', 'mesh_pps': '2,3'}, 'screws_tilt_adjust': {'screw1': '23,63', 'screw1_name': 'front left', 'screw2': '223,63', 'screw2_name': 'front right', 'screw3': '223,263', 'screw3_name': 'back right', 'screw4': '23,263', 'screw4_name': 'back left', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'neopixel my_neopixel': {'pin': 'PB7', 'color_order': 'GRB', 'initial_red': '0.0', 'initial_green': '0.0', 'initial_blue': '0.0'}, 'input_shaper': {'shaper_freq_x': '43.26', 'shaper_freq_y': '45.28', 'shaper_type': 'mzv'}, 'virtual_sdcard': {'path': '/home/sonic/printer_data/gcodes'}, 'display_status': {}, 'pause_resume': {}, 'exclude_object': {}, 'idle_timeout': {'timeout': '86400'}, 'gcode_macro PRINT_START': {'gcode': '\nG90\nG28\nLED_ON\nSET_GCODE_OFFSET Z_ADJUST=-2.185 MOVE=1\nBED_MESH_CLEAR\n{% if printer.exclude_object.objects|length > 0 %}\n{% set min_x = 9999 %}\n{% set min_y = 9999 %}\n{% set max_x = 0 %}\n{% set max_y = 0 %}\n{% for obj in printer.exclude_object.objects %}\n{% for p in obj.polygon %}\n{% set min_x = [min_x, p[0]]|min %}\n{% set min_y = [min_y, p[1]]|min %}\n{% set max_x = [max_x, p[0]]|max %}\n{% set max_y = [max_y, p[1]]|max %}\n{% endfor %}\n{% endfor %}\n{% set min_x = min_x - 2 %}\n{% set min_y = min_y - 2 %}\n{% set max_x = max_x + 2 %}\n{% set max_y = max_y + 2 %}\nBED_MESH_CALIBRATE AREA_START={min_x},{min_y} AREA_END={max_x},{max_y}\n{% else %}\nBED_MESH_CALIBRATE\n{% endif %}\nG1 Z5 F3000\nG1 Z0.2 F300\n_PURGE_LINE'}, 'gcode_macro PRINT_END': {'gcode': '\nM400\nG92 E0\nG1 E-2.0 F300\nG91\nG1 Z10 F600\nG90\nG1 X0 Y300 F6000\nM104 S0\nM140 S0\nM106 S0\nM84\nSET_GCODE_OFFSET Z=0\nFIRMWARE_RESTART'}, 'gcode_macro _PURGE_LINE': {'gcode': '\nSAVE_GCODE_STATE NAME=Pre_Prime\nG90\nG92 E0\nG1 Z10.0 F3000\nG1 X10 Y10\nG1 Z0.24 F5000.0\nG1 X100 Y10 Z0.24 F1500.0 E35\nG92 E0\nG1 Z10 F6000\nRESTORE_GCODE_STATE NAME=Pre_Prime'}, 'gcode_macro LED_ON': {'gcode': 'SET_LED LED=my_neopixel RED=1 GREEN=1 BLUE=1'}, 'gcode_macro LED_OFF': {'gcode': 'SET_LED LED=my_neopixel RED=0 GREEN=0 BLUE=0'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'variable_extrude': '1.0', 'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - 2.0) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\nPAUSE_BASE\nG91\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG1 E-{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY) %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG91\nG1 E{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}'}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\nTURN_OFF_HEATERS\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z4.5 F300\nG90\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}\nG28 X Y\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\nG1 Y{y_park} F2000\nM84\nCANCEL_PRINT_BASE'}, 'gcode_macro UNLOAD_FILAMENT': {'description': 'Unloads Filament from extruder', 'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=UNLOAD_state\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG91\nG0 Z{ z_safe_lift }\nG92 E0\nG1 E5.0 F300\nG1 E-50 F{ 10 * 60 }\nG1 E-50 F{ 5 * 60 }\nRESTORE_GCODE_STATE NAME=UNLOAD_state\n{% endif %}'}, 'gcode_macro LOAD_FILAMENT': {'description': 'Loads filament into the extruder', 'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=LOAD_state\nG91\nG1 E50 F{ 5 * 60 }\nG4 P{ 0.9 * 1000 }\nG1 E25.0 F{ 5 * 60 }\n_ENABLE_FS\nRESTORE_GCODE_STATE NAME=LOAD_state\n{% endif %}'}, 'gcode_macro _ENABLE_FS': {'description': 'enables filament sensor', 'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=1'}, 'gcode_macro _DISABLE_FS': {'description': 'disables filament sensor', 'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=0'}, 'gcode_macro HEAT': {'description': 'Heats up the extruder', 'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}\n{% set Z = params.Z|default(50)|float %}\n{% set X = params.X|default(110)|float %}\n{% set Y = params.Y|default(110)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X{X} Y{Y} F6000'}, 'gcode_macro COOL': {'description': 'Turns off all heaters', 'gcode': '\nTURN_OFF_HEATERS'}, 'gcode_macro PREHEAT_PLA': {'description': 'Preheats extruder and bed for PLA', 'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(150)|float %}\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}'}, 'gcode_macro BED_TRAMMING_1': {'description': 'Heats bed and starts screw leveling', 'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nSCREWS_TILT_CALCULATE'}, 'gcode_macro BED_TRAMMING_2': {'description': 'Continues bed screw leveling', 'gcode': '\nSCREWS_TILT_CALCULATE'}, 'gcode_macro BED_MESH': {'description': 'Heats bed, makes a mesh, and saves it', 'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nBED_MESH_CLEAR\nBED_MESH_CALIBRATE\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro DISABLE_STEPPERS': {'description': 'Disables stepper motors', 'gcode': '\nM84 X Y E'}, 'gcode_macro PID_EXTRUDER': {'description': 'PID Tune for Extruder', 'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(200)|float %}\nPID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro PID_BED': {'description': 'PID Tune for Bed', 'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %}\nPID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro NOZZLE_MID': {'description': 'Moves nozzle to bed center', 'gcode': '\n{% set Z = params.Z|default(10)|float %}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X110 Y110 F6000'}, 'gcode_macro home_check': {'description': 'Checks if printer is homed', 'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nG28\n{% endif %}'}, 'gcode_macro SHOW_PRINT': {'description': 'Moves extruder out of the way', 'gcode': '\nHOME_CHECK\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG1 Z{ z_safe_lift }\nG1 X10 Y220 F4000'}, 'gcode_macro ZOffset_Setup': {'description': 'Starts Z-Offset Calibration', 'gcode': '\n{% if printer.heater_bed.temperature > 70 %}\n{action_respond_info("Bed temperature too high")}\n{% elif printer.extruder.temperature > 290 %}\n{action_respond_info("Extruder temperature too high")}\n{% else %}\nG28\nPROBE_CALIBRATE\n{% endif %}'}, 'gcode_macro Z_Down_01': {'description': 'Moves Z down by 0.1', 'gcode': '\nTESTZ Z=-.1'}, 'gcode_macro Z_Up_01': {'description': 'Moves Z up by 0.1', 'gcode': '\nTESTZ Z=+.1'}, 'gcode_macro Z_Low_Half': {'description': 'Sets Z between current and previous lower', 'gcode': '\nTESTZ Z=-'}, 'gcode_macro Z_High_Half': {'description': 'Sets Z between current and previous higher', 'gcode': '\nTESTZ Z=+'}, 'gcode_macro Accept_Save': {'description': 'Accepts Z-Offset', 'gcode': '\nACCEPT\nSAVE_CONFIG'}, 'gcode_macro Abort_Setup': {'description': 'Aborts Z-Offset', 'gcode': '\nABORT'}, 'gcode_macro G29': {'gcode': '\nG28\nbed_mesh_calibrate\nG1 X0 Y0 Z10 F4200'}, 'gcode_macro QUICK_Z_TEST': {'description': 'Move to center for manual Z adjustment', 'gcode': '\nG28\nG90\nG1 X150 Y150 Z5 F6000\nG1 Z1.0 F600'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f401xc_12345-if00', 'baud': 250000, 'restart_method': 'command', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC1', 'min_temp': 0.0, 'max_temp': 130.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 45.986, 'pid_ki': 0.757, 'pid_kd': 698.409, 'heater_pin': 'PA8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PC8'}, 'heater_fan hotend_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'PC7', 'fan_speed': 1.0}, 'controller_fan stepper_fan': {'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PC6', 'fan_speed': 1.0, 'idle_speed': 1.0, 'idle_timeout': 300, 'heater': ['extruder']}, 'bltouch': {'z_offset': 0.1, 'stow_on_each_sample': True, 'probe_with_touch_mode': False, 'control_pin': 'PC3', 'sensor_pin': 'PC2', 'pin_up_reports_not_triggered': True, 'pin_up_touch_mode_reports_triggered': True, 'pin_move_time': 0.68, 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 27.25, 'y_offset': -12.8, 'samples': 3, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [150.0, 150.0], 'z_hop': 10.0, 'z_hop_speed': 5.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'adaptive_margin': 0.0, 'probe_count': [7, 7], 'mesh_min': [30.0, 20.0], 'mesh_max': [300.0, 290.0], 'mesh_pps': [2, 3], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 100.0, 'fade_start': 1.0, 'fade_end': 0.0, 'split_delta_z': 0.025, 'move_check_distance': 5.0}, 'screws_tilt_adjust': {'screw1': [23.0, 63.0], 'screw1_name': 'front left', 'screw2': [223.0, 63.0], 'screw2_name': 'front right', 'screw3': [223.0, 263.0], 'screw3_name': 'back right', 'screw4': [23.0, 263.0], 'screw4_name': 'back left', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'neopixel my_neopixel': {'pin': 'PB7', 'chain_count': 1, 'color_order': ['GRB'], 'initial_red': 0.0, 'initial_green': 0.0, 'initial_blue': 0.0, 'initial_white': 0.0}, 'input_shaper': {'shaper_type': 'mzv', 'shaper_type_x': 'mzv', 'damping_ratio_x': 0.1, 'shaper_freq_x': 43.26, 'shaper_type_y': 'mzv', 'damping_ratio_y': 0.1, 'shaper_freq_y': 45.28}, 'virtual_sdcard': {'path': '/home/sonic/printer_data/gcodes', 'on_error_gcode': ''}, 'pause_resume': {'recover_velocity': 50.0}, 'idle_timeout': {'timeout': 86400.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'gcode_macro print_start': {'gcode': '\nG90\nG28\nLED_ON\nSET_GCODE_OFFSET Z_ADJUST=-2.185 MOVE=1\nBED_MESH_CLEAR\n{% if printer.exclude_object.objects|length > 0 %}\n{% set min_x = 9999 %}\n{% set min_y = 9999 %}\n{% set max_x = 0 %}\n{% set max_y = 0 %}\n{% for obj in printer.exclude_object.objects %}\n{% for p in obj.polygon %}\n{% set min_x = [min_x, p[0]]|min %}\n{% set min_y = [min_y, p[1]]|min %}\n{% set max_x = [max_x, p[0]]|max %}\n{% set max_y = [max_y, p[1]]|max %}\n{% endfor %}\n{% endfor %}\n{% set min_x = min_x - 2 %}\n{% set min_y = min_y - 2 %}\n{% set max_x = max_x + 2 %}\n{% set max_y = max_y + 2 %}\nBED_MESH_CALIBRATE AREA_START={min_x},{min_y} AREA_END={max_x},{max_y}\n{% else %}\nBED_MESH_CALIBRATE\n{% endif %}\nG1 Z5 F3000\nG1 Z0.2 F300\n_PURGE_LINE', 'description': 'G-Code macro'}, 'gcode_macro print_end': {'gcode': '\nM400\nG92 E0\nG1 E-2.0 F300\nG91\nG1 Z10 F600\nG90\nG1 X0 Y300 F6000\nM104 S0\nM140 S0\nM106 S0\nM84\nSET_GCODE_OFFSET Z=0\nFIRMWARE_RESTART', 'description': 'G-Code macro'}, 'gcode_macro _purge_line': {'gcode': '\nSAVE_GCODE_STATE NAME=Pre_Prime\nG90\nG92 E0\nG1 Z10.0 F3000\nG1 X10 Y10\nG1 Z0.24 F5000.0\nG1 X100 Y10 Z0.24 F1500.0 E35\nG92 E0\nG1 Z10 F6000\nRESTORE_GCODE_STATE NAME=Pre_Prime', 'description': 'G-Code macro'}, 'gcode_macro led_on': {'gcode': 'SET_LED LED=my_neopixel RED=1 GREEN=1 BLUE=1', 'description': 'G-Code macro'}, 'gcode_macro led_off': {'gcode': 'SET_LED LED=my_neopixel RED=0 GREEN=0 BLUE=0', 'description': 'G-Code macro'}, 'gcode_macro pause': {'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - 2.0) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\nPAUSE_BASE\nG91\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG1 E-{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print', 'variable_extrude': '1.0'}, 'gcode_macro resume': {'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY) %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG91\nG1 E{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print'}, 'gcode_macro cancel_print': {'gcode': '\nTURN_OFF_HEATERS\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z4.5 F300\nG90\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}\nG28 X Y\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\nG1 Y{y_park} F2000\nM84\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro unload_filament': {'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=UNLOAD_state\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG91\nG0 Z{ z_safe_lift }\nG92 E0\nG1 E5.0 F300\nG1 E-50 F{ 10 * 60 }\nG1 E-50 F{ 5 * 60 }\nRESTORE_GCODE_STATE NAME=UNLOAD_state\n{% endif %}', 'description': 'Unloads Filament from extruder'}, 'gcode_macro load_filament': {'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=LOAD_state\nG91\nG1 E50 F{ 5 * 60 }\nG4 P{ 0.9 * 1000 }\nG1 E25.0 F{ 5 * 60 }\n_ENABLE_FS\nRESTORE_GCODE_STATE NAME=LOAD_state\n{% endif %}', 'description': 'Loads filament into the extruder'}, 'gcode_macro _enable_fs': {'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=1', 'description': 'enables filament sensor'}, 'gcode_macro _disable_fs': {'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=0', 'description': 'disables filament sensor'}, 'gcode_macro heat': {'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}\n{% set Z = params.Z|default(50)|float %}\n{% set X = params.X|default(110)|float %}\n{% set Y = params.Y|default(110)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X{X} Y{Y} F6000', 'description': 'Heats up the extruder'}, 'gcode_macro cool': {'gcode': '\nTURN_OFF_HEATERS', 'description': 'Turns off all heaters'}, 'gcode_macro preheat_pla': {'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(150)|float %}\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}', 'description': 'Preheats extruder and bed for PLA'}, 'gcode_macro bed_tramming_1': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nSCREWS_TILT_CALCULATE', 'description': 'Heats bed and starts screw leveling'}, 'gcode_macro bed_tramming_2': {'gcode': '\nSCREWS_TILT_CALCULATE', 'description': 'Continues bed screw leveling'}, 'gcode_macro bed_mesh': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nBED_MESH_CLEAR\nBED_MESH_CALIBRATE\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'Heats bed, makes a mesh, and saves it'}, 'gcode_macro disable_steppers': {'gcode': '\nM84 X Y E', 'description': 'Disables stepper motors'}, 'gcode_macro pid_extruder': {'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(200)|float %}\nPID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'PID Tune for Extruder'}, 'gcode_macro pid_bed': {'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %}\nPID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'PID Tune for Bed'}, 'gcode_macro nozzle_mid': {'gcode': '\n{% set Z = params.Z|default(10)|float %}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X110 Y110 F6000', 'description': 'Moves nozzle to bed center'}, 'gcode_macro home_check': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nG28\n{% endif %}', 'description': 'Checks if printer is homed'}, 'gcode_macro show_print': {'gcode': '\nHOME_CHECK\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG1 Z{ z_safe_lift }\nG1 X10 Y220 F4000', 'description': 'Moves extruder out of the way'}, 'gcode_macro zoffset_setup': {'gcode': '\n{% if printer.heater_bed.temperature > 70 %}\n{action_respond_info("Bed temperature too high")}\n{% elif printer.extruder.temperature > 290 %}\n{action_respond_info("Extruder temperature too high")}\n{% else %}\nG28\nPROBE_CALIBRATE\n{% endif %}', 'description': 'Starts Z-Offset Calibration'}, 'gcode_macro z_down_01': {'gcode': '\nTESTZ Z=-.1', 'description': 'Moves Z down by 0.1'}, 'gcode_macro z_up_01': {'gcode': '\nTESTZ Z=+.1', 'description': 'Moves Z up by 0.1'}, 'gcode_macro z_low_half': {'gcode': '\nTESTZ Z=-', 'description': 'Sets Z between current and previous lower'}, 'gcode_macro z_high_half': {'gcode': '\nTESTZ Z=+', 'description': 'Sets Z between current and previous higher'}, 'gcode_macro accept_save': {'gcode': '\nACCEPT\nSAVE_CONFIG', 'description': 'Accepts Z-Offset'}, 'gcode_macro abort_setup': {'gcode': '\nABORT', 'description': 'Aborts Z-Offset'}, 'gcode_macro g29': {'gcode': '\nG28\nbed_mesh_calibrate\nG1 X0 Y0 Z10 F4200', 'description': 'G-Code macro'}, 'gcode_macro quick_z_test': {'gcode': '\nG28\nG90\nG1 X150 Y150 Z5 F6000\nG1 Z1.0 F600', 'description': 'Move to center for manual Z adjustment'}, 'printer': {'max_velocity': 300.0, 'max_accel': 6000.0, 'max_accel_to_decel': 3000.0, 'square_corner_velocity': 5.0, 'kinematics': 'cartesian', 'max_z_velocity': 5.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': '!PB14', 'dir_pin': 'PB13', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB15', 'endstop_pin': '!PA2', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'PB10', 'dir_pin': 'PB2', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB12', 'endstop_pin': '!PA1', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'PB0', 'dir_pin': '!PC5', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB1', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -10.0, 'position_max': 400.0, 'homing_speed': 5.0, 'second_homing_speed': 2.5, 'homing_retract_speed': 5.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC0', 'min_temp': 0.0, 'max_temp': 250.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 22.533, 'pid_ki': 1.113, 'pid_kd': 114.073, 'heater_pin': 'PC9', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 50.0, 'max_extrude_only_velocity': 79.82432411074329, 'max_extrude_only_accel': 1596.4864822148659, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PA7', 'pressure_advance': 0.05, 'pressure_advance_smooth_time': 0.06, 'dir_pin': 'PA6', 'rotation_distance': 7.191, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PC4'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-08-25 01:42:37,491 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-08-25 01:42:37,492 [printer.py:reinit()] - Klipper version: v0.12.0-116-g31de734d1
2025-08-25 01:42:37,492 [printer.py:reinit()] - # Extruders: 1
2025-08-25 01:42:37,492 [printer.py:reinit()] - # Temperature devices: 1
2025-08-25 01:42:37,493 [printer.py:reinit()] - # Fans: 3
2025-08-25 01:42:37,493 [printer.py:reinit()] - # Output pins: 0
2025-08-25 01:42:37,493 [printer.py:reinit()] - # Leds: 1
2025-08-25 01:42:37,509 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2025-08-25 01:42:37,511 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 01:42:37,767 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&controller_fan stepper_fan&heater_fan hotend_fan&neopixel my_neopixel
2025-08-25 01:42:37,775 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 01:42:37,775 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 01:42:37,776 [screen.py:init_klipper()] - Printer initialized
2025-08-25 01:42:37,777 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 01:42:37,778 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 01:42:37,798 [screen.py:show_panel()] - Reinitializing panel
2025-08-25 01:42:37,894 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 01:42:37,908 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 01:42:37,916 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 01:42:37,962 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 01:42:37,975 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2025-08-25 01:42:37,994 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 01:42:38,008 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2025-08-25 01:42:38,010 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 01:43:21,886 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-08-25 01:43:21,886 [printer.py:change_state()] - Adding callback for state: printing
2025-08-25 01:43:21,897 [screen.py:_load_panel()] - Loading panel: job_status
2025-08-25 01:43:22,085 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-25 01:43:22,093 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-08-25 01:43:22,117 [job_status.py:update_file_metadata()] - Update Metadata. File: xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m22s.gcode Size: 604833
2025-08-25 01:43:22,135 [job_status.py:show_file_thumbnail()] - xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m22s.gcode
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        2025-08-25 01:46:26,249 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-08-25 01:46:26,256 [functions.py:log_start()] - KlipperScreen Version: v0.3.9-11-g2c778cce
2025-08-25 01:46:26,256 [functions.py:log_start()] - Python version: 3.9
2025-08-25 01:46:26,427 [config.py:get_config_file_location()] - Passed config (-c): .
2025-08-25 01:46:26,429 [config.py:__init__()] - Config path location: /home/sonic/KlipperScreen/ks_includes/defaults.conf
2025-08-25 01:46:26,441 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2025-08-25 01:46:26,562 [config.py:create_translations()] - Selected lang: None OS lang: en_US
2025-08-25 01:46:26,562 [config.py:install_language()] - Using lang en
2025-08-25 01:46:26,579 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-08-25 01:46:26,583 [screen.py:__init__()] - Screen resolution: 1024x600
2025-08-25 01:46:26,585 [KlippyGtk.py:__init__()] - Font size: 20.7 (medium)
2025-08-25 01:46:27,138 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2025-08-25 01:46:27,150 [screen.py:set_screenblanking_timeout()] - Using DPMS
2025-08-25 01:46:27,159 [screen.py:initial_connection()] - Default printer: None
2025-08-25 01:46:27,209 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-08-25 01:46:27,210 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-08-25 01:46:27,272 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 01:46:27,282 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-08-25 01:46:27,297 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-08-25 01:46:37,735 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-08-25 01:46:37,742 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-08-25 01:46:47,736 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-08-25 01:46:47,743 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-08-25 01:46:57,735 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-08-25 01:46:57,751 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2025-08-25 01:46:57,765 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/access/oneshot_token
2025-08-25 01:46:57,766 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-08-25 01:46:57,778 [_logging.py:info()] - Websocket connected
2025-08-25 01:46:57,779 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-08-25 01:46:57,793 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2025-08-25 01:46:57,810 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2025-08-25 01:46:57,812 [printer.py:configure_cameras()] - Cameras: []
2025-08-25 01:46:57,812 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-319-gf0ae517', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-08-25 01:46:57,827 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2025-08-25 01:46:58,029 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2025-08-25 01:46:58,032 [screen.py:init_klipper()] - {'configfile': {'config': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f401xc_12345-if00', 'restart_method': 'command'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '300', 'max_accel': '6000', 'square_corner_velocity': '5.0', 'max_z_velocity': '5', 'max_z_accel': '100'}, 'extruder': {'max_extrude_only_distance': '100.0', 'max_extrude_cross_section': '50.0', 'step_pin': 'PA7', 'dir_pin': 'PA6', 'enable_pin': '!PC4', 'microsteps': '16', 'rotation_distance': '7.1910', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'PC9', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'PC0', 'control': 'pid', 'pid_kp': '22.533', 'pid_ki': '1.113', 'pid_kd': '114.073', 'min_temp': '0', 'max_temp': '250', 'pressure_advance': '0.05', 'pressure_advance_smooth_time': '0.06'}, 'heater_bed': {'heater_pin': 'PA8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'PC1', 'control': 'pid', 'pid_kp': '45.986', 'pid_ki': '0.757', 'pid_kd': '698.409', 'min_temp': '0', 'max_temp': '130'}, 'fan': {'pin': 'PC8'}, 'heater_fan hotend_fan': {'pin': 'PC7', 'heater': 'extruder', 'heater_temp': '50.0'}, 'controller_fan stepper_fan': {'pin': 'PC6', 'idle_timeout': '300'}, 'stepper_x': {'step_pin': '!PB14', 'dir_pin': 'PB13', 'enable_pin': '!PB15', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '!PA2', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '50'}, 'stepper_y': {'step_pin': 'PB10', 'dir_pin': 'PB2', 'enable_pin': '!PB12', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '!PA1', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '50'}, 'stepper_z': {'step_pin': 'PB0', 'dir_pin': '!PC5', 'enable_pin': '!PB1', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_max': '400', 'position_min': '-10'}, 'bltouch': {'sensor_pin': 'PC2', 'control_pin': 'PC3', 'x_offset': '27.25', 'y_offset': '-12.8', 'z_offset': '0.1', 'speed': '10', 'samples': '3', 'samples_result': 'average'}, 'safe_z_home': {'home_xy_position': '150,150', 'speed': '100', 'z_hop': '10', 'z_hop_speed': '5'}, 'bed_mesh': {'speed': '100', 'mesh_min': '30, 20', 'mesh_max': '300, 290', 'algorithm': 'bicubic', 'probe_count': '7,7', 'mesh_pps': '2,3'}, 'screws_tilt_adjust': {'screw1': '23,63', 'screw1_name': 'front left', 'screw2': '223,63', 'screw2_name': 'front right', 'screw3': '223,263', 'screw3_name': 'back right', 'screw4': '23,263', 'screw4_name': 'back left', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'neopixel my_neopixel': {'pin': 'PB7', 'color_order': 'GRB', 'initial_red': '0.0', 'initial_green': '0.0', 'initial_blue': '0.0'}, 'input_shaper': {'shaper_freq_x': '43.26', 'shaper_freq_y': '45.28', 'shaper_type': 'mzv'}, 'virtual_sdcard': {'path': '/home/sonic/printer_data/gcodes'}, 'display_status': {}, 'pause_resume': {}, 'exclude_object': {}, 'idle_timeout': {'timeout': '86400'}, 'gcode_macro PRINT_START': {'gcode': '\nG90\nG28\nLED_ON\nSET_GCODE_OFFSET Z_ADJUST=-2.185 MOVE=1\nBED_MESH_CLEAR\n{% if printer.exclude_object.objects|length > 0 %}\n{% set min_x = 9999 %}\n{% set min_y = 9999 %}\n{% set max_x = 0 %}\n{% set max_y = 0 %}\n{% for obj in printer.exclude_object.objects %}\n{% for p in obj.polygon %}\n{% set min_x = [min_x, p[0]]|min %}\n{% set min_y = [min_y, p[1]]|min %}\n{% set max_x = [max_x, p[0]]|max %}\n{% set max_y = [max_y, p[1]]|max %}\n{% endfor %}\n{% endfor %}\n{% set min_x = min_x - 2 %}\n{% set min_y = min_y - 2 %}\n{% set max_x = max_x + 2 %}\n{% set max_y = max_y + 2 %}\nBED_MESH_CALIBRATE AREA_START={min_x},{min_y} AREA_END={max_x},{max_y}\n{% else %}\nBED_MESH_CALIBRATE\n{% endif %}\nG1 Z5 F3000\nG1 Z0.2 F300\n_PURGE_LINE'}, 'gcode_macro PRINT_END': {'gcode': '\nM400\nG92 E0\nG1 E-2.0 F300\nG91\nG1 Z10 F600\nG90\nG1 X0 Y300 F6000\nM104 S0\nM140 S0\nM106 S0\nM84\nSET_GCODE_OFFSET Z=0\nFIRMWARE_RESTART'}, 'gcode_macro _PURGE_LINE': {'gcode': '\nSAVE_GCODE_STATE NAME=Pre_Prime\nG90\nG92 E0\nG1 Z10.0 F3000\nG1 X10 Y10\nG1 Z0.24 F5000.0\nG1 X100 Y10 Z0.24 F1500.0 E35\nG92 E0\nG1 Z10 F6000\nRESTORE_GCODE_STATE NAME=Pre_Prime'}, 'gcode_macro LED_ON': {'gcode': 'SET_LED LED=my_neopixel RED=1 GREEN=1 BLUE=1'}, 'gcode_macro LED_OFF': {'gcode': 'SET_LED LED=my_neopixel RED=0 GREEN=0 BLUE=0'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'variable_extrude': '1.0', 'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - 2.0) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\nPAUSE_BASE\nG91\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG1 E-{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY) %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG91\nG1 E{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}'}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\nTURN_OFF_HEATERS\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z4.5 F300\nG90\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}\nG28 X Y\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\nG1 Y{y_park} F2000\nM84\nCANCEL_PRINT_BASE'}, 'gcode_macro UNLOAD_FILAMENT': {'description': 'Unloads Filament from extruder', 'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=UNLOAD_state\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG91\nG0 Z{ z_safe_lift }\nG92 E0\nG1 E5.0 F300\nG1 E-50 F{ 10 * 60 }\nG1 E-50 F{ 5 * 60 }\nRESTORE_GCODE_STATE NAME=UNLOAD_state\n{% endif %}'}, 'gcode_macro LOAD_FILAMENT': {'description': 'Loads filament into the extruder', 'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=LOAD_state\nG91\nG1 E50 F{ 5 * 60 }\nG4 P{ 0.9 * 1000 }\nG1 E25.0 F{ 5 * 60 }\n_ENABLE_FS\nRESTORE_GCODE_STATE NAME=LOAD_state\n{% endif %}'}, 'gcode_macro _ENABLE_FS': {'description': 'enables filament sensor', 'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=1'}, 'gcode_macro _DISABLE_FS': {'description': 'disables filament sensor', 'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=0'}, 'gcode_macro HEAT': {'description': 'Heats up the extruder', 'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}\n{% set Z = params.Z|default(50)|float %}\n{% set X = params.X|default(110)|float %}\n{% set Y = params.Y|default(110)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X{X} Y{Y} F6000'}, 'gcode_macro COOL': {'description': 'Turns off all heaters', 'gcode': '\nTURN_OFF_HEATERS'}, 'gcode_macro PREHEAT_PLA': {'description': 'Preheats extruder and bed for PLA', 'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(150)|float %}\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}'}, 'gcode_macro BED_TRAMMING_1': {'description': 'Heats bed and starts screw leveling', 'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nSCREWS_TILT_CALCULATE'}, 'gcode_macro BED_TRAMMING_2': {'description': 'Continues bed screw leveling', 'gcode': '\nSCREWS_TILT_CALCULATE'}, 'gcode_macro BED_MESH': {'description': 'Heats bed, makes a mesh, and saves it', 'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nBED_MESH_CLEAR\nBED_MESH_CALIBRATE\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro DISABLE_STEPPERS': {'description': 'Disables stepper motors', 'gcode': '\nM84 X Y E'}, 'gcode_macro PID_EXTRUDER': {'description': 'PID Tune for Extruder', 'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(200)|float %}\nPID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro PID_BED': {'description': 'PID Tune for Bed', 'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %}\nPID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro NOZZLE_MID': {'description': 'Moves nozzle to bed center', 'gcode': '\n{% set Z = params.Z|default(10)|float %}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X110 Y110 F6000'}, 'gcode_macro home_check': {'description': 'Checks if printer is homed', 'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nG28\n{% endif %}'}, 'gcode_macro SHOW_PRINT': {'description': 'Moves extruder out of the way', 'gcode': '\nHOME_CHECK\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG1 Z{ z_safe_lift }\nG1 X10 Y220 F4000'}, 'gcode_macro ZOffset_Setup': {'description': 'Starts Z-Offset Calibration', 'gcode': '\n{% if printer.heater_bed.temperature > 70 %}\n{action_respond_info("Bed temperature too high")}\n{% elif printer.extruder.temperature > 290 %}\n{action_respond_info("Extruder temperature too high")}\n{% else %}\nG28\nPROBE_CALIBRATE\n{% endif %}'}, 'gcode_macro Z_Down_01': {'description': 'Moves Z down by 0.1', 'gcode': '\nTESTZ Z=-.1'}, 'gcode_macro Z_Up_01': {'description': 'Moves Z up by 0.1', 'gcode': '\nTESTZ Z=+.1'}, 'gcode_macro Z_Low_Half': {'description': 'Sets Z between current and previous lower', 'gcode': '\nTESTZ Z=-'}, 'gcode_macro Z_High_Half': {'description': 'Sets Z between current and previous higher', 'gcode': '\nTESTZ Z=+'}, 'gcode_macro Accept_Save': {'description': 'Accepts Z-Offset', 'gcode': '\nACCEPT\nSAVE_CONFIG'}, 'gcode_macro Abort_Setup': {'description': 'Aborts Z-Offset', 'gcode': '\nABORT'}, 'gcode_macro G29': {'gcode': '\nG28\nbed_mesh_calibrate\nG1 X0 Y0 Z10 F4200'}, 'gcode_macro QUICK_Z_TEST': {'description': 'Move to center for manual Z adjustment', 'gcode': '\nG28\nG90\nG1 X150 Y150 Z5 F6000\nG1 Z1.0 F600'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f401xc_12345-if00', 'baud': 250000, 'restart_method': 'command', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC1', 'min_temp': 0.0, 'max_temp': 130.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 45.986, 'pid_ki': 0.757, 'pid_kd': 698.409, 'heater_pin': 'PA8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PC8'}, 'heater_fan hotend_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'PC7', 'fan_speed': 1.0}, 'controller_fan stepper_fan': {'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PC6', 'fan_speed': 1.0, 'idle_speed': 1.0, 'idle_timeout': 300, 'heater': ['extruder']}, 'bltouch': {'z_offset': 0.1, 'stow_on_each_sample': True, 'probe_with_touch_mode': False, 'control_pin': 'PC3', 'sensor_pin': 'PC2', 'pin_up_reports_not_triggered': True, 'pin_up_touch_mode_reports_triggered': True, 'pin_move_time': 0.68, 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 27.25, 'y_offset': -12.8, 'samples': 3, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [150.0, 150.0], 'z_hop': 10.0, 'z_hop_speed': 5.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'adaptive_margin': 0.0, 'probe_count': [7, 7], 'mesh_min': [30.0, 20.0], 'mesh_max': [300.0, 290.0], 'mesh_pps': [2, 3], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 100.0, 'fade_start': 1.0, 'fade_end': 0.0, 'split_delta_z': 0.025, 'move_check_distance': 5.0}, 'screws_tilt_adjust': {'screw1': [23.0, 63.0], 'screw1_name': 'front left', 'screw2': [223.0, 63.0], 'screw2_name': 'front right', 'screw3': [223.0, 263.0], 'screw3_name': 'back right', 'screw4': [23.0, 263.0], 'screw4_name': 'back left', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'neopixel my_neopixel': {'pin': 'PB7', 'chain_count': 1, 'color_order': ['GRB'], 'initial_red': 0.0, 'initial_green': 0.0, 'initial_blue': 0.0, 'initial_white': 0.0}, 'input_shaper': {'shaper_type': 'mzv', 'shaper_type_x': 'mzv', 'damping_ratio_x': 0.1, 'shaper_freq_x': 43.26, 'shaper_type_y': 'mzv', 'damping_ratio_y': 0.1, 'shaper_freq_y': 45.28}, 'virtual_sdcard': {'path': '/home/sonic/printer_data/gcodes', 'on_error_gcode': ''}, 'pause_resume': {'recover_velocity': 50.0}, 'idle_timeout': {'timeout': 86400.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'gcode_macro print_start': {'gcode': '\nG90\nG28\nLED_ON\nSET_GCODE_OFFSET Z_ADJUST=-2.185 MOVE=1\nBED_MESH_CLEAR\n{% if printer.exclude_object.objects|length > 0 %}\n{% set min_x = 9999 %}\n{% set min_y = 9999 %}\n{% set max_x = 0 %}\n{% set max_y = 0 %}\n{% for obj in printer.exclude_object.objects %}\n{% for p in obj.polygon %}\n{% set min_x = [min_x, p[0]]|min %}\n{% set min_y = [min_y, p[1]]|min %}\n{% set max_x = [max_x, p[0]]|max %}\n{% set max_y = [max_y, p[1]]|max %}\n{% endfor %}\n{% endfor %}\n{% set min_x = min_x - 2 %}\n{% set min_y = min_y - 2 %}\n{% set max_x = max_x + 2 %}\n{% set max_y = max_y + 2 %}\nBED_MESH_CALIBRATE AREA_START={min_x},{min_y} AREA_END={max_x},{max_y}\n{% else %}\nBED_MESH_CALIBRATE\n{% endif %}\nG1 Z5 F3000\nG1 Z0.2 F300\n_PURGE_LINE', 'description': 'G-Code macro'}, 'gcode_macro print_end': {'gcode': '\nM400\nG92 E0\nG1 E-2.0 F300\nG91\nG1 Z10 F600\nG90\nG1 X0 Y300 F6000\nM104 S0\nM140 S0\nM106 S0\nM84\nSET_GCODE_OFFSET Z=0\nFIRMWARE_RESTART', 'description': 'G-Code macro'}, 'gcode_macro _purge_line': {'gcode': '\nSAVE_GCODE_STATE NAME=Pre_Prime\nG90\nG92 E0\nG1 Z10.0 F3000\nG1 X10 Y10\nG1 Z0.24 F5000.0\nG1 X100 Y10 Z0.24 F1500.0 E35\nG92 E0\nG1 Z10 F6000\nRESTORE_GCODE_STATE NAME=Pre_Prime', 'description': 'G-Code macro'}, 'gcode_macro led_on': {'gcode': 'SET_LED LED=my_neopixel RED=1 GREEN=1 BLUE=1', 'description': 'G-Code macro'}, 'gcode_macro led_off': {'gcode': 'SET_LED LED=my_neopixel RED=0 GREEN=0 BLUE=0', 'description': 'G-Code macro'}, 'gcode_macro pause': {'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - 2.0) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\nPAUSE_BASE\nG91\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG1 E-{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print', 'variable_extrude': '1.0'}, 'gcode_macro resume': {'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY) %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG91\nG1 E{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print'}, 'gcode_macro cancel_print': {'gcode': '\nTURN_OFF_HEATERS\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z4.5 F300\nG90\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}\nG28 X Y\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\nG1 Y{y_park} F2000\nM84\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro unload_filament': {'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=UNLOAD_state\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG91\nG0 Z{ z_safe_lift }\nG92 E0\nG1 E5.0 F300\nG1 E-50 F{ 10 * 60 }\nG1 E-50 F{ 5 * 60 }\nRESTORE_GCODE_STATE NAME=UNLOAD_state\n{% endif %}', 'description': 'Unloads Filament from extruder'}, 'gcode_macro load_filament': {'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=LOAD_state\nG91\nG1 E50 F{ 5 * 60 }\nG4 P{ 0.9 * 1000 }\nG1 E25.0 F{ 5 * 60 }\n_ENABLE_FS\nRESTORE_GCODE_STATE NAME=LOAD_state\n{% endif %}', 'description': 'Loads filament into the extruder'}, 'gcode_macro _enable_fs': {'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=1', 'description': 'enables filament sensor'}, 'gcode_macro _disable_fs': {'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=0', 'description': 'disables filament sensor'}, 'gcode_macro heat': {'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}\n{% set Z = params.Z|default(50)|float %}\n{% set X = params.X|default(110)|float %}\n{% set Y = params.Y|default(110)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X{X} Y{Y} F6000', 'description': 'Heats up the extruder'}, 'gcode_macro cool': {'gcode': '\nTURN_OFF_HEATERS', 'description': 'Turns off all heaters'}, 'gcode_macro preheat_pla': {'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(150)|float %}\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}', 'description': 'Preheats extruder and bed for PLA'}, 'gcode_macro bed_tramming_1': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nSCREWS_TILT_CALCULATE', 'description': 'Heats bed and starts screw leveling'}, 'gcode_macro bed_tramming_2': {'gcode': '\nSCREWS_TILT_CALCULATE', 'description': 'Continues bed screw leveling'}, 'gcode_macro bed_mesh': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nBED_MESH_CLEAR\nBED_MESH_CALIBRATE\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'Heats bed, makes a mesh, and saves it'}, 'gcode_macro disable_steppers': {'gcode': '\nM84 X Y E', 'description': 'Disables stepper motors'}, 'gcode_macro pid_extruder': {'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(200)|float %}\nPID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'PID Tune for Extruder'}, 'gcode_macro pid_bed': {'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %}\nPID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'PID Tune for Bed'}, 'gcode_macro nozzle_mid': {'gcode': '\n{% set Z = params.Z|default(10)|float %}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X110 Y110 F6000', 'description': 'Moves nozzle to bed center'}, 'gcode_macro home_check': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nG28\n{% endif %}', 'description': 'Checks if printer is homed'}, 'gcode_macro show_print': {'gcode': '\nHOME_CHECK\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG1 Z{ z_safe_lift }\nG1 X10 Y220 F4000', 'description': 'Moves extruder out of the way'}, 'gcode_macro zoffset_setup': {'gcode': '\n{% if printer.heater_bed.temperature > 70 %}\n{action_respond_info("Bed temperature too high")}\n{% elif printer.extruder.temperature > 290 %}\n{action_respond_info("Extruder temperature too high")}\n{% else %}\nG28\nPROBE_CALIBRATE\n{% endif %}', 'description': 'Starts Z-Offset Calibration'}, 'gcode_macro z_down_01': {'gcode': '\nTESTZ Z=-.1', 'description': 'Moves Z down by 0.1'}, 'gcode_macro z_up_01': {'gcode': '\nTESTZ Z=+.1', 'description': 'Moves Z up by 0.1'}, 'gcode_macro z_low_half': {'gcode': '\nTESTZ Z=-', 'description': 'Sets Z between current and previous lower'}, 'gcode_macro z_high_half': {'gcode': '\nTESTZ Z=+', 'description': 'Sets Z between current and previous higher'}, 'gcode_macro accept_save': {'gcode': '\nACCEPT\nSAVE_CONFIG', 'description': 'Accepts Z-Offset'}, 'gcode_macro abort_setup': {'gcode': '\nABORT', 'description': 'Aborts Z-Offset'}, 'gcode_macro g29': {'gcode': '\nG28\nbed_mesh_calibrate\nG1 X0 Y0 Z10 F4200', 'description': 'G-Code macro'}, 'gcode_macro quick_z_test': {'gcode': '\nG28\nG90\nG1 X150 Y150 Z5 F6000\nG1 Z1.0 F600', 'description': 'Move to center for manual Z adjustment'}, 'printer': {'max_velocity': 300.0, 'max_accel': 6000.0, 'max_accel_to_decel': 3000.0, 'square_corner_velocity': 5.0, 'kinematics': 'cartesian', 'max_z_velocity': 5.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': '!PB14', 'dir_pin': 'PB13', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB15', 'endstop_pin': '!PA2', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'PB10', 'dir_pin': 'PB2', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB12', 'endstop_pin': '!PA1', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'PB0', 'dir_pin': '!PC5', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB1', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -10.0, 'position_max': 400.0, 'homing_speed': 5.0, 'second_homing_speed': 2.5, 'homing_retract_speed': 5.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC0', 'min_temp': 0.0, 'max_temp': 250.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 22.533, 'pid_ki': 1.113, 'pid_kd': 114.073, 'heater_pin': 'PC9', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 50.0, 'max_extrude_only_velocity': 79.82432411074329, 'max_extrude_only_accel': 1596.4864822148659, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PA7', 'pressure_advance': 0.05, 'pressure_advance_smooth_time': 0.06, 'dir_pin': 'PA6', 'rotation_distance': 7.191, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PC4'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-08-25 01:46:58,033 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-08-25 01:46:58,035 [printer.py:reinit()] - Klipper version: v0.12.0-116-g31de734d1
2025-08-25 01:46:58,035 [printer.py:reinit()] - # Extruders: 1
2025-08-25 01:46:58,035 [printer.py:reinit()] - # Temperature devices: 1
2025-08-25 01:46:58,035 [printer.py:reinit()] - # Fans: 3
2025-08-25 01:46:58,035 [printer.py:reinit()] - # Output pins: 0
2025-08-25 01:46:58,035 [printer.py:reinit()] - # Leds: 1
2025-08-25 01:46:58,052 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2025-08-25 01:46:58,054 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 01:46:58,326 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&controller_fan stepper_fan&heater_fan hotend_fan&neopixel my_neopixel
2025-08-25 01:46:58,331 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 01:46:58,331 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 01:46:58,332 [screen.py:init_klipper()] - Printer initialized
2025-08-25 01:46:58,332 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 01:46:58,333 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 01:46:58,338 [screen.py:_load_panel()] - Loading panel: main_menu
2025-08-25 01:46:58,443 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 01:46:58,457 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 01:46:58,466 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 01:46:58,512 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 01:46:58,525 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2025-08-25 01:46:58,543 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 01:46:58,558 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2025-08-25 01:46:58,559 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 01:49:52,954 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-25 01:49:52,954 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-25 01:49:52,956 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-25 01:49:52,956 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-08-25 01:49:52,959 [screen.py:show_panel()] - Reinitializing panel
2025-08-25 01:49:53,018 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 01:49:56,130 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2025-08-25 01:49:56,143 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2025-08-25 01:49:56,144 [printer.py:configure_cameras()] - Cameras: []
2025-08-25 01:49:56,145 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-319-gf0ae517', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-08-25 01:49:56,159 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2025-08-25 01:49:56,181 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2025-08-25 01:49:56,184 [screen.py:init_klipper()] - {'configfile': {'config': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f401xc_12345-if00', 'restart_method': 'command'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '300', 'max_accel': '6000', 'square_corner_velocity': '5.0', 'max_z_velocity': '5', 'max_z_accel': '100'}, 'extruder': {'max_extrude_only_distance': '100.0', 'max_extrude_cross_section': '50.0', 'step_pin': 'PA7', 'dir_pin': 'PA6', 'enable_pin': '!PC4', 'microsteps': '16', 'rotation_distance': '7.1910', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'PC9', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'PC0', 'control': 'pid', 'pid_kp': '22.533', 'pid_ki': '1.113', 'pid_kd': '114.073', 'min_temp': '0', 'max_temp': '250', 'pressure_advance': '0.05', 'pressure_advance_smooth_time': '0.06'}, 'heater_bed': {'heater_pin': 'PA8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'PC1', 'control': 'pid', 'pid_kp': '45.986', 'pid_ki': '0.757', 'pid_kd': '698.409', 'min_temp': '0', 'max_temp': '130'}, 'fan': {'pin': 'PC8'}, 'heater_fan hotend_fan': {'pin': 'PC7', 'heater': 'extruder', 'heater_temp': '50.0'}, 'controller_fan stepper_fan': {'pin': 'PC6', 'idle_timeout': '300'}, 'stepper_x': {'step_pin': '!PB14', 'dir_pin': 'PB13', 'enable_pin': '!PB15', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '!PA2', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '50'}, 'stepper_y': {'step_pin': 'PB10', 'dir_pin': 'PB2', 'enable_pin': '!PB12', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '!PA1', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '50'}, 'stepper_z': {'step_pin': 'PB0', 'dir_pin': '!PC5', 'enable_pin': '!PB1', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_max': '400', 'position_min': '-10'}, 'bltouch': {'sensor_pin': 'PC2', 'control_pin': 'PC3', 'x_offset': '27.25', 'y_offset': '-12.8', 'z_offset': '0.1', 'speed': '10', 'samples': '3', 'samples_result': 'average'}, 'safe_z_home': {'home_xy_position': '150,150', 'speed': '100', 'z_hop': '10', 'z_hop_speed': '5'}, 'bed_mesh': {'speed': '100', 'mesh_min': '30, 20', 'mesh_max': '300, 290', 'algorithm': 'bicubic', 'probe_count': '7,7', 'mesh_pps': '2,3'}, 'screws_tilt_adjust': {'screw1': '23,63', 'screw1_name': 'front left', 'screw2': '223,63', 'screw2_name': 'front right', 'screw3': '223,263', 'screw3_name': 'back right', 'screw4': '23,263', 'screw4_name': 'back left', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'neopixel my_neopixel': {'pin': 'PB7', 'color_order': 'GRB', 'initial_red': '0.0', 'initial_green': '0.0', 'initial_blue': '0.0'}, 'input_shaper': {'shaper_freq_x': '43.26', 'shaper_freq_y': '45.28', 'shaper_type': 'mzv'}, 'virtual_sdcard': {'path': '/home/sonic/printer_data/gcodes'}, 'display_status': {}, 'pause_resume': {}, 'exclude_object': {}, 'idle_timeout': {'timeout': '86400'}, 'gcode_macro PRINT_START': {'gcode': '\n\nG90\nG28\nLED_ON\n\n\nSET_GCODE_OFFSET Z_ADJUST=-2.185 MOVE=1\n\n\nBED_MESH_CLEAR\n\n\n{% if printer.exclude_object.objects|length > 0 %}\n{% set min_x = 9999 %}\n{% set min_y = 9999 %}\n{% set max_x = 0 %}\n{% set max_y = 0 %}\n{% for obj in printer.exclude_object.objects %}\n{% for p in obj.polygon %}\n{% set min_x = [min_x, p[0]]|min %}\n{% set min_y = [min_y, p[1]]|min %}\n{% set max_x = [max_x, p[0]]|max %}\n{% set max_y = [max_y, p[1]]|max %}\n{% endfor %}\n{% endfor %}\n\n{% set min_x = min_x - 2 %}\n{% set min_y = min_y - 2 %}\n{% set max_x = max_x + 2 %}\n{% set max_y = max_y + 2 %}\n\nBED_MESH_CALIBRATE AREA_START={min_x},{min_y} AREA_END={max_x},{max_y}\n{% else %}\n\nBED_MESH_CALIBRATE\n{% endif %}\n\n\nG1 Z5 F3000\nG1 Z0.2 F300\n\n\n_PURGE_LINE'}, 'gcode_macro PRINT_END': {'gcode': '\nM400\nG92 E0\nG1 E-2.0 F300\nG91\nG1 Z10 F600\nG90\nG1 X0 Y300 F6000\nM104 S0\nM140 S0\nM106 S0\nM84\nSET_GCODE_OFFSET Z=0\nFIRMWARE_RESTART'}, 'gcode_macro _PURGE_LINE': {'gcode': '\nSAVE_GCODE_STATE NAME=Pre_Prime\nG90\nG92 E0\nG1 Z10.0 F3000\nG1 X10 Y10\nG1 Z0.24 F5000.0\nG1 X100 Y10 Z0.24 F1500.0 E35\nG92 E0\nG1 Z10 F6000\nRESTORE_GCODE_STATE NAME=Pre_Prime'}, 'gcode_macro LED_ON': {'gcode': 'SET_LED LED=my_neopixel RED=1 GREEN=1 BLUE=1'}, 'gcode_macro LED_OFF': {'gcode': 'SET_LED LED=my_neopixel RED=0 GREEN=0 BLUE=0'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'variable_extrude': '1.0', 'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - 2.0) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\nPAUSE_BASE\nG91\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG1 E-{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY) %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG91\nG1 E{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}'}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\nTURN_OFF_HEATERS\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z4.5 F300\nG90\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}\nG28 X Y\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\nG1 Y{y_park} F2000\nM84\nCANCEL_PRINT_BASE'}, 'gcode_macro UNLOAD_FILAMENT': {'description': 'Unloads Filament from extruder', 'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=UNLOAD_state\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG91\nG0 Z{ z_safe_lift }\nG92 E0\nG1 E5.0 F300\nG1 E-50 F{ 10 * 60 }\nG1 E-50 F{ 5 * 60 }\nRESTORE_GCODE_STATE NAME=UNLOAD_state\n{% endif %}'}, 'gcode_macro LOAD_FILAMENT': {'description': 'Loads filament into the extruder', 'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=LOAD_state\nG91\nG1 E50 F{ 5 * 60 }\nG4 P{ 0.9 * 1000 }\nG1 E25.0 F{ 5 * 60 }\n_ENABLE_FS\nRESTORE_GCODE_STATE NAME=LOAD_state\n{% endif %}'}, 'gcode_macro _ENABLE_FS': {'description': 'enables filament sensor', 'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=1'}, 'gcode_macro _DISABLE_FS': {'description': 'disables filament sensor', 'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=0'}, 'gcode_macro HEAT': {'description': 'Heats up the extruder', 'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}\n{% set Z = params.Z|default(50)|float %}\n{% set X = params.X|default(110)|float %}\n{% set Y = params.Y|default(110)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X{X} Y{Y} F6000'}, 'gcode_macro COOL': {'description': 'Turns off all heaters', 'gcode': '\nTURN_OFF_HEATERS'}, 'gcode_macro PREHEAT_PLA': {'description': 'Preheats extruder and bed for PLA', 'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(150)|float %}\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}'}, 'gcode_macro BED_TRAMMING_1': {'description': 'Heats bed and starts screw leveling', 'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nSCREWS_TILT_CALCULATE'}, 'gcode_macro BED_TRAMMING_2': {'description': 'Continues bed screw leveling', 'gcode': '\nSCREWS_TILT_CALCULATE'}, 'gcode_macro BED_MESH': {'description': 'Heats bed, makes a mesh, and saves it', 'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nBED_MESH_CLEAR\nBED_MESH_CALIBRATE\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro DISABLE_STEPPERS': {'description': 'Disables stepper motors', 'gcode': '\nM84 X Y E'}, 'gcode_macro PID_EXTRUDER': {'description': 'PID Tune for Extruder', 'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(200)|float %}\nPID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro PID_BED': {'description': 'PID Tune for Bed', 'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %}\nPID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro NOZZLE_MID': {'description': 'Moves nozzle to bed center', 'gcode': '\n{% set Z = params.Z|default(10)|float %}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X110 Y110 F6000'}, 'gcode_macro home_check': {'description': 'Checks if printer is homed', 'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nG28\n{% endif %}'}, 'gcode_macro SHOW_PRINT': {'description': 'Moves extruder out of the way', 'gcode': '\nHOME_CHECK\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG1 Z{ z_safe_lift }\nG1 X10 Y220 F4000'}, 'gcode_macro ZOffset_Setup': {'description': 'Starts Z-Offset Calibration', 'gcode': '\n{% if printer.heater_bed.temperature > 70 %}\n{action_respond_info("Bed temperature too high")}\n{% elif printer.extruder.temperature > 290 %}\n{action_respond_info("Extruder temperature too high")}\n{% else %}\nG28\nPROBE_CALIBRATE\n{% endif %}'}, 'gcode_macro Z_Down_01': {'description': 'Moves Z down by 0.1', 'gcode': '\nTESTZ Z=-.1'}, 'gcode_macro Z_Up_01': {'description': 'Moves Z up by 0.1', 'gcode': '\nTESTZ Z=+.1'}, 'gcode_macro Z_Low_Half': {'description': 'Sets Z between current and previous lower', 'gcode': '\nTESTZ Z=-'}, 'gcode_macro Z_High_Half': {'description': 'Sets Z between current and previous higher', 'gcode': '\nTESTZ Z=+'}, 'gcode_macro Accept_Save': {'description': 'Accepts Z-Offset', 'gcode': '\nACCEPT\nSAVE_CONFIG'}, 'gcode_macro Abort_Setup': {'description': 'Aborts Z-Offset', 'gcode': '\nABORT'}, 'gcode_macro G29': {'gcode': '\nG28\nbed_mesh_calibrate\nG1 X0 Y0 Z10 F4200'}, 'gcode_macro QUICK_Z_TEST': {'description': 'Move to center for manual Z adjustment', 'gcode': '\nG28\nG90\nG1 X150 Y150 Z5 F6000\nG1 Z1.0 F600'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f401xc_12345-if00', 'baud': 250000, 'restart_method': 'command', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC1', 'min_temp': 0.0, 'max_temp': 130.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 45.986, 'pid_ki': 0.757, 'pid_kd': 698.409, 'heater_pin': 'PA8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PC8'}, 'heater_fan hotend_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'PC7', 'fan_speed': 1.0}, 'controller_fan stepper_fan': {'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PC6', 'fan_speed': 1.0, 'idle_speed': 1.0, 'idle_timeout': 300, 'heater': ['extruder']}, 'bltouch': {'z_offset': 0.1, 'stow_on_each_sample': True, 'probe_with_touch_mode': False, 'control_pin': 'PC3', 'sensor_pin': 'PC2', 'pin_up_reports_not_triggered': True, 'pin_up_touch_mode_reports_triggered': True, 'pin_move_time': 0.68, 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 27.25, 'y_offset': -12.8, 'samples': 3, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [150.0, 150.0], 'z_hop': 10.0, 'z_hop_speed': 5.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'adaptive_margin': 0.0, 'probe_count': [7, 7], 'mesh_min': [30.0, 20.0], 'mesh_max': [300.0, 290.0], 'mesh_pps': [2, 3], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 100.0, 'fade_start': 1.0, 'fade_end': 0.0, 'split_delta_z': 0.025, 'move_check_distance': 5.0}, 'screws_tilt_adjust': {'screw1': [23.0, 63.0], 'screw1_name': 'front left', 'screw2': [223.0, 63.0], 'screw2_name': 'front right', 'screw3': [223.0, 263.0], 'screw3_name': 'back right', 'screw4': [23.0, 263.0], 'screw4_name': 'back left', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'neopixel my_neopixel': {'pin': 'PB7', 'chain_count': 1, 'color_order': ['GRB'], 'initial_red': 0.0, 'initial_green': 0.0, 'initial_blue': 0.0, 'initial_white': 0.0}, 'input_shaper': {'shaper_type': 'mzv', 'shaper_type_x': 'mzv', 'damping_ratio_x': 0.1, 'shaper_freq_x': 43.26, 'shaper_type_y': 'mzv', 'damping_ratio_y': 0.1, 'shaper_freq_y': 45.28}, 'virtual_sdcard': {'path': '/home/sonic/printer_data/gcodes', 'on_error_gcode': ''}, 'pause_resume': {'recover_velocity': 50.0}, 'idle_timeout': {'timeout': 86400.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'gcode_macro print_start': {'gcode': '\n\nG90\nG28\nLED_ON\n\n\nSET_GCODE_OFFSET Z_ADJUST=-2.185 MOVE=1\n\n\nBED_MESH_CLEAR\n\n\n{% if printer.exclude_object.objects|length > 0 %}\n{% set min_x = 9999 %}\n{% set min_y = 9999 %}\n{% set max_x = 0 %}\n{% set max_y = 0 %}\n{% for obj in printer.exclude_object.objects %}\n{% for p in obj.polygon %}\n{% set min_x = [min_x, p[0]]|min %}\n{% set min_y = [min_y, p[1]]|min %}\n{% set max_x = [max_x, p[0]]|max %}\n{% set max_y = [max_y, p[1]]|max %}\n{% endfor %}\n{% endfor %}\n\n{% set min_x = min_x - 2 %}\n{% set min_y = min_y - 2 %}\n{% set max_x = max_x + 2 %}\n{% set max_y = max_y + 2 %}\n\nBED_MESH_CALIBRATE AREA_START={min_x},{min_y} AREA_END={max_x},{max_y}\n{% else %}\n\nBED_MESH_CALIBRATE\n{% endif %}\n\n\nG1 Z5 F3000\nG1 Z0.2 F300\n\n\n_PURGE_LINE', 'description': 'G-Code macro'}, 'gcode_macro print_end': {'gcode': '\nM400\nG92 E0\nG1 E-2.0 F300\nG91\nG1 Z10 F600\nG90\nG1 X0 Y300 F6000\nM104 S0\nM140 S0\nM106 S0\nM84\nSET_GCODE_OFFSET Z=0\nFIRMWARE_RESTART', 'description': 'G-Code macro'}, 'gcode_macro _purge_line': {'gcode': '\nSAVE_GCODE_STATE NAME=Pre_Prime\nG90\nG92 E0\nG1 Z10.0 F3000\nG1 X10 Y10\nG1 Z0.24 F5000.0\nG1 X100 Y10 Z0.24 F1500.0 E35\nG92 E0\nG1 Z10 F6000\nRESTORE_GCODE_STATE NAME=Pre_Prime', 'description': 'G-Code macro'}, 'gcode_macro led_on': {'gcode': 'SET_LED LED=my_neopixel RED=1 GREEN=1 BLUE=1', 'description': 'G-Code macro'}, 'gcode_macro led_off': {'gcode': 'SET_LED LED=my_neopixel RED=0 GREEN=0 BLUE=0', 'description': 'G-Code macro'}, 'gcode_macro pause': {'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - 2.0) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\nPAUSE_BASE\nG91\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG1 E-{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print', 'variable_extrude': '1.0'}, 'gcode_macro resume': {'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY) %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG91\nG1 E{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print'}, 'gcode_macro cancel_print': {'gcode': '\nTURN_OFF_HEATERS\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z4.5 F300\nG90\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}\nG28 X Y\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\nG1 Y{y_park} F2000\nM84\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro unload_filament': {'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=UNLOAD_state\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG91\nG0 Z{ z_safe_lift }\nG92 E0\nG1 E5.0 F300\nG1 E-50 F{ 10 * 60 }\nG1 E-50 F{ 5 * 60 }\nRESTORE_GCODE_STATE NAME=UNLOAD_state\n{% endif %}', 'description': 'Unloads Filament from extruder'}, 'gcode_macro load_filament': {'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=LOAD_state\nG91\nG1 E50 F{ 5 * 60 }\nG4 P{ 0.9 * 1000 }\nG1 E25.0 F{ 5 * 60 }\n_ENABLE_FS\nRESTORE_GCODE_STATE NAME=LOAD_state\n{% endif %}', 'description': 'Loads filament into the extruder'}, 'gcode_macro _enable_fs': {'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=1', 'description': 'enables filament sensor'}, 'gcode_macro _disable_fs': {'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=0', 'description': 'disables filament sensor'}, 'gcode_macro heat': {'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}\n{% set Z = params.Z|default(50)|float %}\n{% set X = params.X|default(110)|float %}\n{% set Y = params.Y|default(110)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X{X} Y{Y} F6000', 'description': 'Heats up the extruder'}, 'gcode_macro cool': {'gcode': '\nTURN_OFF_HEATERS', 'description': 'Turns off all heaters'}, 'gcode_macro preheat_pla': {'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(150)|float %}\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}', 'description': 'Preheats extruder and bed for PLA'}, 'gcode_macro bed_tramming_1': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nSCREWS_TILT_CALCULATE', 'description': 'Heats bed and starts screw leveling'}, 'gcode_macro bed_tramming_2': {'gcode': '\nSCREWS_TILT_CALCULATE', 'description': 'Continues bed screw leveling'}, 'gcode_macro bed_mesh': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nBED_MESH_CLEAR\nBED_MESH_CALIBRATE\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'Heats bed, makes a mesh, and saves it'}, 'gcode_macro disable_steppers': {'gcode': '\nM84 X Y E', 'description': 'Disables stepper motors'}, 'gcode_macro pid_extruder': {'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(200)|float %}\nPID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'PID Tune for Extruder'}, 'gcode_macro pid_bed': {'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %}\nPID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'PID Tune for Bed'}, 'gcode_macro nozzle_mid': {'gcode': '\n{% set Z = params.Z|default(10)|float %}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X110 Y110 F6000', 'description': 'Moves nozzle to bed center'}, 'gcode_macro home_check': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nG28\n{% endif %}', 'description': 'Checks if printer is homed'}, 'gcode_macro show_print': {'gcode': '\nHOME_CHECK\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG1 Z{ z_safe_lift }\nG1 X10 Y220 F4000', 'description': 'Moves extruder out of the way'}, 'gcode_macro zoffset_setup': {'gcode': '\n{% if printer.heater_bed.temperature > 70 %}\n{action_respond_info("Bed temperature too high")}\n{% elif printer.extruder.temperature > 290 %}\n{action_respond_info("Extruder temperature too high")}\n{% else %}\nG28\nPROBE_CALIBRATE\n{% endif %}', 'description': 'Starts Z-Offset Calibration'}, 'gcode_macro z_down_01': {'gcode': '\nTESTZ Z=-.1', 'description': 'Moves Z down by 0.1'}, 'gcode_macro z_up_01': {'gcode': '\nTESTZ Z=+.1', 'description': 'Moves Z up by 0.1'}, 'gcode_macro z_low_half': {'gcode': '\nTESTZ Z=-', 'description': 'Sets Z between current and previous lower'}, 'gcode_macro z_high_half': {'gcode': '\nTESTZ Z=+', 'description': 'Sets Z between current and previous higher'}, 'gcode_macro accept_save': {'gcode': '\nACCEPT\nSAVE_CONFIG', 'description': 'Accepts Z-Offset'}, 'gcode_macro abort_setup': {'gcode': '\nABORT', 'description': 'Aborts Z-Offset'}, 'gcode_macro g29': {'gcode': '\nG28\nbed_mesh_calibrate\nG1 X0 Y0 Z10 F4200', 'description': 'G-Code macro'}, 'gcode_macro quick_z_test': {'gcode': '\nG28\nG90\nG1 X150 Y150 Z5 F6000\nG1 Z1.0 F600', 'description': 'Move to center for manual Z adjustment'}, 'printer': {'max_velocity': 300.0, 'max_accel': 6000.0, 'max_accel_to_decel': 3000.0, 'square_corner_velocity': 5.0, 'kinematics': 'cartesian', 'max_z_velocity': 5.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': '!PB14', 'dir_pin': 'PB13', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB15', 'endstop_pin': '!PA2', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'PB10', 'dir_pin': 'PB2', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB12', 'endstop_pin': '!PA1', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'PB0', 'dir_pin': '!PC5', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB1', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -10.0, 'position_max': 400.0, 'homing_speed': 5.0, 'second_homing_speed': 2.5, 'homing_retract_speed': 5.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC0', 'min_temp': 0.0, 'max_temp': 250.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 22.533, 'pid_ki': 1.113, 'pid_kd': 114.073, 'heater_pin': 'PC9', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 50.0, 'max_extrude_only_velocity': 79.82432411074329, 'max_extrude_only_accel': 1596.4864822148659, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PA7', 'pressure_advance': 0.05, 'pressure_advance_smooth_time': 0.06, 'dir_pin': 'PA6', 'rotation_distance': 7.191, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PC4'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-08-25 01:49:56,186 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-08-25 01:49:56,187 [printer.py:reinit()] - Klipper version: v0.12.0-116-g31de734d1
2025-08-25 01:49:56,187 [printer.py:reinit()] - # Extruders: 1
2025-08-25 01:49:56,187 [printer.py:reinit()] - # Temperature devices: 1
2025-08-25 01:49:56,188 [printer.py:reinit()] - # Fans: 3
2025-08-25 01:49:56,188 [printer.py:reinit()] - # Output pins: 0
2025-08-25 01:49:56,188 [printer.py:reinit()] - # Leds: 1
2025-08-25 01:49:56,208 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2025-08-25 01:49:56,210 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 01:49:56,472 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&controller_fan stepper_fan&heater_fan hotend_fan&neopixel my_neopixel
2025-08-25 01:49:56,477 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 01:49:56,477 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 01:49:56,478 [screen.py:init_klipper()] - Printer initialized
2025-08-25 01:49:56,478 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 01:49:56,478 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 01:49:56,483 [screen.py:show_panel()] - Reinitializing panel
2025-08-25 01:49:56,579 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 01:49:56,593 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 01:49:56,600 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 01:49:56,646 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 01:49:56,659 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2025-08-25 01:49:56,677 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 01:49:56,693 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2025-08-25 01:49:56,695 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 01:50:48,801 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-25 01:50:48,801 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-25 01:50:48,802 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-25 01:50:48,802 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-08-25 01:50:48,805 [screen.py:show_panel()] - Reinitializing panel
2025-08-25 01:50:48,868 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 01:50:52,131 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2025-08-25 01:50:52,144 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2025-08-25 01:50:52,145 [printer.py:configure_cameras()] - Cameras: []
2025-08-25 01:50:52,145 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-319-gf0ae517', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-08-25 01:50:52,160 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2025-08-25 01:50:52,180 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2025-08-25 01:50:52,182 [screen.py:init_klipper()] - {'configfile': {'config': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f401xc_12345-if00', 'restart_method': 'command'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '300', 'max_accel': '6000', 'square_corner_velocity': '5.0', 'max_z_velocity': '5', 'max_z_accel': '100'}, 'extruder': {'max_extrude_only_distance': '100.0', 'max_extrude_cross_section': '50.0', 'step_pin': 'PA7', 'dir_pin': 'PA6', 'enable_pin': '!PC4', 'microsteps': '16', 'rotation_distance': '7.1910', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'PC9', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'PC0', 'control': 'pid', 'pid_kp': '22.533', 'pid_ki': '1.113', 'pid_kd': '114.073', 'min_temp': '0', 'max_temp': '250', 'pressure_advance': '0.05', 'pressure_advance_smooth_time': '0.06'}, 'heater_bed': {'heater_pin': 'PA8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'PC1', 'control': 'pid', 'pid_kp': '45.986', 'pid_ki': '0.757', 'pid_kd': '698.409', 'min_temp': '0', 'max_temp': '130'}, 'fan': {'pin': 'PC8'}, 'heater_fan hotend_fan': {'pin': 'PC7', 'heater': 'extruder', 'heater_temp': '50.0'}, 'controller_fan stepper_fan': {'pin': 'PC6', 'idle_timeout': '300'}, 'stepper_x': {'step_pin': '!PB14', 'dir_pin': 'PB13', 'enable_pin': '!PB15', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '!PA2', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '50'}, 'stepper_y': {'step_pin': 'PB10', 'dir_pin': 'PB2', 'enable_pin': '!PB12', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '!PA1', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '50'}, 'stepper_z': {'step_pin': 'PB0', 'dir_pin': '!PC5', 'enable_pin': '!PB1', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_max': '400', 'position_min': '-10'}, 'bltouch': {'sensor_pin': 'PC2', 'control_pin': 'PC3', 'x_offset': '27.25', 'y_offset': '-12.8', 'z_offset': '0.1', 'speed': '10', 'samples': '3', 'samples_result': 'average'}, 'safe_z_home': {'home_xy_position': '150,150', 'speed': '100', 'z_hop': '10', 'z_hop_speed': '5'}, 'bed_mesh': {'speed': '100', 'mesh_min': '30, 20', 'mesh_max': '300, 290', 'algorithm': 'bicubic', 'probe_count': '7,7', 'mesh_pps': '2,3'}, 'screws_tilt_adjust': {'screw1': '23,63', 'screw1_name': 'front left', 'screw2': '223,63', 'screw2_name': 'front right', 'screw3': '223,263', 'screw3_name': 'back right', 'screw4': '23,263', 'screw4_name': 'back left', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'neopixel my_neopixel': {'pin': 'PB7', 'color_order': 'GRB', 'initial_red': '0.0', 'initial_green': '0.0', 'initial_blue': '0.0'}, 'input_shaper': {'shaper_freq_x': '43.26', 'shaper_freq_y': '45.28', 'shaper_type': 'mzv'}, 'virtual_sdcard': {'path': '/home/sonic/printer_data/gcodes'}, 'display_status': {}, 'pause_resume': {}, 'exclude_object': {}, 'idle_timeout': {'timeout': '86400'}, 'gcode_macro PRINT_START': {'gcode': '\n\nG90\nG28\nLED_ON\n\n\nSET_GCODE_OFFSET Z_ADJUST=-2.080 MOVE=1\n\n\nBED_MESH_CLEAR\n\n\n{% if printer.exclude_object.objects|length > 0 %}\n{% set min_x = 9999 %}\n{% set min_y = 9999 %}\n{% set max_x = 0 %}\n{% set max_y = 0 %}\n{% for obj in printer.exclude_object.objects %}\n{% for p in obj.polygon %}\n{% set min_x = [min_x, p[0]]|min %}\n{% set min_y = [min_y, p[1]]|min %}\n{% set max_x = [max_x, p[0]]|max %}\n{% set max_y = [max_y, p[1]]|max %}\n{% endfor %}\n{% endfor %}\n\n{% set min_x = min_x - 5 %}\n{% set min_y = min_y - 5 %}\n{% set max_x = max_x + 5 %}\n{% set max_y = max_y + 5 %}\n\nBED_MESH_CALIBRATE AREA_START={min_x},{min_y} AREA_END={max_x},{max_y}\n{% else %}\n\nBED_MESH_CALIBRATE\n{% endif %}\n\n\nG1 Z5 F3000\nG1 Z0.2 F300\n\n\n_PURGE_LINE'}, 'gcode_macro PRINT_END': {'gcode': '\nM400\nG92 E0\nG1 E-2.0 F300\nG91\nG1 Z10 F600\nG90\nG1 X0 Y300 F6000\nM104 S0\nM140 S0\nM106 S0\nM84\nSET_GCODE_OFFSET Z=0\nFIRMWARE_RESTART'}, 'gcode_macro _PURGE_LINE': {'gcode': '\nSAVE_GCODE_STATE NAME=Pre_Prime\nG90\nG92 E0\nG1 Z10.0 F3000\nG1 X10 Y10\nG1 Z0.24 F5000.0\nG1 X100 Y10 Z0.24 F1500.0 E35\nG92 E0\nG1 Z10 F6000\nRESTORE_GCODE_STATE NAME=Pre_Prime'}, 'gcode_macro LED_ON': {'gcode': 'SET_LED LED=my_neopixel RED=1 GREEN=1 BLUE=1'}, 'gcode_macro LED_OFF': {'gcode': 'SET_LED LED=my_neopixel RED=0 GREEN=0 BLUE=0'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'variable_extrude': '1.0', 'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - 2.0) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\nPAUSE_BASE\nG91\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG1 E-{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY) %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG91\nG1 E{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}'}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\nTURN_OFF_HEATERS\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z4.5 F300\nG90\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}\nG28 X Y\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\nG1 Y{y_park} F2000\nM84\nCANCEL_PRINT_BASE'}, 'gcode_macro UNLOAD_FILAMENT': {'description': 'Unloads Filament from extruder', 'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=UNLOAD_state\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG91\nG0 Z{ z_safe_lift }\nG92 E0\nG1 E5.0 F300\nG1 E-50 F{ 10 * 60 }\nG1 E-50 F{ 5 * 60 }\nRESTORE_GCODE_STATE NAME=UNLOAD_state\n{% endif %}'}, 'gcode_macro LOAD_FILAMENT': {'description': 'Loads filament into the extruder', 'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=LOAD_state\nG91\nG1 E50 F{ 5 * 60 }\nG4 P{ 0.9 * 1000 }\nG1 E25.0 F{ 5 * 60 }\n_ENABLE_FS\nRESTORE_GCODE_STATE NAME=LOAD_state\n{% endif %}'}, 'gcode_macro _ENABLE_FS': {'description': 'enables filament sensor', 'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=1'}, 'gcode_macro _DISABLE_FS': {'description': 'disables filament sensor', 'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=0'}, 'gcode_macro HEAT': {'description': 'Heats up the extruder', 'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}\n{% set Z = params.Z|default(50)|float %}\n{% set X = params.X|default(110)|float %}\n{% set Y = params.Y|default(110)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X{X} Y{Y} F6000'}, 'gcode_macro COOL': {'description': 'Turns off all heaters', 'gcode': '\nTURN_OFF_HEATERS'}, 'gcode_macro PREHEAT_PLA': {'description': 'Preheats extruder and bed for PLA', 'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(150)|float %}\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}'}, 'gcode_macro BED_TRAMMING_1': {'description': 'Heats bed and starts screw leveling', 'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nSCREWS_TILT_CALCULATE'}, 'gcode_macro BED_TRAMMING_2': {'description': 'Continues bed screw leveling', 'gcode': '\nSCREWS_TILT_CALCULATE'}, 'gcode_macro BED_MESH': {'description': 'Heats bed, makes a mesh, and saves it', 'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nBED_MESH_CLEAR\nBED_MESH_CALIBRATE\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro DISABLE_STEPPERS': {'description': 'Disables stepper motors', 'gcode': '\nM84 X Y E'}, 'gcode_macro PID_EXTRUDER': {'description': 'PID Tune for Extruder', 'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(200)|float %}\nPID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro PID_BED': {'description': 'PID Tune for Bed', 'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %}\nPID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro NOZZLE_MID': {'description': 'Moves nozzle to bed center', 'gcode': '\n{% set Z = params.Z|default(10)|float %}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X110 Y110 F6000'}, 'gcode_macro home_check': {'description': 'Checks if printer is homed', 'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nG28\n{% endif %}'}, 'gcode_macro SHOW_PRINT': {'description': 'Moves extruder out of the way', 'gcode': '\nHOME_CHECK\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG1 Z{ z_safe_lift }\nG1 X10 Y220 F4000'}, 'gcode_macro ZOffset_Setup': {'description': 'Starts Z-Offset Calibration', 'gcode': '\n{% if printer.heater_bed.temperature > 70 %}\n{action_respond_info("Bed temperature too high")}\n{% elif printer.extruder.temperature > 290 %}\n{action_respond_info("Extruder temperature too high")}\n{% else %}\nG28\nPROBE_CALIBRATE\n{% endif %}'}, 'gcode_macro Z_Down_01': {'description': 'Moves Z down by 0.1', 'gcode': '\nTESTZ Z=-.1'}, 'gcode_macro Z_Up_01': {'description': 'Moves Z up by 0.1', 'gcode': '\nTESTZ Z=+.1'}, 'gcode_macro Z_Low_Half': {'description': 'Sets Z between current and previous lower', 'gcode': '\nTESTZ Z=-'}, 'gcode_macro Z_High_Half': {'description': 'Sets Z between current and previous higher', 'gcode': '\nTESTZ Z=+'}, 'gcode_macro Accept_Save': {'description': 'Accepts Z-Offset', 'gcode': '\nACCEPT\nSAVE_CONFIG'}, 'gcode_macro Abort_Setup': {'description': 'Aborts Z-Offset', 'gcode': '\nABORT'}, 'gcode_macro G29': {'gcode': '\nG28\nbed_mesh_calibrate\nG1 X0 Y0 Z10 F4200'}, 'gcode_macro QUICK_Z_TEST': {'description': 'Move to center for manual Z adjustment', 'gcode': '\nG28\nG90\nG1 X150 Y150 Z5 F6000\nG1 Z1.0 F600'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f401xc_12345-if00', 'baud': 250000, 'restart_method': 'command', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC1', 'min_temp': 0.0, 'max_temp': 130.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 45.986, 'pid_ki': 0.757, 'pid_kd': 698.409, 'heater_pin': 'PA8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PC8'}, 'heater_fan hotend_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'PC7', 'fan_speed': 1.0}, 'controller_fan stepper_fan': {'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PC6', 'fan_speed': 1.0, 'idle_speed': 1.0, 'idle_timeout': 300, 'heater': ['extruder']}, 'bltouch': {'z_offset': 0.1, 'stow_on_each_sample': True, 'probe_with_touch_mode': False, 'control_pin': 'PC3', 'sensor_pin': 'PC2', 'pin_up_reports_not_triggered': True, 'pin_up_touch_mode_reports_triggered': True, 'pin_move_time': 0.68, 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 27.25, 'y_offset': -12.8, 'samples': 3, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [150.0, 150.0], 'z_hop': 10.0, 'z_hop_speed': 5.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'adaptive_margin': 0.0, 'probe_count': [7, 7], 'mesh_min': [30.0, 20.0], 'mesh_max': [300.0, 290.0], 'mesh_pps': [2, 3], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 100.0, 'fade_start': 1.0, 'fade_end': 0.0, 'split_delta_z': 0.025, 'move_check_distance': 5.0}, 'screws_tilt_adjust': {'screw1': [23.0, 63.0], 'screw1_name': 'front left', 'screw2': [223.0, 63.0], 'screw2_name': 'front right', 'screw3': [223.0, 263.0], 'screw3_name': 'back right', 'screw4': [23.0, 263.0], 'screw4_name': 'back left', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'neopixel my_neopixel': {'pin': 'PB7', 'chain_count': 1, 'color_order': ['GRB'], 'initial_red': 0.0, 'initial_green': 0.0, 'initial_blue': 0.0, 'initial_white': 0.0}, 'input_shaper': {'shaper_type': 'mzv', 'shaper_type_x': 'mzv', 'damping_ratio_x': 0.1, 'shaper_freq_x': 43.26, 'shaper_type_y': 'mzv', 'damping_ratio_y': 0.1, 'shaper_freq_y': 45.28}, 'virtual_sdcard': {'path': '/home/sonic/printer_data/gcodes', 'on_error_gcode': ''}, 'pause_resume': {'recover_velocity': 50.0}, 'idle_timeout': {'timeout': 86400.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'gcode_macro print_start': {'gcode': '\n\nG90\nG28\nLED_ON\n\n\nSET_GCODE_OFFSET Z_ADJUST=-2.080 MOVE=1\n\n\nBED_MESH_CLEAR\n\n\n{% if printer.exclude_object.objects|length > 0 %}\n{% set min_x = 9999 %}\n{% set min_y = 9999 %}\n{% set max_x = 0 %}\n{% set max_y = 0 %}\n{% for obj in printer.exclude_object.objects %}\n{% for p in obj.polygon %}\n{% set min_x = [min_x, p[0]]|min %}\n{% set min_y = [min_y, p[1]]|min %}\n{% set max_x = [max_x, p[0]]|max %}\n{% set max_y = [max_y, p[1]]|max %}\n{% endfor %}\n{% endfor %}\n\n{% set min_x = min_x - 5 %}\n{% set min_y = min_y - 5 %}\n{% set max_x = max_x + 5 %}\n{% set max_y = max_y + 5 %}\n\nBED_MESH_CALIBRATE AREA_START={min_x},{min_y} AREA_END={max_x},{max_y}\n{% else %}\n\nBED_MESH_CALIBRATE\n{% endif %}\n\n\nG1 Z5 F3000\nG1 Z0.2 F300\n\n\n_PURGE_LINE', 'description': 'G-Code macro'}, 'gcode_macro print_end': {'gcode': '\nM400\nG92 E0\nG1 E-2.0 F300\nG91\nG1 Z10 F600\nG90\nG1 X0 Y300 F6000\nM104 S0\nM140 S0\nM106 S0\nM84\nSET_GCODE_OFFSET Z=0\nFIRMWARE_RESTART', 'description': 'G-Code macro'}, 'gcode_macro _purge_line': {'gcode': '\nSAVE_GCODE_STATE NAME=Pre_Prime\nG90\nG92 E0\nG1 Z10.0 F3000\nG1 X10 Y10\nG1 Z0.24 F5000.0\nG1 X100 Y10 Z0.24 F1500.0 E35\nG92 E0\nG1 Z10 F6000\nRESTORE_GCODE_STATE NAME=Pre_Prime', 'description': 'G-Code macro'}, 'gcode_macro led_on': {'gcode': 'SET_LED LED=my_neopixel RED=1 GREEN=1 BLUE=1', 'description': 'G-Code macro'}, 'gcode_macro led_off': {'gcode': 'SET_LED LED=my_neopixel RED=0 GREEN=0 BLUE=0', 'description': 'G-Code macro'}, 'gcode_macro pause': {'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - 2.0) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\nPAUSE_BASE\nG91\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG1 E-{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print', 'variable_extrude': '1.0'}, 'gcode_macro resume': {'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY) %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG91\nG1 E{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print'}, 'gcode_macro cancel_print': {'gcode': '\nTURN_OFF_HEATERS\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z4.5 F300\nG90\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}\nG28 X Y\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\nG1 Y{y_park} F2000\nM84\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro unload_filament': {'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=UNLOAD_state\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG91\nG0 Z{ z_safe_lift }\nG92 E0\nG1 E5.0 F300\nG1 E-50 F{ 10 * 60 }\nG1 E-50 F{ 5 * 60 }\nRESTORE_GCODE_STATE NAME=UNLOAD_state\n{% endif %}', 'description': 'Unloads Filament from extruder'}, 'gcode_macro load_filament': {'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=LOAD_state\nG91\nG1 E50 F{ 5 * 60 }\nG4 P{ 0.9 * 1000 }\nG1 E25.0 F{ 5 * 60 }\n_ENABLE_FS\nRESTORE_GCODE_STATE NAME=LOAD_state\n{% endif %}', 'description': 'Loads filament into the extruder'}, 'gcode_macro _enable_fs': {'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=1', 'description': 'enables filament sensor'}, 'gcode_macro _disable_fs': {'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=0', 'description': 'disables filament sensor'}, 'gcode_macro heat': {'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}\n{% set Z = params.Z|default(50)|float %}\n{% set X = params.X|default(110)|float %}\n{% set Y = params.Y|default(110)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X{X} Y{Y} F6000', 'description': 'Heats up the extruder'}, 'gcode_macro cool': {'gcode': '\nTURN_OFF_HEATERS', 'description': 'Turns off all heaters'}, 'gcode_macro preheat_pla': {'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(150)|float %}\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}', 'description': 'Preheats extruder and bed for PLA'}, 'gcode_macro bed_tramming_1': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nSCREWS_TILT_CALCULATE', 'description': 'Heats bed and starts screw leveling'}, 'gcode_macro bed_tramming_2': {'gcode': '\nSCREWS_TILT_CALCULATE', 'description': 'Continues bed screw leveling'}, 'gcode_macro bed_mesh': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nBED_MESH_CLEAR\nBED_MESH_CALIBRATE\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'Heats bed, makes a mesh, and saves it'}, 'gcode_macro disable_steppers': {'gcode': '\nM84 X Y E', 'description': 'Disables stepper motors'}, 'gcode_macro pid_extruder': {'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(200)|float %}\nPID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'PID Tune for Extruder'}, 'gcode_macro pid_bed': {'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %}\nPID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'PID Tune for Bed'}, 'gcode_macro nozzle_mid': {'gcode': '\n{% set Z = params.Z|default(10)|float %}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X110 Y110 F6000', 'description': 'Moves nozzle to bed center'}, 'gcode_macro home_check': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nG28\n{% endif %}', 'description': 'Checks if printer is homed'}, 'gcode_macro show_print': {'gcode': '\nHOME_CHECK\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG1 Z{ z_safe_lift }\nG1 X10 Y220 F4000', 'description': 'Moves extruder out of the way'}, 'gcode_macro zoffset_setup': {'gcode': '\n{% if printer.heater_bed.temperature > 70 %}\n{action_respond_info("Bed temperature too high")}\n{% elif printer.extruder.temperature > 290 %}\n{action_respond_info("Extruder temperature too high")}\n{% else %}\nG28\nPROBE_CALIBRATE\n{% endif %}', 'description': 'Starts Z-Offset Calibration'}, 'gcode_macro z_down_01': {'gcode': '\nTESTZ Z=-.1', 'description': 'Moves Z down by 0.1'}, 'gcode_macro z_up_01': {'gcode': '\nTESTZ Z=+.1', 'description': 'Moves Z up by 0.1'}, 'gcode_macro z_low_half': {'gcode': '\nTESTZ Z=-', 'description': 'Sets Z between current and previous lower'}, 'gcode_macro z_high_half': {'gcode': '\nTESTZ Z=+', 'description': 'Sets Z between current and previous higher'}, 'gcode_macro accept_save': {'gcode': '\nACCEPT\nSAVE_CONFIG', 'description': 'Accepts Z-Offset'}, 'gcode_macro abort_setup': {'gcode': '\nABORT', 'description': 'Aborts Z-Offset'}, 'gcode_macro g29': {'gcode': '\nG28\nbed_mesh_calibrate\nG1 X0 Y0 Z10 F4200', 'description': 'G-Code macro'}, 'gcode_macro quick_z_test': {'gcode': '\nG28\nG90\nG1 X150 Y150 Z5 F6000\nG1 Z1.0 F600', 'description': 'Move to center for manual Z adjustment'}, 'printer': {'max_velocity': 300.0, 'max_accel': 6000.0, 'max_accel_to_decel': 3000.0, 'square_corner_velocity': 5.0, 'kinematics': 'cartesian', 'max_z_velocity': 5.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': '!PB14', 'dir_pin': 'PB13', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB15', 'endstop_pin': '!PA2', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'PB10', 'dir_pin': 'PB2', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB12', 'endstop_pin': '!PA1', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'PB0', 'dir_pin': '!PC5', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB1', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -10.0, 'position_max': 400.0, 'homing_speed': 5.0, 'second_homing_speed': 2.5, 'homing_retract_speed': 5.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC0', 'min_temp': 0.0, 'max_temp': 250.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 22.533, 'pid_ki': 1.113, 'pid_kd': 114.073, 'heater_pin': 'PC9', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 50.0, 'max_extrude_only_velocity': 79.82432411074329, 'max_extrude_only_accel': 1596.4864822148659, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PA7', 'pressure_advance': 0.05, 'pressure_advance_smooth_time': 0.06, 'dir_pin': 'PA6', 'rotation_distance': 7.191, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PC4'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-08-25 01:50:52,184 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-08-25 01:50:52,186 [printer.py:reinit()] - Klipper version: v0.12.0-116-g31de734d1
2025-08-25 01:50:52,186 [printer.py:reinit()] - # Extruders: 1
2025-08-25 01:50:52,186 [printer.py:reinit()] - # Temperature devices: 1
2025-08-25 01:50:52,186 [printer.py:reinit()] - # Fans: 3
2025-08-25 01:50:52,186 [printer.py:reinit()] - # Output pins: 0
2025-08-25 01:50:52,186 [printer.py:reinit()] - # Leds: 1
2025-08-25 01:50:52,203 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2025-08-25 01:50:52,205 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 01:50:52,436 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&controller_fan stepper_fan&heater_fan hotend_fan&neopixel my_neopixel
2025-08-25 01:50:52,439 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 01:50:52,439 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 01:50:52,440 [screen.py:init_klipper()] - Printer initialized
2025-08-25 01:50:52,440 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 01:50:52,441 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 01:50:52,445 [screen.py:show_panel()] - Reinitializing panel
2025-08-25 01:50:52,543 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 01:50:52,557 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 01:50:52,564 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 01:50:52,609 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 01:50:52,624 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2025-08-25 01:50:52,641 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 01:50:52,655 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2025-08-25 01:50:52,657 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 01:51:13,756 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-08-25 01:51:13,757 [printer.py:change_state()] - Adding callback for state: printing
2025-08-25 01:51:13,774 [screen.py:_load_panel()] - Loading panel: job_status
2025-08-25 01:51:13,968 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-25 01:51:13,975 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-08-25 01:51:13,997 [job_status.py:update_file_metadata()] - Update Metadata. File: xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m21s.gcode Size: 576512
2025-08-25 01:51:14,015 [job_status.py:show_file_thumbnail()] - xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m21s.gcode
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             2025-08-25 01:51:50,366 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-08-25 01:51:50,373 [functions.py:log_start()] - KlipperScreen Version: v0.3.9-11-g2c778cce
2025-08-25 01:51:50,373 [functions.py:log_start()] - Python version: 3.9
2025-08-25 01:51:50,545 [config.py:get_config_file_location()] - Passed config (-c): .
2025-08-25 01:51:50,547 [config.py:__init__()] - Config path location: /home/sonic/KlipperScreen/ks_includes/defaults.conf
2025-08-25 01:51:50,559 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2025-08-25 01:51:50,681 [config.py:create_translations()] - Selected lang: None OS lang: en_US
2025-08-25 01:51:50,681 [config.py:install_language()] - Using lang en
2025-08-25 01:51:50,699 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-08-25 01:51:50,703 [screen.py:__init__()] - Screen resolution: 1024x600
2025-08-25 01:51:50,704 [KlippyGtk.py:__init__()] - Font size: 20.7 (medium)
2025-08-25 01:51:51,250 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2025-08-25 01:51:51,262 [screen.py:set_screenblanking_timeout()] - Using DPMS
2025-08-25 01:51:51,271 [screen.py:initial_connection()] - Default printer: None
2025-08-25 01:51:51,321 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-08-25 01:51:51,322 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-08-25 01:51:51,384 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 01:51:51,394 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-08-25 01:51:51,409 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-08-25 01:52:01,882 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-08-25 01:52:01,889 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-08-25 01:52:11,881 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-08-25 01:52:11,888 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-08-25 01:52:21,880 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-08-25 01:52:21,894 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2025-08-25 01:52:21,907 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/access/oneshot_token
2025-08-25 01:52:21,908 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-08-25 01:52:21,917 [_logging.py:info()] - Websocket connected
2025-08-25 01:52:21,917 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-08-25 01:52:21,931 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2025-08-25 01:52:21,944 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2025-08-25 01:52:21,945 [printer.py:configure_cameras()] - Cameras: []
2025-08-25 01:52:21,945 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-319-gf0ae517', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-08-25 01:52:21,959 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2025-08-25 01:52:22,183 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2025-08-25 01:52:22,185 [screen.py:init_klipper()] - {'configfile': {'config': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f401xc_12345-if00', 'restart_method': 'command'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '300', 'max_accel': '6000', 'square_corner_velocity': '5.0', 'max_z_velocity': '5', 'max_z_accel': '100'}, 'extruder': {'max_extrude_only_distance': '100.0', 'max_extrude_cross_section': '50.0', 'step_pin': 'PA7', 'dir_pin': 'PA6', 'enable_pin': '!PC4', 'microsteps': '16', 'rotation_distance': '7.1910', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'PC9', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'PC0', 'control': 'pid', 'pid_kp': '22.533', 'pid_ki': '1.113', 'pid_kd': '114.073', 'min_temp': '0', 'max_temp': '250', 'pressure_advance': '0.05', 'pressure_advance_smooth_time': '0.06'}, 'heater_bed': {'heater_pin': 'PA8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'PC1', 'control': 'pid', 'pid_kp': '45.986', 'pid_ki': '0.757', 'pid_kd': '698.409', 'min_temp': '0', 'max_temp': '130'}, 'fan': {'pin': 'PC8'}, 'heater_fan hotend_fan': {'pin': 'PC7', 'heater': 'extruder', 'heater_temp': '50.0'}, 'controller_fan stepper_fan': {'pin': 'PC6', 'idle_timeout': '300'}, 'stepper_x': {'step_pin': '!PB14', 'dir_pin': 'PB13', 'enable_pin': '!PB15', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '!PA2', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '50'}, 'stepper_y': {'step_pin': 'PB10', 'dir_pin': 'PB2', 'enable_pin': '!PB12', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '!PA1', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '50'}, 'stepper_z': {'step_pin': 'PB0', 'dir_pin': '!PC5', 'enable_pin': '!PB1', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_max': '400', 'position_min': '-10'}, 'bltouch': {'sensor_pin': 'PC2', 'control_pin': 'PC3', 'x_offset': '27.25', 'y_offset': '-12.8', 'z_offset': '0.1', 'speed': '10', 'samples': '3', 'samples_result': 'average'}, 'safe_z_home': {'home_xy_position': '150,150', 'speed': '100', 'z_hop': '10', 'z_hop_speed': '5'}, 'bed_mesh': {'speed': '100', 'mesh_min': '30, 20', 'mesh_max': '300, 290', 'algorithm': 'bicubic', 'probe_count': '7,7', 'mesh_pps': '2,3'}, 'screws_tilt_adjust': {'screw1': '23,63', 'screw1_name': 'front left', 'screw2': '223,63', 'screw2_name': 'front right', 'screw3': '223,263', 'screw3_name': 'back right', 'screw4': '23,263', 'screw4_name': 'back left', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'neopixel my_neopixel': {'pin': 'PB7', 'color_order': 'GRB', 'initial_red': '0.0', 'initial_green': '0.0', 'initial_blue': '0.0'}, 'input_shaper': {'shaper_freq_x': '43.26', 'shaper_freq_y': '45.28', 'shaper_type': 'mzv'}, 'virtual_sdcard': {'path': '/home/sonic/printer_data/gcodes'}, 'display_status': {}, 'pause_resume': {}, 'exclude_object': {}, 'idle_timeout': {'timeout': '86400'}, 'gcode_macro PRINT_START': {'gcode': '\n\nG90\nG28\nLED_ON\n\n\nSET_GCODE_OFFSET Z_ADJUST=-2.080 MOVE=1\n\n\nBED_MESH_CLEAR\n\n\n{% if printer.exclude_object.objects|length > 0 %}\n{% set min_x = 9999 %}\n{% set min_y = 9999 %}\n{% set max_x = 0 %}\n{% set max_y = 0 %}\n{% for obj in printer.exclude_object.objects %}\n{% for p in obj.polygon %}\n{% set min_x = [min_x, p[0]]|min %}\n{% set min_y = [min_y, p[1]]|min %}\n{% set max_x = [max_x, p[0]]|max %}\n{% set max_y = [max_y, p[1]]|max %}\n{% endfor %}\n{% endfor %}\n\n{% set min_x = min_x - 5 %}\n{% set min_y = min_y - 5 %}\n{% set max_x = max_x + 5 %}\n{% set max_y = max_y + 5 %}\n\nBED_MESH_CALIBRATE AREA_START={min_x},{min_y} AREA_END={max_x},{max_y}\n{% else %}\n\nBED_MESH_CALIBRATE\n{% endif %}\n\n\nG1 Z5 F3000\nG1 Z0.2 F300\n\n\n_PURGE_LINE'}, 'gcode_macro PRINT_END': {'gcode': '\nM400\nG92 E0\nG1 E-2.0 F300\nG91\nG1 Z10 F600\nG90\nG1 X0 Y300 F6000\nM104 S0\nM140 S0\nM106 S0\nM84\nSET_GCODE_OFFSET Z=0\nFIRMWARE_RESTART'}, 'gcode_macro _PURGE_LINE': {'gcode': '\nSAVE_GCODE_STATE NAME=Pre_Prime\nG90\nG92 E0\nG1 Z10.0 F3000\nG1 X10 Y10\nG1 Z0.24 F5000.0\nG1 X100 Y10 Z0.24 F1500.0 E35\nG92 E0\nG1 Z10 F6000\nRESTORE_GCODE_STATE NAME=Pre_Prime'}, 'gcode_macro LED_ON': {'gcode': 'SET_LED LED=my_neopixel RED=1 GREEN=1 BLUE=1'}, 'gcode_macro LED_OFF': {'gcode': 'SET_LED LED=my_neopixel RED=0 GREEN=0 BLUE=0'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'variable_extrude': '1.0', 'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - 2.0) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\nPAUSE_BASE\nG91\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG1 E-{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY) %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG91\nG1 E{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}'}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\nTURN_OFF_HEATERS\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z4.5 F300\nG90\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}\nG28 X Y\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\nG1 Y{y_park} F2000\nM84\nCANCEL_PRINT_BASE'}, 'gcode_macro UNLOAD_FILAMENT': {'description': 'Unloads Filament from extruder', 'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=UNLOAD_state\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG91\nG0 Z{ z_safe_lift }\nG92 E0\nG1 E5.0 F300\nG1 E-50 F{ 10 * 60 }\nG1 E-50 F{ 5 * 60 }\nRESTORE_GCODE_STATE NAME=UNLOAD_state\n{% endif %}'}, 'gcode_macro LOAD_FILAMENT': {'description': 'Loads filament into the extruder', 'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=LOAD_state\nG91\nG1 E50 F{ 5 * 60 }\nG4 P{ 0.9 * 1000 }\nG1 E25.0 F{ 5 * 60 }\n_ENABLE_FS\nRESTORE_GCODE_STATE NAME=LOAD_state\n{% endif %}'}, 'gcode_macro _ENABLE_FS': {'description': 'enables filament sensor', 'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=1'}, 'gcode_macro _DISABLE_FS': {'description': 'disables filament sensor', 'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=0'}, 'gcode_macro HEAT': {'description': 'Heats up the extruder', 'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}\n{% set Z = params.Z|default(50)|float %}\n{% set X = params.X|default(110)|float %}\n{% set Y = params.Y|default(110)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X{X} Y{Y} F6000'}, 'gcode_macro COOL': {'description': 'Turns off all heaters', 'gcode': '\nTURN_OFF_HEATERS'}, 'gcode_macro PREHEAT_PLA': {'description': 'Preheats extruder and bed for PLA', 'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(150)|float %}\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}'}, 'gcode_macro BED_TRAMMING_1': {'description': 'Heats bed and starts screw leveling', 'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nSCREWS_TILT_CALCULATE'}, 'gcode_macro BED_TRAMMING_2': {'description': 'Continues bed screw leveling', 'gcode': '\nSCREWS_TILT_CALCULATE'}, 'gcode_macro BED_MESH': {'description': 'Heats bed, makes a mesh, and saves it', 'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nBED_MESH_CLEAR\nBED_MESH_CALIBRATE\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro DISABLE_STEPPERS': {'description': 'Disables stepper motors', 'gcode': '\nM84 X Y E'}, 'gcode_macro PID_EXTRUDER': {'description': 'PID Tune for Extruder', 'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(200)|float %}\nPID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro PID_BED': {'description': 'PID Tune for Bed', 'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %}\nPID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG'}, 'gcode_macro NOZZLE_MID': {'description': 'Moves nozzle to bed center', 'gcode': '\n{% set Z = params.Z|default(10)|float %}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X110 Y110 F6000'}, 'gcode_macro home_check': {'description': 'Checks if printer is homed', 'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nG28\n{% endif %}'}, 'gcode_macro SHOW_PRINT': {'description': 'Moves extruder out of the way', 'gcode': '\nHOME_CHECK\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG1 Z{ z_safe_lift }\nG1 X10 Y220 F4000'}, 'gcode_macro ZOffset_Setup': {'description': 'Starts Z-Offset Calibration', 'gcode': '\n{% if printer.heater_bed.temperature > 70 %}\n{action_respond_info("Bed temperature too high")}\n{% elif printer.extruder.temperature > 290 %}\n{action_respond_info("Extruder temperature too high")}\n{% else %}\nG28\nPROBE_CALIBRATE\n{% endif %}'}, 'gcode_macro Z_Down_01': {'description': 'Moves Z down by 0.1', 'gcode': '\nTESTZ Z=-.1'}, 'gcode_macro Z_Up_01': {'description': 'Moves Z up by 0.1', 'gcode': '\nTESTZ Z=+.1'}, 'gcode_macro Z_Low_Half': {'description': 'Sets Z between current and previous lower', 'gcode': '\nTESTZ Z=-'}, 'gcode_macro Z_High_Half': {'description': 'Sets Z between current and previous higher', 'gcode': '\nTESTZ Z=+'}, 'gcode_macro Accept_Save': {'description': 'Accepts Z-Offset', 'gcode': '\nACCEPT\nSAVE_CONFIG'}, 'gcode_macro Abort_Setup': {'description': 'Aborts Z-Offset', 'gcode': '\nABORT'}, 'gcode_macro G29': {'gcode': '\nG28\nbed_mesh_calibrate\nG1 X0 Y0 Z10 F4200'}, 'gcode_macro QUICK_Z_TEST': {'description': 'Move to center for manual Z adjustment', 'gcode': '\nG28\nG90\nG1 X150 Y150 Z5 F6000\nG1 Z1.0 F600'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-Klipper_stm32f401xc_12345-if00', 'baud': 250000, 'restart_method': 'command', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC1', 'min_temp': 0.0, 'max_temp': 130.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 45.986, 'pid_ki': 0.757, 'pid_kd': 698.409, 'heater_pin': 'PA8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PC8'}, 'heater_fan hotend_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'PC7', 'fan_speed': 1.0}, 'controller_fan stepper_fan': {'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'PC6', 'fan_speed': 1.0, 'idle_speed': 1.0, 'idle_timeout': 300, 'heater': ['extruder']}, 'bltouch': {'z_offset': 0.1, 'stow_on_each_sample': True, 'probe_with_touch_mode': False, 'control_pin': 'PC3', 'sensor_pin': 'PC2', 'pin_up_reports_not_triggered': True, 'pin_up_touch_mode_reports_triggered': True, 'pin_move_time': 0.68, 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 27.25, 'y_offset': -12.8, 'samples': 3, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [150.0, 150.0], 'z_hop': 10.0, 'z_hop_speed': 5.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'adaptive_margin': 0.0, 'probe_count': [7, 7], 'mesh_min': [30.0, 20.0], 'mesh_max': [300.0, 290.0], 'mesh_pps': [2, 3], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 100.0, 'fade_start': 1.0, 'fade_end': 0.0, 'split_delta_z': 0.025, 'move_check_distance': 5.0}, 'screws_tilt_adjust': {'screw1': [23.0, 63.0], 'screw1_name': 'front left', 'screw2': [223.0, 63.0], 'screw2_name': 'front right', 'screw3': [223.0, 263.0], 'screw3_name': 'back right', 'screw4': [23.0, 263.0], 'screw4_name': 'back left', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'neopixel my_neopixel': {'pin': 'PB7', 'chain_count': 1, 'color_order': ['GRB'], 'initial_red': 0.0, 'initial_green': 0.0, 'initial_blue': 0.0, 'initial_white': 0.0}, 'input_shaper': {'shaper_type': 'mzv', 'shaper_type_x': 'mzv', 'damping_ratio_x': 0.1, 'shaper_freq_x': 43.26, 'shaper_type_y': 'mzv', 'damping_ratio_y': 0.1, 'shaper_freq_y': 45.28}, 'virtual_sdcard': {'path': '/home/sonic/printer_data/gcodes', 'on_error_gcode': ''}, 'pause_resume': {'recover_velocity': 50.0}, 'idle_timeout': {'timeout': 86400.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'gcode_macro print_start': {'gcode': '\n\nG90\nG28\nLED_ON\n\n\nSET_GCODE_OFFSET Z_ADJUST=-2.080 MOVE=1\n\n\nBED_MESH_CLEAR\n\n\n{% if printer.exclude_object.objects|length > 0 %}\n{% set min_x = 9999 %}\n{% set min_y = 9999 %}\n{% set max_x = 0 %}\n{% set max_y = 0 %}\n{% for obj in printer.exclude_object.objects %}\n{% for p in obj.polygon %}\n{% set min_x = [min_x, p[0]]|min %}\n{% set min_y = [min_y, p[1]]|min %}\n{% set max_x = [max_x, p[0]]|max %}\n{% set max_y = [max_y, p[1]]|max %}\n{% endfor %}\n{% endfor %}\n\n{% set min_x = min_x - 5 %}\n{% set min_y = min_y - 5 %}\n{% set max_x = max_x + 5 %}\n{% set max_y = max_y + 5 %}\n\nBED_MESH_CALIBRATE AREA_START={min_x},{min_y} AREA_END={max_x},{max_y}\n{% else %}\n\nBED_MESH_CALIBRATE\n{% endif %}\n\n\nG1 Z5 F3000\nG1 Z0.2 F300\n\n\n_PURGE_LINE', 'description': 'G-Code macro'}, 'gcode_macro print_end': {'gcode': '\nM400\nG92 E0\nG1 E-2.0 F300\nG91\nG1 Z10 F600\nG90\nG1 X0 Y300 F6000\nM104 S0\nM140 S0\nM106 S0\nM84\nSET_GCODE_OFFSET Z=0\nFIRMWARE_RESTART', 'description': 'G-Code macro'}, 'gcode_macro _purge_line': {'gcode': '\nSAVE_GCODE_STATE NAME=Pre_Prime\nG90\nG92 E0\nG1 Z10.0 F3000\nG1 X10 Y10\nG1 Z0.24 F5000.0\nG1 X100 Y10 Z0.24 F1500.0 E35\nG92 E0\nG1 Z10 F6000\nRESTORE_GCODE_STATE NAME=Pre_Prime', 'description': 'G-Code macro'}, 'gcode_macro led_on': {'gcode': 'SET_LED LED=my_neopixel RED=1 GREEN=1 BLUE=1', 'description': 'G-Code macro'}, 'gcode_macro led_off': {'gcode': 'SET_LED LED=my_neopixel RED=0 GREEN=0 BLUE=0', 'description': 'G-Code macro'}, 'gcode_macro pause': {'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - 2.0) %}\n{% set z_safe = 2.0 %}\n{% else %}\n{% set z_safe = max_z - act_z %}\n{% endif %}\nPAUSE_BASE\nG91\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG1 E-{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\n{% if "xyz" in printer.toolhead.homed_axes %}\nG1 Z{z_safe} F900\nG90\nG1 X{x_park} Y{y_park} F6000\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print', 'variable_extrude': '1.0'}, 'gcode_macro resume': {'gcode': '\n{% set E = printer["gcode_macro PAUSE"].extrude|float %}\n{% if \'VELOCITY\' in params|upper %}\n{% set get_params = (\'VELOCITY=\' + params.VELOCITY) %}\n{%else %}\n{% set get_params = "" %}\n{% endif %}\n{% if printer.extruder.can_extrude|lower == \'true\' %}\nG91\nG1 E{E} F2100\n{% else %}\n{action_respond_info("Extruder not hot enough")}\n{% endif %}\nRESUME_BASE {get_params}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print'}, 'gcode_macro cancel_print': {'gcode': '\nTURN_OFF_HEATERS\n{% if "xyz" in printer.toolhead.homed_axes %}\nG91\nG1 Z4.5 F300\nG90\n{% else %}\n{action_respond_info("Printer not homed")}\n{% endif %}\nG28 X Y\n{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}\nG1 Y{y_park} F2000\nM84\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro unload_filament': {'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=UNLOAD_state\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG91\nG0 Z{ z_safe_lift }\nG92 E0\nG1 E5.0 F300\nG1 E-50 F{ 10 * 60 }\nG1 E-50 F{ 5 * 60 }\nRESTORE_GCODE_STATE NAME=UNLOAD_state\n{% endif %}', 'description': 'Unloads Filament from extruder'}, 'gcode_macro load_filament': {'gcode': '\n{% if printer.extruder.temperature < 180 %}\n{action_respond_info("Extruder temperature too low")}\n{% else %}\nSAVE_GCODE_STATE NAME=LOAD_state\nG91\nG1 E50 F{ 5 * 60 }\nG4 P{ 0.9 * 1000 }\nG1 E25.0 F{ 5 * 60 }\n_ENABLE_FS\nRESTORE_GCODE_STATE NAME=LOAD_state\n{% endif %}', 'description': 'Loads filament into the extruder'}, 'gcode_macro _enable_fs': {'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=1', 'description': 'enables filament sensor'}, 'gcode_macro _disable_fs': {'gcode': '\nSET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=0', 'description': 'disables filament sensor'}, 'gcode_macro heat': {'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}\n{% set Z = params.Z|default(50)|float %}\n{% set X = params.X|default(110)|float %}\n{% set Y = params.Y|default(110)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X{X} Y{Y} F6000', 'description': 'Heats up the extruder'}, 'gcode_macro cool': {'gcode': '\nTURN_OFF_HEATERS', 'description': 'Turns off all heaters'}, 'gcode_macro preheat_pla': {'gcode': '\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(150)|float %}\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}', 'description': 'Preheats extruder and bed for PLA'}, 'gcode_macro bed_tramming_1': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nSCREWS_TILT_CALCULATE', 'description': 'Heats bed and starts screw leveling'}, 'gcode_macro bed_tramming_2': {'gcode': '\nSCREWS_TILT_CALCULATE', 'description': 'Continues bed screw leveling'}, 'gcode_macro bed_mesh': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}\nHOME_CHECK\nM190 S{BED_TEMP}\nBED_MESH_CLEAR\nBED_MESH_CALIBRATE\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'Heats bed, makes a mesh, and saves it'}, 'gcode_macro disable_steppers': {'gcode': '\nM84 X Y E', 'description': 'Disables stepper motors'}, 'gcode_macro pid_extruder': {'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(200)|float %}\nPID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'PID Tune for Extruder'}, 'gcode_macro pid_bed': {'gcode': '\n{% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %}\nPID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}\nTURN_OFF_HEATERS\nSAVE_CONFIG', 'description': 'PID Tune for Bed'}, 'gcode_macro nozzle_mid': {'gcode': '\n{% set Z = params.Z|default(10)|float %}\nHOME_CHECK\nG1 Z{Z} F500\nG1 X110 Y110 F6000', 'description': 'Moves nozzle to bed center'}, 'gcode_macro home_check': {'gcode': '\n{% if printer.toolhead.homed_axes != "xyz" %}\nG28\n{% endif %}', 'description': 'Checks if printer is homed'}, 'gcode_macro show_print': {'gcode': '\nHOME_CHECK\n{% set Z = params.Z|default(50)|int %}\n{% set axis_max = printer.toolhead.axis_maximum %}\n{% set pos = printer.toolhead.position %}\n{% set z_diff = axis_max.z - pos.z %}\n{% set z_safe_lift = [ Z, z_diff ] | min %}\nG1 Z{ z_safe_lift }\nG1 X10 Y220 F4000', 'description': 'Moves extruder out of the way'}, 'gcode_macro zoffset_setup': {'gcode': '\n{% if printer.heater_bed.temperature > 70 %}\n{action_respond_info("Bed temperature too high")}\n{% elif printer.extruder.temperature > 290 %}\n{action_respond_info("Extruder temperature too high")}\n{% else %}\nG28\nPROBE_CALIBRATE\n{% endif %}', 'description': 'Starts Z-Offset Calibration'}, 'gcode_macro z_down_01': {'gcode': '\nTESTZ Z=-.1', 'description': 'Moves Z down by 0.1'}, 'gcode_macro z_up_01': {'gcode': '\nTESTZ Z=+.1', 'description': 'Moves Z up by 0.1'}, 'gcode_macro z_low_half': {'gcode': '\nTESTZ Z=-', 'description': 'Sets Z between current and previous lower'}, 'gcode_macro z_high_half': {'gcode': '\nTESTZ Z=+', 'description': 'Sets Z between current and previous higher'}, 'gcode_macro accept_save': {'gcode': '\nACCEPT\nSAVE_CONFIG', 'description': 'Accepts Z-Offset'}, 'gcode_macro abort_setup': {'gcode': '\nABORT', 'description': 'Aborts Z-Offset'}, 'gcode_macro g29': {'gcode': '\nG28\nbed_mesh_calibrate\nG1 X0 Y0 Z10 F4200', 'description': 'G-Code macro'}, 'gcode_macro quick_z_test': {'gcode': '\nG28\nG90\nG1 X150 Y150 Z5 F6000\nG1 Z1.0 F600', 'description': 'Move to center for manual Z adjustment'}, 'printer': {'max_velocity': 300.0, 'max_accel': 6000.0, 'max_accel_to_decel': 3000.0, 'square_corner_velocity': 5.0, 'kinematics': 'cartesian', 'max_z_velocity': 5.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': '!PB14', 'dir_pin': 'PB13', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB15', 'endstop_pin': '!PA2', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'PB10', 'dir_pin': 'PB2', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB12', 'endstop_pin': '!PA1', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 50.0, 'second_homing_speed': 25.0, 'homing_retract_speed': 50.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'PB0', 'dir_pin': '!PC5', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PB1', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -10.0, 'position_max': 400.0, 'homing_speed': 5.0, 'second_homing_speed': 2.5, 'homing_retract_speed': 5.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'PC0', 'min_temp': 0.0, 'max_temp': 250.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 22.533, 'pid_ki': 1.113, 'pid_kd': 114.073, 'heater_pin': 'PC9', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 50.0, 'max_extrude_only_velocity': 79.82432411074329, 'max_extrude_only_accel': 1596.4864822148659, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PA7', 'pressure_advance': 0.05, 'pressure_advance_smooth_time': 0.06, 'dir_pin': 'PA6', 'rotation_distance': 7.191, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!PC4'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-08-25 01:52:22,187 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-08-25 01:52:22,189 [printer.py:reinit()] - Klipper version: v0.12.0-116-g31de734d1
2025-08-25 01:52:22,189 [printer.py:reinit()] - # Extruders: 1
2025-08-25 01:52:22,189 [printer.py:reinit()] - # Temperature devices: 1
2025-08-25 01:52:22,189 [printer.py:reinit()] - # Fans: 3
2025-08-25 01:52:22,189 [printer.py:reinit()] - # Output pins: 0
2025-08-25 01:52:22,189 [printer.py:reinit()] - # Leds: 1
2025-08-25 01:52:22,205 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2025-08-25 01:52:22,207 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 01:52:22,457 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&controller_fan stepper_fan&heater_fan hotend_fan&neopixel my_neopixel
2025-08-25 01:52:22,465 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 01:52:22,465 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 01:52:22,477 [screen.py:init_klipper()] - Printer initialized
2025-08-25 01:52:22,477 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 01:52:22,477 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 01:52:22,495 [screen.py:_load_panel()] - Loading panel: main_menu
2025-08-25 01:52:22,603 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 01:52:22,617 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 01:52:22,626 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 01:52:22,671 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 01:52:22,686 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2025-08-25 01:52:22,704 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 01:52:22,718 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2025-08-25 01:52:22,719 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 02:52:23,292 [screen.py:show_screensaver()] - Showing Screensaver
2025-08-25 02:52:32,806 [KlippyGtk.py:Dialog()] - Showing dialog Updating (width=1024, height=600)
2025-08-25 02:53:54,520 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-08-25 02:53:54,520 [functions.py:log_start()] - KlipperScreen Version: v0.4.6-11-g6b6f63b6
2025-08-25 02:53:54,521 [functions.py:log_start()] - Python version: 3.9
2025-08-25 02:53:54,723 [config.py:get_config_file_location()] - Passed config (-c): .
2025-08-25 02:53:54,725 [config.py:__init__()] - Config path location: /home/sonic/KlipperScreen/config/defaults.conf
2025-08-25 02:53:54,728 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/main_menu.conf']
2025-08-25 02:53:54,750 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/splash_menu.conf']
2025-08-25 02:53:54,758 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/print_menu.conf']
2025-08-25 02:53:54,773 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/move_menu.conf']
2025-08-25 02:53:54,786 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_path": "",
      "moonraker_ssl": null,
      "moonraker_api_key": ""
    }
  }
]
2025-08-25 02:53:55,002 [config.py:create_translations()] - Selected lang: system_lang OS lang: en_US
2025-08-25 02:53:55,002 [config.py:install_language()] - Using lang en
2025-08-25 02:53:55,027 [screen.py:__init__()] - Display for xset: :0
2025-08-25 02:53:55,031 [screen.py:__init__()] - Screen 0: 1024x600
2025-08-25 02:53:55,032 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-08-25 02:53:55,033 [screen.py:__init__()] - Wayland: False Display name: :0
2025-08-25 02:53:55,036 [screen.py:__init__()] - Screen resolution: 1024x600
2025-08-25 02:53:55,348 [KlippyGtk.py:__init__()] - Font size: 22.2 (medium)
2025-08-25 02:53:55,495 [base_panel.py:battery_percentage()] - Battery information not available.
2025-08-25 02:53:55,568 [config.py:save_user_config_options()] - Creating a new config file in /home/sonic/printer_data/config/KlipperScreen.conf
2025-08-25 02:53:55,625 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-08-25 02:53:55,626 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-08-25 02:53:55,627 [screen.py:initial_connection()] - Default printer: None
2025-08-25 02:53:55,695 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-08-25 02:53:55,696 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 02:53:55,748 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-08-25 02:53:55,820 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 02:53:55,856 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-08-25 02:53:55,856 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-08-25 02:53:55,871 [_logging.py:info()] - Websocket connected
2025-08-25 02:53:55,872 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-08-25 02:53:55,917 [screen.py:websocket_connected()] - ### websocket_connected
2025-08-25 02:53:55,998 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-08-25 02:53:56,017 [printer.py:configure_cameras()] - Cameras: []
2025-08-25 02:53:56,031 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-319-gf0ae517', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-08-25 02:53:56,269 [printer.py:log_counts()] - Klipper version: v0.12.0-116-g31de734d1
2025-08-25 02:53:56,269 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 02:53:56,270 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 02:53:56,270 [printer.py:log_counts()] - # Fans: 3
2025-08-25 02:53:56,270 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 02:53:56,270 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 02:53:56,270 [printer.py:log_counts()] - # Leds: 1
2025-08-25 02:53:56,521 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 02:53:56,522 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 02:53:56,523 [screen.py:init_klipper()] - Printer initialized
2025-08-25 02:53:56,523 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 02:53:56,524 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 02:53:56,571 [KlippyGtk.py:Dialog()] - Showing dialog Updating (width=1024, height=600)
2025-08-25 02:53:56,643 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-08-25 02:53:56,644 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-08-25 02:53:56,644 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 02:53:56,649 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 02:53:56,707 [screen.py:_load_panel()] - Loading panel: main_menu
2025-08-25 02:53:56,936 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 02:53:56,951 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 02:53:56,961 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 02:53:56,995 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 02:53:57,010 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 02:53:57,045 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 02:53:57,062 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 02:54:03,796 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-25 02:54:03,796 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-25 02:54:03,930 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-08-25 02:54:03,931 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-08-25 02:54:03,931 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-25 02:54:03,932 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 02:54:03,990 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-25 02:54:04,020 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 02:54:08,306 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-319-gf0ae517', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-08-25 02:54:11,307 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-319-gf0ae517', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-08-25 02:54:14,306 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-319-gf0ae517', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-08-25 02:54:17,307 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-319-gf0ae517', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-08-25 02:54:20,306 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-319-gf0ae517', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-08-25 02:54:20,992 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 02:54:20,993 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 02:54:20,993 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 02:54:20,993 [printer.py:log_counts()] - # Fans: 3
2025-08-25 02:54:20,993 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 02:54:20,993 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 02:54:20,993 [printer.py:log_counts()] - # Leds: 1
2025-08-25 02:54:21,243 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 02:54:21,244 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 02:54:21,245 [screen.py:init_klipper()] - Printer initialized
2025-08-25 02:54:21,245 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2025-08-25 02:54:21,245 [printer.py:change_state()] - Adding callback for state: startup
2025-08-25 02:54:21,386 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-08-25 02:54:21,387 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-08-25 02:54:21,559 [printer.py:change_state()] - Changing state from 'startup' to 'disconnected'
2025-08-25 02:54:21,559 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-25 02:54:21,708 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-08-25 02:54:21,708 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-08-25 02:54:21,709 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-25 02:54:21,709 [screen.py:show_panel()] - Panel is already is in view
2025-08-25 02:54:25,666 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-319-gf0ae517', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-08-25 02:54:25,900 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 02:54:25,901 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 02:54:25,901 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 02:54:25,901 [printer.py:log_counts()] - # Fans: 3
2025-08-25 02:54:25,901 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 02:54:25,901 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 02:54:25,901 [printer.py:log_counts()] - # Leds: 1
2025-08-25 02:54:26,149 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 02:54:26,151 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 02:54:26,152 [screen.py:init_klipper()] - Printer initialized
2025-08-25 02:54:26,153 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 02:54:26,153 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 02:54:26,208 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-08-25 02:54:26,209 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-08-25 02:54:26,209 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 02:54:26,212 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 02:54:26,270 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-25 02:54:26,370 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 02:54:26,386 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 02:54:26,391 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 02:54:26,420 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 02:54:26,434 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 02:54:26,468 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 02:54:26,486 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 02:54:26,519 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-319-gf0ae517', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-08-25 02:54:26,655 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 02:54:26,656 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 02:54:26,656 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 02:54:26,656 [printer.py:log_counts()] - # Fans: 3
2025-08-25 02:54:26,656 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 02:54:26,656 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 02:54:26,656 [printer.py:log_counts()] - # Leds: 1
2025-08-25 02:54:26,928 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 02:54:26,934 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 02:54:26,935 [screen.py:init_klipper()] - Printer initialized
2025-08-25 02:54:26,989 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-08-25 02:54:27,024 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 02:54:27,045 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 02:54:56,290 [base_panel.py:battery_percentage()] - Battery information not available.
2025-08-25 02:55:57,502 [base_panel.py:process_update()] - Update complete
2025-08-25 02:55:57,639 [KlippyWebsocket.py:on_close()] - 1001 Server Shutdown
2025-08-25 02:55:57,641 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2025-08-25 02:55:58,079 [screen.py:websocket_disconnected()] - ### websocket_disconnected
2025-08-25 02:55:58,080 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 02:55:58,140 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-25 02:55:58,171 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 02:55:58,240 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-08-25 02:55:58,240 [screen.py:show_panel()] - Panel is already is in view
2025-08-25 02:55:58,255 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-08-25 02:55:58,255 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-08-25 02:56:02,324 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-08-25 02:56:02,325 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-08-25 02:56:02,355 [_logging.py:info()] - Websocket connected
2025-08-25 02:56:02,355 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-08-25 02:56:02,356 [screen.py:websocket_connected()] - ### websocket_connected
2025-08-25 02:56:02,447 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-08-25 02:56:02,466 [printer.py:configure_cameras()] - Cameras: []
2025-08-25 02:56:02,494 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 02:56:02,673 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 02:56:02,673 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 02:56:02,673 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 02:56:02,673 [printer.py:log_counts()] - # Fans: 3
2025-08-25 02:56:02,673 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 02:56:02,674 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 02:56:02,674 [printer.py:log_counts()] - # Leds: 1
2025-08-25 02:56:02,920 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 02:56:02,922 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 02:56:02,922 [screen.py:init_klipper()] - Printer initialized
2025-08-25 02:56:02,923 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 02:56:02,923 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 02:56:02,977 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-08-25 02:56:02,978 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-08-25 02:56:02,978 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 02:56:02,981 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 02:56:03,037 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-25 02:56:03,137 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 02:56:03,153 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 02:56:03,158 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 02:56:03,190 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 02:56:03,205 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 02:56:03,240 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 02:56:03,258 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 02:56:23,158 [base_panel.py:finish_updating()] - Finishing update
2025-08-25 02:56:23,166 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-08-25 02:56:23,166 [screen.py:_menu_go_back()] - #### Menu go home
2025-08-25 02:56:23,177 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 03:06:40,571 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-25 03:06:40,572 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-25 03:06:40,623 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-08-25 03:06:40,624 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-08-25 03:06:40,624 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-25 03:06:40,624 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 03:06:40,680 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-25 03:06:40,705 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 03:06:44,465 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 03:06:44,711 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 03:06:44,711 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 03:06:44,711 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 03:06:44,711 [printer.py:log_counts()] - # Fans: 3
2025-08-25 03:06:44,711 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 03:06:44,712 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 03:06:44,712 [printer.py:log_counts()] - # Leds: 1
2025-08-25 03:06:44,960 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 03:06:44,962 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 03:06:44,962 [screen.py:init_klipper()] - Printer initialized
2025-08-25 03:06:44,963 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 03:06:44,963 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 03:06:45,014 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-08-25 03:06:45,015 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-08-25 03:06:45,015 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 03:06:45,018 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 03:06:45,073 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-25 03:06:45,166 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 03:06:45,180 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 03:06:45,185 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 03:06:45,212 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 03:06:45,225 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 03:06:45,258 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 03:06:45,274 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 03:06:45,308 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 03:06:45,466 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 03:06:45,466 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 03:06:45,466 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 03:06:45,466 [printer.py:log_counts()] - # Fans: 3
2025-08-25 03:06:45,466 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 03:06:45,467 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 03:06:45,467 [printer.py:log_counts()] - # Leds: 1
2025-08-25 03:06:45,708 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 03:06:45,710 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 03:06:45,710 [screen.py:init_klipper()] - Printer initialized
2025-08-25 03:06:45,732 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-08-25 03:06:45,764 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 03:06:45,778 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 03:06:52,722 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-08-25 03:06:52,722 [printer.py:change_state()] - Adding callback for state: printing
2025-08-25 03:06:52,790 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-08-25 03:06:52,790 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-08-25 03:06:52,790 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 03:06:52,847 [screen.py:_load_panel()] - Loading panel: job_status
2025-08-25 03:06:53,048 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-25 03:06:53,057 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-08-25 03:06:53,081 [job_status.py:update_filename()] - Updating filename to xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m21s.gcode
2025-08-25 03:06:53,081 [job_status.py:_update_file_metadata()] - Update Metadata. File: xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m21s.gcode Size: 576512
2025-08-25 03:17:02,177 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2025-08-25 03:17:02,177 [printer.py:change_state()] - Adding callback for state: paused
2025-08-25 03:17:02,187 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'paused'
2025-08-25 03:17:02,276 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-08-25 03:17:02,276 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-08-25 03:17:02,276 [screen.py:show_panel()] - Panel is already is in view
2025-08-25 03:17:02,280 [screen.py:_load_panel()] - Loading panel: extrude
2025-08-25 03:17:02,364 [screen.py:attach_panel()] - Current panel hierarchy: job_status > extrude
2025-08-25 03:17:32,005 [printer.py:change_state()] - Changing state from 'paused' to 'ready'
2025-08-25 03:17:32,005 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 03:17:32,066 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-08-25 03:17:32,066 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-08-25 03:17:34,548 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-25 03:17:34,548 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-25 03:17:34,599 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-08-25 03:17:34,600 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-08-25 03:17:34,600 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-25 03:17:34,601 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 03:17:34,657 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-25 03:17:34,682 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 03:17:38,442 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 03:17:38,687 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 03:17:38,687 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 03:17:38,687 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 03:17:38,687 [printer.py:log_counts()] - # Fans: 3
2025-08-25 03:17:38,687 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 03:17:38,687 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 03:17:38,688 [printer.py:log_counts()] - # Leds: 1
2025-08-25 03:17:38,939 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 03:17:38,941 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 03:17:38,943 [screen.py:init_klipper()] - Printer initialized
2025-08-25 03:17:38,944 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 03:17:38,944 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 03:17:39,002 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-08-25 03:17:39,002 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-08-25 03:17:39,003 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 03:17:39,006 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 03:17:39,062 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-25 03:17:39,152 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 03:17:39,166 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 03:17:39,171 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 03:17:39,199 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 03:17:39,212 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 03:17:39,244 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 03:17:39,261 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 03:17:39,372 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 03:17:39,435 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 03:17:39,436 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 03:17:39,436 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 03:17:39,436 [printer.py:log_counts()] - # Fans: 3
2025-08-25 03:17:39,436 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 03:17:39,436 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 03:17:39,436 [printer.py:log_counts()] - # Leds: 1
2025-08-25 03:17:39,724 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 03:17:39,726 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 03:17:39,726 [screen.py:init_klipper()] - Printer initialized
2025-08-25 03:17:44,293 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-08-25 03:17:44,325 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 03:17:44,340 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 03:18:26,873 [screen.py:_load_panel()] - Loading panel: gcode_macros
2025-08-25 03:18:26,921 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > gcode_macros
2025-08-25 03:18:29,616 [screen.py:_menu_go_back()] - #### Menu go home
2025-08-25 03:18:29,654 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 03:18:32,329 [screen.py:_go_to_submenu()] - #### Go to submenu more
2025-08-25 03:18:32,329 [screen.py:_go_to_submenu()] - #### Menu __main
2025-08-25 03:18:32,338 [screen.py:_load_panel()] - Loading panel: menu
2025-08-25 03:18:32,400 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-25 03:18:32,649 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2025-08-25 03:18:32,686 [menu.py:arrangeMenuItems()] - X > more pins
2025-08-25 03:18:32,690 [menu.py:arrangeMenuItems()] - X > more power
2025-08-25 03:18:32,695 [menu.py:arrangeMenuItems()] - X > more camera
2025-08-25 03:18:32,712 [menu.py:arrangeMenuItems()] - X > more spoolman
2025-08-25 03:18:32,712 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-25 03:18:32,737 [screen.py:_go_to_submenu()] - menu, {{ gettext('More') }}, panel_name=more, items=[{'more bedlevel': {'name': "{{ gettext('Bed Level') }}", 'icon': 'bed-level', 'panel': 'bed_level', 'method': None, 'confirm': None, 'enable': "{{ 'bed_screws' in printer.config_sections or 'screws_tilt_adjust' in printer.config_sections }}", 'params': '{}', 'style': None}}, {'more bedmesh': {'name': "{{ gettext('Bed Mesh') }}", 'icon': 'bed-mesh', 'panel': 'bed_mesh', 'method': None, 'confirm': None, 'enable': "{{ 'bed_mesh' in printer.config_sections }}", 'params': '{}', 'style': None}}, {'more zoffset': {'name': "{{ gettext('Z Calibrate') }}", 'icon': 'z-farther', 'panel': 'zcalibrate', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more limits': {'name': "{{ gettext('Limits') }}", 'icon': 'fine-tune', 'panel': 'limits', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more fan': {'name': "{{ gettext('Fan') }}", 'icon': 'fan', 'panel': 'fan', 'method': None, 'confirm': None, 'enable': '{{ printer.fans.count > 0 }}', 'params': '{}', 'style': None}}, {'more led': {'name': "{{ gettext('Leds') }}", 'icon': 'light', 'panel': 'led', 'method': None, 'confirm': None, 'enable': '{{ printer.leds.count > 0 }}', 'params': '{}', 'style': None}}, {'more macros': {'name': "{{ gettext('Macros') }}", 'icon': 'custom-script', 'panel': 'gcode_macros', 'method': None, 'confirm': None, 'enable': '{{ printer.gcode_macros.count > 0 }}', 'params': '{}', 'style': None}}, {'more pins': {'name': "{{ gettext('Pins') }}", 'icon': 'hashtag', 'panel': 'pins', 'method': None, 'confirm': None, 'enable': '{{ printer.output_pins.count > 0 or printer.pwm_tools.count > 0 }}', 'params': '{}', 'style': None}}, {'more power': {'name': "{{ gettext('Power') }}", 'icon': 'shutdown', 'panel': 'power', 'method': None, 'confirm': None, 'enable': '{{ moonraker.power_devices.count > 0 }}', 'params': '{}', 'style': None}}, {'more camera': {'name': "{{ gettext('Camera') }}", 'icon': 'camera', 'panel': 'camera', 'method': None, 'confirm': None, 'enable': '{{ moonraker.cameras.count > 0 }}', 'params': '{}', 'style': None}}, {'more console': {'name': "{{ gettext('Console') }}", 'icon': 'console', 'panel': 'console', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more updater': {'name': "{{ gettext('Update') }}", 'icon': 'refresh', 'panel': 'updater', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more input_shaper': {'name': "{{ gettext('Input Shaper') }}", 'icon': 'move', 'panel': 'input_shaper', 'method': None, 'confirm': None, 'enable': "{{ 'input_shaper' in printer.config_sections }}", 'params': '{}', 'style': None}}, {'more save': {'name': "{{ gettext('Save Config') }}", 'icon': 'complete', 'panel': None, 'method': 'ks_confirm_save', 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more settings': {'name': 'KlipperScreen', 'icon': 'settings', 'panel': 'settings', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more network': {'name': "{{ gettext('Network') }}", 'icon': 'network', 'panel': 'network', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more notifications': {'name': "{{ gettext('Notifications') }}", 'icon': 'notifications', 'panel': 'notifications', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more spoolman': {'name': 'Spoolman', 'icon': 'spoolman', 'panel': 'spoolman', 'method': None, 'confirm': None, 'enable': '{{ moonraker.spoolman }}', 'params': '{}', 'style': None}}, {'more system': {'name': "{{ gettext('System') }}", 'icon': 'info', 'panel': 'system', 'method': None, 'confirm': None, 'enable': '{{ moonraker_connected }}', 'params': '{}', 'style': None}}, {'more fine_tune': {'name': "{{ gettext('Fine Tuning') }}", 'icon': 'fine-tune', 'panel': 'fine_tune', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}]
2025-08-25 03:18:41,943 [screen.py:_load_panel()] - Loading panel: system
2025-08-25 03:18:41,956 [system.py:__init__()] - {'python': {'version': [3, 9, 2, 'final', 0], 'version_string': '3.9.2 (default, Feb 28 2021, 17:03:44)  [GCC 10.2.1 20210110]'}, 'cpu_info': {'cpu_count': 4, 'bits': '32bit', 'processor': 'aarch64', 'cpu_desc': 'ARMv8 Processor rev 4 (v8l)', 'serial_number': '', 'hardware_desc': 'T800', 'model': 'sonic_lcd', 'total_memory': 2030728, 'memory_units': 'kB'}, 'sd_info': {'manufacturer_id': '45', 'manufacturer': 'Unknown', 'oem_id': '0100', 'product_name': 'DG400', 'product_revision': '3.8', 'serial_number': '0127ea95', 'manufacturer_date': '9/2123', 'capacity': 'Unknown', 'total_bytes': 0}, 'distribution': {'name': 'Debian GNU/Linux 11 (bullseye)', 'id': 'debian', 'version': '11', 'version_parts': {'major': '11', 'minor': '', 'build_number': ''}, 'like': '', 'codename': 'bullseye', 'release_info': {}, 'kernel_version': '4.9.191'}, 'virtualization': {'virt_type': 'none', 'virt_identifier': 'none'}, 'network': {'wlan0': {'mac_address': 'fc:ee:92:11:14:05', 'ip_addresses': [{'family': 'ipv4', 'address': '192.168.1.14', 'is_link_local': False}, {'family': 'ipv6', 'address': 'fe80::767d:9ad7:3997:ec47', 'is_link_local': True}]}}, 'canbus': {}, 'provider': 'systemd_dbus', 'available_services': ['klipper', 'moonraker', 'KlipperScreen'], 'service_state': {'klipper': {'active_state': 'active', 'sub_state': 'running'}, 'moonraker': {'active_state': 'active', 'sub_state': 'running'}, 'KlipperScreen': {'active_state': 'active', 'sub_state': 'running'}}, 'instance_ids': {'moonraker': 'moonraker', 'klipper': 'klipper'}}
2025-08-25 03:18:41,986 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > system
2025-08-25 03:18:47,282 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-25 03:18:47,312 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2025-08-25 03:18:47,351 [menu.py:arrangeMenuItems()] - X > more pins
2025-08-25 03:18:47,356 [menu.py:arrangeMenuItems()] - X > more power
2025-08-25 03:18:47,360 [menu.py:arrangeMenuItems()] - X > more camera
2025-08-25 03:18:47,377 [menu.py:arrangeMenuItems()] - X > more spoolman
2025-08-25 03:18:47,378 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-25 03:18:49,146 [screen.py:_load_panel()] - Loading panel: fine_tune
2025-08-25 03:18:49,230 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > fine_tune
2025-08-25 03:18:51,341 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-25 03:18:51,373 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2025-08-25 03:18:51,414 [menu.py:arrangeMenuItems()] - X > more pins
2025-08-25 03:18:51,419 [menu.py:arrangeMenuItems()] - X > more power
2025-08-25 03:18:51,423 [menu.py:arrangeMenuItems()] - X > more camera
2025-08-25 03:18:51,440 [menu.py:arrangeMenuItems()] - X > more spoolman
2025-08-25 03:18:51,440 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-25 03:18:52,624 [screen.py:_load_panel()] - Loading panel: settings
2025-08-25 03:18:52,785 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > settings
2025-08-25 03:18:57,248 [screen_panel.py:on_dropdown_change()] - [main] font_size changed to small
2025-08-25 03:18:57,251 [config.py:save_user_config_options()] - Creating a new config file in /home/sonic/printer_data/config/KlipperScreen.conf
2025-08-25 03:19:01,870 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-08-25 03:19:01,871 [functions.py:log_start()] - KlipperScreen Version: v0.4.6-11-g6b6f63b6
2025-08-25 03:19:01,871 [functions.py:log_start()] - Python version: 3.9
2025-08-25 03:19:02,027 [config.py:get_config_file_location()] - Passed config (-c): .
2025-08-25 03:19:02,028 [config.py:__init__()] - Config path location: /home/sonic/printer_data/config/KlipperScreen.conf
2025-08-25 03:19:02,031 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/main_menu.conf']
2025-08-25 03:19:02,045 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/splash_menu.conf']
2025-08-25 03:19:02,050 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/print_menu.conf']
2025-08-25 03:19:02,058 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/move_menu.conf']
2025-08-25 03:19:02,068 [config.py:log_config()] - ===== Config File =====

=======================
2025-08-25 03:19:02,070 [config.py:__init__()] - ====== Saved Def ======

[main]
font_size = small

=======================
2025-08-25 03:19:02,071 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_path": "",
      "moonraker_ssl": null,
      "moonraker_api_key": ""
    }
  }
]
2025-08-25 03:19:02,227 [config.py:create_translations()] - Selected lang: system_lang OS lang: en_US
2025-08-25 03:19:02,227 [config.py:install_language()] - Using lang en
2025-08-25 03:19:02,243 [screen.py:__init__()] - Display for xset: :0
2025-08-25 03:19:02,244 [screen.py:__init__()] - Screen 0: 1024x600
2025-08-25 03:19:02,245 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-08-25 03:19:02,245 [screen.py:__init__()] - Wayland: False Display name: :0
2025-08-25 03:19:02,248 [screen.py:__init__()] - Screen resolution: 1024x600
2025-08-25 03:19:02,539 [KlippyGtk.py:__init__()] - Font size: 20.2 (small)
2025-08-25 03:19:02,667 [base_panel.py:battery_percentage()] - Battery information not available.
2025-08-25 03:19:02,784 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-08-25 03:19:02,785 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-08-25 03:19:02,786 [screen.py:initial_connection()] - Default printer: None
2025-08-25 03:19:02,842 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-08-25 03:19:02,843 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 03:19:02,894 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-08-25 03:19:02,949 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 03:19:02,977 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-08-25 03:19:02,978 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-08-25 03:19:02,990 [_logging.py:info()] - Websocket connected
2025-08-25 03:19:02,990 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-08-25 03:19:03,029 [screen.py:websocket_connected()] - ### websocket_connected
2025-08-25 03:19:03,106 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-08-25 03:19:03,121 [printer.py:configure_cameras()] - Cameras: []
2025-08-25 03:19:03,134 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 03:19:03,199 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 03:19:03,199 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 03:19:03,199 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 03:19:03,199 [printer.py:log_counts()] - # Fans: 3
2025-08-25 03:19:03,199 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 03:19:03,200 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 03:19:03,200 [printer.py:log_counts()] - # Leds: 1
2025-08-25 03:19:03,451 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 03:19:03,452 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 03:19:03,453 [screen.py:init_klipper()] - Printer initialized
2025-08-25 03:19:03,454 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 03:19:03,454 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 03:19:03,506 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-08-25 03:19:03,507 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-08-25 03:19:03,507 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 03:19:03,510 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 03:19:03,563 [screen.py:_load_panel()] - Loading panel: main_menu
2025-08-25 03:19:03,685 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 03:19:03,711 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 03:19:03,745 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 03:19:03,774 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 03:19:03,788 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 03:19:03,820 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 03:19:03,835 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 03:19:04,937 [screen.py:_go_to_submenu()] - #### Go to submenu more
2025-08-25 03:19:04,938 [screen.py:_go_to_submenu()] - #### Menu __main
2025-08-25 03:19:04,946 [screen.py:_load_panel()] - Loading panel: menu
2025-08-25 03:19:05,006 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-25 03:19:05,247 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2025-08-25 03:19:05,285 [menu.py:arrangeMenuItems()] - X > more pins
2025-08-25 03:19:05,289 [menu.py:arrangeMenuItems()] - X > more power
2025-08-25 03:19:05,293 [menu.py:arrangeMenuItems()] - X > more camera
2025-08-25 03:19:05,310 [menu.py:arrangeMenuItems()] - X > more spoolman
2025-08-25 03:19:05,310 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-25 03:19:05,334 [screen.py:_go_to_submenu()] - menu, {{ gettext('More') }}, panel_name=more, items=[{'more bedlevel': {'name': "{{ gettext('Bed Level') }}", 'icon': 'bed-level', 'panel': 'bed_level', 'method': None, 'confirm': None, 'enable': "{{ 'bed_screws' in printer.config_sections or 'screws_tilt_adjust' in printer.config_sections }}", 'params': '{}', 'style': None}}, {'more bedmesh': {'name': "{{ gettext('Bed Mesh') }}", 'icon': 'bed-mesh', 'panel': 'bed_mesh', 'method': None, 'confirm': None, 'enable': "{{ 'bed_mesh' in printer.config_sections }}", 'params': '{}', 'style': None}}, {'more zoffset': {'name': "{{ gettext('Z Calibrate') }}", 'icon': 'z-farther', 'panel': 'zcalibrate', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more limits': {'name': "{{ gettext('Limits') }}", 'icon': 'fine-tune', 'panel': 'limits', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more fan': {'name': "{{ gettext('Fan') }}", 'icon': 'fan', 'panel': 'fan', 'method': None, 'confirm': None, 'enable': '{{ printer.fans.count > 0 }}', 'params': '{}', 'style': None}}, {'more led': {'name': "{{ gettext('Leds') }}", 'icon': 'light', 'panel': 'led', 'method': None, 'confirm': None, 'enable': '{{ printer.leds.count > 0 }}', 'params': '{}', 'style': None}}, {'more macros': {'name': "{{ gettext('Macros') }}", 'icon': 'custom-script', 'panel': 'gcode_macros', 'method': None, 'confirm': None, 'enable': '{{ printer.gcode_macros.count > 0 }}', 'params': '{}', 'style': None}}, {'more pins': {'name': "{{ gettext('Pins') }}", 'icon': 'hashtag', 'panel': 'pins', 'method': None, 'confirm': None, 'enable': '{{ printer.output_pins.count > 0 or printer.pwm_tools.count > 0 }}', 'params': '{}', 'style': None}}, {'more power': {'name': "{{ gettext('Power') }}", 'icon': 'shutdown', 'panel': 'power', 'method': None, 'confirm': None, 'enable': '{{ moonraker.power_devices.count > 0 }}', 'params': '{}', 'style': None}}, {'more camera': {'name': "{{ gettext('Camera') }}", 'icon': 'camera', 'panel': 'camera', 'method': None, 'confirm': None, 'enable': '{{ moonraker.cameras.count > 0 }}', 'params': '{}', 'style': None}}, {'more console': {'name': "{{ gettext('Console') }}", 'icon': 'console', 'panel': 'console', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more updater': {'name': "{{ gettext('Update') }}", 'icon': 'refresh', 'panel': 'updater', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more input_shaper': {'name': "{{ gettext('Input Shaper') }}", 'icon': 'move', 'panel': 'input_shaper', 'method': None, 'confirm': None, 'enable': "{{ 'input_shaper' in printer.config_sections }}", 'params': '{}', 'style': None}}, {'more save': {'name': "{{ gettext('Save Config') }}", 'icon': 'complete', 'panel': None, 'method': 'ks_confirm_save', 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more settings': {'name': 'KlipperScreen', 'icon': 'settings', 'panel': 'settings', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more network': {'name': "{{ gettext('Network') }}", 'icon': 'network', 'panel': 'network', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more notifications': {'name': "{{ gettext('Notifications') }}", 'icon': 'notifications', 'panel': 'notifications', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more spoolman': {'name': 'Spoolman', 'icon': 'spoolman', 'panel': 'spoolman', 'method': None, 'confirm': None, 'enable': '{{ moonraker.spoolman }}', 'params': '{}', 'style': None}}, {'more system': {'name': "{{ gettext('System') }}", 'icon': 'info', 'panel': 'system', 'method': None, 'confirm': None, 'enable': '{{ moonraker_connected }}', 'params': '{}', 'style': None}}, {'more fine_tune': {'name': "{{ gettext('Fine Tuning') }}", 'icon': 'fine-tune', 'panel': 'fine_tune', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}]
2025-08-25 03:19:08,962 [screen.py:_load_panel()] - Loading panel: settings
2025-08-25 03:19:09,118 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > settings
2025-08-25 03:19:19,088 [screen_panel.py:on_dropdown_change()] - [main] screen_blanking changed to 60
2025-08-25 03:19:19,144 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 03:19:19,144 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 03:19:23,209 [screen_panel.py:on_dropdown_change()] - [main] screen_blanking_printing changed to 60
2025-08-25 03:19:32,962 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-25 03:19:32,995 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2025-08-25 03:19:33,038 [menu.py:arrangeMenuItems()] - X > more pins
2025-08-25 03:19:33,042 [menu.py:arrangeMenuItems()] - X > more power
2025-08-25 03:19:33,047 [menu.py:arrangeMenuItems()] - X > more camera
2025-08-25 03:19:33,063 [menu.py:arrangeMenuItems()] - X > more spoolman
2025-08-25 03:19:33,064 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-25 03:19:37,488 [screen.py:_load_panel()] - Loading panel: updater
2025-08-25 03:19:37,536 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > updater
2025-08-25 03:19:37,555 [updater.py:get_updates()] - {'jsonrpc': '2.0', 'result': {'github_rate_limit': None, 'github_requests_remaining': None, 'github_limit_reset_time': None, 'version_info': {'system': {'name': 'system', 'configured_type': 'system', 'package_count': 0, 'package_list': []}, 'moonraker': {'channel': 'dev', 'debug_enabled': False, 'channel_invalid': False, 'is_valid': True, 'configured_type': 'git_repo', 'info_tags': [], 'detected_type': 'git_repo', 'remote_alias': 'origin', 'branch': 'master', 'owner': 'Arksine', 'repo_name': 'moonraker', 'remote_url': 'https://github.com/Arksine/moonraker.git', 'recovery_url': 'https://github.com/Arksine/moonraker.git', 'version': 'v0.9.3-102', 'remote_version': 'v0.9.3-102', 'rollback_version': 'v0.8.0-319', 'current_hash': 'f20feff6c67884ff1253414506c43222e04c0460', 'remote_hash': 'f20feff6c67884ff1253414506c43222e04c0460', 'is_dirty': False, 'detached': False, 'commits_behind': [], 'commits_behind_count': 0, 'git_messages': [], 'full_version_string': 'v0.9.3-102-gf20feff6', 'pristine': True, 'corrupt': False, 'warnings': [], 'anomalies': [], 'name': 'moonraker'}, 'klipper': {'channel': 'dev', 'debug_enabled': False, 'channel_invalid': False, 'is_valid': True, 'configured_type': 'git_repo', 'info_tags': [], 'detected_type': 'git_repo', 'remote_alias': 'origin', 'branch': 'master', 'owner': 'Klipper3d', 'repo_name': 'klipper', 'remote_url': 'https://github.com/Klipper3d/klipper.git', 'recovery_url': 'https://github.com/Klipper3d/klipper.git', 'version': 'v0.13.0-229', 'remote_version': 'v0.13.0-229', 'rollback_version': 'v0.12.0-116', 'current_hash': '3aadda6fb35514b952cdafb16c248f4ccbcfe235', 'remote_hash': '3aadda6fb35514b952cdafb16c248f4ccbcfe235', 'is_dirty': False, 'detached': False, 'commits_behind': [], 'commits_behind_count': 0, 'git_messages': [], 'full_version_string': 'v0.13.0-229-g3aadda6f', 'pristine': True, 'corrupt': False, 'warnings': [], 'anomalies': [], 'name': 'klipper'}, 'KlipperScreen': {'channel': 'dev', 'debug_enabled': False, 'channel_invalid': False, 'is_valid': True, 'configured_type': 'git_repo', 'info_tags': [], 'detected_type': 'git_repo', 'remote_alias': 'origin', 'branch': 'master', 'owner': 'jordanruthe', 'repo_name': 'KlipperScreen', 'remote_url': 'https://github.com/jordanruthe/KlipperScreen.git', 'recovery_url': 'https://github.com/jordanruthe/KlipperScreen.git', 'version': 'v0.4.6-11', 'remote_version': 'v0.4.6-11', 'rollback_version': 'v0.3.9-11', 'current_hash': '6b6f63b6639e5b85a2b3f4b0b0cd7677ac9cda3d', 'remote_hash': '6b6f63b6639e5b85a2b3f4b0b0cd7677ac9cda3d', 'is_dirty': False, 'detached': False, 'commits_behind': [], 'commits_behind_count': 0, 'git_messages': [], 'full_version_string': 'v0.4.6-11-g6b6f63b6', 'pristine': True, 'corrupt': False, 'warnings': [], 'anomalies': [], 'name': 'KlipperScreen'}, 'mainsail-config': {'channel': 'dev', 'debug_enabled': False, 'channel_invalid': False, 'is_valid': True, 'configured_type': 'git_repo', 'info_tags': [], 'detected_type': 'git_repo', 'remote_alias': 'origin', 'branch': 'master', 'owner': 'mainsail-crew', 'repo_name': 'mainsail-config', 'remote_url': 'https://github.com/mainsail-crew/mainsail-config.git', 'recovery_url': 'https://github.com/mainsail-crew/mainsail-config.git', 'version': 'v1.2.1-1', 'remote_version': 'v1.2.1-1', 'rollback_version': 'v1.2.1-1', 'current_hash': 'ff3869a621db17ce3ef660adbbd3fa321995ac42', 'remote_hash': 'ff3869a621db17ce3ef660adbbd3fa321995ac42', 'is_dirty': False, 'detached': False, 'commits_behind': [], 'commits_behind_count': 0, 'git_messages': [], 'full_version_string': 'v1.2.1-1-gff3869a6', 'pristine': True, 'corrupt': False, 'warnings': [], 'anomalies': [], 'name': 'mainsail-config'}, 'mainsail': {'channel': 'stable', 'debug_enabled': False, 'channel_invalid': False, 'is_valid': True, 'configured_type': 'web', 'info_tags': [], 'name': 'mainsail', 'repo_name': 'mainsail', 'owner': 'mainsail-crew', 'version': 'v2.14.0', 'remote_version': 'v2.14.0', 'rollback_version': 'v2.14.0', 'last_error': '', 'warnings': [], 'anomalies': []}}, 'busy': False}, 'id': 5}
2025-08-25 03:19:40,804 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-25 03:19:40,835 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2025-08-25 03:19:40,874 [menu.py:arrangeMenuItems()] - X > more pins
2025-08-25 03:19:40,879 [menu.py:arrangeMenuItems()] - X > more power
2025-08-25 03:19:40,883 [menu.py:arrangeMenuItems()] - X > more camera
2025-08-25 03:19:40,901 [menu.py:arrangeMenuItems()] - X > more spoolman
2025-08-25 03:19:40,902 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-25 03:19:43,371 [screen.py:_load_panel()] - Loading panel: led
2025-08-25 03:19:43,386 [led.py:color_selector()] - neopixel my_neopixel
2025-08-25 03:19:43,390 [led.py:set_color()] - color: [1, 0, 0, 0]
2025-08-25 03:19:43,396 [led.py:set_color()] - color: [0, 1, 0, 0]
2025-08-25 03:19:43,399 [led.py:set_color()] - color: [0, 0, 1, 0]
2025-08-25 03:19:43,424 [KlippyRest.py:_do_request()] - 404 Client Error>>Key miscellaneous in namespace mainsail not found for url>>http://127.0.0.1:7125/server/database/item?namespace=mainsail&key=miscellaneous.entries
2025-08-25 03:19:43,425 [led.py:color_selector()] - Adding preset: off
2025-08-25 03:19:43,425 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 03:19:43,427 [led.py:color_selector()] - Adding preset: on
2025-08-25 03:19:43,428 [led.py:set_color()] - color: [1, 1, 1, 0]
2025-08-25 03:19:43,456 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > led
2025-08-25 03:19:43,457 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 03:19:43,539 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 03:19:43,789 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 03:19:44,039 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 03:19:44,293 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 03:19:44,541 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 03:19:44,792 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 03:19:45,042 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 03:19:45,294 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 03:19:45,544 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 03:19:45,795 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 03:19:46,009 [led.py:set_color()] - color: [1.0, 0.0, 0.0, 0.0]
2025-08-25 03:19:46,010 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=1.0 GREEN=0.0 BLUE=0.0 WHITE=0.0 SYNC=0 TRANSMIT=1'}
2025-08-25 03:19:46,046 [led.py:set_color()] - color: [1.0, 0.0, 0.0, 0.0]
2025-08-25 03:19:46,296 [led.py:set_color()] - color: [1.0, 0.0, 0.0, 0.0]
2025-08-25 03:19:46,547 [led.py:set_color()] - color: [1.0, 0.0, 0.0, 0.0]
2025-08-25 03:19:46,797 [led.py:set_color()] - color: [1.0, 0.0, 0.0, 0.0]
2025-08-25 03:19:47,047 [led.py:set_color()] - color: [1.0, 0.0, 0.0, 0.0]
2025-08-25 03:19:47,299 [led.py:set_color()] - color: [1.0, 0.0, 0.0, 0.0]
2025-08-25 03:19:47,549 [led.py:set_color()] - color: [1.0, 0.0, 0.0, 0.0]
2025-08-25 03:19:47,625 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 03:19:47,625 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=0.0 GREEN=0.0 BLUE=0.0 WHITE=0.0 SYNC=0 TRANSMIT=1'}
2025-08-25 03:19:47,802 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 03:19:48,050 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 03:19:48,302 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 03:19:48,411 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-25 03:19:48,442 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2025-08-25 03:19:48,480 [menu.py:arrangeMenuItems()] - X > more pins
2025-08-25 03:19:48,484 [menu.py:arrangeMenuItems()] - X > more power
2025-08-25 03:19:48,489 [menu.py:arrangeMenuItems()] - X > more camera
2025-08-25 03:19:48,507 [menu.py:arrangeMenuItems()] - X > more spoolman
2025-08-25 03:19:48,508 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-25 03:19:54,480 [screen.py:_load_panel()] - Loading panel: console
2025-08-25 03:19:54,536 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > console
2025-08-25 03:19:55,997 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-25 03:19:56,028 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2025-08-25 03:19:56,067 [menu.py:arrangeMenuItems()] - X > more pins
2025-08-25 03:19:56,071 [menu.py:arrangeMenuItems()] - X > more power
2025-08-25 03:19:56,076 [menu.py:arrangeMenuItems()] - X > more camera
2025-08-25 03:19:56,094 [menu.py:arrangeMenuItems()] - X > more spoolman
2025-08-25 03:19:56,094 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-25 03:19:57,270 [screen.py:_load_panel()] - Loading panel: limits
2025-08-25 03:19:57,280 [limits.py:add_option()] - Adding option: max_accel
2025-08-25 03:19:57,289 [limits.py:add_option()] - Adding option: minimum_cruise_ratio
2025-08-25 03:19:57,294 [limits.py:add_option()] - Adding option: max_velocity
2025-08-25 03:19:57,298 [limits.py:add_option()] - Adding option: square_corner_velocity
2025-08-25 03:19:57,328 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > limits
2025-08-25 03:19:57,329 [limits.py:update_option()] - max_accel 6000.0
2025-08-25 03:19:57,330 [limits.py:update_option()] - minimum_cruise_ratio 0.5
2025-08-25 03:19:57,331 [limits.py:update_option()] - max_velocity 300.0
2025-08-25 03:19:57,331 [limits.py:update_option()] - square_corner_velocity 5.0
2025-08-25 03:19:58,906 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-25 03:19:58,936 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2025-08-25 03:19:58,979 [menu.py:arrangeMenuItems()] - X > more pins
2025-08-25 03:19:58,983 [menu.py:arrangeMenuItems()] - X > more power
2025-08-25 03:19:58,987 [menu.py:arrangeMenuItems()] - X > more camera
2025-08-25 03:19:59,004 [menu.py:arrangeMenuItems()] - X > more spoolman
2025-08-25 03:19:59,005 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-25 03:20:00,319 [screen.py:_load_panel()] - Loading panel: zcalibrate
2025-08-25 03:20:00,341 [printer.py:get_probe()] - Probe type: bltouch
2025-08-25 03:20:00,341 [zcalibrate.py:initialize_probe_params()] - Offset X:27.25 Y:-12.8 Z:0.1
2025-08-25 03:20:00,374 [zcalibrate.py:set_commands()] - Available commands for calibration: ['PROBE_CALIBRATE', 'BED_MESH_CALIBRATE METHOD=manual']
2025-08-25 03:20:00,379 [zcalibrate.py:on_dropdown_change()] - Selected PROBE_CALIBRATE
2025-08-25 03:20:00,399 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > zcalibrate
2025-08-25 03:20:01,890 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-25 03:20:01,920 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2025-08-25 03:20:01,962 [menu.py:arrangeMenuItems()] - X > more pins
2025-08-25 03:20:01,966 [menu.py:arrangeMenuItems()] - X > more power
2025-08-25 03:20:01,974 [menu.py:arrangeMenuItems()] - X > more camera
2025-08-25 03:20:01,991 [menu.py:arrangeMenuItems()] - X > more spoolman
2025-08-25 03:20:01,991 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-25 03:20:02,786 [screen.py:_load_panel()] - Loading panel: bed_mesh
2025-08-25 03:20:02,845 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > bed_mesh
2025-08-25 03:20:02,845 [bed_mesh.py:activate_mesh()] - Clearing active profile
2025-08-25 03:20:02,846 [bed_mesh.py:activate_mesh()] - Clearing active profile
2025-08-25 03:20:03,290 [base_panel.py:battery_percentage()] - Battery information not available.
2025-08-25 03:20:04,302 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-25 03:20:04,331 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2025-08-25 03:20:04,370 [menu.py:arrangeMenuItems()] - X > more pins
2025-08-25 03:20:04,375 [menu.py:arrangeMenuItems()] - X > more power
2025-08-25 03:20:04,379 [menu.py:arrangeMenuItems()] - X > more camera
2025-08-25 03:20:04,396 [menu.py:arrangeMenuItems()] - X > more spoolman
2025-08-25 03:20:04,396 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-25 03:20:05,629 [screen.py:_load_panel()] - Loading panel: bed_level
2025-08-25 03:20:05,658 [bed_level.py:_get_screws()] - screws_tilt_adjust
2025-08-25 03:20:05,658 [bed_level.py:_get_screws()] - screw1: 23,63
2025-08-25 03:20:05,659 [bed_level.py:_get_screws()] - screw1_name: front left
2025-08-25 03:20:05,659 [bed_level.py:_get_screws()] - screw2: 223,63
2025-08-25 03:20:05,659 [bed_level.py:_get_screws()] - screw2_name: front right
2025-08-25 03:20:05,659 [bed_level.py:_get_screws()] - screw3: 223,263
2025-08-25 03:20:05,660 [bed_level.py:_get_screws()] - screw3_name: back right
2025-08-25 03:20:05,660 [bed_level.py:_get_screws()] - screw4: 23,263
2025-08-25 03:20:05,660 [bed_level.py:_get_screws()] - screw4_name: back left
2025-08-25 03:20:05,660 [bed_level.py:_get_screws()] - speed: 100.0
2025-08-25 03:20:05,660 [bed_level.py:_get_screws()] - screw_thread: CW-M5
2025-08-25 03:20:05,660 [bed_level.py:__init__()] - screws_tilt_adjust: [[23.0, 63.0], [223.0, 63.0], [23.0, 263.0], [223.0, 263.0]]
2025-08-25 03:20:05,661 [printer.py:get_probe()] - Probe type: bltouch
2025-08-25 03:20:05,661 [bed_level.py:__init__()] - offset X: 27.25 Y: -12.8
2025-08-25 03:20:05,661 [bed_level.py:__init__()] - screws with offset: [[50.25, 50.2], [250.25, 50.2], [50.25, 250.2], [250.25, 250.2]]
2025-08-25 03:20:05,661 [bed_level.py:__init__()] - X: {50.25, 250.25}
Y: {50.2, 250.2}
2025-08-25 03:20:05,661 [bed_level.py:__init__()] - Using max_distance: 66 to fit: 4 screws.
2025-08-25 03:20:05,662 [bed_level.py:__init__()] - Using 4/4-screw locations
2025-08-25 03:20:05,715 [bed_level.py:__init__()] - screw_positions: {'bl': [50.25, 250.2], 'br': [250.25, 250.2], 'fr': [250.25, 50.2], 'fl': [50.25, 50.2]}
2025-08-25 03:20:05,729 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > bed_level
2025-08-25 03:20:07,199 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-25 03:20:07,229 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2025-08-25 03:20:07,267 [menu.py:arrangeMenuItems()] - X > more pins
2025-08-25 03:20:07,271 [menu.py:arrangeMenuItems()] - X > more power
2025-08-25 03:20:07,276 [menu.py:arrangeMenuItems()] - X > more camera
2025-08-25 03:20:07,293 [menu.py:arrangeMenuItems()] - X > more spoolman
2025-08-25 03:20:07,293 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-25 03:20:11,847 [screen.py:_load_panel()] - Loading panel: fan
2025-08-25 03:20:11,858 [fan.py:add_fan()] - Adding fan: fan
2025-08-25 03:20:11,878 [fan.py:add_fan()] - Adding fan: controller_fan stepper_fan
2025-08-25 03:20:11,885 [fan.py:add_fan()] - Adding fan: heater_fan hotend_fan
2025-08-25 03:20:11,909 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > fan
2025-08-25 03:20:13,288 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-25 03:20:13,318 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2025-08-25 03:20:13,359 [menu.py:arrangeMenuItems()] - X > more pins
2025-08-25 03:20:13,363 [menu.py:arrangeMenuItems()] - X > more power
2025-08-25 03:20:13,368 [menu.py:arrangeMenuItems()] - X > more camera
2025-08-25 03:20:13,386 [menu.py:arrangeMenuItems()] - X > more spoolman
2025-08-25 03:20:13,386 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-25 03:20:14,290 [screen.py:_menu_go_back()] - #### Menu go home
2025-08-25 03:20:14,315 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 03:21:14,295 [screensaver.py:show()] - Showing Screensaver
2025-08-25 12:54:13,425 [screensaver.py:close()] - Closing Screensaver
2025-08-25 12:54:13,427 [screen.py:wake_screen()] - Screen wake up
2025-08-25 12:55:14,292 [screensaver.py:show()] - Showing Screensaver
2025-08-25 13:00:54,223 [KlippyWebsocket.py:on_close()] - 1001 Server Shutdown
2025-08-25 13:00:54,223 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2025-08-25 13:00:54,224 [screen.py:websocket_disconnected()] - ### websocket_disconnected
2025-08-25 13:00:54,224 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 13:00:54,228 [screensaver.py:close()] - Closing Screensaver
2025-08-25 13:00:54,231 [screen.py:wake_screen()] - Screen wake up
2025-08-25 13:00:54,348 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-25 13:00:54,379 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 13:00:54,452 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-08-25 13:00:54,453 [screen.py:show_panel()] - Panel is already is in view
2025-08-25 13:00:54,466 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-08-25 13:00:54,467 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-08-25 13:00:59,051 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-08-25 13:00:59,051 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-08-25 13:00:59,060 [_logging.py:info()] - Websocket connected
2025-08-25 13:00:59,061 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-08-25 13:00:59,062 [screen.py:websocket_connected()] - ### websocket_connected
2025-08-25 13:00:59,140 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-08-25 13:00:59,156 [printer.py:configure_cameras()] - Cameras: []
2025-08-25 13:00:59,169 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 13:00:59,457 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 13:00:59,457 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 13:00:59,457 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 13:00:59,457 [printer.py:log_counts()] - # Fans: 3
2025-08-25 13:00:59,457 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 13:00:59,457 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 13:00:59,457 [printer.py:log_counts()] - # Leds: 1
2025-08-25 13:00:59,709 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 13:00:59,711 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 13:00:59,711 [screen.py:init_klipper()] - Printer initialized
2025-08-25 13:00:59,712 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 13:00:59,712 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 13:00:59,766 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 13:00:59,766 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 13:00:59,766 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 13:00:59,769 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 13:00:59,827 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-25 13:00:59,920 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 13:00:59,933 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 13:00:59,938 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 13:00:59,965 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 13:00:59,978 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 13:01:00,008 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 13:01:00,024 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 13:02:00,037 [screensaver.py:show()] - Showing Screensaver
2025-08-25 13:09:44,711 [screensaver.py:close()] - Closing Screensaver
2025-08-25 13:09:44,713 [screen.py:wake_screen()] - Screen wake up
2025-08-25 13:09:46,606 [main_menu.py:toggle_visibility()] - Graph show False: extruder
2025-08-25 13:10:46,931 [screensaver.py:show()] - Showing Screensaver
2025-08-25 13:11:15,912 [KlippyWebsocket.py:on_close()] - 1001 Server Shutdown
2025-08-25 13:11:15,913 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2025-08-25 13:11:15,913 [screen.py:websocket_disconnected()] - ### websocket_disconnected
2025-08-25 13:11:15,914 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 13:11:15,918 [screensaver.py:close()] - Closing Screensaver
2025-08-25 13:11:15,920 [screen.py:wake_screen()] - Screen wake up
2025-08-25 13:11:16,036 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-25 13:11:16,068 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 13:11:16,140 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-08-25 13:11:16,141 [screen.py:show_panel()] - Panel is already is in view
2025-08-25 13:11:16,154 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-08-25 13:11:16,154 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-08-25 13:11:19,953 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-08-25 13:11:19,954 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-08-25 13:11:19,964 [_logging.py:info()] - Websocket connected
2025-08-25 13:11:19,964 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-08-25 13:11:19,965 [screen.py:websocket_connected()] - ### websocket_connected
2025-08-25 13:11:20,049 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-08-25 13:11:20,066 [printer.py:configure_cameras()] - Cameras: []
2025-08-25 13:11:20,079 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 13:11:20,345 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 13:11:20,346 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 13:11:20,346 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 13:11:20,346 [printer.py:log_counts()] - # Fans: 3
2025-08-25 13:11:20,346 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 13:11:20,346 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 13:11:20,346 [printer.py:log_counts()] - # Leds: 1
2025-08-25 13:11:20,595 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 13:11:20,597 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 13:11:20,597 [screen.py:init_klipper()] - Printer initialized
2025-08-25 13:11:20,598 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 13:11:20,598 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 13:11:20,655 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 13:11:20,655 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 13:11:20,655 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 13:11:20,658 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 13:11:20,715 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-25 13:11:20,803 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 13:11:20,816 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 13:11:20,821 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 13:11:20,848 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 13:11:20,861 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 13:11:20,891 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 13:11:20,907 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 13:12:20,931 [screensaver.py:show()] - Showing Screensaver
2025-08-25 13:30:17,669 [KlippyWebsocket.py:on_close()] - 1001 Server Shutdown
2025-08-25 13:30:17,671 [screen.py:websocket_disconnected()] - ### websocket_disconnected
2025-08-25 13:30:17,671 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 13:30:17,681 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2025-08-25 13:30:17,682 [screensaver.py:close()] - Closing Screensaver
2025-08-25 13:30:17,683 [screen.py:wake_screen()] - Screen wake up
2025-08-25 13:30:17,799 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-25 13:30:17,830 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 13:30:17,903 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-08-25 13:30:17,904 [screen.py:show_panel()] - Panel is already is in view
2025-08-25 13:30:17,917 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-08-25 13:30:17,918 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-08-25 13:30:21,964 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-08-25 13:30:21,964 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-08-25 13:30:21,992 [_logging.py:info()] - Websocket connected
2025-08-25 13:30:21,993 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-08-25 13:30:21,994 [screen.py:websocket_connected()] - ### websocket_connected
2025-08-25 13:30:22,079 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-08-25 13:30:22,094 [printer.py:configure_cameras()] - Cameras: []
2025-08-25 13:30:22,107 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 13:30:22,195 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 13:30:22,195 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 13:30:22,195 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 13:30:22,196 [printer.py:log_counts()] - # Fans: 3
2025-08-25 13:30:22,196 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 13:30:22,196 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 13:30:22,196 [printer.py:log_counts()] - # Leds: 1
2025-08-25 13:30:22,451 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 13:30:22,452 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 13:30:22,453 [screen.py:init_klipper()] - Printer initialized
2025-08-25 13:30:22,453 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 13:30:22,454 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 13:30:22,507 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 13:30:22,508 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 13:30:22,508 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 13:30:22,511 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 13:30:22,567 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-25 13:30:22,655 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 13:30:22,669 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 13:30:22,673 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 13:30:22,700 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 13:30:22,713 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 13:30:22,743 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 13:30:22,760 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 13:31:22,931 [screensaver.py:show()] - Showing Screensaver
2025-08-25 13:32:07,539 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-25 13:32:07,539 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-25 13:32:07,541 [screensaver.py:close()] - Closing Screensaver
2025-08-25 13:32:07,544 [screen.py:wake_screen()] - Screen wake up
2025-08-25 13:32:07,646 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 13:32:07,646 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 13:32:07,646 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-25 13:32:07,647 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 13:32:07,703 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-25 13:32:07,728 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 13:32:11,647 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 5, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 13:32:11,884 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 13:32:11,884 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 13:32:11,885 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 13:32:11,885 [printer.py:log_counts()] - # Fans: 3
2025-08-25 13:32:11,885 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 13:32:11,885 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 13:32:11,885 [printer.py:log_counts()] - # Leds: 1
2025-08-25 13:32:12,144 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 13:32:12,145 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 13:32:12,146 [screen.py:init_klipper()] - Printer initialized
2025-08-25 13:32:12,146 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 13:32:12,147 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 13:32:12,162 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 5, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 13:32:12,389 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 13:32:12,389 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 13:32:12,389 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 13:32:12,390 [printer.py:log_counts()] - # Fans: 3
2025-08-25 13:32:12,390 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 13:32:12,390 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 13:32:12,390 [printer.py:log_counts()] - # Leds: 1
2025-08-25 13:32:12,643 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 13:32:12,644 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 13:32:12,645 [screen.py:init_klipper()] - Printer initialized
2025-08-25 13:32:12,698 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 13:32:12,699 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 13:32:12,699 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 13:32:12,702 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 13:32:12,760 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-25 13:32:12,853 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 13:32:12,868 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 13:32:12,873 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 13:32:12,901 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 13:32:12,914 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 13:32:12,946 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 13:32:12,962 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 13:33:12,932 [screensaver.py:show()] - Showing Screensaver
2025-08-25 13:48:42,305 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-25 13:48:42,306 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-25 13:48:42,309 [screensaver.py:close()] - Closing Screensaver
2025-08-25 13:48:42,312 [screen.py:wake_screen()] - Screen wake up
2025-08-25 13:48:42,430 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 13:48:42,431 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 13:48:42,431 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-25 13:48:42,432 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 13:48:42,489 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-25 13:48:42,514 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 13:48:46,413 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 13:48:46,640 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 13:48:46,640 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 13:48:46,640 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 13:48:46,640 [printer.py:log_counts()] - # Fans: 3
2025-08-25 13:48:46,640 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 13:48:46,640 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 13:48:46,641 [printer.py:log_counts()] - # Leds: 1
2025-08-25 13:48:46,893 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 13:48:46,894 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 13:48:46,895 [screen.py:init_klipper()] - Printer initialized
2025-08-25 13:48:46,896 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 13:48:46,896 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 13:48:46,959 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 13:48:46,960 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 13:48:46,960 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 13:48:46,963 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 13:48:47,020 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-25 13:48:47,110 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 13:48:47,125 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 13:48:47,130 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 13:48:47,164 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 13:48:47,181 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 13:48:47,217 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 13:48:47,240 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 13:48:47,273 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 13:48:47,392 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 13:48:47,392 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 13:48:47,392 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 13:48:47,393 [printer.py:log_counts()] - # Fans: 3
2025-08-25 13:48:47,393 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 13:48:47,393 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 13:48:47,393 [printer.py:log_counts()] - # Leds: 1
2025-08-25 13:48:47,642 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 13:48:47,644 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 13:48:47,645 [screen.py:init_klipper()] - Printer initialized
2025-08-25 13:48:47,668 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-08-25 13:48:47,700 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 13:48:47,718 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 13:49:47,932 [screensaver.py:show()] - Showing Screensaver
2025-08-25 14:01:32,287 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-08-25 14:01:32,288 [printer.py:change_state()] - Adding callback for state: printing
2025-08-25 14:01:32,291 [screensaver.py:close()] - Closing Screensaver
2025-08-25 14:01:32,294 [screen.py:wake_screen()] - Screen wake up
2025-08-25 14:01:32,424 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 14:01:32,425 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 14:01:32,425 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 14:01:32,491 [screen.py:_load_panel()] - Loading panel: job_status
2025-08-25 14:01:32,664 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-25 14:01:32,675 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-08-25 14:01:32,695 [job_status.py:update_filename()] - Updating filename to xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m21s.gcode
2025-08-25 14:01:32,696 [job_status.py:_update_file_metadata()] - Update Metadata. File: xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m21s.gcode Size: 576512
2025-08-25 14:01:52,148 [screen.py:show_popup_message()] - error: bed_mesh: Unknown profile [default]
2025-08-25 14:01:52,340 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-08-25 14:01:52,340 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 14:01:52,361 [screen.py:show_popup_message()] - error: bed_mesh: Unknown profile [default]
2025-08-25 14:01:52,371 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'error'
2025-08-25 14:01:52,489 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 14:01:52,490 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 14:02:52,932 [screensaver.py:show()] - Showing Screensaver
2025-08-25 14:10:36,140 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=1024, height=600)
2025-08-25 14:11:09,867 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-08-25 14:11:09,902 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=1024, height=600)
2025-08-25 14:19:08,060 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-08-25 14:19:08,100 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=1024, height=600)
2025-08-25 14:19:29,144 [job_status.py:set_state()] - Changing job_status state from 'error' to 'standby'
2025-08-25 14:24:28,669 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-25 14:24:28,669 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-25 14:24:28,671 [screensaver.py:close()] - Closing Screensaver
2025-08-25 14:24:28,688 [screen.py:wake_screen()] - Screen wake up
2025-08-25 14:24:28,728 [screensaver.py:close()] - Restoring Dialog <Gtk.Dialog object at 0xe3ef7a88 (GtkDialog at 0x1162530)>
2025-08-25 14:24:28,793 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 14:24:28,794 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 14:24:28,794 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-25 14:24:28,794 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 14:24:28,855 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-08-25 14:24:28,856 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-25 14:24:28,881 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 14:24:32,754 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 7, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 14:24:32,981 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 14:24:32,981 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 14:24:32,981 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 14:24:32,981 [printer.py:log_counts()] - # Fans: 3
2025-08-25 14:24:32,981 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 14:24:32,982 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 14:24:32,982 [printer.py:log_counts()] - # Leds: 1
2025-08-25 14:24:33,230 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 14:24:33,231 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 14:24:33,232 [screen.py:init_klipper()] - Printer initialized
2025-08-25 14:24:33,232 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 14:24:33,233 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 14:24:33,248 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 7, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 14:24:33,487 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 14:24:33,488 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 14:24:33,488 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 14:24:33,488 [printer.py:log_counts()] - # Fans: 3
2025-08-25 14:24:33,488 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 14:24:33,488 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 14:24:33,489 [printer.py:log_counts()] - # Leds: 1
2025-08-25 14:24:33,738 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 14:24:33,740 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 14:24:33,740 [screen.py:init_klipper()] - Printer initialized
2025-08-25 14:24:33,798 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 14:24:33,799 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 14:24:33,799 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 14:24:33,802 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 14:24:33,861 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-25 14:24:33,954 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 14:24:33,969 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 14:24:33,975 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 14:24:34,004 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 14:24:34,018 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 14:24:34,050 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 14:24:34,069 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 14:24:43,249 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-08-25 14:24:43,250 [printer.py:change_state()] - Adding callback for state: printing
2025-08-25 14:24:43,358 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 14:24:43,358 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 14:24:43,358 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 14:24:43,427 [screen.py:show_panel()] - Reinitializing panel job_status
2025-08-25 14:24:43,524 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-25 14:24:43,546 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-08-25 14:24:43,562 [job_status.py:update_filename()] - Updating filename to xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m21s.gcode
2025-08-25 14:24:43,562 [job_status.py:_update_file_metadata()] - Update Metadata. File: xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m21s.gcode Size: 576512
2025-08-25 14:25:43,949 [screensaver.py:show()] - Showing Screensaver
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         2025-08-25 14:18:32,968 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-08-25 14:18:32,969 [functions.py:log_start()] - KlipperScreen Version: v0.4.6-11-g6b6f63b6
2025-08-25 14:18:32,969 [functions.py:log_start()] - Python version: 3.9
2025-08-25 14:18:33,141 [config.py:get_config_file_location()] - Passed config (-c): .
2025-08-25 14:18:33,142 [config.py:__init__()] - Config path location: /home/sonic/printer_data/config/KlipperScreen.conf
2025-08-25 14:18:33,145 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/main_menu.conf']
2025-08-25 14:18:33,158 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/splash_menu.conf']
2025-08-25 14:18:33,163 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/print_menu.conf']
2025-08-25 14:18:33,172 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/move_menu.conf']
2025-08-25 14:18:33,183 [config.py:log_config()] - ===== Config File =====

=======================
2025-08-25 14:18:33,186 [config.py:__init__()] - ====== Saved Def ======

[main]
screen_blanking = 60
screen_blanking_printing = 60
font_size = small

[graph Printer]
extruder = False

=======================
2025-08-25 14:18:33,187 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_path": "",
      "moonraker_ssl": null,
      "moonraker_api_key": ""
    }
  }
]
2025-08-25 14:18:33,365 [config.py:create_translations()] - Selected lang: system_lang OS lang: en_US
2025-08-25 14:18:33,365 [config.py:install_language()] - Using lang en
2025-08-25 14:18:33,382 [screen.py:__init__()] - Display for xset: :0
2025-08-25 14:18:33,383 [screen.py:__init__()] - Screen 0: 1024x600
2025-08-25 14:18:33,384 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-08-25 14:18:33,384 [screen.py:__init__()] - Wayland: False Display name: :0
2025-08-25 14:18:33,386 [screen.py:__init__()] - Screen resolution: 1024x600
2025-08-25 14:18:33,674 [KlippyGtk.py:__init__()] - Font size: 20.2 (small)
2025-08-25 14:18:33,871 [base_panel.py:battery_percentage()] - Battery information not available.
2025-08-25 14:18:34,086 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 14:18:34,087 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 14:18:34,087 [screen.py:initial_connection()] - Default printer: None
2025-08-25 14:18:34,144 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-08-25 14:18:34,145 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 14:18:34,193 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-08-25 14:18:34,250 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 14:18:34,272 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-08-25 14:18:34,272 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-08-25 14:18:38,447 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-08-25 14:18:38,448 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-08-25 14:18:42,457 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-08-25 14:18:42,457 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-08-25 14:18:42,469 [_logging.py:info()] - Websocket connected
2025-08-25 14:18:42,470 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-08-25 14:18:42,471 [screen.py:websocket_connected()] - ### websocket_connected
2025-08-25 14:18:42,547 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-08-25 14:18:42,563 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-08-25 14:18:42,575 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 14:18:42,676 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 14:18:42,676 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 14:18:42,677 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 14:18:42,677 [printer.py:log_counts()] - # Fans: 3
2025-08-25 14:18:42,677 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 14:18:42,677 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 14:18:42,677 [printer.py:log_counts()] - # Leds: 1
2025-08-25 14:18:42,936 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 14:18:42,938 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 14:18:42,938 [screen.py:init_klipper()] - Printer initialized
2025-08-25 14:18:42,939 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 14:18:42,939 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 14:18:42,991 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 14:18:42,992 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 14:18:42,992 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 14:18:42,996 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 14:18:43,059 [screen.py:_load_panel()] - Loading panel: main_menu
2025-08-25 14:18:43,250 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 14:18:43,264 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 14:18:43,274 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 14:18:43,304 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 14:18:43,318 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 14:18:43,332 [screen.py:init_tempstore()] - Tempstore not ready: {} Retrying in 5 seconds
2025-08-25 14:18:43,369 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-08-25 14:18:43,382 [screen.py:init_tempstore()] - Tempstore not ready: {} Retrying in 5 seconds
2025-08-25 14:18:48,471 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 14:18:48,488 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 14:27:54,121 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-25 14:27:54,121 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-25 14:27:54,181 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 14:27:54,182 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 14:27:54,182 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-25 14:27:54,183 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 14:27:54,236 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-25 14:27:54,263 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 14:27:58,215 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 14:27:58,453 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 14:27:58,454 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 14:27:58,454 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 14:27:58,454 [printer.py:log_counts()] - # Fans: 3
2025-08-25 14:27:58,454 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 14:27:58,454 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 14:27:58,454 [printer.py:log_counts()] - # Leds: 1
2025-08-25 14:27:58,713 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 14:27:58,715 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 14:27:58,715 [screen.py:init_klipper()] - Printer initialized
2025-08-25 14:27:58,716 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 14:27:58,716 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 14:27:58,770 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 14:27:58,770 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 14:27:58,771 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 14:27:58,774 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 14:27:58,831 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-25 14:27:58,922 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 14:27:58,936 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 14:27:58,941 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 14:27:58,970 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 14:27:58,984 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 14:27:59,016 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 14:27:59,033 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 14:27:59,063 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 14:27:59,213 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 14:27:59,213 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 14:27:59,213 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 14:27:59,213 [printer.py:log_counts()] - # Fans: 3
2025-08-25 14:27:59,213 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 14:27:59,214 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 14:27:59,214 [printer.py:log_counts()] - # Leds: 1
2025-08-25 14:27:59,465 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 14:27:59,467 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 14:27:59,468 [screen.py:init_klipper()] - Printer initialized
2025-08-25 14:27:59,491 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-08-25 14:27:59,520 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 14:27:59,537 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 14:28:02,914 [base_panel.py:battery_percentage()] - Battery information not available.
2025-08-25 14:28:58,915 [screensaver.py:show()] - Showing Screensaver
2025-08-25 14:29:23,672 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-08-25 14:29:23,672 [printer.py:change_state()] - Adding callback for state: printing
2025-08-25 14:29:23,675 [screensaver.py:close()] - Closing Screensaver
2025-08-25 14:29:23,676 [screen.py:wake_screen()] - Screen wake up
2025-08-25 14:29:23,777 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 14:29:23,778 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 14:29:23,778 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 14:29:23,834 [screen.py:_load_panel()] - Loading panel: job_status
2025-08-25 14:29:24,020 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-25 14:29:24,031 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-08-25 14:29:24,060 [job_status.py:update_filename()] - Updating filename to xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m21s.gcode
2025-08-25 14:29:24,061 [job_status.py:_update_file_metadata()] - Update Metadata. File: xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m21s.gcode Size: 576512
2025-08-25 14:30:23,922 [screensaver.py:show()] - Showing Screensaver
2025-08-25 14:36:56,317 [screensaver.py:close()] - Closing Screensaver
2025-08-25 14:36:56,322 [screen.py:wake_screen()] - Screen wake up
2025-08-25 14:37:56,916 [screensaver.py:show()] - Showing Screensaver
2025-08-25 14:51:03,335 [printer.py:change_state()] - Changing state from 'printing' to 'disconnected'
2025-08-25 14:51:03,336 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-25 14:51:03,337 [screensaver.py:close()] - Closing Screensaver
2025-08-25 14:51:03,348 [screen.py:wake_screen()] - Screen wake up
2025-08-25 14:51:03,459 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 14:51:03,459 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 14:51:03,460 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-25 14:51:03,460 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 14:51:03,526 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-25 14:51:03,551 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 14:51:07,493 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 14:51:07,733 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 14:51:07,733 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 14:51:07,733 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 14:51:07,734 [printer.py:log_counts()] - # Fans: 3
2025-08-25 14:51:07,734 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 14:51:07,734 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 14:51:07,734 [printer.py:log_counts()] - # Leds: 1
2025-08-25 14:51:07,981 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 14:51:07,982 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 14:51:07,982 [screen.py:init_klipper()] - Printer initialized
2025-08-25 14:51:07,983 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 14:51:07,983 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 14:51:08,000 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 14:51:08,239 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 14:51:08,239 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 14:51:08,240 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 14:51:08,240 [printer.py:log_counts()] - # Fans: 3
2025-08-25 14:51:08,240 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 14:51:08,240 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 14:51:08,240 [printer.py:log_counts()] - # Leds: 1
2025-08-25 14:51:08,481 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 14:51:08,483 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 14:51:08,483 [screen.py:init_klipper()] - Printer initialized
2025-08-25 14:51:08,535 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 14:51:08,536 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 14:51:08,536 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 14:51:08,539 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 14:51:08,594 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-25 14:51:08,686 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 14:51:08,701 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 14:51:08,705 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 14:51:08,733 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 14:51:08,747 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 14:51:08,779 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 14:51:08,797 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 14:52:08,915 [screensaver.py:show()] - Showing Screensaver
2025-08-25 14:56:44,248 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-08-25 14:56:44,249 [printer.py:change_state()] - Adding callback for state: printing
2025-08-25 14:56:44,250 [screensaver.py:close()] - Closing Screensaver
2025-08-25 14:56:44,253 [screen.py:wake_screen()] - Screen wake up
2025-08-25 14:56:44,358 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 14:56:44,358 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 14:56:44,359 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 14:56:44,419 [screen.py:show_panel()] - Reinitializing panel job_status
2025-08-25 14:56:44,494 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-25 14:56:44,512 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-08-25 14:56:44,527 [job_status.py:update_filename()] - Updating filename to 1st layer test 250x250mm by 02 layerheight_0.2mm_PLA_Generic Klipper Printer_39m2s.gcode
2025-08-25 14:56:44,528 [job_status.py:_update_file_metadata()] - Update Metadata. File: 1st layer test 250x250mm by 02 layerheight_0.2mm_PLA_Generic Klipper Printer_39m2s.gcode Size: 81391
2025-08-25 14:57:03,070 [screen.py:show_popup_message()] - error: bed_mesh: Unknown profile [default]
2025-08-25 14:57:03,305 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-08-25 14:57:03,306 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 14:57:03,322 [screen.py:show_popup_message()] - error: bed_mesh: Unknown profile [default]
2025-08-25 14:57:03,329 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'error'
2025-08-25 14:57:03,440 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 14:57:03,441 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 14:58:03,916 [screensaver.py:show()] - Showing Screensaver
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     2025-08-25 14:47:48,320 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-08-25 14:47:48,321 [functions.py:log_start()] - KlipperScreen Version: v0.4.6-11-g6b6f63b6
2025-08-25 14:47:48,321 [functions.py:log_start()] - Python version: 3.9
2025-08-25 14:47:48,496 [config.py:get_config_file_location()] - Passed config (-c): .
2025-08-25 14:47:48,496 [config.py:__init__()] - Config path location: /home/sonic/printer_data/config/KlipperScreen.conf
2025-08-25 14:47:48,499 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/main_menu.conf']
2025-08-25 14:47:48,513 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/splash_menu.conf']
2025-08-25 14:47:48,519 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/print_menu.conf']
2025-08-25 14:47:48,527 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/move_menu.conf']
2025-08-25 14:47:48,539 [config.py:log_config()] - ===== Config File =====

=======================
2025-08-25 14:47:48,542 [config.py:__init__()] - ====== Saved Def ======

[main]
screen_blanking = 60
screen_blanking_printing = 60
font_size = small

[graph Printer]
extruder = False

=======================
2025-08-25 14:47:48,542 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_path": "",
      "moonraker_ssl": null,
      "moonraker_api_key": ""
    }
  }
]
2025-08-25 14:47:48,721 [config.py:create_translations()] - Selected lang: system_lang OS lang: en_US
2025-08-25 14:47:48,722 [config.py:install_language()] - Using lang en
2025-08-25 14:47:48,738 [screen.py:__init__()] - Display for xset: :0
2025-08-25 14:47:48,740 [screen.py:__init__()] - Screen 0: 1024x600
2025-08-25 14:47:48,740 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-08-25 14:47:48,741 [screen.py:__init__()] - Wayland: False Display name: :0
2025-08-25 14:47:48,743 [screen.py:__init__()] - Screen resolution: 1024x600
2025-08-25 14:47:49,033 [KlippyGtk.py:__init__()] - Font size: 20.2 (small)
2025-08-25 14:47:49,229 [base_panel.py:battery_percentage()] - Battery information not available.
2025-08-25 14:47:49,464 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 14:47:49,465 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 14:47:49,466 [screen.py:initial_connection()] - Default printer: None
2025-08-25 14:47:49,522 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-08-25 14:47:49,523 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 14:47:49,571 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-08-25 14:47:49,628 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 14:47:49,650 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-08-25 14:47:49,650 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-08-25 14:47:53,939 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-08-25 14:47:53,939 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-08-25 14:47:57,940 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-08-25 14:47:57,940 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-08-25 14:48:01,948 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-08-25 14:48:01,949 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-08-25 14:48:01,958 [_logging.py:info()] - Websocket connected
2025-08-25 14:48:01,959 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-08-25 14:48:01,960 [screen.py:websocket_connected()] - ### websocket_connected
2025-08-25 14:48:02,039 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-08-25 14:48:02,056 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-08-25 14:48:02,069 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 14:48:02,300 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 14:48:02,300 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 14:48:02,300 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 14:48:02,301 [printer.py:log_counts()] - # Fans: 3
2025-08-25 14:48:02,301 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 14:48:02,301 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 14:48:02,301 [printer.py:log_counts()] - # Leds: 1
2025-08-25 14:48:02,557 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 14:48:02,558 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 14:48:02,558 [screen.py:init_klipper()] - Printer initialized
2025-08-25 14:48:02,559 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 14:48:02,559 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 14:48:02,611 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 14:48:02,612 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 14:48:02,612 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 14:48:02,615 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 14:48:02,675 [screen.py:_load_panel()] - Loading panel: main_menu
2025-08-25 14:48:02,856 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 14:48:02,892 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 14:48:02,901 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 14:48:02,932 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 14:48:02,946 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 14:48:02,976 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 14:48:02,993 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 15:02:03,837 [base_panel.py:battery_percentage()] - Battery information not available.
2025-08-25 15:02:16,839 [screensaver.py:show()] - Showing Screensaver
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           2025-08-25 15:03:09,157 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-08-25 15:03:09,158 [functions.py:log_start()] - KlipperScreen Version: v0.4.6-11-g6b6f63b6
2025-08-25 15:03:09,158 [functions.py:log_start()] - Python version: 3.9
2025-08-25 15:03:09,332 [config.py:get_config_file_location()] - Passed config (-c): .
2025-08-25 15:03:09,333 [config.py:__init__()] - Config path location: /home/sonic/printer_data/config/KlipperScreen.conf
2025-08-25 15:03:09,336 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/main_menu.conf']
2025-08-25 15:03:09,349 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/splash_menu.conf']
2025-08-25 15:03:09,354 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/print_menu.conf']
2025-08-25 15:03:09,363 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/move_menu.conf']
2025-08-25 15:03:09,375 [config.py:log_config()] - ===== Config File =====

=======================
2025-08-25 15:03:09,377 [config.py:__init__()] - ====== Saved Def ======

[main]
screen_blanking = 60
screen_blanking_printing = 60
font_size = small

[graph Printer]
extruder = False

=======================
2025-08-25 15:03:09,378 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_path": "",
      "moonraker_ssl": null,
      "moonraker_api_key": ""
    }
  }
]
2025-08-25 15:03:09,557 [config.py:create_translations()] - Selected lang: system_lang OS lang: en_US
2025-08-25 15:03:09,557 [config.py:install_language()] - Using lang en
2025-08-25 15:03:09,574 [screen.py:__init__()] - Display for xset: :0
2025-08-25 15:03:09,575 [screen.py:__init__()] - Screen 0: 1024x600
2025-08-25 15:03:09,576 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-08-25 15:03:09,576 [screen.py:__init__()] - Wayland: False Display name: :0
2025-08-25 15:03:09,579 [screen.py:__init__()] - Screen resolution: 1024x600
2025-08-25 15:03:09,867 [KlippyGtk.py:__init__()] - Font size: 20.2 (small)
2025-08-25 15:03:10,064 [base_panel.py:battery_percentage()] - Battery information not available.
2025-08-25 15:03:10,285 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 15:03:10,286 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 15:03:10,286 [screen.py:initial_connection()] - Default printer: None
2025-08-25 15:03:10,343 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-08-25 15:03:10,344 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 15:03:10,392 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-08-25 15:03:10,449 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 15:03:10,471 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-08-25 15:03:10,472 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-08-25 15:03:14,891 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-08-25 15:03:14,891 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-08-25 15:03:18,890 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-08-25 15:03:18,890 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-08-25 15:03:22,889 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-08-25 15:03:22,890 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-08-25 15:03:26,899 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-08-25 15:03:26,899 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-08-25 15:03:26,911 [_logging.py:info()] - Websocket connected
2025-08-25 15:03:26,912 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-08-25 15:03:26,913 [screen.py:websocket_connected()] - ### websocket_connected
2025-08-25 15:03:26,989 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-08-25 15:03:27,005 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-08-25 15:03:27,018 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 15:03:27,227 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 15:03:27,228 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 15:03:27,228 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 15:03:27,228 [printer.py:log_counts()] - # Fans: 3
2025-08-25 15:03:27,228 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 15:03:27,228 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 15:03:27,229 [printer.py:log_counts()] - # Leds: 1
2025-08-25 15:03:27,483 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 15:03:27,484 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 15:03:27,485 [screen.py:init_klipper()] - Printer initialized
2025-08-25 15:03:27,485 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 15:03:27,485 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 15:03:27,537 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 15:03:27,537 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 15:03:27,537 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 15:03:27,541 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 15:03:27,595 [screen.py:_load_panel()] - Loading panel: main_menu
2025-08-25 15:03:27,732 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 15:03:27,747 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 15:03:27,757 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 15:03:27,787 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 15:03:27,801 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 15:03:27,831 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 15:03:27,848 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 15:06:39,688 [base_panel.py:battery_percentage()] - Battery information not available.
2025-08-25 15:06:56,691 [screensaver.py:show()] - Showing Screensaver
2025-08-25 15:07:49,369 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-25 15:07:49,370 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-25 15:07:49,370 [screensaver.py:close()] - Closing Screensaver
2025-08-25 15:07:49,372 [screen.py:wake_screen()] - Screen wake up
2025-08-25 15:07:49,472 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 15:07:49,473 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 15:07:49,473 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-25 15:07:49,474 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 15:07:49,528 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-25 15:07:49,559 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 15:07:53,511 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 7, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 15:07:53,745 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 15:07:53,746 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 15:07:53,746 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 15:07:53,746 [printer.py:log_counts()] - # Fans: 3
2025-08-25 15:07:53,746 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 15:07:53,746 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 15:07:53,746 [printer.py:log_counts()] - # Leds: 1
2025-08-25 15:07:54,003 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 15:07:54,004 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 15:07:54,005 [screen.py:init_klipper()] - Printer initialized
2025-08-25 15:07:54,006 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 15:07:54,006 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 15:07:54,029 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 7, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 15:07:54,259 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 15:07:54,260 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 15:07:54,260 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 15:07:54,260 [printer.py:log_counts()] - # Fans: 3
2025-08-25 15:07:54,260 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 15:07:54,260 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 15:07:54,260 [printer.py:log_counts()] - # Leds: 1
2025-08-25 15:07:54,502 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 15:07:54,504 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 15:07:54,504 [screen.py:init_klipper()] - Printer initialized
2025-08-25 15:07:54,555 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 15:07:54,555 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 15:07:54,556 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 15:07:54,559 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 15:07:54,613 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-25 15:07:54,710 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 15:07:54,726 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 15:07:54,731 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 15:07:54,761 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 15:07:54,776 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 15:07:54,808 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 15:07:54,826 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 15:08:22,213 [screen.py:show_popup_message()] - error: // Unknown command:"EMERGENCY_STOP"
2025-08-25 15:08:27,389 [screen.py:show_popup_message()] - error: // Unknown command:"EMERGENCY_STOP"
2025-08-25 15:08:45,447 [screen.py:show_popup_message()] - error: // Unknown command:"EMERGENCY_STOP"
2025-08-25 15:08:54,717 [screensaver.py:show()] - Showing Screensaver
2025-08-25 15:09:01,330 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-25 15:09:01,331 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-25 15:09:01,333 [screensaver.py:close()] - Closing Screensaver
2025-08-25 15:09:01,338 [screen.py:wake_screen()] - Screen wake up
2025-08-25 15:09:01,445 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 15:09:01,446 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 15:09:01,446 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-25 15:09:01,447 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 15:09:01,506 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-25 15:09:01,538 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 15:09:05,615 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 7, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 15:09:05,850 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 15:09:05,850 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 15:09:05,850 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 15:09:05,850 [printer.py:log_counts()] - # Fans: 3
2025-08-25 15:09:05,851 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 15:09:05,851 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 15:09:05,851 [printer.py:log_counts()] - # Leds: 1
2025-08-25 15:09:06,097 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 15:09:06,099 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 15:09:06,099 [screen.py:init_klipper()] - Printer initialized
2025-08-25 15:09:06,100 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 15:09:06,100 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 15:09:06,116 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 7, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 15:09:06,353 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 15:09:06,354 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 15:09:06,354 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 15:09:06,354 [printer.py:log_counts()] - # Fans: 3
2025-08-25 15:09:06,354 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 15:09:06,355 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 15:09:06,355 [printer.py:log_counts()] - # Leds: 1
2025-08-25 15:09:06,598 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 15:09:06,600 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 15:09:06,600 [screen.py:init_klipper()] - Printer initialized
2025-08-25 15:09:06,654 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 15:09:06,655 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 15:09:06,655 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 15:09:06,658 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 15:09:06,713 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-25 15:09:06,808 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 15:09:06,824 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 15:09:06,830 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 15:09:06,859 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 15:09:06,873 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 15:09:06,906 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 15:09:06,924 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 15:10:06,691 [screensaver.py:show()] - Showing Screensaver
2025-08-25 15:10:30,622 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-08-25 15:10:30,622 [printer.py:change_state()] - Adding callback for state: printing
2025-08-25 15:10:30,625 [screensaver.py:close()] - Closing Screensaver
2025-08-25 15:10:30,627 [screen.py:wake_screen()] - Screen wake up
2025-08-25 15:10:30,745 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 15:10:30,746 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 15:10:30,746 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 15:10:30,802 [screen.py:_load_panel()] - Loading panel: job_status
2025-08-25 15:10:31,013 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-25 15:10:31,023 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-08-25 15:10:31,051 [job_status.py:update_filename()] - Updating filename to 1st layer test 250x250mm by 02 layerheight_0.2mm_PLA_Generic Klipper Printer_39m2s.gcode
2025-08-25 15:10:31,052 [job_status.py:_update_file_metadata()] - Update Metadata. File: 1st layer test 250x250mm by 02 layerheight_0.2mm_PLA_Generic Klipper Printer_39m2s.gcode Size: 81391
2025-08-25 15:10:54,665 [screen.py:show_popup_message()] - error: bed_mesh: Unknown profile [default]
2025-08-25 15:10:55,443 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-08-25 15:10:55,443 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 15:10:55,456 [screen.py:show_popup_message()] - error: bed_mesh: Unknown profile [default]
2025-08-25 15:10:55,464 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'error'
2025-08-25 15:10:55,575 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 15:10:55,575 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 15:10:57,955 [job_status.py:set_state()] - Changing job_status state from 'error' to 'standby'
2025-08-25 15:11:32,272 [job_status.py:close_panel()] - Closing job_status panel
2025-08-25 15:11:32,273 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 15:11:32,276 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 15:11:32,339 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-25 15:11:32,444 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 15:11:32,460 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 15:11:32,467 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 15:11:32,497 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 15:11:32,512 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 15:12:32,691 [screensaver.py:show()] - Showing Screensaver
2025-08-25 15:19:39,638 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=1024, height=600)
2025-08-25 15:35:38,520 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-08-25 15:35:38,554 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=1024, height=600)
2025-08-25 15:38:02,593 [screensaver.py:close()] - Closing Screensaver
2025-08-25 15:38:02,595 [screen.py:wake_screen()] - Screen wake up
2025-08-25 15:38:02,636 [screensaver.py:close()] - Restoring Dialog <Gtk.Dialog object at 0xe3ce9328 (GtkDialog at 0xf3d380)>
2025-08-25 15:38:02,651 [screen.py:show_popup_message()] - error: Existing config autosave is corrupted. Can't complete SAVE_CONFIG
2025-08-25 15:39:02,691 [screensaver.py:show()] - Showing Screensaver
2025-08-25 15:39:02,691 [screensaver.py:show()] - Hiding dialog
2025-08-25 15:42:39,419 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-25 15:42:39,420 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-25 15:42:39,421 [screensaver.py:close()] - Closing Screensaver
2025-08-25 15:42:39,429 [screen.py:wake_screen()] - Screen wake up
2025-08-25 15:42:39,472 [screensaver.py:close()] - Restoring Dialog <Gtk.Dialog object at 0xe3ce9328 (GtkDialog at 0xf3d380)>
2025-08-25 15:42:39,541 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 15:42:39,541 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 15:42:39,542 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-25 15:42:39,542 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 15:42:39,606 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-08-25 15:42:39,606 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-25 15:42:39,634 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 15:42:43,579 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 15:42:43,800 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 15:42:43,800 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 15:42:43,800 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 15:42:43,800 [printer.py:log_counts()] - # Fans: 3
2025-08-25 15:42:43,801 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 15:42:43,801 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 15:42:43,801 [printer.py:log_counts()] - # Leds: 1
2025-08-25 15:42:44,050 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 15:42:44,052 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 15:42:44,052 [screen.py:init_klipper()] - Printer initialized
2025-08-25 15:42:44,053 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 15:42:44,053 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 15:42:44,070 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 15:42:44,300 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 15:42:44,300 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 15:42:44,301 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 15:42:44,301 [printer.py:log_counts()] - # Fans: 3
2025-08-25 15:42:44,301 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 15:42:44,301 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 15:42:44,301 [printer.py:log_counts()] - # Leds: 1
2025-08-25 15:42:44,556 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 15:42:44,558 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 15:42:44,558 [screen.py:init_klipper()] - Printer initialized
2025-08-25 15:42:44,615 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 15:42:44,617 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 15:42:44,617 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 15:42:44,622 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 15:42:44,678 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-25 15:42:44,769 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 15:42:44,785 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 15:42:44,791 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 15:42:44,817 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 15:42:44,831 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 15:42:44,862 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 15:42:44,879 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 15:42:59,246 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-25 15:42:59,246 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-25 15:42:59,351 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 15:42:59,352 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 15:42:59,352 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-25 15:42:59,358 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 15:42:59,433 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-25 15:42:59,473 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 15:43:03,706 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 15:43:03,920 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 15:43:03,920 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 15:43:03,920 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 15:43:03,921 [printer.py:log_counts()] - # Fans: 3
2025-08-25 15:43:03,921 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 15:43:03,921 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 15:43:03,921 [printer.py:log_counts()] - # Leds: 1
2025-08-25 15:43:04,172 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 15:43:04,173 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 15:43:04,173 [screen.py:init_klipper()] - Printer initialized
2025-08-25 15:43:04,174 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 15:43:04,174 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 15:43:04,237 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 15:43:04,238 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 15:43:04,238 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 15:43:04,242 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 15:43:04,302 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-25 15:43:04,412 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 15:43:04,428 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 15:43:04,434 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 15:43:04,466 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 15:43:04,481 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 15:43:04,517 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 15:43:04,536 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 15:43:17,175 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-25 15:43:17,175 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-25 15:43:17,246 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 15:43:17,247 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 15:43:17,247 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-25 15:43:17,248 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 15:43:17,306 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-25 15:43:17,335 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 15:43:21,367 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 15:43:21,599 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 15:43:21,599 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 15:43:21,599 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 15:43:21,600 [printer.py:log_counts()] - # Fans: 3
2025-08-25 15:43:21,601 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 15:43:21,601 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 15:43:21,601 [printer.py:log_counts()] - # Leds: 1
2025-08-25 15:43:21,847 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 15:43:21,849 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 15:43:21,849 [screen.py:init_klipper()] - Printer initialized
2025-08-25 15:43:21,850 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 15:43:21,850 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 15:43:21,866 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 15:43:22,102 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 15:43:22,103 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 15:43:22,103 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 15:43:22,103 [printer.py:log_counts()] - # Fans: 3
2025-08-25 15:43:22,103 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 15:43:22,103 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 15:43:22,104 [printer.py:log_counts()] - # Leds: 1
2025-08-25 15:43:22,348 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 15:43:22,349 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 15:43:22,350 [screen.py:init_klipper()] - Printer initialized
2025-08-25 15:43:22,407 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 15:43:22,407 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 15:43:22,408 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 15:43:22,410 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 15:43:22,478 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-25 15:43:22,578 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 15:43:22,595 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 15:43:22,600 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 15:43:22,627 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 15:43:22,641 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 15:43:22,673 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 15:43:22,692 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 15:44:22,692 [screensaver.py:show()] - Showing Screensaver
2025-08-25 15:52:00,051 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=1024, height=600)
2025-08-25 15:52:10,406 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-25 15:52:10,406 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-25 15:52:10,411 [screensaver.py:close()] - Closing Screensaver
2025-08-25 15:52:10,414 [screen.py:wake_screen()] - Screen wake up
2025-08-25 15:52:10,452 [screensaver.py:close()] - Restoring Dialog <Gtk.Dialog object at 0xe3d02ac8 (GtkDialog at 0xf3d540)>
2025-08-25 15:52:10,516 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 15:52:10,517 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 15:52:10,517 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-25 15:52:10,518 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 15:52:10,577 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-08-25 15:52:10,577 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-25 15:52:10,604 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 15:52:14,682 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 15:52:14,904 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 15:52:14,905 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 15:52:14,905 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 15:52:14,905 [printer.py:log_counts()] - # Fans: 3
2025-08-25 15:52:14,905 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 15:52:14,905 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 15:52:14,905 [printer.py:log_counts()] - # Leds: 1
2025-08-25 15:52:15,168 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 15:52:15,170 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 15:52:15,170 [screen.py:init_klipper()] - Printer initialized
2025-08-25 15:52:15,171 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 15:52:15,171 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 15:52:15,191 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 15:52:15,417 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 15:52:15,418 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 15:52:15,418 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 15:52:15,418 [printer.py:log_counts()] - # Fans: 3
2025-08-25 15:52:15,418 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 15:52:15,418 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 15:52:15,418 [printer.py:log_counts()] - # Leds: 1
2025-08-25 15:52:15,666 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 15:52:15,667 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 15:52:15,668 [screen.py:init_klipper()] - Printer initialized
2025-08-25 15:52:15,721 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 15:52:15,721 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 15:52:15,721 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 15:52:15,725 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 15:52:15,782 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-25 15:52:15,882 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 15:52:15,897 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 15:52:15,904 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 15:52:15,932 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 15:52:15,946 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 15:52:15,981 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 15:52:16,003 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 15:53:16,691 [screensaver.py:show()] - Showing Screensaver
2025-08-25 16:00:26,179 [screensaver.py:close()] - Closing Screensaver
2025-08-25 16:00:26,185 [screen.py:wake_screen()] - Screen wake up
2025-08-25 16:00:26,276 [screen.py:show_popup_message()] - error: Shutdown due to M112 command
2025-08-25 16:00:26,286 [printer.py:change_state()] - Changing state from 'ready' to 'shutdown'
2025-08-25 16:00:26,286 [printer.py:change_state()] - Adding callback for state: shutdown
2025-08-25 16:00:26,399 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 16:00:26,400 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 16:00:26,400 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 16:00:26,460 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-25 16:00:26,488 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 16:01:01,184 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2025-08-25 16:01:01,184 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-25 16:01:01,261 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 16:01:01,261 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 16:01:01,262 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-25 16:01:01,262 [screen.py:show_panel()] - Panel is already is in view
2025-08-25 16:01:05,704 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 16:01:05,829 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 16:01:05,829 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 16:01:05,829 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 16:01:05,830 [printer.py:log_counts()] - # Fans: 3
2025-08-25 16:01:05,830 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 16:01:05,830 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 16:01:05,830 [printer.py:log_counts()] - # Leds: 1
2025-08-25 16:01:06,085 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 16:01:06,086 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 16:01:06,086 [screen.py:init_klipper()] - Printer initialized
2025-08-25 16:01:06,087 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-08-25 16:01:06,088 [printer.py:change_state()] - Adding callback for state: error
2025-08-25 16:01:06,142 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 16:01:06,143 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 16:01:06,143 [screen.py:show_panel()] - Panel is already is in view
2025-08-25 16:02:06,690 [screensaver.py:show()] - Showing Screensaver
2025-08-25 16:48:47,684 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-08-25 16:48:47,685 [functions.py:log_start()] - KlipperScreen Version: v0.4.6-11-g6b6f63b6
2025-08-25 16:48:47,686 [functions.py:log_start()] - Python version: 3.9
2025-08-25 16:48:47,902 [config.py:get_config_file_location()] - Passed config (-c): .
2025-08-25 16:48:47,904 [config.py:__init__()] - Config path location: /home/sonic/printer_data/config/KlipperScreen.conf
2025-08-25 16:48:47,907 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/main_menu.conf']
2025-08-25 16:48:47,921 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/splash_menu.conf']
2025-08-25 16:48:47,927 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/print_menu.conf']
2025-08-25 16:48:47,936 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/move_menu.conf']
2025-08-25 16:48:47,948 [config.py:log_config()] - ===== Config File =====

=======================
2025-08-25 16:48:47,951 [config.py:__init__()] - ====== Saved Def ======

[main]
screen_blanking = 60
screen_blanking_printing = 60
font_size = small

[graph Printer]
extruder = False

=======================
2025-08-25 16:48:47,952 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_path": "",
      "moonraker_ssl": null,
      "moonraker_api_key": ""
    }
  }
]
2025-08-25 16:48:48,148 [config.py:create_translations()] - Selected lang: system_lang OS lang: en_US
2025-08-25 16:48:48,149 [config.py:install_language()] - Using lang en
2025-08-25 16:48:48,176 [screen.py:__init__()] - Display for xset: :0
2025-08-25 16:48:48,179 [screen.py:__init__()] - Screen 0: 1024x600
2025-08-25 16:48:48,179 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-08-25 16:48:48,180 [screen.py:__init__()] - Wayland: False Display name: :0
2025-08-25 16:48:48,185 [screen.py:__init__()] - Screen resolution: 1024x600
2025-08-25 16:48:48,556 [KlippyGtk.py:__init__()] - Font size: 20.2 (small)
2025-08-25 16:48:48,778 [base_panel.py:battery_percentage()] - Battery information not available.
2025-08-25 16:48:49,019 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 16:48:49,020 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 16:48:49,021 [screen.py:initial_connection()] - Default printer: None
2025-08-25 16:48:49,084 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-08-25 16:48:49,085 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 16:48:49,137 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-08-25 16:48:49,200 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 16:48:49,225 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-08-25 16:48:49,225 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-08-25 16:48:53,255 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-08-25 16:48:53,256 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-08-25 16:48:53,266 [_logging.py:info()] - Websocket connected
2025-08-25 16:48:53,266 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-08-25 16:48:53,267 [screen.py:websocket_connected()] - ### websocket_connected
2025-08-25 16:48:53,343 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-08-25 16:48:53,360 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-08-25 16:48:53,373 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 16:48:53,465 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 16:48:53,465 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 16:48:53,466 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 16:48:53,466 [printer.py:log_counts()] - # Fans: 3
2025-08-25 16:48:53,466 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 16:48:53,466 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 16:48:53,466 [printer.py:log_counts()] - # Leds: 1
2025-08-25 16:48:53,732 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 16:48:53,733 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 16:48:53,733 [screen.py:init_klipper()] - Printer initialized
2025-08-25 16:48:53,734 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 16:48:53,734 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 16:48:53,788 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 16:48:53,789 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 16:48:53,789 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 16:48:53,792 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 16:48:53,854 [screen.py:_load_panel()] - Loading panel: main_menu
2025-08-25 16:48:54,069 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 16:48:54,084 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 16:48:54,094 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 16:48:54,124 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 16:48:54,138 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 16:48:54,169 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 16:48:54,186 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 17:05:24,711 [base_panel.py:battery_percentage()] - Battery information not available.
2025-08-25 17:05:29,713 [screensaver.py:show()] - Showing Screensaver
2025-08-25 17:09:46,677 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=1024, height=600)
2025-08-25 17:09:47,676 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-25 17:09:47,677 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-25 17:09:47,677 [screensaver.py:close()] - Closing Screensaver
2025-08-25 17:09:47,679 [screen.py:wake_screen()] - Screen wake up
2025-08-25 17:09:47,719 [screensaver.py:close()] - Restoring Dialog <Gtk.Dialog object at 0xe48f42a8 (GtkDialog at 0x12221b8)>
2025-08-25 17:09:47,785 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 17:09:47,786 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 17:09:47,786 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-25 17:09:47,787 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 17:09:47,850 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-08-25 17:09:47,850 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-25 17:09:47,883 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 17:09:51,733 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 17:09:51,846 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 17:09:51,847 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 17:09:51,847 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 17:09:51,847 [printer.py:log_counts()] - # Fans: 3
2025-08-25 17:09:51,847 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 17:09:51,847 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 17:09:51,847 [printer.py:log_counts()] - # Leds: 1
2025-08-25 17:09:52,105 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 17:09:52,107 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 17:09:52,107 [screen.py:init_klipper()] - Printer initialized
2025-08-25 17:09:52,108 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 17:09:52,108 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 17:09:52,165 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 17:09:52,166 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 17:09:52,166 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 17:09:52,169 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 17:09:52,225 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-25 17:09:52,331 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 17:09:52,348 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 17:09:52,354 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 17:09:52,381 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 17:09:52,396 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 17:09:52,429 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 17:09:52,448 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 17:10:52,713 [screensaver.py:show()] - Showing Screensaver
2025-08-25 17:22:07,791 [KlippyWebsocket.py:on_close()] - 1001 Server Shutdown
2025-08-25 17:22:07,793 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2025-08-25 17:22:07,797 [screen.py:websocket_disconnected()] - ### websocket_disconnected
2025-08-25 17:22:07,797 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 17:22:07,802 [screensaver.py:close()] - Closing Screensaver
2025-08-25 17:22:07,803 [screen.py:wake_screen()] - Screen wake up
2025-08-25 17:22:07,926 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-25 17:22:07,960 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 17:22:08,033 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-08-25 17:22:08,034 [screen.py:show_panel()] - Panel is already is in view
2025-08-25 17:22:08,048 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-08-25 17:22:08,048 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-08-25 17:22:12,727 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-08-25 17:22:12,728 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-08-25 17:22:12,737 [_logging.py:info()] - Websocket connected
2025-08-25 17:22:12,738 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-08-25 17:22:12,739 [screen.py:websocket_connected()] - ### websocket_connected
2025-08-25 17:22:12,820 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-08-25 17:22:12,838 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-08-25 17:22:12,854 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 17:22:13,112 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 17:22:13,113 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 17:22:13,113 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 17:22:13,113 [printer.py:log_counts()] - # Fans: 3
2025-08-25 17:22:13,113 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 17:22:13,113 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 17:22:13,113 [printer.py:log_counts()] - # Leds: 1
2025-08-25 17:22:13,370 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 17:22:13,372 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 17:22:13,372 [screen.py:init_klipper()] - Printer initialized
2025-08-25 17:22:13,373 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 17:22:13,373 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 17:22:13,435 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 17:22:13,435 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 17:22:13,435 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 17:22:13,438 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 17:22:13,501 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-25 17:22:13,608 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 17:22:13,693 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 17:22:13,699 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 17:22:13,731 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 17:22:13,747 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 17:22:13,780 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 17:22:13,801 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 17:22:32,861 [KlippyWebsocket.py:on_close()] - 1001 Server Shutdown
2025-08-25 17:22:32,863 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2025-08-25 17:22:32,864 [screen.py:websocket_disconnected()] - ### websocket_disconnected
2025-08-25 17:22:32,864 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 17:22:32,945 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-25 17:22:32,985 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 17:22:33,073 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-08-25 17:22:33,074 [screen.py:show_panel()] - Panel is already is in view
2025-08-25 17:22:33,089 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-08-25 17:22:33,090 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-08-25 17:22:37,730 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-08-25 17:22:37,730 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-08-25 17:22:37,741 [_logging.py:info()] - Websocket connected
2025-08-25 17:22:37,741 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-08-25 17:22:37,742 [screen.py:websocket_connected()] - ### websocket_connected
2025-08-25 17:22:37,822 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-08-25 17:22:37,842 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-08-25 17:22:37,864 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 17:22:37,918 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 17:22:37,918 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 17:22:37,918 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 17:22:37,919 [printer.py:log_counts()] - # Fans: 3
2025-08-25 17:22:37,919 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 17:22:37,919 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 17:22:37,919 [printer.py:log_counts()] - # Leds: 1
2025-08-25 17:22:38,173 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 17:22:38,174 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 17:22:38,175 [screen.py:init_klipper()] - Printer initialized
2025-08-25 17:22:38,175 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 17:22:38,176 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 17:22:38,233 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 17:22:38,233 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 17:22:38,234 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 17:22:38,237 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 17:22:38,295 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-25 17:22:38,397 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 17:22:38,414 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 17:22:38,489 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 17:22:38,518 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 17:22:38,533 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 17:22:38,566 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 17:22:38,583 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 17:23:38,713 [screensaver.py:show()] - Showing Screensaver
2025-08-25 17:24:54,728 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-25 17:24:54,729 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-25 17:24:54,731 [screensaver.py:close()] - Closing Screensaver
2025-08-25 17:24:54,736 [screen.py:wake_screen()] - Screen wake up
2025-08-25 17:24:54,844 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 17:24:54,845 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 17:24:54,845 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-25 17:24:54,846 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 17:24:54,909 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-25 17:24:54,941 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 17:24:58,731 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 17:24:58,797 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 17:24:58,797 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 17:24:58,798 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 17:24:58,798 [printer.py:log_counts()] - # Fans: 3
2025-08-25 17:24:58,798 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 17:24:58,798 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 17:24:58,798 [printer.py:log_counts()] - # Leds: 1
2025-08-25 17:24:59,061 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 17:24:59,063 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 17:24:59,064 [screen.py:init_klipper()] - Printer initialized
2025-08-25 17:24:59,065 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 17:24:59,065 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 17:24:59,125 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 17:24:59,126 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 17:24:59,126 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 17:24:59,129 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 17:24:59,189 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-25 17:24:59,288 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 17:24:59,308 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 17:24:59,315 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 17:24:59,362 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 17:24:59,381 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 17:24:59,423 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 17:24:59,449 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 17:25:59,713 [screensaver.py:show()] - Showing Screensaver
2025-08-25 17:27:20,817 [KlippyWebsocket.py:on_close()] - 1001 Server Shutdown
2025-08-25 17:27:20,818 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2025-08-25 17:27:20,818 [screen.py:websocket_disconnected()] - ### websocket_disconnected
2025-08-25 17:27:20,819 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 17:27:20,828 [screensaver.py:close()] - Closing Screensaver
2025-08-25 17:27:20,832 [screen.py:wake_screen()] - Screen wake up
2025-08-25 17:27:20,976 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-25 17:27:21,019 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 17:27:21,103 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-08-25 17:27:21,104 [screen.py:show_panel()] - Panel is already is in view
2025-08-25 17:27:21,121 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-08-25 17:27:21,121 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-08-25 17:27:25,728 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-08-25 17:27:25,729 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-08-25 17:27:25,739 [_logging.py:info()] - Websocket connected
2025-08-25 17:27:25,739 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-08-25 17:27:25,741 [screen.py:websocket_connected()] - ### websocket_connected
2025-08-25 17:27:25,821 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-08-25 17:27:25,844 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-08-25 17:27:25,861 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 4, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 17:27:25,915 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 17:27:25,915 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 17:27:25,915 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 17:27:25,915 [printer.py:log_counts()] - # Fans: 3
2025-08-25 17:27:25,916 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 17:27:25,916 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 17:27:25,916 [printer.py:log_counts()] - # Leds: 1
2025-08-25 17:27:26,177 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 17:27:26,179 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 17:27:26,180 [screen.py:init_klipper()] - Printer initialized
2025-08-25 17:27:26,181 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 17:27:26,181 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 17:27:26,238 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 17:27:26,239 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 17:27:26,239 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 17:27:26,243 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 17:27:26,308 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-25 17:27:26,492 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 17:27:26,508 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 17:27:26,513 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 17:27:26,542 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 17:27:26,558 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 17:27:26,590 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 17:27:26,611 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 17:28:26,713 [screensaver.py:show()] - Showing Screensaver
2025-08-25 17:31:02,363 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-08-25 17:31:02,363 [printer.py:change_state()] - Adding callback for state: printing
2025-08-25 17:31:02,365 [screensaver.py:close()] - Closing Screensaver
2025-08-25 17:31:02,367 [screen.py:wake_screen()] - Screen wake up
2025-08-25 17:31:02,489 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 17:31:02,489 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 17:31:02,490 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 17:31:02,553 [screen.py:_load_panel()] - Loading panel: job_status
2025-08-25 17:31:02,759 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-25 17:31:02,770 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-08-25 17:31:02,799 [job_status.py:update_filename()] - Updating filename to 1st layer test 250x250mm by 02 layerheight_0.2mm_PLA_Generic Klipper Printer_39m2s.gcode
2025-08-25 17:31:02,800 [job_status.py:_update_file_metadata()] - Update Metadata. File: 1st layer test 250x250mm by 02 layerheight_0.2mm_PLA_Generic Klipper Printer_39m2s.gcode Size: 81391
2025-08-25 17:31:23,697 [screen.py:_load_panel()] - Loading panel: fine_tune
2025-08-25 17:31:23,789 [screen.py:attach_panel()] - Current panel hierarchy: job_status > fine_tune
2025-08-25 17:31:47,855 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_GCODE_OFFSET Z_ADJUST=-0.05 MOVE=1'}
2025-08-25 17:31:50,143 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_GCODE_OFFSET Z_ADJUST=-0.05 MOVE=1'}
2025-08-25 17:31:53,036 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_GCODE_OFFSET Z_ADJUST=-0.05 MOVE=1'}
2025-08-25 17:31:58,405 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_GCODE_OFFSET Z_ADJUST=-0.05 MOVE=1'}
2025-08-25 17:32:12,702 [fine_tune.py:change_percent_delta()] - ### Delta 0.01
2025-08-25 17:32:13,284 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_GCODE_OFFSET Z_ADJUST=-0.01 MOVE=1'}
2025-08-25 17:32:36,415 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_GCODE_OFFSET Z_ADJUST=-0.01 MOVE=1'}
2025-08-25 17:33:36,713 [screensaver.py:show()] - Showing Screensaver
2025-08-25 17:33:42,559 [screensaver.py:close()] - Closing Screensaver
2025-08-25 17:33:42,562 [screen.py:wake_screen()] - Screen wake up
2025-08-25 17:34:42,713 [screensaver.py:show()] - Showing Screensaver
2025-08-25 17:35:36,055 [screensaver.py:close()] - Closing Screensaver
2025-08-25 17:35:36,057 [screen.py:wake_screen()] - Screen wake up
2025-08-25 17:35:38,262 [screen.py:_send_action()] - printer.gcode.script: {'script': 'M220 S125'}
2025-08-25 17:35:39,499 [screen.py:_send_action()] - printer.gcode.script: {'script': 'M220 S150'}
2025-08-25 17:36:02,091 [screen.py:_send_action()] - printer.gcode.script: {'script': 'M221 S102'}
2025-08-25 17:36:04,091 [screen.py:_send_action()] - printer.gcode.script: {'script': 'M221 S100'}
2025-08-25 17:37:04,713 [screensaver.py:show()] - Showing Screensaver
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   2025-08-25 17:35:04,027 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-08-25 17:35:04,028 [functions.py:log_start()] - KlipperScreen Version: v0.4.6-11-g6b6f63b6
2025-08-25 17:35:04,028 [functions.py:log_start()] - Python version: 3.9
2025-08-25 17:35:04,231 [config.py:get_config_file_location()] - Passed config (-c): .
2025-08-25 17:35:04,232 [config.py:__init__()] - Config path location: /home/sonic/printer_data/config/KlipperScreen.conf
2025-08-25 17:35:04,236 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/main_menu.conf']
2025-08-25 17:35:04,254 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/splash_menu.conf']
2025-08-25 17:35:04,260 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/print_menu.conf']
2025-08-25 17:35:04,270 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/move_menu.conf']
2025-08-25 17:35:04,284 [config.py:log_config()] - ===== Config File =====

=======================
2025-08-25 17:35:04,287 [config.py:__init__()] - ====== Saved Def ======

[main]
screen_blanking = 60
screen_blanking_printing = 60
font_size = small

[graph Printer]
extruder = False

=======================
2025-08-25 17:35:04,288 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_path": "",
      "moonraker_ssl": null,
      "moonraker_api_key": ""
    }
  }
]
2025-08-25 17:35:04,494 [config.py:create_translations()] - Selected lang: system_lang OS lang: en_US
2025-08-25 17:35:04,494 [config.py:install_language()] - Using lang en
2025-08-25 17:35:04,516 [screen.py:__init__()] - Display for xset: :0
2025-08-25 17:35:04,518 [screen.py:__init__()] - Screen 0: 1024x600
2025-08-25 17:35:04,518 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-08-25 17:35:04,519 [screen.py:__init__()] - Wayland: False Display name: :0
2025-08-25 17:35:04,522 [screen.py:__init__()] - Screen resolution: 1024x600
2025-08-25 17:35:04,868 [KlippyGtk.py:__init__()] - Font size: 20.2 (small)
2025-08-25 17:35:05,100 [base_panel.py:battery_percentage()] - Battery information not available.
2025-08-25 17:35:05,400 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 17:35:05,402 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 17:35:05,402 [screen.py:initial_connection()] - Default printer: None
2025-08-25 17:35:05,477 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-08-25 17:35:05,479 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 17:35:05,545 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-08-25 17:35:05,625 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 17:35:05,654 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-08-25 17:35:05,655 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-08-25 17:35:09,647 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-08-25 17:35:09,647 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-08-25 17:35:09,658 [_logging.py:info()] - Websocket connected
2025-08-25 17:35:09,658 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-08-25 17:35:09,661 [screen.py:websocket_connected()] - ### websocket_connected
2025-08-25 17:35:09,745 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-08-25 17:35:09,768 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-08-25 17:35:09,786 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 17:35:10,083 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 17:35:10,083 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 17:35:10,084 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 17:35:10,084 [printer.py:log_counts()] - # Fans: 3
2025-08-25 17:35:10,084 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 17:35:10,084 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 17:35:10,084 [printer.py:log_counts()] - # Leds: 1
2025-08-25 17:35:10,349 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 17:35:10,351 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 17:35:10,351 [screen.py:init_klipper()] - Printer initialized
2025-08-25 17:35:10,352 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 17:35:10,353 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 17:35:10,421 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 17:35:10,421 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 17:35:10,422 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 17:35:10,425 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 17:35:10,485 [screen.py:_load_panel()] - Loading panel: main_menu
2025-08-25 17:35:10,719 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 17:35:10,736 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 17:35:10,747 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 17:35:10,784 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 17:35:10,800 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 17:35:10,835 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 17:35:10,855 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 17:48:07,738 [base_panel.py:battery_percentage()] - Battery information not available.
2025-08-25 17:48:12,742 [screensaver.py:show()] - Showing Screensaver
2025-08-25 17:51:12,260 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-25 17:51:12,260 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-25 17:51:12,262 [screensaver.py:close()] - Closing Screensaver
2025-08-25 17:51:12,264 [screen.py:wake_screen()] - Screen wake up
2025-08-25 17:51:12,376 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 17:51:12,376 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 17:51:12,376 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-25 17:51:12,378 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 17:51:12,434 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-25 17:51:12,462 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 17:51:16,441 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 17:51:16,672 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 17:51:16,673 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 17:51:16,673 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 17:51:16,673 [printer.py:log_counts()] - # Fans: 3
2025-08-25 17:51:16,673 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 17:51:16,674 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 17:51:16,674 [printer.py:log_counts()] - # Leds: 1
2025-08-25 17:51:16,928 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 17:51:16,930 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 17:51:16,931 [screen.py:init_klipper()] - Printer initialized
2025-08-25 17:51:16,931 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 17:51:16,932 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 17:51:16,951 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 17:51:17,178 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 17:51:17,178 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 17:51:17,179 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 17:51:17,179 [printer.py:log_counts()] - # Fans: 3
2025-08-25 17:51:17,179 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 17:51:17,179 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 17:51:17,179 [printer.py:log_counts()] - # Leds: 1
2025-08-25 17:51:17,425 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 17:51:17,427 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 17:51:17,427 [screen.py:init_klipper()] - Printer initialized
2025-08-25 17:51:17,481 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 17:51:17,481 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 17:51:17,481 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 17:51:17,485 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 17:51:17,547 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-25 17:51:17,657 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 17:51:17,673 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 17:51:17,680 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 17:51:17,708 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 17:51:17,724 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 17:51:17,758 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 17:51:17,777 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 17:51:21,909 [screen.py:show_popup_message()] - error: Error on 'SET_GCODE_VARIABLE MACRO=LED_PARTY VAR=running VALUE=1': missing VARIABLE
2025-08-25 17:51:41,124 [screen.py:show_popup_message()] - error: Error on 'SET_GCODE_VARIABLE MACRO=LED_PARTY VAR=running VALUE=1': missing VARIABLE
2025-08-25 17:52:17,740 [screensaver.py:show()] - Showing Screensaver
2025-08-25 17:52:53,575 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-25 17:52:53,575 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-25 17:52:53,579 [screensaver.py:close()] - Closing Screensaver
2025-08-25 17:52:53,589 [screen.py:wake_screen()] - Screen wake up
2025-08-25 17:52:53,701 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 17:52:53,702 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 17:52:53,702 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-25 17:52:53,703 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 17:52:53,762 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-25 17:52:53,794 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 17:52:57,782 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 17:52:57,981 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 17:52:57,982 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 17:52:57,982 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 17:52:57,982 [printer.py:log_counts()] - # Fans: 3
2025-08-25 17:52:57,982 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 17:52:57,982 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 17:52:57,982 [printer.py:log_counts()] - # Leds: 1
2025-08-25 17:52:58,240 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 17:52:58,242 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 17:52:58,242 [screen.py:init_klipper()] - Printer initialized
2025-08-25 17:52:58,243 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 17:52:58,243 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 17:52:58,298 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 17:52:58,299 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 17:52:58,300 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 17:52:58,303 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 17:52:58,363 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-25 17:52:58,468 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 17:52:58,485 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 17:52:58,490 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 17:52:58,519 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 17:52:58,534 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 17:52:58,568 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 17:52:58,586 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 17:53:06,397 [screen.py:show_popup_message()] - error: Shutdown due to M112 command
2025-08-25 17:53:06,495 [printer.py:change_state()] - Changing state from 'ready' to 'shutdown'
2025-08-25 17:53:06,496 [printer.py:change_state()] - Adding callback for state: shutdown
2025-08-25 17:53:06,612 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 17:53:06,613 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 17:53:06,613 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 17:53:06,671 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-25 17:53:06,698 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 17:54:03,141 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2025-08-25 17:54:03,142 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-25 17:54:03,214 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 17:54:03,215 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 17:54:03,215 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-25 17:54:03,216 [screen.py:show_panel()] - Panel is already is in view
2025-08-25 17:54:07,590 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 17:54:07,819 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 17:54:07,819 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 17:54:07,820 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 17:54:07,820 [printer.py:log_counts()] - # Fans: 3
2025-08-25 17:54:07,820 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 17:54:07,820 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 17:54:07,820 [printer.py:log_counts()] - # Leds: 1
2025-08-25 17:54:08,070 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 17:54:08,072 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 17:54:08,072 [screen.py:init_klipper()] - Printer initialized
2025-08-25 17:54:08,073 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 17:54:08,073 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 17:54:08,091 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 17:54:08,317 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 17:54:08,318 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 17:54:08,318 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 17:54:08,318 [printer.py:log_counts()] - # Fans: 3
2025-08-25 17:54:08,318 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 17:54:08,318 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 17:54:08,319 [printer.py:log_counts()] - # Leds: 1
2025-08-25 17:54:08,568 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 17:54:08,570 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 17:54:08,570 [screen.py:init_klipper()] - Printer initialized
2025-08-25 17:54:08,626 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 17:54:08,627 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 17:54:08,628 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 17:54:08,630 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 17:54:08,690 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-25 17:54:08,793 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 17:54:08,810 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 17:54:08,818 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 17:54:08,849 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 17:54:08,867 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 17:54:08,900 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 17:54:08,919 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 17:54:14,002 [screen.py:show_popup_message()] - error: Error on 'SET_LED LED=my_neopixel RED=255 GREEN=0 BLUE=0': RED must have maximum of 1.0
2025-08-25 17:55:02,726 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-25 17:55:02,726 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-25 17:55:02,796 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 17:55:02,797 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 17:55:02,797 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-25 17:55:02,798 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 17:55:02,856 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-25 17:55:02,887 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 17:55:06,758 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 17:55:06,916 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 17:55:06,916 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 17:55:06,917 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 17:55:06,917 [printer.py:log_counts()] - # Fans: 3
2025-08-25 17:55:06,917 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 17:55:06,917 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 17:55:06,917 [printer.py:log_counts()] - # Leds: 1
2025-08-25 17:55:07,178 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 17:55:07,182 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 17:55:07,182 [screen.py:init_klipper()] - Printer initialized
2025-08-25 17:55:07,183 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 17:55:07,183 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 17:55:07,239 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 17:55:07,239 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 17:55:07,240 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 17:55:07,243 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 17:55:07,304 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-25 17:55:07,406 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 17:55:07,423 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 17:55:07,428 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 17:55:07,458 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 17:55:07,475 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 17:55:07,511 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 17:55:07,529 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 17:56:07,740 [screensaver.py:show()] - Showing Screensaver
2025-08-25 17:57:54,919 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-08-25 17:57:54,920 [printer.py:change_state()] - Adding callback for state: printing
2025-08-25 17:57:54,920 [screensaver.py:close()] - Closing Screensaver
2025-08-25 17:57:54,924 [screen.py:wake_screen()] - Screen wake up
2025-08-25 17:57:55,055 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-25 17:57:55,056 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-25 17:57:55,056 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 17:57:55,127 [screen.py:_load_panel()] - Loading panel: job_status
2025-08-25 17:57:55,344 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-25 17:57:55,357 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-08-25 17:57:55,387 [job_status.py:update_filename()] - Updating filename to 12 links_0.2mm_PLA_Generic Klipper Printer_42m25s.gcode
2025-08-25 17:57:55,387 [job_status.py:_update_file_metadata()] - Update Metadata. File: 12 links_0.2mm_PLA_Generic Klipper Printer_42m25s.gcode Size: 4755846
2025-08-25 17:58:55,741 [screensaver.py:show()] - Showing Screensaver
2025-08-25 18:05:12,810 [screensaver.py:close()] - Closing Screensaver
2025-08-25 18:05:12,815 [screen.py:wake_screen()] - Screen wake up
2025-08-25 18:05:15,863 [screen.py:_go_to_submenu()] - #### Go to submenu 
2025-08-25 18:05:15,863 [screen.py:_go_to_submenu()] - #### Menu __print
2025-08-25 18:05:15,870 [screen.py:_load_panel()] - Loading panel: menu
2025-08-25 18:05:15,924 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-25 18:05:16,121 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2025-08-25 18:05:16,145 [menu.py:arrangeMenuItems()] - X > move
2025-08-25 18:05:16,153 [menu.py:arrangeMenuItems()] - X > power
2025-08-25 18:05:16,175 [menu.py:arrangeMenuItems()] - X > spoolman
2025-08-25 18:05:16,176 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-25 18:05:16,182 [menu.py:arrangeMenuItems()] - X > pins
2025-08-25 18:05:16,200 [screen.py:_go_to_submenu()] - menu, {{ gettext('Print Control') }}, panel_name=, items=[{'notifications': {'name': "{{ gettext('Notifications') }}", 'icon': 'notifications', 'panel': 'notifications', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'temperature': {'name': "{{ gettext('Temperature') }}", 'icon': 'heat-up', 'panel': 'temperature', 'method': None, 'confirm': None, 'enable': '{{ (printer.temperature_devices.count > 0) or (printer.extruders.count > 0)}}', 'params': '{}', 'style': None}}, {'fan': {'name': "{{ gettext('Fan') }}", 'icon': 'fan', 'panel': 'fan', 'method': None, 'confirm': None, 'enable': '{{ printer.fans.count > 0 }}', 'params': '{}', 'style': None}}, {'move': {'name': "{{ gettext('Move') }}", 'icon': 'move', 'panel': 'move', 'method': None, 'confirm': None, 'enable': '{{ printer.pause_resume.is_paused }}', 'params': '{}', 'style': None}}, {'extrude': {'name': "{{ gettext('Extrude') }}", 'icon': 'extrude', 'panel': 'extrude', 'method': None, 'confirm': None, 'enable': '{{ printer.extruders.count > 0 }}', 'params': '{}', 'style': None}}, {'power': {'name': "{{ gettext('Power') }}", 'icon': 'shutdown', 'panel': 'power', 'method': None, 'confirm': None, 'enable': '{{ moonraker.power_devices.count > 0 }}', 'params': '{}', 'style': None}}, {'led': {'name': "{{ gettext('Leds') }}", 'icon': 'light', 'panel': 'led', 'method': None, 'confirm': None, 'enable': '{{ printer.leds.count > 0 }}', 'params': '{}', 'style': None}}, {'macros': {'name': "{{ gettext('Macros') }}", 'icon': 'custom-script', 'panel': 'gcode_macros', 'method': None, 'confirm': None, 'enable': '{{ printer.gcode_macros.count > 0 }}', 'params': '{}', 'style': None}}, {'camera': {'name': "{{ gettext('Camera') }}", 'icon': 'camera', 'panel': 'camera', 'method': None, 'confirm': None, 'enable': '{{ moonraker.cameras.count > 0 }}', 'params': '{}', 'style': None}}, {'console': {'name': "{{ gettext('Console') }}", 'icon': 'console', 'panel': 'console', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'limits': {'name': "{{ gettext('Limits') }}", 'icon': 'fine-tune', 'panel': 'limits', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'network': {'name': "{{ gettext('Network') }}", 'icon': 'network', 'panel': 'network', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'settings': {'name': 'KlipperScreen', 'icon': 'settings', 'panel': 'settings', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'spoolman': {'name': 'Spoolman', 'icon': 'spoolman', 'panel': 'spoolman', 'method': None, 'confirm': None, 'enable': '{{ moonraker.spoolman }}', 'params': '{}', 'style': None}}, {'system': {'name': "{{ gettext('System') }}", 'icon': 'info', 'panel': 'system', 'method': None, 'confirm': None, 'enable': '{{ moonraker_connected }}', 'params': '{}', 'style': None}}, {'pins': {'name': "{{ gettext('Pins') }}", 'icon': 'hashtag', 'panel': 'pins', 'method': None, 'confirm': None, 'enable': '{{ printer.output_pins.count > 0 or printer.pwm_tools.count > 0 }}', 'params': '{}', 'style': None}}]
2025-08-25 18:05:17,510 [screen.py:_load_panel()] - Loading panel: settings
2025-08-25 18:05:17,691 [screen.py:attach_panel()] - Current panel hierarchy: job_status >  > settings
2025-08-25 18:05:21,239 [screen_panel.py:switch_config_option()] - [main] 24htime toggled False
2025-08-25 18:05:40,007 [screen_panel.py:on_dropdown_change()] - [main] theme changed to material-dark
2025-08-25 18:05:40,088 [base_panel.py:battery_percentage()] - Battery information not available.
2025-08-25 18:05:42,696 [screen_panel.py:on_dropdown_change()] - [main] theme changed to colorized
2025-08-25 18:05:42,797 [base_panel.py:battery_percentage()] - Battery information not available.
2025-08-25 18:05:47,065 [screen_panel.py:on_dropdown_change()] - [main] theme changed to material-darker
2025-08-25 18:05:47,146 [base_panel.py:battery_percentage()] - Battery information not available.
2025-08-25 18:05:56,365 [screen_panel.py:on_dropdown_change()] - [main] screen_blanking changed to 900
2025-08-25 18:05:56,421 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 900
2025-08-25 18:05:56,422 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 900 DPMS:True
2025-08-25 18:05:58,872 [screen_panel.py:on_dropdown_change()] - [main] screen_blanking_printing changed to 900
2025-08-25 18:05:58,930 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 900
2025-08-25 18:05:58,930 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 900 DPMS:True
2025-08-25 18:06:04,763 [screen_panel.py:switch_config_option()] - [main] show_heater_power toggled True
2025-08-25 18:06:04,772 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 18:06:04,834 [screen.py:show_panel()] - Reinitializing panel job_status
2025-08-25 18:06:04,968 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-25 18:06:04,978 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-08-25 18:06:04,995 [job_status.py:update_filename()] - Updating filename to 12 links_0.2mm_PLA_Generic Klipper Printer_42m25s.gcode
2025-08-25 18:06:04,996 [job_status.py:_update_file_metadata()] - Update Metadata. File: 12 links_0.2mm_PLA_Generic Klipper Printer_42m25s.gcode Size: 4755846
2025-08-25 18:06:10,239 [screen.py:_go_to_submenu()] - #### Go to submenu 
2025-08-25 18:06:10,239 [screen.py:_go_to_submenu()] - #### Menu __print
2025-08-25 18:06:10,246 [screen.py:show_panel()] - Reinitializing panel menu
2025-08-25 18:06:10,307 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-25 18:06:10,507 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2025-08-25 18:06:10,532 [menu.py:arrangeMenuItems()] - X > move
2025-08-25 18:06:10,541 [menu.py:arrangeMenuItems()] - X > power
2025-08-25 18:06:10,566 [menu.py:arrangeMenuItems()] - X > spoolman
2025-08-25 18:06:10,567 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-25 18:06:10,575 [menu.py:arrangeMenuItems()] - X > pins
2025-08-25 18:06:10,594 [screen.py:_go_to_submenu()] - menu, {{ gettext('Print Control') }}, panel_name=, items=[{'notifications': {'name': "{{ gettext('Notifications') }}", 'icon': 'notifications', 'panel': 'notifications', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'temperature': {'name': "{{ gettext('Temperature') }}", 'icon': 'heat-up', 'panel': 'temperature', 'method': None, 'confirm': None, 'enable': '{{ (printer.temperature_devices.count > 0) or (printer.extruders.count > 0)}}', 'params': '{}', 'style': None}}, {'fan': {'name': "{{ gettext('Fan') }}", 'icon': 'fan', 'panel': 'fan', 'method': None, 'confirm': None, 'enable': '{{ printer.fans.count > 0 }}', 'params': '{}', 'style': None}}, {'move': {'name': "{{ gettext('Move') }}", 'icon': 'move', 'panel': 'move', 'method': None, 'confirm': None, 'enable': '{{ printer.pause_resume.is_paused }}', 'params': '{}', 'style': None}}, {'extrude': {'name': "{{ gettext('Extrude') }}", 'icon': 'extrude', 'panel': 'extrude', 'method': None, 'confirm': None, 'enable': '{{ printer.extruders.count > 0 }}', 'params': '{}', 'style': None}}, {'power': {'name': "{{ gettext('Power') }}", 'icon': 'shutdown', 'panel': 'power', 'method': None, 'confirm': None, 'enable': '{{ moonraker.power_devices.count > 0 }}', 'params': '{}', 'style': None}}, {'led': {'name': "{{ gettext('Leds') }}", 'icon': 'light', 'panel': 'led', 'method': None, 'confirm': None, 'enable': '{{ printer.leds.count > 0 }}', 'params': '{}', 'style': None}}, {'macros': {'name': "{{ gettext('Macros') }}", 'icon': 'custom-script', 'panel': 'gcode_macros', 'method': None, 'confirm': None, 'enable': '{{ printer.gcode_macros.count > 0 }}', 'params': '{}', 'style': None}}, {'camera': {'name': "{{ gettext('Camera') }}", 'icon': 'camera', 'panel': 'camera', 'method': None, 'confirm': None, 'enable': '{{ moonraker.cameras.count > 0 }}', 'params': '{}', 'style': None}}, {'console': {'name': "{{ gettext('Console') }}", 'icon': 'console', 'panel': 'console', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'limits': {'name': "{{ gettext('Limits') }}", 'icon': 'fine-tune', 'panel': 'limits', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'network': {'name': "{{ gettext('Network') }}", 'icon': 'network', 'panel': 'network', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'settings': {'name': 'KlipperScreen', 'icon': 'settings', 'panel': 'settings', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'spoolman': {'name': 'Spoolman', 'icon': 'spoolman', 'panel': 'spoolman', 'method': None, 'confirm': None, 'enable': '{{ moonraker.spoolman }}', 'params': '{}', 'style': None}}, {'system': {'name': "{{ gettext('System') }}", 'icon': 'info', 'panel': 'system', 'method': None, 'confirm': None, 'enable': '{{ moonraker_connected }}', 'params': '{}', 'style': None}}, {'pins': {'name': "{{ gettext('Pins') }}", 'icon': 'hashtag', 'panel': 'pins', 'method': None, 'confirm': None, 'enable': '{{ printer.output_pins.count > 0 or printer.pwm_tools.count > 0 }}', 'params': '{}', 'style': None}}]
2025-08-25 18:06:11,921 [screen.py:show_panel()] - Reinitializing panel settings
2025-08-25 18:06:12,114 [screen.py:attach_panel()] - Current panel hierarchy: job_status >  > settings
2025-08-25 18:06:21,604 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-25 18:06:21,635 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2025-08-25 18:06:21,661 [menu.py:arrangeMenuItems()] - X > move
2025-08-25 18:06:21,669 [menu.py:arrangeMenuItems()] - X > power
2025-08-25 18:06:21,692 [menu.py:arrangeMenuItems()] - X > spoolman
2025-08-25 18:06:21,692 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-25 18:06:21,699 [menu.py:arrangeMenuItems()] - X > pins
2025-08-25 18:06:24,025 [screen.py:_load_panel()] - Loading panel: led
2025-08-25 18:06:24,032 [led.py:color_selector()] - neopixel my_neopixel
2025-08-25 18:06:24,036 [led.py:set_color()] - color: [1, 0, 0, 0]
2025-08-25 18:06:24,046 [led.py:set_color()] - color: [0, 1, 0, 0]
2025-08-25 18:06:24,049 [led.py:set_color()] - color: [0, 0, 1, 0]
2025-08-25 18:06:24,072 [KlippyRest.py:_do_request()] - 404 Client Error>>Key miscellaneous in namespace mainsail not found for url>>http://127.0.0.1:7125/server/database/item?namespace=mainsail&key=miscellaneous.entries
2025-08-25 18:06:24,073 [led.py:color_selector()] - Adding preset: off
2025-08-25 18:06:24,074 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:06:24,076 [led.py:color_selector()] - Adding preset: on
2025-08-25 18:06:24,076 [led.py:set_color()] - color: [1, 1, 1, 0]
2025-08-25 18:06:24,106 [screen.py:attach_panel()] - Current panel hierarchy: job_status >  > led
2025-08-25 18:06:24,109 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-08-25 18:06:24,113 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-08-25 18:06:24,291 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-08-25 18:06:24,543 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-08-25 18:06:24,795 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-08-25 18:06:25,046 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-08-25 18:06:25,176 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-25 18:06:25,204 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2025-08-25 18:06:25,230 [menu.py:arrangeMenuItems()] - X > move
2025-08-25 18:06:25,238 [menu.py:arrangeMenuItems()] - X > power
2025-08-25 18:06:25,261 [menu.py:arrangeMenuItems()] - X > spoolman
2025-08-25 18:06:25,261 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-25 18:06:25,268 [menu.py:arrangeMenuItems()] - X > pins
2025-08-25 18:06:29,234 [screen.py:_load_panel()] - Loading panel: camera
2025-08-25 18:06:31,139 [camera.py:__init__()] - {'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}
2025-08-25 18:06:31,191 [screen.py:attach_panel()] - Current panel hierarchy: job_status >  > camera
2025-08-25 18:06:31,191 [camera.py:play()] - camera URL is relative
2025-08-25 18:06:31,191 [camera.py:play()] - video filters: []
2025-08-25 18:06:31,235 [camera.py:play()] - Camera URL: http://127.0.0.1/webcam/?action=stream
2025-08-25 18:06:31,308 [camera.py:log()] - [warn] lavf: This format is marked by FFmpeg as having no timestamps!
2025-08-25 18:06:31,310 [camera.py:log()] - [warn] lavf: FFmpeg will likely make up its own broken timestamps. For
2025-08-25 18:06:31,311 [camera.py:log()] - [warn] lavf: video streams you can correct this with:
2025-08-25 18:06:31,312 [camera.py:log()] - [warn] lavf:     --no-correct-pts --fps=VALUE
2025-08-25 18:06:31,315 [camera.py:log()] - [warn] lavf: with VALUE being the real framerate of the stream. You can
2025-08-25 18:06:31,317 [camera.py:log()] - [warn] lavf: expect seeking and buffering estimation to be generally
2025-08-25 18:06:31,323 [camera.py:log()] - [warn] lavf: broken as well.
2025-08-25 18:06:31,324 [camera.py:log()] - [info] cplayer:  (+) Video --vid=1 (mjpeg)
2025-08-25 18:06:31,490 [camera.py:log()] - [warn] vo/gpu/opengl: Suspected software renderer or indirect context.
2025-08-25 18:06:31,726 [camera.py:log()] - [warn] vo/gpu/opengl: Suspected software renderer or indirect context.
2025-08-25 18:06:31,918 [camera.py:log()] - [warn] vo/x11: Warning: this legacy VO has bad performance. Consider fixing your graphics drivers, or not forcing the x11 VO.
2025-08-25 18:06:31,931 [camera.py:log()] - [info] cplayer: VO: [x11] 640x480 yuvj422p
2025-08-25 18:06:31,934 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly
2025-08-25 18:06:33,481 [camera.py:log()] - [info] cplayer: 
2025-08-25 18:06:33,501 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-25 18:06:33,530 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2025-08-25 18:06:33,556 [menu.py:arrangeMenuItems()] - X > move
2025-08-25 18:06:33,564 [menu.py:arrangeMenuItems()] - X > power
2025-08-25 18:06:33,588 [menu.py:arrangeMenuItems()] - X > spoolman
2025-08-25 18:06:33,588 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-25 18:06:33,598 [menu.py:arrangeMenuItems()] - X > pins
2025-08-25 18:06:35,991 [screen.py:_load_panel()] - Loading panel: notifications
2025-08-25 18:06:36,032 [screen.py:attach_panel()] - Current panel hierarchy: job_status >  > notifications
2025-08-25 18:06:38,076 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-25 18:06:38,105 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2025-08-25 18:06:38,131 [menu.py:arrangeMenuItems()] - X > move
2025-08-25 18:06:38,140 [menu.py:arrangeMenuItems()] - X > power
2025-08-25 18:06:38,162 [menu.py:arrangeMenuItems()] - X > spoolman
2025-08-25 18:06:38,163 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-25 18:06:38,170 [menu.py:arrangeMenuItems()] - X > pins
2025-08-25 18:06:40,119 [screen.py:_load_panel()] - Loading panel: system
2025-08-25 18:06:40,125 [system.py:__init__()] - {'python': {'version': [3, 9, 2, 'final', 0], 'version_string': '3.9.2 (default, Feb 28 2021, 17:03:44)  [GCC 10.2.1 20210110]'}, 'cpu_info': {'cpu_count': 4, 'bits': '32bit', 'processor': 'aarch64', 'cpu_desc': 'ARMv8 Processor rev 4 (v8l)', 'serial_number': '', 'hardware_desc': 'T800', 'model': 'sonic_lcd', 'total_memory': 2030728, 'memory_units': 'kB'}, 'sd_info': {'manufacturer_id': '45', 'manufacturer': 'Unknown', 'oem_id': '0100', 'product_name': 'DG400', 'product_revision': '3.8', 'serial_number': '0127ea95', 'manufacturer_date': '9/2123', 'capacity': 'Unknown', 'total_bytes': 0}, 'distribution': {'name': 'Debian GNU/Linux 11 (bullseye)', 'id': 'debian', 'version': '11', 'version_parts': {'major': '11', 'minor': '', 'build_number': ''}, 'like': '', 'codename': 'bullseye', 'release_info': {}, 'kernel_version': '4.9.191'}, 'virtualization': {'virt_type': 'none', 'virt_identifier': 'none'}, 'network': {'wlan0': {'mac_address': 'fc:ee:92:11:14:05', 'ip_addresses': [{'family': 'ipv4', 'address': '192.168.1.14', 'is_link_local': False}, {'family': 'ipv6', 'address': 'fe80::767d:9ad7:3997:ec47', 'is_link_local': True}]}}, 'canbus': {}, 'provider': 'systemd_dbus', 'available_services': ['octoapp', 'moonraker-obico', 'klipper', 'moonraker', 'KlipperScreen', 'octoeverywhere'], 'service_state': {'octoapp': {'active_state': 'active', 'sub_state': 'running'}, 'moonraker-obico': {'active_state': 'active', 'sub_state': 'running'}, 'klipper': {'active_state': 'active', 'sub_state': 'running'}, 'moonraker': {'active_state': 'active', 'sub_state': 'running'}, 'KlipperScreen': {'active_state': 'active', 'sub_state': 'running'}, 'octoeverywhere': {'active_state': 'active', 'sub_state': 'running'}}, 'instance_ids': {'moonraker': 'moonraker', 'klipper': 'klipper'}}
2025-08-25 18:06:40,158 [screen.py:attach_panel()] - Current panel hierarchy: job_status >  > system
2025-08-25 18:06:48,087 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-25 18:06:48,115 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2025-08-25 18:06:48,143 [menu.py:arrangeMenuItems()] - X > move
2025-08-25 18:06:48,152 [menu.py:arrangeMenuItems()] - X > power
2025-08-25 18:06:48,174 [menu.py:arrangeMenuItems()] - X > spoolman
2025-08-25 18:06:48,174 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-25 18:06:48,181 [menu.py:arrangeMenuItems()] - X > pins
2025-08-25 18:06:51,227 [screen.py:attach_panel()] - Current panel hierarchy: job_status >  > settings
2025-08-25 18:07:05,284 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-25 18:07:05,315 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2025-08-25 18:07:05,341 [menu.py:arrangeMenuItems()] - X > move
2025-08-25 18:07:05,350 [menu.py:arrangeMenuItems()] - X > power
2025-08-25 18:07:05,372 [menu.py:arrangeMenuItems()] - X > spoolman
2025-08-25 18:07:05,372 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-25 18:07:05,379 [menu.py:arrangeMenuItems()] - X > pins
2025-08-25 18:07:07,347 [screen.py:_load_panel()] - Loading panel: limits
2025-08-25 18:07:07,352 [limits.py:add_option()] - Adding option: max_accel
2025-08-25 18:07:07,360 [limits.py:add_option()] - Adding option: minimum_cruise_ratio
2025-08-25 18:07:07,365 [limits.py:add_option()] - Adding option: max_velocity
2025-08-25 18:07:07,370 [limits.py:add_option()] - Adding option: square_corner_velocity
2025-08-25 18:07:07,401 [screen.py:attach_panel()] - Current panel hierarchy: job_status >  > limits
2025-08-25 18:07:07,402 [limits.py:update_option()] - max_accel 4000.0
2025-08-25 18:07:07,404 [limits.py:update_option()] - minimum_cruise_ratio 0.5
2025-08-25 18:07:07,404 [limits.py:update_option()] - max_velocity 300.0
2025-08-25 18:07:07,405 [limits.py:update_option()] - square_corner_velocity 5.0
2025-08-25 18:07:07,713 [limits.py:update_option()] - max_accel 5000.0
2025-08-25 18:07:09,718 [limits.py:update_option()] - max_accel 4000.0
2025-08-25 18:07:12,224 [limits.py:update_option()] - max_accel 6000.0
2025-08-25 18:07:12,475 [limits.py:update_option()] - max_accel 4000.0
2025-08-25 18:07:13,244 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-25 18:07:13,275 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2025-08-25 18:07:13,306 [menu.py:arrangeMenuItems()] - X > move
2025-08-25 18:07:13,315 [menu.py:arrangeMenuItems()] - X > power
2025-08-25 18:07:13,339 [menu.py:arrangeMenuItems()] - X > spoolman
2025-08-25 18:07:13,339 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-25 18:07:13,347 [menu.py:arrangeMenuItems()] - X > pins
2025-08-25 18:07:23,456 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-25 18:07:23,486 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-25 18:08:03,685 [screen.py:_go_to_submenu()] - #### Go to submenu 
2025-08-25 18:08:03,685 [screen.py:_go_to_submenu()] - #### Menu __print
2025-08-25 18:08:03,721 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2025-08-25 18:08:03,746 [menu.py:arrangeMenuItems()] - X > move
2025-08-25 18:08:03,755 [menu.py:arrangeMenuItems()] - X > power
2025-08-25 18:08:03,778 [menu.py:arrangeMenuItems()] - X > spoolman
2025-08-25 18:08:03,778 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-25 18:08:03,785 [menu.py:arrangeMenuItems()] - X > pins
2025-08-25 18:08:03,803 [screen.py:_go_to_submenu()] - menu, {{ gettext('Print Control') }}, panel_name=, items=[{'notifications': {'name': "{{ gettext('Notifications') }}", 'icon': 'notifications', 'panel': 'notifications', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'temperature': {'name': "{{ gettext('Temperature') }}", 'icon': 'heat-up', 'panel': 'temperature', 'method': None, 'confirm': None, 'enable': '{{ (printer.temperature_devices.count > 0) or (printer.extruders.count > 0)}}', 'params': '{}', 'style': None}}, {'fan': {'name': "{{ gettext('Fan') }}", 'icon': 'fan', 'panel': 'fan', 'method': None, 'confirm': None, 'enable': '{{ printer.fans.count > 0 }}', 'params': '{}', 'style': None}}, {'move': {'name': "{{ gettext('Move') }}", 'icon': 'move', 'panel': 'move', 'method': None, 'confirm': None, 'enable': '{{ printer.pause_resume.is_paused }}', 'params': '{}', 'style': None}}, {'extrude': {'name': "{{ gettext('Extrude') }}", 'icon': 'extrude', 'panel': 'extrude', 'method': None, 'confirm': None, 'enable': '{{ printer.extruders.count > 0 }}', 'params': '{}', 'style': None}}, {'power': {'name': "{{ gettext('Power') }}", 'icon': 'shutdown', 'panel': 'power', 'method': None, 'confirm': None, 'enable': '{{ moonraker.power_devices.count > 0 }}', 'params': '{}', 'style': None}}, {'led': {'name': "{{ gettext('Leds') }}", 'icon': 'light', 'panel': 'led', 'method': None, 'confirm': None, 'enable': '{{ printer.leds.count > 0 }}', 'params': '{}', 'style': None}}, {'macros': {'name': "{{ gettext('Macros') }}", 'icon': 'custom-script', 'panel': 'gcode_macros', 'method': None, 'confirm': None, 'enable': '{{ printer.gcode_macros.count > 0 }}', 'params': '{}', 'style': None}}, {'camera': {'name': "{{ gettext('Camera') }}", 'icon': 'camera', 'panel': 'camera', 'method': None, 'confirm': None, 'enable': '{{ moonraker.cameras.count > 0 }}', 'params': '{}', 'style': None}}, {'console': {'name': "{{ gettext('Console') }}", 'icon': 'console', 'panel': 'console', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'limits': {'name': "{{ gettext('Limits') }}", 'icon': 'fine-tune', 'panel': 'limits', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'network': {'name': "{{ gettext('Network') }}", 'icon': 'network', 'panel': 'network', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'settings': {'name': 'KlipperScreen', 'icon': 'settings', 'panel': 'settings', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'spoolman': {'name': 'Spoolman', 'icon': 'spoolman', 'panel': 'spoolman', 'method': None, 'confirm': None, 'enable': '{{ moonraker.spoolman }}', 'params': '{}', 'style': None}}, {'system': {'name': "{{ gettext('System') }}", 'icon': 'info', 'panel': 'system', 'method': None, 'confirm': None, 'enable': '{{ moonraker_connected }}', 'params': '{}', 'style': None}}, {'pins': {'name': "{{ gettext('Pins') }}", 'icon': 'hashtag', 'panel': 'pins', 'method': None, 'confirm': None, 'enable': '{{ printer.output_pins.count > 0 or printer.pwm_tools.count > 0 }}', 'params': '{}', 'style': None}}]
2025-08-25 18:08:06,641 [screen.py:attach_panel()] - Current panel hierarchy: job_status >  > settings
2025-08-25 18:08:10,310 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-25 18:08:10,343 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2025-08-25 18:08:10,369 [menu.py:arrangeMenuItems()] - X > move
2025-08-25 18:08:10,378 [menu.py:arrangeMenuItems()] - X > power
2025-08-25 18:08:10,402 [menu.py:arrangeMenuItems()] - X > spoolman
2025-08-25 18:08:10,402 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-25 18:08:10,410 [menu.py:arrangeMenuItems()] - X > pins
2025-08-25 18:08:11,205 [screen.py:attach_panel()] - Current panel hierarchy: job_status >  > camera
2025-08-25 18:08:11,205 [camera.py:play()] - camera URL is relative
2025-08-25 18:08:11,205 [camera.py:play()] - video filters: []
2025-08-25 18:08:11,236 [camera.py:play()] - Camera URL: http://127.0.0.1/webcam/?action=stream
2025-08-25 18:08:11,334 [camera.py:log()] - [warn] lavf: This format is marked by FFmpeg as having no timestamps!
2025-08-25 18:08:11,336 [camera.py:log()] - [warn] lavf: FFmpeg will likely make up its own broken timestamps. For
2025-08-25 18:08:11,336 [camera.py:log()] - [warn] lavf: video streams you can correct this with:
2025-08-25 18:08:11,337 [camera.py:log()] - [warn] lavf:     --no-correct-pts --fps=VALUE
2025-08-25 18:08:11,338 [camera.py:log()] - [warn] lavf: with VALUE being the real framerate of the stream. You can
2025-08-25 18:08:11,338 [camera.py:log()] - [warn] lavf: expect seeking and buffering estimation to be generally
2025-08-25 18:08:11,340 [camera.py:log()] - [warn] lavf: broken as well.
2025-08-25 18:08:11,341 [camera.py:log()] - [info] cplayer:  (+) Video --vid=1 (mjpeg)
2025-08-25 18:08:11,459 [camera.py:log()] - [warn] vo/gpu/opengl: Suspected software renderer or indirect context.
2025-08-25 18:08:11,677 [camera.py:log()] - [warn] vo/gpu/opengl: Suspected software renderer or indirect context.
2025-08-25 18:08:11,864 [camera.py:log()] - [warn] vo/x11: Warning: this legacy VO has bad performance. Consider fixing your graphics drivers, or not forcing the x11 VO.
2025-08-25 18:08:11,875 [camera.py:log()] - [info] cplayer: VO: [x11] 640x480 yuvj422p
2025-08-25 18:08:11,878 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly
2025-08-25 18:08:16,297 [camera.py:log()] - [info] cplayer: 
2025-08-25 18:08:16,315 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-25 18:08:16,344 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2025-08-25 18:08:16,371 [menu.py:arrangeMenuItems()] - X > move
2025-08-25 18:08:16,380 [menu.py:arrangeMenuItems()] - X > power
2025-08-25 18:08:16,404 [menu.py:arrangeMenuItems()] - X > spoolman
2025-08-25 18:08:16,404 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-25 18:08:16,411 [menu.py:arrangeMenuItems()] - X > pins
2025-08-25 18:08:18,438 [screen.py:_menu_go_back()] - #### Menu go home
2025-08-25 18:08:18,469 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-25 18:09:05,026 [screen.py:_go_to_submenu()] - #### Go to submenu 
2025-08-25 18:09:05,027 [screen.py:_go_to_submenu()] - #### Menu __print
2025-08-25 18:09:05,061 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2025-08-25 18:09:05,087 [menu.py:arrangeMenuItems()] - X > move
2025-08-25 18:09:05,095 [menu.py:arrangeMenuItems()] - X > power
2025-08-25 18:09:05,118 [menu.py:arrangeMenuItems()] - X > spoolman
2025-08-25 18:09:05,118 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-25 18:09:05,126 [menu.py:arrangeMenuItems()] - X > pins
2025-08-25 18:09:05,140 [screen.py:_go_to_submenu()] - menu, {{ gettext('Print Control') }}, panel_name=, items=[{'notifications': {'name': "{{ gettext('Notifications') }}", 'icon': 'notifications', 'panel': 'notifications', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'temperature': {'name': "{{ gettext('Temperature') }}", 'icon': 'heat-up', 'panel': 'temperature', 'method': None, 'confirm': None, 'enable': '{{ (printer.temperature_devices.count > 0) or (printer.extruders.count > 0)}}', 'params': '{}', 'style': None}}, {'fan': {'name': "{{ gettext('Fan') }}", 'icon': 'fan', 'panel': 'fan', 'method': None, 'confirm': None, 'enable': '{{ printer.fans.count > 0 }}', 'params': '{}', 'style': None}}, {'move': {'name': "{{ gettext('Move') }}", 'icon': 'move', 'panel': 'move', 'method': None, 'confirm': None, 'enable': '{{ printer.pause_resume.is_paused }}', 'params': '{}', 'style': None}}, {'extrude': {'name': "{{ gettext('Extrude') }}", 'icon': 'extrude', 'panel': 'extrude', 'method': None, 'confirm': None, 'enable': '{{ printer.extruders.count > 0 }}', 'params': '{}', 'style': None}}, {'power': {'name': "{{ gettext('Power') }}", 'icon': 'shutdown', 'panel': 'power', 'method': None, 'confirm': None, 'enable': '{{ moonraker.power_devices.count > 0 }}', 'params': '{}', 'style': None}}, {'led': {'name': "{{ gettext('Leds') }}", 'icon': 'light', 'panel': 'led', 'method': None, 'confirm': None, 'enable': '{{ printer.leds.count > 0 }}', 'params': '{}', 'style': None}}, {'macros': {'name': "{{ gettext('Macros') }}", 'icon': 'custom-script', 'panel': 'gcode_macros', 'method': None, 'confirm': None, 'enable': '{{ printer.gcode_macros.count > 0 }}', 'params': '{}', 'style': None}}, {'camera': {'name': "{{ gettext('Camera') }}", 'icon': 'camera', 'panel': 'camera', 'method': None, 'confirm': None, 'enable': '{{ moonraker.cameras.count > 0 }}', 'params': '{}', 'style': None}}, {'console': {'name': "{{ gettext('Console') }}", 'icon': 'console', 'panel': 'console', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'limits': {'name': "{{ gettext('Limits') }}", 'icon': 'fine-tune', 'panel': 'limits', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'network': {'name': "{{ gettext('Network') }}", 'icon': 'network', 'panel': 'network', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'settings': {'name': 'KlipperScreen', 'icon': 'settings', 'panel': 'settings', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'spoolman': {'name': 'Spoolman', 'icon': 'spoolman', 'panel': 'spoolman', 'method': None, 'confirm': None, 'enable': '{{ moonraker.spoolman }}', 'params': '{}', 'style': None}}, {'system': {'name': "{{ gettext('System') }}", 'icon': 'info', 'panel': 'system', 'method': None, 'confirm': None, 'enable': '{{ moonraker_connected }}', 'params': '{}', 'style': None}}, {'pins': {'name': "{{ gettext('Pins') }}", 'icon': 'hashtag', 'panel': 'pins', 'method': None, 'confirm': None, 'enable': '{{ printer.output_pins.count > 0 or printer.pwm_tools.count > 0 }}', 'params': '{}', 'style': None}}]
2025-08-25 18:09:06,034 [screen.py:attach_panel()] - Current panel hierarchy: job_status >  > led
2025-08-25 18:09:06,035 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-08-25 18:09:06,149 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-08-25 18:09:06,399 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-08-25 18:09:06,651 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-08-25 18:09:06,904 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-08-25 18:09:07,152 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-08-25 18:09:07,405 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-08-25 18:09:07,654 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-08-25 18:09:07,907 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-08-25 18:09:08,155 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-08-25 18:09:08,243 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0]
2025-08-25 18:09:08,244 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=1.0 GREEN=1.0 BLUE=1.0 WHITE=0 SYNC=0 TRANSMIT=1'}
2025-08-25 18:09:08,408 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0]
2025-08-25 18:09:08,658 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0]
2025-08-25 18:09:08,910 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0]
2025-08-25 18:09:09,159 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0]
2025-08-25 18:09:09,412 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0]
2025-08-25 18:09:09,660 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0]
2025-08-25 18:09:09,912 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0]
2025-08-25 18:09:10,184 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0]
2025-08-25 18:09:10,412 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0]
2025-08-25 18:09:10,437 [led.py:set_color()] - color: [0.0, 1.0, 1.0, 0]
2025-08-25 18:09:10,438 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=0.0 GREEN=1.0 BLUE=1.0 WHITE=0 SYNC=0 TRANSMIT=1'}
2025-08-25 18:09:10,664 [led.py:set_color()] - color: [0.0, 1.0, 1.0, 0.0]
2025-08-25 18:09:10,916 [led.py:set_color()] - color: [0.0, 1.0, 1.0, 0.0]
2025-08-25 18:09:11,170 [led.py:set_color()] - color: [0.0, 1.0, 1.0, 0.0]
2025-08-25 18:09:11,418 [led.py:set_color()] - color: [0.0, 1.0, 1.0, 0.0]
2025-08-25 18:09:11,481 [led.py:set_color()] - color: [0.0, 0.0, 1.0, 0.0]
2025-08-25 18:09:11,482 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=0.0 GREEN=0.0 BLUE=1.0 WHITE=0.0 SYNC=0 TRANSMIT=1'}
2025-08-25 18:09:11,667 [led.py:set_color()] - color: [0.0, 0.0, 1.0, 0.0]
2025-08-25 18:09:11,919 [led.py:set_color()] - color: [0.0, 0.0, 1.0, 0.0]
2025-08-25 18:09:12,188 [led.py:set_color()] - color: [0.0, 0.0, 1.0, 0.0]
2025-08-25 18:09:12,331 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:12,331 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=0.0 GREEN=0.0 BLUE=0.0 WHITE=0.0 SYNC=0 TRANSMIT=1'}
2025-08-25 18:09:12,418 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:12,672 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:12,920 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:13,176 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:13,422 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:13,675 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:13,934 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:14,183 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:14,436 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:14,686 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:14,937 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:15,188 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:15,436 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:15,687 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:15,941 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:16,191 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:16,440 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:16,707 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:16,957 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:17,208 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:17,460 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:17,710 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:17,958 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:18,211 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:18,459 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:18,712 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:18,961 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:19,215 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:19,466 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:19,715 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:19,963 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:20,217 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:20,465 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:20,716 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:20,968 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:21,217 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:21,471 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:21,721 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:21,971 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:22,220 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:22,472 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:22,721 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:22,971 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:23,225 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:23,473 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:23,726 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:23,975 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:24,227 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:24,475 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:24,729 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:24,978 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:25,231 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:25,479 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:25,729 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:25,983 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:26,231 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:26,484 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:26,732 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:26,983 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:27,236 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:27,489 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:27,735 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:27,988 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:28,236 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:28,491 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:28,742 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:28,987 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:29,244 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:29,489 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:29,743 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:29,989 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:30,243 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:30,494 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:30,744 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:30,996 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:31,246 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:31,496 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:31,744 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:31,995 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:32,248 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:32,499 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:32,748 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:33,004 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:33,841 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:33,882 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:33,883 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:34,172 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:34,257 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:34,531 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:34,754 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:35,017 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:35,264 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:35,517 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:35,769 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:36,043 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:36,292 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:36,564 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:36,812 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:37,064 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:37,317 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:37,567 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:37,819 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:38,071 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:38,321 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:38,567 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:38,824 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:39,069 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:39,320 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:39,573 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:39,823 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:40,074 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:40,325 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:40,574 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:40,827 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:41,076 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:41,329 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:41,577 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:41,832 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:42,079 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:42,333 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:42,583 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:42,850 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:43,099 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:43,352 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:43,606 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:43,854 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:44,102 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:44,355 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:44,603 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:44,856 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:45,104 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:45,355 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:45,609 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:45,860 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:46,108 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:46,362 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:46,609 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:46,864 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:47,113 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:47,365 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:47,612 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:47,866 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:48,119 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:48,367 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:48,615 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:48,868 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:49,135 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:49,384 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:49,635 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:49,888 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:50,141 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:50,390 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:50,640 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:50,891 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:51,139 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:51,391 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:51,641 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:51,899 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:52,143 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:52,396 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:52,644 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:52,893 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:53,146 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:53,396 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:53,644 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:53,896 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:54,166 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:54,414 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:54,664 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:54,919 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:55,165 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:55,419 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:55,668 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:55,932 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:56,179 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:56,430 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:56,684 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:56,933 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:57,182 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:57,435 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:57,683 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:57,939 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:58,185 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:58,439 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:58,686 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:58,941 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:59,188 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:59,442 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:59,692 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:09:59,942 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:00,195 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:00,441 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:00,694 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:00,943 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:01,198 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:01,449 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:01,694 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:01,950 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:02,197 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:02,452 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:02,698 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:02,951 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:03,203 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:03,458 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:03,709 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:03,959 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:04,207 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:04,460 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:04,708 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:04,963 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:05,224 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:05,463 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:05,710 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:05,963 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:06,211 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:06,465 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:06,713 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:06,967 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:07,223 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:07,468 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:07,717 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:07,967 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:08,220 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:08,470 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:08,718 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:08,969 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:09,222 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:09,472 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:09,720 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:09,973 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:10,228 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:10,475 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:10,728 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:10,974 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:11,231 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:11,476 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:11,728 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:11,980 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:12,230 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:12,482 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:12,729 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:12,979 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:13,234 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:13,481 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:13,735 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:13,983 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:14,236 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:14,488 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:14,735 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:14,989 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:15,237 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:15,488 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:15,743 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:15,994 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:16,244 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:16,492 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:16,745 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:16,996 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:17,244 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:18,022 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:18,056 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:18,057 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:18,359 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:18,544 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:18,752 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:19,002 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:19,252 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:19,513 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:19,760 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:20,017 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:20,264 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:20,515 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:20,766 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:21,016 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:21,264 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:21,518 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:21,768 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:22,015 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:22,271 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:22,521 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:22,773 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:23,021 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:23,274 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:23,521 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:23,772 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:24,025 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:24,279 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:24,524 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:24,777 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:25,027 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:25,281 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:25,530 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:25,778 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:26,031 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:26,280 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:26,534 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:26,784 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:27,034 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:27,309 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:27,556 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:27,839 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:28,086 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:28,339 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:28,589 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:28,839 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:29,097 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:29,346 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:29,616 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:29,864 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:30,115 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:30,369 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:30,618 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:30,868 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:31,119 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:31,373 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:31,616 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:31,869 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:32,119 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:32,371 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:32,619 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:32,872 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:33,123 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:33,375 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:33,622 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:33,874 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:34,123 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:34,380 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:34,623 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:34,878 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:35,129 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:35,383 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:35,627 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:35,880 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:36,128 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:36,382 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:36,631 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:36,879 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:37,137 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:37,390 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:37,639 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:37,888 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:38,142 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:38,392 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:38,640 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:38,895 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:39,143 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:39,419 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:39,646 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:39,899 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:40,146 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:40,404 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:40,649 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:40,899 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:41,155 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:41,406 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:41,651 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:41,901 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:42,157 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:42,408 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:42,657 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:42,904 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:43,158 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:43,413 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:43,659 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:43,910 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:44,158 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:44,413 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:44,660 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:44,915 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:45,163 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:45,417 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:45,664 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:45,916 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:46,164 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:46,418 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:46,670 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:46,919 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:47,167 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:47,418 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:47,672 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:47,922 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:48,171 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:48,447 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:48,694 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:48,947 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:49,202 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:49,453 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:49,697 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:49,949 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:50,198 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:50,452 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:50,699 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:50,953 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:51,202 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:51,453 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:51,702 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:51,955 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:52,202 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:52,455 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:52,704 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:52,953 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:53,207 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:53,457 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:53,708 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:53,957 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:54,211 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:54,459 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:54,708 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:54,962 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:55,210 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:55,464 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:55,714 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:55,979 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:56,226 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:56,480 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:56,730 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:56,980 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:57,228 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:57,479 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:57,732 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:57,982 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:58,233 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:58,484 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:58,731 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:58,984 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:59,233 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:59,487 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:59,734 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:10:59,988 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:00,238 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:00,487 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:00,742 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:00,988 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:01,241 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:01,493 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:01,743 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:01,993 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:02,244 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:02,492 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:02,744 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:02,997 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:03,251 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:03,499 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:03,747 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:03,998 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:04,261 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:04,502 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:04,753 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:05,012 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:05,260 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:05,515 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:05,761 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:06,015 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:06,263 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:06,517 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:06,767 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:07,015 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:07,270 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:07,520 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:07,768 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:08,021 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:08,272 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:08,520 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:08,773 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:09,024 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:09,276 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:09,524 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:09,777 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:10,025 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:10,279 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:10,527 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:10,780 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:11,028 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:11,285 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:11,529 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:11,780 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:12,034 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:12,282 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:12,536 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:12,786 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:13,034 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:13,287 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:13,543 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:13,789 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:14,041 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:14,289 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:14,539 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:14,792 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:15,043 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:15,293 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:15,541 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:15,795 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:16,042 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:16,296 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:16,547 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:16,794 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:17,048 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:17,296 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:17,551 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:17,798 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:18,051 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:18,301 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:18,555 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:18,801 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:19,052 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:19,305 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:19,556 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:19,803 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:20,056 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:20,305 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:20,559 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:20,809 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:21,058 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:21,307 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:21,561 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:21,811 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:22,063 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:22,321 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:22,587 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:22,835 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:23,092 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:23,337 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:23,590 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:23,839 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:24,091 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:24,341 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:24,592 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:24,843 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:25,091 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:25,345 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:25,596 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:25,843 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:26,095 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:26,346 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:26,598 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:26,847 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:27,099 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:27,347 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:27,601 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:27,849 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:28,101 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:28,350 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:28,603 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:28,852 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:29,104 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:29,356 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:29,607 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:29,856 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:30,107 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:30,358 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:30,606 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:30,862 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:31,138 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:31,384 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:31,650 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:31,899 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:32,148 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:32,406 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:32,649 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:32,903 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:33,153 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:33,402 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:33,655 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:33,906 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:34,157 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:34,409 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:34,656 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:34,909 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:35,158 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:35,410 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:35,661 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:35,912 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:36,160 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:36,419 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:36,661 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:36,915 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:37,165 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:37,416 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:37,664 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:37,917 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:38,166 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:38,418 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:38,667 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:38,927 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:39,176 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:39,428 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:39,680 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:39,930 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:40,177 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:40,430 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:40,678 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:40,929 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:41,187 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:41,433 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:41,682 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:41,932 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:42,187 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:42,434 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:42,684 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:42,938 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:43,187 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:43,440 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:43,688 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:43,946 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:44,193 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:44,443 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:44,695 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:44,943 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:45,196 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:45,459 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:45,706 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:45,955 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:46,219 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:46,457 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:46,710 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:46,960 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:47,211 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:47,468 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:47,711 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:47,963 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:48,216 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:48,466 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:48,714 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:48,964 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:49,216 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:49,469 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:49,720 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:49,970 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:50,218 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:50,472 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:50,719 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:50,973 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:51,221 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:51,474 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:51,731 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:51,988 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:52,240 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:52,494 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:52,773 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:53,021 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:53,272 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:53,524 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:53,776 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:54,027 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:54,274 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:54,527 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:54,792 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:55,038 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:55,292 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:55,543 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:55,791 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:56,043 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:56,295 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:56,547 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:56,794 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:57,047 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:57,297 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:57,548 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:57,798 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:58,048 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:58,297 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:58,551 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:58,798 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:59,051 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:59,300 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:59,553 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:11:59,800 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:00,050 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:00,303 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:00,555 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:00,802 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:01,057 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:01,303 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:01,568 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:01,816 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:02,073 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:02,323 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:02,572 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:02,818 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:03,075 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:03,321 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:03,574 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:03,826 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:04,075 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:04,332 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:04,578 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:04,828 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:05,077 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:05,329 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:05,580 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:05,827 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:06,079 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:06,331 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:06,583 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:06,830 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:07,084 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:07,340 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:07,586 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:07,839 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:08,088 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:08,336 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:08,590 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:08,839 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:09,091 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:09,347 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:09,619 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:09,866 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:10,118 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:10,367 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:10,622 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:10,870 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:11,123 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:11,374 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:11,627 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:11,876 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:12,124 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:12,381 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:12,628 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:12,877 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:13,127 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:13,379 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:13,631 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:13,883 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:14,130 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:14,382 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:14,632 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:14,887 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:15,134 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:15,407 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:15,654 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:15,904 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:16,158 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:16,406 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:16,661 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:16,908 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:17,161 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:17,410 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:17,665 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:17,914 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:18,163 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:18,416 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:18,665 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:18,919 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:19,169 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:19,419 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:19,672 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:19,920 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:20,172 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:20,421 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:20,672 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:20,920 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:21,173 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:21,423 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:21,673 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:21,926 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:22,216 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:22,461 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:22,735 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:22,983 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:23,240 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:23,491 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:23,760 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:24,008 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:24,261 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:24,509 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:24,763 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:25,011 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:25,263 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:25,513 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:25,762 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:26,016 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:26,268 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:26,514 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:26,769 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:27,024 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:27,267 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:27,520 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:27,768 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:28,021 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:28,270 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:28,523 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:28,770 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:29,023 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:29,273 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:29,524 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:29,779 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:30,026 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:30,279 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:30,532 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:30,778 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:31,030 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:31,282 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:31,541 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:31,784 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:32,031 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:32,284 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:32,539 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:32,786 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:33,036 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:33,284 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:33,545 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:33,788 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:34,041 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:34,289 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:34,546 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:34,792 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:35,043 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:35,294 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:35,550 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:35,795 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:36,046 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:36,296 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:36,547 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:36,794 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:37,051 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:37,296 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:37,554 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:37,797 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:38,050 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:38,310 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:38,565 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:38,812 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:39,066 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:39,315 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:39,574 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:39,817 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:40,070 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:40,322 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:40,576 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:40,819 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:41,073 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:41,322 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:41,576 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:41,823 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:42,076 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:42,327 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:42,577 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:42,828 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:43,078 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:43,330 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:43,580 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:43,831 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:44,082 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:44,333 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:44,581 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:44,835 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:45,087 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:45,333 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:45,583 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:45,834 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:46,088 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:46,340 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:46,590 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:46,839 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:47,087 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:47,343 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:47,590 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:47,843 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:48,090 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:48,343 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:48,600 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:48,843 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:49,095 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:49,373 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:49,620 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:49,873 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:50,121 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:50,374 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:50,626 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:50,876 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:51,127 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:51,380 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:51,626 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:51,881 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:52,130 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:52,382 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:52,629 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:52,884 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:53,130 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:53,384 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:53,636 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:53,885 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:54,137 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:54,388 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:54,636 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:54,889 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:55,166 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:55,408 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:55,662 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:55,912 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:56,163 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:56,414 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:56,663 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:56,915 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:57,163 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:57,418 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:57,666 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:57,919 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:58,168 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:58,420 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:58,671 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:58,919 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:59,172 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:59,420 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:59,671 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:12:59,921 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:00,176 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:00,423 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:00,678 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:00,924 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:01,178 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:01,426 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:01,681 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:01,927 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:02,179 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:02,432 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:02,679 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:02,934 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:03,181 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:03,432 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:03,687 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:03,936 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:04,185 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:04,438 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:04,686 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:04,939 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:05,203 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:05,454 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:05,705 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:05,951 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:06,206 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:06,459 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:06,704 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:06,957 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:07,205 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:07,459 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:07,729 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:07,976 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:08,227 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:08,484 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:08,732 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:08,985 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:09,231 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:09,481 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:09,736 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:09,983 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:10,239 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:10,488 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:10,742 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:10,988 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:11,240 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:11,496 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:11,744 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:11,990 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:12,245 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:12,499 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:12,746 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:12,995 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:13,246 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:13,498 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:13,749 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:13,996 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:14,249 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:14,502 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:14,751 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:15,002 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:15,254 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:15,504 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:15,751 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:16,007 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:16,252 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:16,505 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:16,755 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:17,011 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:17,258 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:17,518 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:17,764 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:18,014 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:18,266 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:18,521 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:18,767 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:19,019 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:19,268 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:19,523 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:19,769 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:20,022 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:20,278 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:20,544 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:20,790 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:21,042 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:21,295 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:21,544 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:21,792 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:22,048 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:22,297 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:22,551 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:22,798 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:23,046 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:23,299 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:23,548 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:23,801 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:24,052 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:24,302 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:24,552 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:24,804 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:25,055 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:25,310 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:25,580 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:25,828 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:26,078 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:26,332 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:26,579 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:26,833 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:27,081 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:27,335 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:27,584 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:27,836 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:28,087 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:28,338 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:28,587 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:28,839 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:29,088 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:29,342 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:29,592 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:29,855 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:30,103 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:30,357 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:30,613 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:30,859 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:31,106 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:31,372 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:31,619 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:31,876 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:32,120 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:32,374 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:32,621 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:32,875 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:33,124 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:33,378 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:33,625 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:33,879 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:34,132 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:34,379 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:34,629 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:34,885 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:35,136 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:35,387 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:35,638 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:35,886 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:36,138 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:36,393 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:36,637 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:36,891 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:37,162 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:37,412 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:37,687 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:37,932 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:38,188 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:38,436 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:38,688 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:38,939 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:39,188 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:39,439 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:39,691 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:39,938 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:40,191 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:40,443 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:40,691 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:40,944 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:41,192 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:41,445 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:41,695 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:41,946 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:42,195 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:42,448 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:42,697 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:42,951 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:43,198 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:43,452 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:43,699 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:43,953 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:44,216 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:44,479 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:44,727 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:44,981 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:45,227 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:45,481 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:45,730 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:45,983 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:46,233 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:46,486 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:46,733 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:46,985 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:47,234 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:47,487 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:47,735 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:47,988 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:48,236 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:48,492 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:48,742 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:48,992 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:49,238 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:49,493 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:49,743 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:49,995 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:50,242 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:50,494 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:50,747 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:50,996 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:51,247 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:51,496 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:51,746 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:52,000 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:52,247 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:52,502 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:52,748 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:53,003 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:53,252 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:53,507 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:53,755 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:54,002 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:54,256 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:54,507 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:54,754 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:55,005 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:55,258 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:55,508 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:55,760 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:56,011 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:56,262 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:56,514 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:56,764 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:57,013 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:57,263 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:57,515 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:57,763 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:58,017 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:58,267 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:58,517 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:58,768 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:59,018 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:59,267 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:59,517 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:13:59,771 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:00,024 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:00,274 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:00,522 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:00,775 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:01,024 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:01,276 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:01,530 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:01,782 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:02,032 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:02,283 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:02,532 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:02,784 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:03,036 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:03,284 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:03,539 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:03,790 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:04,036 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:04,291 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:04,542 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:04,792 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:05,040 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:05,292 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:05,542 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:05,796 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:06,042 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:06,296 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:06,546 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:06,794 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:07,045 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:07,299 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:07,550 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:07,797 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:08,051 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:08,299 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:08,553 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:08,804 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:09,056 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:09,306 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:09,558 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:09,807 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:10,057 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:10,308 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:10,560 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:10,811 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:11,058 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:11,311 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:11,561 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:11,814 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:12,061 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:12,311 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:12,574 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:12,813 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:13,067 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:13,315 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:13,569 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:13,819 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:14,068 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:14,321 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:14,573 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:14,824 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:15,072 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:15,327 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:15,575 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:15,828 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:16,077 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:16,330 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:16,582 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:16,832 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:17,080 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:17,333 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:17,594 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:17,841 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:18,092 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:18,348 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:18,597 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:18,847 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:19,095 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:19,347 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:19,596 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:19,850 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:20,101 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:20,350 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:20,599 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:20,853 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:21,100 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:21,354 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:21,602 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:21,859 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:22,103 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:22,356 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:22,604 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:22,860 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:23,109 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:23,357 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:23,610 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:23,859 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:24,113 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:24,364 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:24,617 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:24,861 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:25,115 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:25,365 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:25,614 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:25,867 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:26,117 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:26,366 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:26,621 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:26,867 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:27,120 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:27,368 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:27,622 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:27,869 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:28,120 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:28,374 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:28,624 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:28,875 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:29,123 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:29,375 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:29,627 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:29,875 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:30,129 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:30,378 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:30,630 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:30,881 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:31,161 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:31,413 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:31,660 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:31,914 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:32,163 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:32,415 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:32,663 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:32,916 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:33,167 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:33,415 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:33,693 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:33,939 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:34,193 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:34,443 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:34,692 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:34,946 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:35,199 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:35,445 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:35,696 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:35,949 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:36,197 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:36,452 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:36,703 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:36,954 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:37,201 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:37,452 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:37,706 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:37,955 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:38,207 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:38,458 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:38,711 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:38,957 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:39,212 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:39,459 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:39,724 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:39,962 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:40,211 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:40,463 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:40,717 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:40,965 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:41,211 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:41,465 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:41,714 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:41,970 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:42,214 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:42,466 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:42,717 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:42,971 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:43,218 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:43,472 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:43,720 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:43,972 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:44,222 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:44,472 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:44,726 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:44,975 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:45,225 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:45,479 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:45,728 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:45,977 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:46,227 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:46,493 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:46,728 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:46,982 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:47,229 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:47,483 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:47,735 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:47,986 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:48,233 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:48,487 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:48,737 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:48,989 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:49,236 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:49,489 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:49,743 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:49,991 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:50,237 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:50,493 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:50,743 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:50,995 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:51,241 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:51,495 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:51,743 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:51,995 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:52,243 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:52,506 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:52,754 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:53,004 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:53,256 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:53,508 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:53,757 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:54,009 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:54,258 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:54,511 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:54,760 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:55,013 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:55,261 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:55,514 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:55,766 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:56,012 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:56,265 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:56,514 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:56,768 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:57,015 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:57,267 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:57,516 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:57,773 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:58,018 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:58,273 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:58,523 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:58,771 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:59,021 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:59,275 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:59,524 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:14:59,774 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:00,028 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:00,277 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:00,526 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:00,780 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:01,027 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:01,280 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:01,541 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:01,783 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:02,029 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:02,280 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:02,534 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:02,784 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:03,034 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:03,283 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:03,537 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:03,791 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:04,036 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:04,300 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:04,548 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:04,804 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:05,052 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:05,299 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:05,553 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:05,806 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:06,051 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:06,302 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:06,556 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:06,804 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:07,058 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:07,305 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:07,560 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:07,825 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:08,072 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:08,322 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:08,576 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:08,827 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:09,074 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:09,324 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:09,580 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:09,826 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:10,082 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:10,332 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:10,582 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:10,833 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:11,080 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:11,332 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:11,582 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:11,835 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:12,085 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:12,334 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:12,588 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:12,837 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:13,089 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:13,337 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:13,592 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:13,839 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:14,095 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:14,343 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:14,592 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:14,841 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:15,096 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:15,343 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:15,600 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:15,845 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:16,099 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:16,349 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:16,600 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:16,847 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:17,101 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:17,361 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:17,611 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:17,862 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:18,114 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:18,365 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:18,616 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:18,865 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:19,118 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:19,367 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:19,616 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:19,869 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:20,121 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:20,371 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:20,622 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:20,870 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:21,130 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:21,377 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:21,628 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:21,875 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:22,128 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:22,378 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:22,631 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:22,879 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:23,133 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:23,383 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:23,634 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:23,881 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:24,136 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:24,383 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:24,636 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:24,888 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:25,135 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:25,387 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:25,640 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:25,887 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:26,143 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:26,393 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:26,641 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:26,899 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:27,147 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:27,401 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:27,652 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:27,903 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:28,150 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:28,404 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:28,653 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:28,903 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:29,159 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:29,410 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:29,658 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:29,909 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:30,158 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:30,411 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:30,660 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:30,913 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:31,162 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:31,412 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:31,666 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:31,913 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:32,167 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:32,418 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:32,668 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:32,917 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:33,170 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:33,418 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:33,674 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:33,924 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:34,174 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:34,422 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:34,678 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:34,924 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:35,178 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:35,428 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:35,691 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:35,938 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:36,192 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:36,440 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:36,696 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:36,940 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:37,195 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:37,446 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:37,715 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:37,962 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:38,215 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:38,465 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:38,719 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:38,965 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:39,219 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:39,467 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:39,718 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:39,972 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:40,220 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:40,470 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:40,724 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:40,976 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:41,226 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:41,476 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:41,724 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:41,974 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:42,228 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:42,476 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:42,730 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:42,981 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:43,230 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:43,486 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:43,729 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:43,982 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:44,233 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:44,485 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:44,735 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:44,982 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:45,235 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:45,488 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:45,735 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:45,989 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:46,251 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:46,499 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:46,750 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:47,005 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:47,252 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:47,511 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:47,759 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:48,011 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:48,265 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:48,517 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:48,765 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:49,013 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:49,264 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:49,519 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:49,769 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:50,017 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:50,272 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:50,518 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:50,773 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:51,023 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:51,274 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:51,521 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:51,776 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:52,023 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:52,276 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:52,526 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:52,778 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:53,029 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:53,279 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:53,531 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:53,785 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:54,029 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:54,283 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:54,530 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:54,785 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:55,031 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:55,282 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:55,535 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:55,784 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:56,033 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:56,286 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:56,537 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:56,787 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:57,044 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:57,288 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:57,542 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:57,793 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:58,042 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:58,291 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:58,544 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:58,794 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:59,044 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:59,299 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:59,544 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:15:59,799 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:00,047 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:00,301 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:00,550 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:00,815 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:01,051 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:01,302 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:01,558 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:01,807 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:02,051 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:02,305 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:02,560 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:02,816 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:03,056 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:03,308 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:03,562 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:03,817 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:04,059 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:04,312 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:04,563 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:04,819 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:05,062 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:05,315 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:05,568 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:05,819 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:06,064 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:06,319 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:06,571 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:06,823 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:07,069 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:07,322 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:07,586 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:07,834 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:08,084 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:08,338 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:08,595 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:08,840 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:09,088 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:09,342 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:09,592 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:09,845 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:10,098 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:10,347 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:10,599 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:10,850 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:11,102 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:11,350 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:11,604 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:11,857 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:12,105 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:12,358 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:12,607 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:12,856 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:13,109 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:13,360 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:13,608 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:13,862 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:14,109 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:14,363 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:14,614 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:14,864 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:15,112 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:15,365 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:15,617 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:15,865 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:16,120 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:16,366 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:16,622 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:16,869 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:17,119 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:17,372 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:17,627 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:17,873 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:18,125 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:18,372 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:18,628 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:18,878 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:19,129 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:19,377 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:19,630 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:19,878 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:20,132 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:20,381 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:20,635 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:20,885 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:21,134 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:21,386 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:21,637 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:21,884 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:22,144 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:22,392 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:22,646 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:22,895 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:23,144 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:23,402 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:23,646 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:23,898 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:24,152 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:24,398 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:24,655 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:24,904 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:25,150 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:25,401 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:25,655 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:25,906 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:26,155 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:26,415 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:26,663 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:26,913 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:27,169 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:27,416 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:27,669 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:27,918 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:28,171 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:28,419 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:28,673 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:28,920 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:29,171 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:29,425 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:29,675 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:29,926 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:30,174 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:30,428 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:30,679 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:30,929 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:31,177 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:31,431 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:31,689 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:31,930 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:32,192 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:32,441 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:32,695 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:32,941 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:33,193 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:33,458 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:33,706 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:33,960 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:34,210 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:34,459 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:34,713 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:34,959 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:35,213 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:35,464 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:35,716 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:35,964 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:36,216 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:36,465 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:36,719 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:36,967 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:37,220 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:37,468 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:37,722 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:37,970 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:38,223 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:38,472 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:38,723 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:38,973 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:39,227 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:39,476 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:39,725 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:39,978 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:40,225 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:40,476 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:40,732 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:40,979 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:41,232 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:41,479 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:41,730 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:41,983 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:42,234 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:42,482 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:42,735 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:42,983 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:43,238 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:43,484 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:43,737 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:43,992 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:44,239 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:44,493 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:44,743 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:44,991 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:45,245 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:45,508 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:45,761 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:46,011 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:46,260 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:46,510 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:46,761 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:47,009 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:47,263 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:47,514 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:47,762 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:48,016 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:48,264 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:48,515 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:48,767 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:49,015 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:49,269 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:49,519 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:49,769 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:50,020 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:50,273 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:50,523 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:50,772 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:51,022 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:51,276 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:51,524 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:51,775 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:52,030 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:52,276 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:52,532 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:52,779 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:53,032 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:53,278 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:53,531 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:53,783 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:54,031 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:54,284 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:54,531 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:54,787 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:55,041 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:55,287 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:55,541 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:55,790 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:56,044 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:56,292 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:56,541 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:56,791 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:57,046 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:57,293 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:57,546 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:57,796 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:58,048 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:58,299 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:58,550 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:58,800 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:59,053 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:59,304 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:59,551 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:16:59,813 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:00,061 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:00,314 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:00,564 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:00,814 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:01,068 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:01,317 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:01,565 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:01,816 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:02,069 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:02,319 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:02,570 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:02,819 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:03,072 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:03,320 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:03,572 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:03,825 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:04,072 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:04,325 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:04,574 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:04,825 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:05,079 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:05,326 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:05,577 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:05,832 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:06,079 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:06,334 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:06,581 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:06,836 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:07,093 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:07,342 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:07,596 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:07,844 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:08,098 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:08,350 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:08,600 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:08,852 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:09,105 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:09,354 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:09,607 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:09,859 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:10,105 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:10,356 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:10,609 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:10,860 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:11,108 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:11,361 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:11,608 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:11,862 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:12,116 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:12,362 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:12,617 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:12,866 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:13,113 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:13,368 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:13,615 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:13,870 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:14,120 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:14,367 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:14,621 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:14,872 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:15,118 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:15,372 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:15,625 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:15,875 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:16,121 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:16,372 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:16,628 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:16,876 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:17,124 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:17,378 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:17,626 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:17,879 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:18,127 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:18,381 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:18,629 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:18,886 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:19,134 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:19,384 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:19,632 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:19,884 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:20,140 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:20,386 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:20,634 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:20,887 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:21,149 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:21,398 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:21,648 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:21,904 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:22,151 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:22,400 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:22,656 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:22,905 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:23,152 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:23,405 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:23,655 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:23,908 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:24,157 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:24,409 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:24,663 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:24,929 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:25,174 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:25,427 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:25,676 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:25,930 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:26,178 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:26,433 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:26,684 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:26,933 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:27,185 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:27,434 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:27,683 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:27,936 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:28,186 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:28,446 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:28,690 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:28,942 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:29,188 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:29,442 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:29,689 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:29,949 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:30,193 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:30,440 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:30,693 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:30,944 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:31,196 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:31,443 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:31,697 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:31,945 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:32,200 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:32,447 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:32,701 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:32,949 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:33,203 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:33,455 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:33,701 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:33,952 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:34,206 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:34,455 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:34,712 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:34,959 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:35,208 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:35,459 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:35,707 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:35,969 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:36,216 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:36,467 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:36,721 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:36,968 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:37,223 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:37,475 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:37,724 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:37,979 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:38,240 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:38,488 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:38,747 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:38,992 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:39,244 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:39,492 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:39,746 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:39,997 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:40,248 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:40,495 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:40,749 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:40,996 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:41,251 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:41,500 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:41,749 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:42,003 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:42,253 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:42,500 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:42,755 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:43,002 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:43,256 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:43,507 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:43,758 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:44,006 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:44,260 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:44,513 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:44,759 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:45,010 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:45,262 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:45,509 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:45,763 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:46,015 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:46,267 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:46,515 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:46,770 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:47,015 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:47,270 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:47,516 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:47,771 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:48,021 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:48,268 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:48,521 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:48,770 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:49,023 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:49,272 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:49,525 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:49,779 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:50,049 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:50,293 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:50,550 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:50,799 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:51,051 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:51,297 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:51,550 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:51,801 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:52,052 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:52,299 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:52,553 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:52,803 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:53,055 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:53,303 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:53,555 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:53,806 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:54,060 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:54,304 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:54,558 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:54,806 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:55,056 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:55,307 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:55,562 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:55,811 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:56,063 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:56,309 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:56,563 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:56,812 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:57,064 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:57,312 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:57,564 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:57,813 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:58,066 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:58,324 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:58,575 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:58,823 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:59,077 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:59,323 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:59,576 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:17:59,831 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:00,075 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:00,327 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:00,583 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:00,857 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:01,103 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:01,390 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:01,637 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:01,892 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:02,142 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:02,403 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:02,651 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:02,905 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:03,153 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:03,406 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:03,654 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:03,908 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:04,161 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:04,406 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:04,660 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:04,911 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:05,161 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:05,427 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:05,676 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:05,930 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:06,178 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:06,429 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:06,685 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:06,930 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:07,181 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:07,434 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:07,692 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:07,935 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:08,187 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:08,435 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:08,686 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:08,940 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:09,187 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:09,440 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:09,690 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:09,943 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:10,192 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:10,441 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:10,695 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:10,943 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:11,197 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:11,444 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:11,697 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:11,945 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:12,197 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:12,448 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:12,699 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:12,951 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:13,198 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:13,450 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:13,699 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:13,952 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:14,199 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:14,452 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:14,704 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:14,955 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:15,206 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:15,456 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:15,706 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:15,958 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:16,205 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:16,459 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:16,708 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:16,961 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:17,211 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:17,461 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:17,714 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:17,968 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:18,212 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:18,465 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:18,715 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:18,967 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:19,215 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:19,469 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:19,720 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:19,967 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:20,218 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:20,472 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:20,720 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:20,974 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:21,221 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:21,475 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:21,723 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:21,979 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:22,228 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:22,480 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:22,731 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:22,982 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:23,232 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:23,480 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:23,732 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:23,984 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:24,236 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:24,484 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:24,738 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:24,997 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:25,238 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:25,487 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:25,744 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:25,997 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:26,239 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:26,493 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:26,745 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:26,996 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:27,246 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:27,493 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:27,748 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:28,002 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:28,256 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:28,505 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:28,759 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:29,005 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:29,259 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:29,507 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:29,761 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:30,022 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:30,259 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:30,512 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:30,768 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:31,010 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:31,264 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:31,514 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:31,768 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:32,014 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:32,268 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:32,519 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:32,769 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:33,019 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:33,272 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:33,521 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:33,773 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:34,023 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:34,275 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:34,523 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:34,775 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:35,028 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:35,276 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:35,531 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:35,778 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:36,032 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:36,280 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:36,534 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:36,782 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:37,035 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:37,282 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:37,536 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:37,788 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:38,036 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:38,285 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:38,538 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:38,787 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:39,038 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:39,291 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:39,541 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:39,794 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:40,073 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:40,319 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:40,571 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:40,823 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:41,069 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:41,326 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:41,574 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:41,823 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:42,075 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:42,323 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:42,578 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:42,827 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:43,075 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:43,328 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:43,581 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:43,829 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:44,082 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:44,334 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:44,585 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:44,834 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:45,087 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:45,340 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:45,585 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:45,837 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:46,090 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:46,339 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:46,591 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:46,840 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:47,094 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:47,340 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:47,593 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:47,841 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:48,095 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:48,343 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:48,598 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:48,845 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:49,095 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:49,354 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:49,597 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:49,849 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:50,102 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:50,351 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:50,600 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:50,855 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:51,101 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:51,351 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:51,606 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:51,854 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:52,108 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:52,355 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:52,609 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:52,861 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:53,111 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:53,359 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:53,613 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:53,888 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:54,136 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:54,385 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:54,640 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:54,890 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:55,141 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:55,389 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:55,643 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:55,915 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:56,163 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:56,416 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:56,663 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:56,921 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:57,169 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:57,416 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:57,669 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:57,925 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:58,169 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:58,424 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:58,670 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:58,924 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:59,173 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:59,429 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:59,678 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:18:59,931 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:00,179 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:00,431 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:00,683 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:00,932 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:01,184 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:01,433 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:01,685 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:01,935 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:02,187 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:02,437 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:02,685 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:02,939 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:03,186 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:03,436 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:03,694 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:03,938 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:04,192 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:04,438 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:04,692 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:04,944 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:05,194 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:05,443 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:05,697 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:05,952 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:06,197 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:06,447 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:06,700 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:06,952 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:07,204 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:07,451 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:07,702 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:07,953 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:08,204 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:08,454 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:08,702 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:08,957 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:09,206 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:09,457 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:09,706 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:09,957 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:10,207 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:10,460 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:10,706 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:10,963 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:11,207 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:11,461 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:11,709 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:11,961 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:12,213 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:12,464 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:12,712 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:12,967 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:13,215 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:13,467 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:13,715 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:13,970 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:14,218 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:14,471 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:14,718 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:14,975 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:15,223 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:15,471 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:15,724 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:15,974 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:16,224 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:16,477 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:16,728 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:16,977 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:17,229 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:17,476 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:17,730 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:17,981 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:18,234 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:18,483 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:18,741 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:18,986 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:19,240 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:19,488 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:19,742 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:19,990 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:20,237 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:20,491 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:20,746 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:20,991 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:21,243 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:21,495 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:21,747 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:21,993 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:22,247 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:22,497 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:22,745 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:22,998 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:23,250 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:23,500 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:23,748 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:24,002 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:24,250 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:24,501 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:24,754 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:25,009 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:25,254 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:25,508 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:25,755 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:26,010 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:26,260 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:26,509 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:26,759 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:27,011 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:27,259 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:27,512 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:27,760 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:28,014 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:28,262 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:28,516 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:28,790 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:29,039 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:29,290 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:29,544 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:29,791 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:30,044 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:30,293 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:30,545 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:30,795 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:31,051 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:31,299 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:31,548 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:31,796 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:32,051 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:32,298 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:32,552 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:32,814 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:33,086 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:33,333 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:33,587 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:33,834 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:34,086 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:34,335 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:34,588 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:34,839 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:35,092 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:35,338 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:35,605 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:35,854 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:36,104 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:36,355 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:36,610 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:36,859 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:37,106 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:37,362 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:37,610 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:37,860 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:38,113 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:38,360 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:38,614 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:38,863 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:39,112 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:39,366 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:39,618 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:39,866 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:40,115 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:40,370 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:40,617 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:40,871 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:41,122 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:41,372 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:41,619 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:41,880 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:42,128 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:42,375 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:42,628 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:42,876 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:43,130 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:43,379 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:43,630 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:43,879 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:44,134 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:44,383 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:44,633 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:44,881 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:45,134 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:45,384 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:45,635 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:45,885 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:46,137 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:46,384 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:46,639 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:46,902 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:47,148 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:47,400 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:47,651 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:47,900 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:48,152 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:48,401 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:48,651 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:48,903 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:49,155 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:49,404 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:49,657 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:49,908 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:50,157 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:50,410 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:50,660 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:50,908 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:51,158 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:51,412 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:51,662 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:51,912 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:52,164 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:52,412 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:52,664 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:52,913 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:53,165 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:53,413 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:53,671 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:53,916 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:54,167 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:54,420 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:54,668 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:54,920 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:55,172 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:55,436 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:55,685 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:55,936 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:56,190 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:56,440 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:56,692 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:56,940 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:57,194 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:57,443 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:57,691 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:57,968 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:58,216 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:58,470 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:58,719 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:58,968 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:59,221 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:59,470 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:59,719 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:19:59,974 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:00,223 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:00,474 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:00,724 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:00,973 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:01,226 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:01,473 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:01,724 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:01,986 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:02,226 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:02,480 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:02,728 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:02,980 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:03,233 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:03,480 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:03,735 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:03,985 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:04,234 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:04,482 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:04,748 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:04,991 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:05,243 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:05,492 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:05,751 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:05,998 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:06,254 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:06,500 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:06,754 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:07,008 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:07,253 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:07,504 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:07,759 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:08,006 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:08,260 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:08,508 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:08,760 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:09,011 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:09,261 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:09,510 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:09,763 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:10,012 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:10,265 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:10,513 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:10,767 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:11,019 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:11,268 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:11,516 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:11,769 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:12,019 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:12,272 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:12,519 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:12,773 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:13,029 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:13,275 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:13,529 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:13,777 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:14,033 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:14,277 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:14,531 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:14,779 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:15,032 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:15,281 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:15,533 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:15,782 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:16,035 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:16,285 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:16,533 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:16,789 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:17,034 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:17,285 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:17,538 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:17,786 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:18,040 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:18,290 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:18,541 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:18,789 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:19,040 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:19,294 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:19,542 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:19,795 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:20,044 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:20,297 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:20,556 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:20,827 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:21,074 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:21,327 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:21,575 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:21,829 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:22,077 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:22,331 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:22,580 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:22,835 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:23,084 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:23,336 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:23,583 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:23,838 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:24,087 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:24,339 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:24,586 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:24,839 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:25,089 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:25,367 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:25,614 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:25,865 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:26,115 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:26,368 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:26,618 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:26,871 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:27,120 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:27,370 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:27,621 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:27,871 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:28,121 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:28,373 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:28,620 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:28,875 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:29,122 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:29,375 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:29,623 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:29,875 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:30,127 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:30,383 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:30,629 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:30,883 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:31,135 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:31,382 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:31,633 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:31,886 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:32,134 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:32,387 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:32,636 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:32,889 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:33,140 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:33,389 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:33,639 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:33,892 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:34,159 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:34,403 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:34,654 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:34,909 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:35,163 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:35,411 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:35,659 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:35,913 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:36,169 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:36,422 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:36,669 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:36,925 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:37,173 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:37,425 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:37,672 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:37,926 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:38,173 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:38,425 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:38,679 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:38,926 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:39,179 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:39,426 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:39,679 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:39,932 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:40,184 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:40,432 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:40,683 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:40,932 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:41,186 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:41,434 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:41,686 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:41,935 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:42,189 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:42,437 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:42,689 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:42,937 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:43,191 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:43,440 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:43,688 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:43,941 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:44,192 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:44,440 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:44,690 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:44,945 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:45,194 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:45,443 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:45,696 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:45,944 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:46,199 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:46,452 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:46,700 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:46,949 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:47,200 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:47,450 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:47,703 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:47,958 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:48,203 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:48,454 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:48,703 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:48,956 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:49,206 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:49,455 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:49,708 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:49,960 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:50,212 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:50,460 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:50,711 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:50,965 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:51,213 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:51,463 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:51,717 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:51,967 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:52,217 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:52,468 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:52,716 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:52,967 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:53,223 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:53,469 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:53,724 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:53,973 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:54,219 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:54,470 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:54,724 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:54,973 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:55,226 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:55,476 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:55,724 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:55,985 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:56,225 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:56,479 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:56,729 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:56,983 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:57,229 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:57,480 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:57,734 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:57,985 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:58,235 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:58,483 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:58,734 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:58,989 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:59,236 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:59,489 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:59,736 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:20:59,990 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:00,240 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:00,491 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:00,742 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:00,993 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:01,260 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:01,509 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:01,759 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:02,017 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:02,264 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:02,514 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:02,762 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:03,017 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:03,273 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:03,519 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:03,772 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:04,024 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:04,275 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:04,526 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:04,773 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:05,028 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:05,274 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:05,526 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:05,778 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:06,028 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:06,282 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:06,530 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:06,782 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:07,034 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:07,282 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:07,535 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:07,782 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:08,034 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:08,286 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:08,537 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:08,785 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:09,039 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:09,288 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:09,542 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:09,790 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:10,042 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:10,294 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:10,545 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:10,796 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:11,045 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:11,294 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:11,547 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:11,798 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:12,054 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:12,315 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:12,564 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:12,817 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:13,068 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:13,315 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:13,570 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:13,820 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:14,069 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:14,325 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:14,570 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:14,823 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:15,076 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:15,322 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:15,576 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:15,827 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:16,076 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:16,326 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:16,580 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:16,830 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:17,078 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:17,328 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:17,583 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:17,829 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:18,082 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:18,334 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:18,584 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:18,834 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:19,095 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:19,343 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:19,596 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:19,847 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:20,099 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:20,346 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:20,599 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:20,847 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:21,105 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:21,348 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:21,601 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:21,849 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:22,104 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:22,352 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:22,604 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:22,855 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:23,106 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:23,355 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:23,605 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:23,859 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:24,107 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:24,361 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:24,609 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:24,863 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:25,113 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:25,364 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:25,612 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:25,866 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:26,114 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:26,366 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:26,615 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:26,869 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:27,119 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:27,370 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:27,618 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:27,874 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:28,120 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:28,373 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:28,621 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:28,877 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:29,127 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:29,377 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:29,625 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:29,877 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:30,127 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:30,376 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:30,631 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:30,878 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:31,134 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:31,383 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:31,631 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:31,879 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:32,130 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:32,383 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:32,631 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:32,885 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:33,140 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:33,386 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:33,637 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:33,889 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:34,154 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:34,406 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:34,669 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:34,915 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:35,169 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:35,415 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:35,670 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:35,920 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:36,171 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:36,424 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:36,671 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:36,923 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:37,177 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:37,422 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:37,675 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:37,925 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:38,177 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:38,427 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:38,688 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:38,936 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:39,190 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:39,437 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:39,690 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:39,941 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:40,191 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:40,443 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:40,692 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:40,942 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:41,194 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:41,441 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:41,695 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:41,947 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:42,197 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:42,447 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:42,698 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:42,948 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:43,199 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:43,448 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:43,699 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:43,953 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:44,201 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:44,452 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:44,701 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:44,954 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:45,201 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:45,453 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:45,707 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:45,954 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:46,207 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:46,458 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:46,706 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:46,966 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:47,207 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:47,461 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:47,712 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:47,961 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:48,213 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:48,462 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:48,715 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:48,964 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:49,214 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:49,468 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:49,716 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:49,970 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:50,221 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:50,469 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:50,719 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:50,973 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:51,220 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:51,475 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:51,722 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:51,976 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:52,232 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:52,499 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:52,747 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:53,002 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:53,252 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:53,506 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:53,755 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:54,008 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:54,260 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:54,508 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:54,757 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:55,012 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:55,258 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:55,513 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:55,759 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:56,014 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:56,263 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:56,515 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:56,762 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:57,017 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:57,264 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:57,513 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:57,766 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:58,015 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:58,270 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:58,518 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:58,771 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:59,021 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:59,269 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:59,520 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:21:59,774 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:00,022 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:00,282 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:00,524 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:00,773 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:01,027 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:01,277 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:01,525 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:01,781 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:02,028 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:02,280 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:02,532 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:02,783 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:03,031 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:03,284 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:03,532 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:03,785 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:04,038 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:04,288 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:04,543 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:04,811 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:05,060 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:05,314 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:05,561 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:05,814 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:06,064 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:06,318 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:06,568 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:06,819 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:07,068 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:07,320 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:07,568 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:07,823 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:08,072 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:08,325 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:08,574 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:08,830 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:09,076 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:09,327 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:09,576 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:09,826 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:10,079 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:10,331 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:10,580 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:10,829 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:11,086 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:11,330 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:11,581 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:11,834 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:12,083 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:12,338 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:12,584 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:12,838 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:13,089 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:13,337 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:13,589 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:13,836 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:14,088 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:14,343 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:14,591 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:14,843 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:15,090 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:15,341 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:15,596 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:15,842 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:16,097 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:16,343 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:16,597 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:16,847 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:17,100 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:17,346 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:17,601 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:17,869 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:18,119 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:18,369 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:18,623 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:18,872 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:19,124 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:19,372 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:19,624 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:19,881 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:20,130 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:20,381 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:20,638 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:20,884 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:21,136 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:21,383 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:21,639 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:21,884 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:22,136 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:22,389 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:22,636 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:22,891 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:23,141 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:23,393 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:23,640 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:23,891 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:24,147 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:24,392 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:24,646 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:24,898 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:25,147 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:25,399 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:25,648 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:25,899 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:26,152 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:26,404 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:26,650 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:26,904 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:27,162 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:27,406 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:27,654 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:27,905 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:28,158 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:28,407 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:28,656 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:28,910 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:29,162 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:29,410 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:29,664 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:29,910 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:30,165 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:30,414 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:30,683 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:30,932 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:31,188 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:31,432 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:31,687 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:31,934 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:32,188 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:32,438 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:32,686 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:32,939 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:33,191 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:33,437 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:33,705 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:33,953 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:34,208 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:34,454 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:34,704 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:34,959 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:35,207 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:35,457 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:35,711 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:35,961 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:36,209 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:36,462 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:36,712 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:36,961 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:37,217 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:37,464 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:37,715 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:37,968 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:38,214 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:38,465 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:38,719 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:38,966 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:39,221 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:39,469 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:39,722 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:39,969 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:40,225 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:40,472 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:40,723 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:40,976 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:41,224 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:41,478 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:41,726 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:41,979 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:42,228 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:42,479 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:42,734 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:42,985 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:43,231 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:43,485 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:43,734 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:43,986 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:44,239 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:44,489 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:44,737 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:44,990 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:45,241 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:45,492 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:45,753 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:46,030 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:46,277 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:46,529 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:46,778 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:47,032 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:47,278 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:47,532 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:47,782 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:48,034 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:48,283 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:48,535 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:48,787 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:49,036 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:49,290 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:49,537 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:49,790 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:50,040 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:50,292 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:50,544 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:50,791 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:51,044 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:51,296 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:51,543 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:51,796 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:52,045 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:52,296 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:52,549 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:52,799 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:53,047 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:53,300 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:53,549 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:53,802 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:54,054 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:54,301 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:54,552 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:54,805 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:55,054 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:55,306 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:55,554 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:55,807 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:56,059 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:56,311 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:56,557 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:56,812 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:57,088 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:57,335 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:57,586 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:57,840 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:58,091 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:58,345 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:58,588 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:58,841 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:59,112 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:59,360 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:59,610 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:22:59,863 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:00,122 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:00,365 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:00,613 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:00,869 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:01,115 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:01,364 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:01,618 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:01,866 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:02,120 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:02,367 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:02,620 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:02,869 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:03,132 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:03,381 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:03,635 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:03,884 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:04,134 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:04,387 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:04,638 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:04,888 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:05,138 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:05,387 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:05,643 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:05,891 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:06,145 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:06,394 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:06,642 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:06,894 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:07,147 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:07,394 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:07,648 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:07,896 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:08,150 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:08,400 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:08,651 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:08,900 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:09,153 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:09,403 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:09,651 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:09,902 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:10,158 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:10,406 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:10,657 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:10,904 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:11,161 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:11,416 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:11,662 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:11,912 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:12,165 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:12,418 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:12,667 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:12,916 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:13,169 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:13,416 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:13,667 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:13,922 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:14,169 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:14,422 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:14,674 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:14,931 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:15,181 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:15,429 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:15,684 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:15,934 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:16,185 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:16,437 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:16,683 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:16,936 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:17,186 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:17,441 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:17,687 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:17,941 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:18,192 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:18,443 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:18,693 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:18,942 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:19,191 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:19,454 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:19,706 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:19,948 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:20,203 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:20,450 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:20,703 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:20,952 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:21,207 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:21,466 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:21,734 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:21,984 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:22,239 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:22,484 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:22,740 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:22,986 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:23,241 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:23,490 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:23,743 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:23,989 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:24,243 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:24,491 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:24,744 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:24,990 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:25,244 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:25,495 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:25,746 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:25,994 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:26,247 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:26,494 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:26,747 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:26,998 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:27,247 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:27,500 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:27,749 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:28,001 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:28,250 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:28,500 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:28,754 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:29,002 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:29,255 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:29,506 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:29,753 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:30,005 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:30,259 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:30,506 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:30,760 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:31,009 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:31,264 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:31,512 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:31,763 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:32,011 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:32,262 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:32,516 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:32,764 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:33,017 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:33,297 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:33,543 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:33,793 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:34,047 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:34,294 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:34,548 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:34,796 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:35,051 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:35,307 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:35,575 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:35,823 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:36,075 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:36,324 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:36,579 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:36,826 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:37,079 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:37,330 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:37,582 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:37,829 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:38,082 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:38,331 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:38,583 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:38,834 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:39,086 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:39,337 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:39,587 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:39,835 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:40,090 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:40,336 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:40,587 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:40,837 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:41,092 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:41,339 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:41,592 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:41,843 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:42,091 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:42,358 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:42,604 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:42,856 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:43,105 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:43,359 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:43,607 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:43,860 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:44,108 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:44,373 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:44,616 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:44,871 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:45,118 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:45,379 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:45,621 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:45,870 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:46,124 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:46,379 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:46,623 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:46,872 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:47,127 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:47,382 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:47,627 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:47,879 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:48,131 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:48,384 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:48,631 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:48,879 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:49,132 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:49,387 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:49,633 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:49,883 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:50,133 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:50,405 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:50,645 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:50,886 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:51,137 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:51,391 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:51,641 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:51,889 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:52,141 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:52,394 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:52,640 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:52,891 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:53,146 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:53,395 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:53,643 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:53,894 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:54,148 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:54,394 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:54,648 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:54,896 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:55,150 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:55,397 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:55,652 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:55,902 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:56,152 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:56,404 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:56,652 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:56,902 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:57,156 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:57,404 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:57,658 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:57,908 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:58,159 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:58,406 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:58,661 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:58,913 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:59,161 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:59,416 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:59,661 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:23:59,915 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:00,166 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:00,434 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:00,682 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:00,936 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:01,185 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:01,437 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:01,698 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:01,967 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:02,215 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:02,469 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:02,716 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:02,969 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:03,218 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:03,471 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:03,719 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:03,972 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:04,221 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:04,474 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:04,722 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:04,972 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:05,226 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:05,472 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:05,722 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:05,980 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:06,228 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:06,478 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:06,725 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:06,977 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:07,232 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:07,478 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:07,731 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:07,979 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:08,234 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:08,482 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:08,736 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:08,983 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:09,237 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:09,484 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:09,741 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:09,987 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:10,243 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:10,488 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:10,742 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:10,994 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:11,243 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:11,492 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:11,747 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:11,993 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:12,245 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:12,500 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:12,741 [screensaver.py:show()] - Showing Screensaver
2025-08-25 18:24:12,768 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:13,009 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:13,263 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:13,511 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:13,764 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:14,012 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:14,266 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:14,517 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:14,783 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:15,030 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:15,286 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:15,532 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:15,787 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:16,034 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:16,287 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:16,535 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:16,785 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:17,040 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:17,287 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:17,542 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:17,789 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:18,040 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:18,295 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:18,544 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:18,795 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:19,045 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:19,295 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:19,548 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:19,795 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:20,049 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:20,300 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:20,553 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:20,798 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:21,051 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:21,304 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:21,552 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:21,804 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:22,054 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:22,304 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:22,557 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:22,809 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:23,055 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:23,308 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:23,556 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:23,806 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:24,060 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:24,330 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:24,578 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:24,860 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:25,108 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:25,362 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:25,611 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:25,861 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:26,112 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:26,368 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:26,611 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:26,866 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:27,112 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:27,371 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:27,622 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:27,866 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:28,118 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:28,369 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:28,619 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:28,868 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:29,120 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:29,371 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:29,622 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:29,870 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:30,124 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:30,372 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:30,622 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:30,879 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:31,123 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:31,377 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:31,624 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:31,880 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:32,127 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:32,380 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:32,630 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:32,878 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:33,130 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:33,384 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:33,632 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:33,883 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:34,132 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:34,382 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:34,635 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:34,886 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:35,139 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:35,387 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:35,639 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:35,886 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:36,137 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:36,392 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:36,639 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:36,895 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:37,144 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:37,394 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:37,645 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:37,895 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:38,145 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:38,398 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:38,648 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:38,896 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:39,147 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:39,401 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:39,651 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:39,901 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:40,149 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:40,403 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:40,653 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:40,901 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:41,153 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:41,406 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:41,656 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:41,907 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:42,156 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:42,410 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:42,657 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:42,908 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:43,162 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:43,409 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:43,659 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:43,913 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:44,161 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:44,414 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:44,662 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:44,917 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:45,164 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:45,417 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:45,665 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:45,915 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:46,170 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:46,417 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:46,672 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:46,919 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:47,170 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:47,423 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:47,673 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:47,924 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:48,172 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:48,423 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:48,676 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:48,924 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:49,178 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:49,425 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:49,679 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:49,930 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:50,183 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:50,429 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:50,683 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:50,946 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:51,195 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:51,453 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:51,697 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:51,947 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:52,199 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:52,452 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:52,701 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:52,949 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:53,202 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:53,453 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:53,703 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:53,954 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:54,204 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:54,455 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:54,706 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:54,953 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:55,205 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:55,460 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:55,706 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:55,960 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:56,211 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:56,459 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:56,712 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:56,960 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:57,214 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:57,464 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:57,713 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:57,964 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:58,222 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:58,464 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:58,719 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:58,965 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:59,222 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:59,470 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:59,717 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:24:59,970 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:00,222 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:00,478 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:00,722 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:00,970 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:01,221 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:01,474 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:01,726 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:01,973 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:02,228 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:02,475 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:02,729 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:02,981 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:03,232 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:03,479 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:03,733 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:03,981 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:04,235 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:04,482 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:04,737 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:04,987 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:05,247 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:05,494 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:05,748 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:05,995 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:06,250 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:06,496 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:06,751 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:06,998 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:07,250 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:07,503 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:07,750 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:08,011 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:08,260 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:08,512 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:08,765 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:09,016 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:09,264 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:09,515 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:09,768 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:10,019 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:10,267 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:10,521 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:10,771 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:11,018 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:11,272 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:11,522 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:11,773 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:12,023 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:12,272 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:12,525 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:12,772 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:13,029 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:13,278 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:13,528 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:13,782 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:14,029 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:14,284 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:14,532 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:14,786 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:15,034 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:15,288 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:15,539 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:15,786 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:16,041 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:16,290 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:16,538 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:16,792 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:17,044 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:17,291 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:17,544 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:17,792 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:18,045 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:18,301 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:18,547 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:18,795 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:19,049 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:19,299 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:19,551 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:19,803 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:20,052 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:20,305 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:20,555 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:20,803 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:21,057 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:21,307 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:21,558 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:21,806 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:22,060 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:22,308 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:22,559 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:22,812 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:23,060 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:23,312 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:23,565 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:23,815 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:24,066 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:24,314 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:24,569 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:24,815 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:25,069 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:25,322 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:25,571 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:25,822 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:26,071 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:26,325 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:26,574 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:26,822 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:27,075 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:27,328 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:27,575 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:27,825 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:28,078 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:28,327 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:28,580 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:28,828 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:29,082 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:29,330 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:29,584 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:29,831 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:30,084 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:30,333 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:30,586 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:30,837 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:31,085 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:31,339 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:31,586 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:31,836 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:32,090 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:32,339 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:32,591 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:32,839 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:33,091 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:33,343 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:33,594 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:33,842 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:34,095 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:34,352 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:34,599 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:34,850 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:35,102 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:35,354 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:35,605 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:35,853 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:36,105 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:36,361 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:36,608 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:36,859 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:37,111 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:37,364 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:37,614 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:37,862 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:38,115 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:38,372 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:38,614 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:38,868 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:39,115 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:39,367 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:39,619 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:39,870 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:40,117 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:40,370 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:40,622 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:40,873 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:41,120 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:41,375 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:41,625 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:41,875 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:42,126 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:42,379 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:42,628 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:42,879 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:43,130 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:43,379 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:43,629 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:43,883 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:44,131 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:44,390 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:44,637 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:44,888 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:45,142 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:45,389 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:45,644 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:45,892 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:46,141 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:46,397 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:46,647 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:46,894 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:47,147 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:47,406 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:47,646 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:47,897 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:48,150 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:48,401 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:48,649 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:48,902 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:49,149 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:49,403 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:49,655 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:49,905 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:50,153 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:50,408 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:50,656 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:50,909 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:51,160 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:51,409 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:51,665 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:51,915 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:52,161 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:52,416 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:52,663 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:52,917 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:53,164 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:53,420 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:53,666 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:53,933 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:54,183 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:54,432 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:54,682 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:54,936 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:55,183 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:55,438 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:55,685 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:55,938 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:56,186 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:56,442 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:56,691 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:56,942 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:57,189 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:57,440 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:57,693 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:57,941 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:58,194 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:58,442 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:58,695 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:58,946 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:59,194 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:59,448 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:59,698 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:25:59,949 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:00,200 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:00,448 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:00,702 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:00,953 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:01,200 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:01,454 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:01,704 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:01,952 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:02,202 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:02,456 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:02,705 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:02,957 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:03,205 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:03,460 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:03,707 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:03,962 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:04,211 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:04,463 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:04,710 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:04,964 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:05,211 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:05,466 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:05,716 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:05,966 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:06,217 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:06,468 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:06,716 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:06,969 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:07,217 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:07,472 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:07,718 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:07,973 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:08,221 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:08,472 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:08,724 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:08,972 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:09,223 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:09,479 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:09,725 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:09,979 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:10,226 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:10,481 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:10,728 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:10,982 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:11,231 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:11,480 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:11,734 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:11,981 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:12,232 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:12,487 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:12,734 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:12,987 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:13,235 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:13,488 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:13,742 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:13,988 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:14,236 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:14,490 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:14,746 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:14,994 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:15,251 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:15,496 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:15,749 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:15,997 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:16,252 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:16,503 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:16,750 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:17,000 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:17,254 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:17,503 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:17,756 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:18,004 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:18,258 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:18,513 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:18,776 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:19,023 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:19,278 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:19,525 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:19,779 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:20,025 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:20,279 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:20,530 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:20,781 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:21,028 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:21,282 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:21,529 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:21,784 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:22,031 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:22,285 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:22,532 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:22,787 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:23,035 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:23,288 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:23,535 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:23,785 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:24,036 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:24,290 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:24,542 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:24,787 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:25,041 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:25,289 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:25,540 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:25,794 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:26,042 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:26,298 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:26,542 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:26,796 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:27,044 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:27,298 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:27,546 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:27,800 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:28,048 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:28,302 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:28,553 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:28,800 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:29,054 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:29,302 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:29,556 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:29,803 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:30,057 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:30,305 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:30,557 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:30,810 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:31,058 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:31,312 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:31,563 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:31,813 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:32,071 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:32,327 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:32,573 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:32,822 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:33,071 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:33,324 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:33,576 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:33,825 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:34,073 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:34,328 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:34,580 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:34,829 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:35,077 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:35,331 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:35,578 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:35,832 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:36,080 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:36,334 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:36,585 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:36,836 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:37,087 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:37,338 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:37,584 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:37,853 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:38,101 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:38,356 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:38,602 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:38,852 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:39,107 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:39,355 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:39,605 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:39,859 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:40,109 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:40,361 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:40,608 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:40,862 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:41,110 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:41,365 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:41,611 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:41,865 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:42,122 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:42,370 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:42,624 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:42,871 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:43,126 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:43,373 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:43,626 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:43,877 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:44,126 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:44,376 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:44,630 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:44,877 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:45,128 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:45,381 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:45,631 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:45,880 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:46,132 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:46,381 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:46,635 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:46,882 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:47,137 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:47,384 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:47,638 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:47,887 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:48,135 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:48,389 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:48,636 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:48,890 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:49,138 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:49,393 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:49,638 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:49,892 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:50,144 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:50,395 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:50,642 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:50,895 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:51,143 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:51,398 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:51,645 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:51,899 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:52,152 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:52,398 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:52,651 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:52,902 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:53,149 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:53,400 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:53,654 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:53,904 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:54,151 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:54,403 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:54,656 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:54,904 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:55,155 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:55,408 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:55,656 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:55,909 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:56,160 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:56,408 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:56,661 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:56,909 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:57,163 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:57,410 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:57,664 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:57,914 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:58,162 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:58,416 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:58,664 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:58,916 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:59,164 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:59,419 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:59,670 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:26:59,917 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:00,170 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:00,419 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:00,672 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:00,920 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:01,174 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:01,422 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:01,675 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:01,923 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:02,177 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:02,425 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:02,679 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:02,928 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:03,176 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:03,430 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:03,680 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:03,928 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:04,178 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:04,432 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:04,683 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:04,930 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:05,199 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:05,448 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:05,701 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:05,952 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:06,209 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:06,460 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:06,712 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:06,958 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:07,211 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:07,462 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:07,714 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:07,964 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:08,210 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:08,465 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:08,715 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:08,962 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:09,213 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:09,467 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:09,716 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:09,965 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:10,215 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:10,469 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:10,716 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:10,967 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:11,222 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:11,470 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:11,723 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:11,971 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:12,222 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:12,477 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:12,724 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:12,978 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:13,228 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:13,481 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:13,731 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:13,980 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:14,231 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:14,480 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:14,732 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:14,980 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:15,233 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:15,484 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:15,735 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:15,982 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:16,235 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:16,484 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:16,741 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:16,985 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:17,240 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:17,488 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:17,741 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:17,992 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:18,262 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:18,511 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:18,761 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:19,015 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:19,262 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:19,517 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:19,764 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:20,017 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:20,264 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:20,520 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:20,770 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:21,020 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:21,269 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:21,522 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:21,770 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:22,024 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:22,274 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:22,533 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:22,780 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:23,034 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:23,281 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:23,537 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:23,783 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:24,036 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:24,289 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:24,541 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:24,788 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:25,040 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:25,288 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:25,540 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:25,796 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:26,045 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:26,292 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:26,544 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:26,796 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:27,044 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:27,297 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:27,546 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:27,796 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:28,050 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:28,298 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:28,549 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:28,803 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:29,049 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:29,302 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:29,555 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:29,801 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:30,054 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:30,302 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:30,556 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:30,807 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:31,058 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:31,305 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:31,559 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:31,809 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:32,058 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:32,326 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:32,572 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:32,825 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:33,075 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:33,327 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:33,575 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:33,830 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:34,076 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:34,330 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:34,581 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:34,828 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:35,078 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:35,332 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:35,580 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:35,832 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:36,080 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:36,333 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:36,584 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:36,834 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:37,082 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:37,336 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:37,585 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:37,837 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:38,086 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:38,340 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:38,591 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:38,843 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:39,089 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:39,344 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:39,593 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:39,847 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:40,093 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:40,347 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:40,599 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:40,849 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:41,096 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:41,350 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:41,597 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:41,858 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:42,105 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:42,357 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:42,606 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:42,859 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:43,107 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:43,361 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:43,617 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:43,863 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:44,110 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:44,363 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:44,615 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:44,862 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:45,113 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:45,381 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:45,629 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:45,881 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:46,132 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:46,380 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:46,635 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:46,882 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:47,137 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:47,388 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:47,636 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:47,886 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:48,139 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:48,392 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:48,638 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:48,892 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:49,143 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:49,393 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:49,644 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:49,895 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:50,145 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:50,393 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:50,644 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:50,898 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:51,144 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:51,405 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:51,645 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:51,899 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:52,150 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:52,413 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:52,660 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:52,912 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:53,160 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:53,415 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:53,667 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:53,915 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:54,165 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:54,417 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:54,669 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:54,917 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:55,165 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:55,419 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:55,666 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:55,920 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:56,170 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:56,422 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:56,673 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:56,922 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:57,170 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:57,421 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:57,676 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:57,925 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:58,176 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:58,424 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:58,679 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:58,925 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:59,179 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:59,428 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:59,685 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:27:59,928 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:00,181 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:00,430 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:00,704 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:00,936 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:01,182 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:01,436 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:01,688 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:01,938 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:02,190 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:02,441 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:02,695 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:02,941 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:03,194 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:03,445 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:03,693 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:03,943 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:04,196 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:04,448 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:04,695 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:04,950 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:05,197 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:05,451 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:05,699 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:05,949 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:06,204 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:06,453 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:06,705 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:06,952 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:07,203 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:07,458 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:07,705 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:07,959 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:08,206 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:08,461 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:08,715 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:08,978 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:09,226 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:09,480 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:09,727 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:09,982 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:10,229 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:10,483 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:10,733 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:10,984 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:11,232 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:11,486 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:11,734 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:11,987 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:12,235 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:12,489 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:12,736 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:12,990 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:13,237 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:13,500 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:13,748 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:13,998 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:14,249 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:14,503 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:14,751 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:15,005 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:15,252 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:15,507 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:15,757 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:16,005 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:16,259 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:16,510 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:16,759 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:17,010 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:17,257 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:17,512 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:17,759 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:18,012 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:18,263 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:18,514 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:18,766 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:19,014 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:19,265 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:19,517 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:19,764 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:20,018 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:20,274 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:20,524 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:20,773 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:21,027 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:21,275 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:21,530 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:21,777 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:22,027 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:22,281 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:22,531 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:22,779 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:23,032 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:23,280 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:23,534 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:23,785 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:24,035 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:24,283 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:24,537 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:24,784 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:25,038 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:25,286 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:25,541 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:25,792 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:26,057 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:26,306 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:26,560 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:26,807 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:27,058 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:27,311 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:27,562 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:27,810 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:28,060 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:28,314 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:28,563 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:28,817 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:29,068 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:29,315 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:29,567 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:29,821 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:30,068 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:30,322 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:30,579 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:30,822 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:31,073 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:31,327 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:31,575 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:31,827 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:32,075 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:32,346 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:32,595 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:32,849 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:33,097 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:33,350 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:33,601 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:33,849 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:34,103 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:34,351 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:34,604 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:34,852 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:35,106 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:35,356 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:35,609 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:35,855 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:36,108 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:36,356 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:36,611 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:36,857 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:37,108 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:37,362 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:37,610 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:37,863 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:38,111 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:38,365 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:38,613 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:38,863 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:39,116 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:39,365 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:39,623 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:39,866 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:40,120 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:40,370 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:40,622 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:40,869 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:41,123 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:41,370 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:41,624 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:41,871 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:42,125 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:42,375 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:42,630 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:42,874 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:43,127 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:43,376 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:43,630 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:43,877 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:44,131 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:44,379 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:44,635 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:44,882 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:45,134 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:45,383 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:45,634 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:45,884 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:46,137 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:46,387 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:46,640 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:46,886 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:47,136 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:47,390 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:47,639 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:47,892 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:48,140 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:48,394 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:48,642 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:48,895 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:49,143 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:49,397 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:49,645 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:49,898 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:50,149 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:50,406 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:50,658 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:50,904 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:51,157 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:51,405 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:51,660 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:51,906 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:52,158 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:52,409 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:52,658 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:52,911 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:53,161 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:53,409 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:53,663 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:53,914 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:54,163 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:54,415 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:54,666 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:54,914 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:55,167 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:55,419 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:55,675 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:55,921 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:56,168 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:56,421 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:56,674 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:56,939 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:57,579 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:57,612 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:57,687 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:57,964 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:58,213 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:58,443 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:58,695 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:58,940 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:59,192 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:59,445 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:59,693 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:28:59,943 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:00,196 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:00,450 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:00,697 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:00,947 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:01,200 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:01,448 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:01,701 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:01,953 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:02,200 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:02,458 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:02,706 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:02,959 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:03,206 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:03,471 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:03,708 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:03,967 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:04,225 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:04,464 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:04,718 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:04,965 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:05,251 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:05,499 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:05,749 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:06,004 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:06,254 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:06,505 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:06,757 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:07,008 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:07,256 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:07,511 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:07,758 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:08,012 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:08,263 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:08,511 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:08,761 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:09,015 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:09,263 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:09,517 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:09,767 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:10,014 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:10,269 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:10,517 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:10,776 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:11,018 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:11,268 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:11,524 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:11,777 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:12,023 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:12,270 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:12,524 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:12,787 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:13,027 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:13,274 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:13,527 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:13,780 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:14,029 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:14,276 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:14,530 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:14,787 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:15,032 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:15,280 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:15,533 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:15,786 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:16,035 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:16,282 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:16,536 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:16,789 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:17,037 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:17,285 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:17,555 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:17,804 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:18,054 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:18,305 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:18,560 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:18,807 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:19,060 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:19,310 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:19,562 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:19,813 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:20,060 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:20,311 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:20,562 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:20,817 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:21,066 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:21,314 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:21,568 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:21,818 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:22,069 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:22,319 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:22,568 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:22,821 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:23,072 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:23,323 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:23,571 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:23,822 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:24,075 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:24,323 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:24,577 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:24,824 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:25,077 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:25,342 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:25,591 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:25,846 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:26,096 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:26,346 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:26,594 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:26,849 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:27,098 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:27,345 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:27,597 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:27,850 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:28,097 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:28,350 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:28,599 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:28,852 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:29,102 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:29,354 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:29,602 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:29,855 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:30,106 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:30,355 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:30,604 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:30,858 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:31,107 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:31,358 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:31,608 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:31,860 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:32,110 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:32,363 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:32,609 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:32,863 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:33,110 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:33,363 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:33,612 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:33,867 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:34,113 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:34,365 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:34,617 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:34,869 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:35,118 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:35,371 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:35,623 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:35,871 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:36,126 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:36,373 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:36,628 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:36,877 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:37,124 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:37,379 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:37,628 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:37,883 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:38,127 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:38,380 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:38,629 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:38,882 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:39,130 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:39,383 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:39,635 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:39,884 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:40,136 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:40,382 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:40,637 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:40,883 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:41,146 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:41,396 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:41,648 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:41,894 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:42,148 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:42,395 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:42,648 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:42,900 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:43,148 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:43,401 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:43,652 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:43,903 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:44,153 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:44,404 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:44,654 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:44,907 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:45,167 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:45,416 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:45,667 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:45,920 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:46,170 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:46,421 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:46,669 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:46,924 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:47,170 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:47,425 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:47,673 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:47,925 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:48,176 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:48,430 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:48,675 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:48,928 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:49,176 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:49,427 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:49,681 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:49,928 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:50,182 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:50,429 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:50,685 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:50,931 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:51,184 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:51,434 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:51,688 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:51,935 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:52,188 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:52,438 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:52,689 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:52,940 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:53,187 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:53,441 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:53,689 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:53,943 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:54,190 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:54,443 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:54,691 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:54,944 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:55,197 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:55,445 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:55,695 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:55,947 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:56,195 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:56,447 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:56,701 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:56,948 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:57,201 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:57,453 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:57,700 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:57,952 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:58,203 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:58,452 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:58,706 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:58,954 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:59,207 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:59,458 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:59,708 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:29:59,956 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:00,209 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:00,457 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:00,711 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:00,959 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:01,213 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:01,463 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:01,714 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:01,961 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:02,215 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:02,462 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:02,716 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:02,964 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:03,216 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:03,464 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:03,724 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:03,969 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:04,242 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:04,492 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:04,744 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:04,991 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:05,245 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:05,494 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:05,746 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:05,997 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:06,245 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:06,498 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:06,752 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:06,999 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:07,252 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:07,502 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:07,755 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:08,004 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:08,253 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:08,505 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:08,754 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:09,007 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:09,258 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:09,508 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:09,756 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:10,009 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:10,258 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:10,512 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:10,763 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:11,009 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:11,262 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:11,513 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:11,763 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:12,011 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:12,267 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:12,513 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:12,767 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:13,014 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:13,274 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:13,522 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:13,774 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:14,027 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:14,274 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:14,526 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:14,780 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:15,026 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:15,279 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:15,527 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:15,781 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:16,032 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:16,282 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:16,531 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:16,785 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:17,033 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:17,285 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:17,534 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:17,787 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:18,038 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:18,292 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:18,540 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:18,795 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:19,041 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:19,295 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:19,543 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:19,798 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:20,048 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:20,301 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:20,547 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:20,800 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:21,053 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:21,300 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:21,551 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:21,804 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:22,052 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:22,301 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:22,558 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:22,807 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:23,053 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:23,307 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:23,555 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:23,807 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:24,057 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:24,310 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:24,558 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:24,813 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:25,060 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:25,311 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:25,563 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:25,816 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:26,065 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:26,314 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:26,567 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:26,819 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:27,069 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:27,320 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:27,571 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:27,821 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:28,068 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:28,323 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:28,571 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:28,827 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:29,072 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:29,325 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:29,577 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:29,825 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:30,080 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:30,326 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:30,580 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:30,828 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:31,078 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:31,331 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:31,606 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:31,853 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:32,136 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:32,384 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:32,640 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:32,889 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:33,143 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:33,387 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:33,641 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:33,891 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:34,143 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:34,390 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:34,643 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:34,895 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:35,142 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:35,397 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:35,644 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:35,899 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:36,147 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:36,398 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:36,650 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:36,900 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:37,149 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:37,401 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:37,651 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:37,900 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:38,150 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:38,406 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:38,652 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:38,905 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:39,154 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:39,411 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:39,667 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:39,913 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:40,165 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:40,416 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:40,665 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:40,917 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:41,168 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:41,418 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:41,667 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:41,921 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:42,170 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:42,421 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:42,673 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:42,922 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:43,174 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:43,421 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:43,674 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:43,922 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:44,176 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:44,424 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:44,676 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:44,930 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:45,177 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:45,430 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:45,682 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:45,929 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:46,181 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:46,434 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:46,684 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:46,931 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:47,181 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:47,435 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:47,686 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:47,936 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:48,184 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:48,438 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:48,686 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:48,939 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:49,189 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:49,441 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:49,688 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:49,942 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:50,188 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:50,442 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:50,692 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:50,944 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:51,196 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:51,442 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:51,697 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:51,956 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:52,201 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:52,454 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:52,706 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:52,959 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:53,211 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:53,457 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:53,710 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:53,958 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:54,210 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:54,462 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:54,710 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:54,964 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:55,211 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:55,462 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:55,714 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:55,962 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:56,217 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:56,467 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:56,716 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:56,966 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:57,216 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:57,471 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:57,723 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:57,972 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:58,219 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:58,470 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:58,729 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:58,973 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:59,226 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:59,476 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:59,729 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:30:59,979 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:00,227 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:00,478 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:00,728 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:00,981 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:01,229 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:01,481 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:01,741 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:01,985 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:02,240 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:02,490 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:02,744 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:02,989 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:03,240 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:03,494 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:03,743 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:03,995 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:04,243 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:04,501 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:04,748 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:04,998 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:05,246 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:05,500 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:05,749 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:06,002 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:06,249 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:06,502 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:06,755 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:07,005 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:07,254 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:07,505 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:07,754 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:08,007 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:08,255 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:08,511 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:08,759 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:09,012 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:09,259 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:09,509 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:09,763 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:10,010 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:10,261 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:10,515 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:10,763 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:11,023 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:11,273 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:11,522 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:11,775 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:12,022 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:12,278 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:12,527 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:12,777 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:13,024 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:13,278 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:13,529 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:13,781 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:14,028 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:14,281 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:14,529 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:14,784 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:15,032 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:15,286 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:15,533 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:15,784 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:16,038 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:16,285 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:16,539 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:16,793 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:17,040 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:17,288 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:17,539 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:17,792 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:18,045 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:18,290 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:18,542 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:18,795 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:19,042 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:19,295 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:19,543 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:19,795 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:20,050 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:20,296 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:20,551 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:20,799 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:21,053 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:21,300 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:21,569 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:21,818 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:22,071 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:22,318 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:22,571 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:22,822 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:23,074 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:23,323 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:23,575 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:23,827 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:24,078 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:24,326 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:24,580 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:24,829 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:25,079 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:25,333 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:25,583 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:25,831 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:26,084 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:26,338 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:26,583 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:26,835 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:27,087 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:27,345 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:27,593 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:27,845 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:28,095 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:28,347 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:28,595 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:28,851 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:29,098 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:29,350 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:29,598 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:29,853 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:30,124 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:30,373 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:30,623 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:30,876 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:31,124 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:31,378 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:31,626 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:31,879 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:32,131 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:32,381 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:32,632 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:32,891 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:33,131 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:33,384 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:33,637 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:33,884 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:34,136 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:34,384 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:34,637 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:34,886 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:35,140 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:35,391 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:35,641 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:35,894 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:36,143 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:36,395 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:36,642 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:36,894 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:37,147 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:37,394 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:37,648 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:37,896 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:38,152 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:38,414 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:38,667 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:38,915 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:39,169 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:39,418 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:39,669 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:39,917 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:40,171 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:40,421 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:40,678 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:40,924 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:41,174 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:41,423 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:41,676 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:41,924 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:42,174 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:42,428 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:42,680 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:42,929 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:43,178 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:43,450 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:43,695 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:43,945 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:44,199 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:44,446 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:44,697 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:44,951 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:45,198 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:45,452 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:45,700 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:45,953 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:46,203 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:46,458 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:46,709 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:46,959 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:47,206 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:47,459 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:47,717 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:47,973 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:48,210 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:48,463 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:48,717 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:48,979 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:49,221 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:49,467 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:49,716 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:49,977 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:50,216 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:50,470 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:50,719 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:50,993 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:51,221 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:51,474 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:51,725 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:51,982 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:52,231 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:52,480 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:52,735 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:52,982 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:53,235 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:53,483 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:53,740 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:53,985 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:54,240 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:54,490 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:54,744 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:54,989 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:55,242 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:55,489 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:55,745 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:55,990 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:56,245 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:56,495 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:56,744 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:56,997 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:57,251 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:57,499 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:57,750 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:58,003 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:58,254 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:58,504 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:58,752 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:59,005 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:59,254 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:59,504 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:31:59,755 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:00,008 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:00,256 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:00,509 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:00,758 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:01,010 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:01,259 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:01,510 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:01,766 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:02,012 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:02,264 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:02,512 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:02,764 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:03,018 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:03,265 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:03,521 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:03,768 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:04,022 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:04,270 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:04,522 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:04,777 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:05,022 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:05,274 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:05,525 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:05,773 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:06,029 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:06,277 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:06,525 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:06,778 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:07,030 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:07,280 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:07,531 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:07,782 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:08,038 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:08,285 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:08,536 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:08,791 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:09,038 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:09,291 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:09,540 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:09,793 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:10,041 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:10,294 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:10,544 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:10,796 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:11,044 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:11,296 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:11,545 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:11,798 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:12,046 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:12,300 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:12,550 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:12,801 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:13,052 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:13,303 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:13,550 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:13,803 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:14,055 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:14,306 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:14,555 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:14,804 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:15,059 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:15,306 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:15,555 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:15,808 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:16,059 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:16,306 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:16,559 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:16,808 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:17,063 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:17,313 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:17,560 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:17,814 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:18,061 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:18,314 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:18,574 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:18,821 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:19,071 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:19,321 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:19,575 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:19,823 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:20,074 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:20,327 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:20,578 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:20,829 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:21,076 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:21,329 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:21,577 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:21,833 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:22,084 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:22,333 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:22,582 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:22,837 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:23,087 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:23,336 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:23,586 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:23,839 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:24,092 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:24,337 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:24,590 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:24,838 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:25,091 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:25,343 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:25,590 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:25,846 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:26,092 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:26,344 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:26,592 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:26,847 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:27,097 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:27,347 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:27,596 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:27,848 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:28,096 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:28,351 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:28,600 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:28,851 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:29,102 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:29,353 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:29,601 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:29,855 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:30,103 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:30,360 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:30,606 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:30,863 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:31,108 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:31,358 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:31,611 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:31,860 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:32,110 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:32,364 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:32,612 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:32,864 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:33,122 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:33,366 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:33,616 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:33,870 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:34,118 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:34,372 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:34,619 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:34,873 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:35,121 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:35,374 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:35,623 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:35,877 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:36,131 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:36,379 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:36,635 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:36,881 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:37,135 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:37,381 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:37,635 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:37,885 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:38,136 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:38,387 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:38,637 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:38,889 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:39,139 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:39,386 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:39,638 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:39,887 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:40,140 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:40,388 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:40,660 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:40,911 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:41,162 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:41,410 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:41,663 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:41,912 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:42,165 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:42,416 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:42,668 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:42,917 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:43,169 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:43,416 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:43,669 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:43,918 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:44,171 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:44,423 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:44,670 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:44,925 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:45,175 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:45,424 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:45,675 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:45,929 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:46,180 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:46,430 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:46,678 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:46,932 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:47,180 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:47,435 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:47,683 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:47,937 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:48,184 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:48,435 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:48,686 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:48,939 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:49,186 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:49,441 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:49,691 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:49,939 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:50,191 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:50,440 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:50,693 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:50,942 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:51,194 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:51,442 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:51,698 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:51,947 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:52,197 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:52,448 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:52,698 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:52,951 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:53,198 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:53,461 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:53,708 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:53,962 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:54,212 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:54,460 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:54,714 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:54,964 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:55,215 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:55,461 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:55,716 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:55,966 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:56,215 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:56,466 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:56,720 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:56,969 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:57,221 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:57,470 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:57,723 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:57,971 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:58,225 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:58,476 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:58,726 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:58,976 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:59,228 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:59,477 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:59,730 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:32:59,979 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:00,232 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:00,482 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:00,732 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:00,981 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:01,236 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:01,481 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:01,736 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:01,987 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:02,236 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:02,485 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:02,734 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:02,988 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:03,235 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:03,486 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:03,742 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:03,988 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:04,241 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:04,492 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:04,743 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:04,995 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:05,249 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:05,496 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:05,745 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:05,995 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:06,249 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:06,497 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:06,750 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:06,999 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:07,248 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:07,503 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:07,753 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:08,004 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:08,251 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:08,526 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:08,772 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:09,030 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:09,274 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:09,527 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:09,775 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:10,029 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:10,280 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:10,527 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:10,781 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:11,029 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:11,282 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:11,531 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:11,781 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:12,034 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:12,281 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:12,532 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:12,785 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:13,037 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:13,284 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:13,560 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:13,809 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:14,062 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:14,313 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:14,561 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:14,815 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:15,067 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:15,315 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:15,567 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:15,814 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:16,068 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:16,318 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:16,566 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:16,821 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:17,069 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:17,323 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:17,568 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:17,823 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:18,073 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:18,325 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:18,572 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:18,825 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:19,074 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:19,326 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:19,578 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:19,833 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:20,080 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:20,329 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:20,600 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:20,848 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:21,109 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:21,355 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:21,600 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:21,854 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:22,104 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:22,354 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:22,607 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:22,855 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:23,108 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:23,356 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:23,610 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:23,860 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:24,107 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:24,359 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:24,611 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:24,863 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:25,112 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:25,362 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:25,610 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:25,864 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:26,115 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:26,367 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:26,615 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:26,870 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:27,114 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:27,368 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:27,616 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:27,871 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:28,118 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:28,370 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:28,618 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:28,873 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:29,120 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:29,374 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:29,625 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:29,876 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:30,123 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:30,376 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:30,625 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:30,878 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:31,126 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:31,380 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:31,630 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:31,893 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:32,140 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:32,393 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:32,641 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:32,893 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:33,146 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:33,396 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:33,645 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:33,898 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:34,150 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:34,396 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:34,647 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:34,898 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:35,152 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:35,398 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:35,653 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:35,901 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:36,151 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:36,405 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:36,652 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:36,907 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:37,155 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:37,404 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:37,656 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:37,903 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:38,157 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:38,406 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:38,660 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:38,907 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:39,160 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:39,410 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:39,657 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:39,911 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:40,163 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:40,413 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:40,664 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:40,911 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:41,165 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:41,424 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:41,685 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:41,936 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:42,187 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:42,437 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:42,685 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:42,939 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:43,187 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:43,437 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:43,691 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:43,940 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:44,191 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:44,440 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:44,692 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:44,945 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:45,191 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:45,446 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:45,696 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:45,969 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:46,215 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:46,469 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:46,719 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:46,975 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:47,219 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:47,467 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:47,724 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:47,971 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:48,222 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:48,470 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:48,724 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:48,982 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:49,229 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:49,481 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:49,733 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:49,982 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:50,232 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:50,483 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:50,741 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:50,988 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:51,238 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:51,489 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:51,737 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:51,991 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:52,238 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:52,492 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:52,743 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:52,993 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:53,240 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:53,492 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:53,747 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:53,993 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:54,248 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:54,494 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:54,748 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:54,999 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:55,246 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:55,500 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:55,753 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:55,999 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:56,252 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:56,502 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:56,754 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:57,005 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:57,252 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:57,505 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:57,771 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:58,021 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:58,272 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:58,523 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:58,774 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:59,022 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:59,271 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:59,526 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:33:59,772 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:00,026 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:00,276 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:00,528 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:00,779 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:01,031 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:01,278 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:01,532 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:01,780 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:02,033 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:02,281 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:02,535 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:02,785 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:03,037 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:03,285 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:03,538 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:03,788 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:04,040 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:04,290 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:04,542 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:04,789 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:05,043 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:05,291 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:05,544 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:05,794 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:06,046 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:06,295 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:06,548 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:06,796 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:07,048 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:07,300 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:07,547 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:07,803 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:08,050 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:08,305 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:08,550 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:08,803 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:09,055 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:09,305 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:09,555 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:09,804 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:10,074 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:10,321 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:10,572 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:10,825 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:11,077 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:11,324 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:11,577 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:11,827 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:12,080 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:12,328 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:12,583 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:12,832 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:13,082 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:13,335 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:13,582 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:13,836 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:14,086 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:14,337 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:14,585 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:14,839 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:15,088 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:15,342 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:15,592 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:15,843 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:16,092 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:16,347 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:16,594 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:16,847 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:17,097 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:17,348 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:17,600 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:17,850 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:18,099 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:18,351 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:18,599 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:18,868 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:19,116 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:19,368 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:19,616 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:19,867 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:20,121 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:20,368 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:20,619 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:20,869 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:21,124 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:21,372 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:21,626 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:21,873 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:22,126 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:22,375 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:22,627 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:22,875 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:23,127 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:23,379 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:23,628 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:23,880 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:24,131 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:24,382 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:24,632 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:24,884 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:25,132 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:25,384 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:25,633 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:25,887 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:26,135 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:26,389 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:26,636 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:26,888 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:27,139 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:27,389 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:27,642 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:27,897 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:28,143 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:28,391 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:28,650 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:28,891 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:29,146 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:29,394 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:29,646 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:29,898 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:30,149 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:30,396 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:30,652 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:30,898 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:31,151 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:31,399 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:31,653 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:31,904 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:32,169 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:32,411 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:32,664 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:32,918 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:33,166 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:33,417 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:33,672 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:33,923 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:34,172 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:34,424 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:34,672 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:34,925 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:35,174 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:35,428 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:35,675 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:35,927 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:36,181 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:36,428 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:36,679 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:36,932 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:37,183 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:37,431 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:37,682 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:37,936 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:38,184 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:38,440 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:38,685 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:38,937 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:39,190 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:39,458 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:39,707 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:39,961 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:40,207 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:40,461 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:40,712 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:40,964 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:41,226 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:41,472 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:41,728 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:41,974 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:42,227 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:42,474 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:42,729 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:42,976 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:43,229 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:43,481 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:43,732 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:43,984 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:44,230 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:44,484 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:44,736 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:44,984 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:45,233 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:45,486 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:45,734 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:45,987 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:46,236 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:46,488 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:46,741 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:46,991 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:47,242 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:47,491 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:47,742 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:47,994 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:48,242 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:48,495 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:48,744 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:48,998 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:49,248 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:49,498 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:49,747 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:49,999 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:50,248 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:50,501 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:50,748 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:51,003 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:51,251 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:51,525 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:51,775 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:52,023 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:52,274 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:52,528 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:52,776 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:53,029 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:53,281 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:53,528 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:53,779 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:54,034 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:54,281 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:54,536 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:54,793 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:55,041 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:55,296 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:55,546 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:55,796 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:56,044 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:56,299 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:56,546 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:56,799 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:57,067 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:57,314 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:57,566 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:57,817 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:58,069 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:58,317 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:58,570 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:58,820 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:59,069 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:59,319 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:59,573 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:34:59,824 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:00,073 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:00,323 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:00,575 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:00,827 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:01,076 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:01,329 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:01,580 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:01,830 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:02,079 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:02,329 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:02,582 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:02,832 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:03,081 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:03,333 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:03,586 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:03,834 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:04,089 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:04,335 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:04,589 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:04,844 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:05,093 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:05,348 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:05,597 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:05,849 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:06,099 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:06,346 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:06,599 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:06,849 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:07,102 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:07,348 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:07,602 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:07,850 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:08,104 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:08,350 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:08,605 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:08,851 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:09,105 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:09,354 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:09,623 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:09,871 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:10,121 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:10,373 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:10,625 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:10,873 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:11,126 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:11,374 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:11,627 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:11,876 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:12,137 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:12,384 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:12,636 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:12,890 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:13,141 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:13,390 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:13,638 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:13,889 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:14,142 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:14,391 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:14,643 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:14,891 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:15,150 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:15,396 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:15,646 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:15,904 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:16,153 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:16,417 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:16,665 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:16,919 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:17,168 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:17,421 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:17,672 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:17,923 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:18,171 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:18,426 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:18,675 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:18,925 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:19,178 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:19,429 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:19,674 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:19,926 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:20,180 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:20,428 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:20,681 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:20,929 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:21,184 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:21,448 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:21,695 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:21,950 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:22,201 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:22,449 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:22,702 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:22,951 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:23,204 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:23,454 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:23,706 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:23,953 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:24,207 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:24,454 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:24,707 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:24,957 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:25,210 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:25,457 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:25,711 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:25,963 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:26,211 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:26,460 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:26,711 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:26,964 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:27,218 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:27,462 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:27,713 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:27,967 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:28,215 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:28,469 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:28,717 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:28,972 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:29,248 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:29,493 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:29,748 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:29,997 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:30,248 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:30,496 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:30,751 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:30,998 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:31,260 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:31,499 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:31,752 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:32,002 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:32,254 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:32,504 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:32,757 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:33,007 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:33,255 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:33,506 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:33,760 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:34,007 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:34,260 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:34,508 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:34,760 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:35,010 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:35,264 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:35,514 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:35,763 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:36,016 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:36,264 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:36,521 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:36,768 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:37,022 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:37,269 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:37,523 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:37,771 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:38,025 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:38,272 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:38,527 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:38,774 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:39,028 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:39,276 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:39,530 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:39,777 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:40,031 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:40,282 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:40,533 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:40,781 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:41,035 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:41,283 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:41,535 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:41,788 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:42,038 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:42,286 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:42,536 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:42,790 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:43,039 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:43,290 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:43,539 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:43,793 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:44,041 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:44,294 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:44,545 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:44,793 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:45,048 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:45,295 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:45,548 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:45,799 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:46,048 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:46,301 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:46,551 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:46,801 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:47,048 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:47,302 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:47,552 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:47,800 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:48,051 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:48,302 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:48,557 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:48,814 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:49,061 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:49,315 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:49,562 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:49,816 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:50,067 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:50,318 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:50,565 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:50,816 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:51,070 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:51,321 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:51,573 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:51,836 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:52,084 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:52,337 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:52,586 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:52,839 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:53,090 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:53,340 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:53,588 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:53,839 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:54,093 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:54,340 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:54,593 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:54,843 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:55,096 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:55,343 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:55,598 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:55,846 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:56,097 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:56,350 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:56,601 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:56,848 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:57,102 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:57,350 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:57,603 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:57,851 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:58,106 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:58,353 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:58,608 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:58,853 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:59,108 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:59,356 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:59,609 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:35:59,860 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:00,132 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:00,380 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:00,632 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:00,880 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:01,131 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:01,385 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:01,635 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:01,882 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:02,133 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:02,387 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:02,634 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:02,888 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:03,136 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:03,389 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:03,638 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:03,891 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:04,142 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:04,389 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:04,642 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:04,890 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:05,144 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:05,395 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:05,643 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:05,896 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:06,148 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:06,399 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:06,645 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:06,899 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:07,151 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:07,398 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:07,648 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:07,899 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:08,153 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:08,402 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:08,655 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:08,906 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:09,154 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:09,407 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:09,658 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:09,909 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:10,158 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:10,407 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:10,661 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:10,912 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:11,179 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:11,440 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:11,687 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:11,941 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:12,190 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:12,444 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:12,693 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:12,944 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:13,193 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:13,443 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:13,698 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:13,944 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:14,199 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:14,450 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:14,701 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:14,948 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:15,203 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:15,450 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:15,701 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:15,954 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:16,206 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:16,453 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:16,705 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:16,954 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:17,208 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:17,455 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:17,709 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:17,957 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:18,211 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:18,458 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:18,712 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:18,959 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:19,214 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:19,463 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:19,735 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:19,981 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:20,236 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:20,482 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:20,734 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:20,986 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:21,240 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:21,486 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:21,743 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:21,990 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:22,239 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:22,492 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:22,745 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:22,991 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:23,243 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:23,492 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:23,747 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:23,994 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:24,251 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:24,495 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:24,749 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:24,999 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:25,250 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:25,499 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:25,752 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:26,002 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:26,251 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:26,504 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:26,755 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:27,003 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:27,257 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:27,504 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:27,758 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:28,010 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:28,258 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:28,511 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:28,759 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:29,011 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:29,259 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:29,509 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:29,762 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:30,011 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:30,261 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:30,515 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:30,762 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:31,020 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:31,269 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:31,522 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:31,772 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:32,020 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:32,274 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:32,521 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:32,775 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:33,023 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:33,278 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:33,525 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:33,778 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:34,027 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:34,281 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:34,528 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:34,782 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:35,031 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:35,284 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:35,532 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:35,786 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:36,034 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:36,288 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:36,537 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:36,789 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:37,036 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:37,290 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:37,538 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:37,791 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:38,039 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:38,292 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:38,540 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:38,794 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:39,042 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:39,291 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:39,545 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:39,797 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:40,045 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:40,295 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:40,549 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:40,800 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:41,047 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:41,302 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:41,552 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:41,799 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:42,054 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:42,304 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:42,551 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:42,804 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:43,052 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:43,306 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:43,557 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:43,803 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:44,055 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:44,306 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:44,559 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:44,806 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:45,061 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:45,320 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:45,562 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:45,812 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:46,062 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:46,313 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:46,563 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:46,814 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:47,063 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:47,317 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:47,567 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:47,814 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:48,068 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:48,324 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:48,569 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:48,819 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:49,067 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:49,327 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:49,570 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:49,818 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:50,070 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:50,328 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:50,572 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:50,822 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:51,076 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:51,346 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:51,575 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:51,828 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:52,076 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:52,332 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:52,578 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:52,832 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:53,081 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:53,334 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:53,582 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:53,834 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:54,082 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:54,335 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:54,583 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:54,840 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:55,089 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:55,342 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:55,590 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:55,840 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:56,094 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:56,344 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:56,592 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:56,843 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:57,098 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:57,344 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:57,595 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:57,849 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:58,097 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:58,350 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:58,597 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:58,851 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:59,114 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:59,362 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:59,612 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:36:59,865 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:00,117 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:00,364 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:00,618 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:00,867 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:01,116 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:01,369 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:01,621 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:01,867 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:02,125 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:02,370 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:02,623 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:02,871 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:03,126 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:03,372 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:03,626 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:03,873 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:04,134 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:04,375 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:04,629 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:04,877 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:05,132 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:05,382 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:05,630 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:05,884 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:06,136 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:06,382 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:06,635 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:06,887 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:07,134 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:07,388 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:07,636 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:07,889 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:08,137 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:08,392 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:08,638 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:08,892 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:09,140 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:09,393 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:09,641 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:09,894 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:10,143 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:10,396 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:10,643 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:10,897 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:11,146 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:11,399 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:11,648 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:11,900 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:12,148 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:12,402 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:12,650 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:12,901 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:13,155 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:13,404 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:13,652 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:13,902 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:14,158 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:14,404 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:14,655 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:14,908 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:15,156 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:15,410 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:15,656 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:15,910 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:16,161 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:16,408 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:16,658 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:16,913 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:17,164 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:17,411 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:17,666 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:17,916 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:18,163 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:18,417 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:18,667 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:18,915 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:19,170 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:19,417 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:19,670 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:19,918 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:20,172 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:20,420 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:20,675 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:20,921 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:21,175 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:21,422 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:21,676 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:21,923 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:22,178 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:22,428 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:22,676 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:22,929 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:23,181 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:23,428 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:23,683 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:23,932 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:24,180 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:24,434 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:24,681 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:24,936 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:25,184 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:25,437 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:25,684 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:25,937 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:26,185 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:26,439 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:26,687 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:26,940 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:27,189 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:27,443 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:27,690 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:27,943 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:28,193 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:28,445 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:28,694 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:28,947 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:29,196 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:29,448 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:29,696 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:29,968 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:30,224 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:30,471 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:30,720 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:30,969 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:31,225 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:31,471 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:31,726 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:31,975 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:32,224 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:32,477 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:32,727 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:32,978 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:33,234 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:33,478 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:33,731 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:33,978 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:34,231 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:34,479 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:34,733 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:34,983 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:35,232 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:35,485 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:35,734 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:35,988 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:36,239 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:36,486 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:36,737 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:36,989 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:37,241 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:37,491 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:37,742 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:37,992 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:38,245 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:38,492 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:38,746 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:38,994 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:39,251 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:39,498 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:39,746 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:39,999 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:40,253 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:40,501 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:40,748 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:41,001 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:41,253 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:41,500 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:41,754 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:42,002 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:42,263 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:42,510 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:42,759 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:43,005 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:43,259 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:43,506 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:43,760 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:44,008 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:44,262 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:44,509 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:44,764 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:45,010 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:45,265 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:45,511 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:45,765 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:46,012 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:46,267 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:46,514 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:46,764 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:47,018 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:47,270 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:47,517 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:47,767 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:48,021 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:48,270 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:48,523 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:48,775 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:49,022 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:49,275 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:49,526 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:49,776 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:50,024 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:50,276 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:50,534 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:50,778 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:51,030 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:51,278 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:51,533 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:51,790 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:52,037 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:52,294 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:52,541 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:52,792 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:53,045 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:53,294 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:53,543 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:53,793 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:54,046 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:54,298 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:54,544 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:54,800 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:55,048 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:55,297 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:55,550 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:55,799 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:56,054 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:56,304 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:56,551 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:56,804 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:57,055 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:57,312 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:57,559 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:57,812 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:58,060 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:58,314 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:58,565 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:58,812 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:59,067 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:59,315 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:59,568 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:37:59,816 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:00,069 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:00,318 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:00,571 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:00,820 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:01,074 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:01,322 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:01,575 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:01,825 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:02,076 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:02,358 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:02,605 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:02,855 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:03,109 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:03,357 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:03,611 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:03,859 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:04,112 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:04,362 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:04,614 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:04,862 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:05,114 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:05,367 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:05,628 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:05,875 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:06,130 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:06,377 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:06,632 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:06,884 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:07,131 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:07,380 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:07,634 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:07,880 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:08,135 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:08,384 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:08,632 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:08,882 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:09,133 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:09,390 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:09,639 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:09,888 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:10,137 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:10,394 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:10,637 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:10,888 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:11,140 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:11,392 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:11,642 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:11,890 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:12,143 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:12,392 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:12,646 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:12,898 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:13,145 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:13,396 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:13,648 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:13,898 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:14,150 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:14,401 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:14,649 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:14,899 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:15,154 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:15,415 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:15,662 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:15,945 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:16,194 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:16,446 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:16,695 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:16,947 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:17,195 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:17,449 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:17,697 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:17,954 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:18,199 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:18,453 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:18,699 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:18,951 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:19,205 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:19,454 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:19,702 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:19,952 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:20,209 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:20,458 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:20,707 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:20,956 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:21,209 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:21,458 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:21,711 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:21,959 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:22,212 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:22,464 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:22,713 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:22,962 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:23,215 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:23,465 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:23,713 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:23,963 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:24,217 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:24,467 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:24,717 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:24,967 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:25,222 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:25,468 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:25,723 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:25,972 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:26,225 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:26,471 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:26,722 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:26,978 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:27,224 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:27,477 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:27,726 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:27,977 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:28,232 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:28,479 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:28,733 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:28,983 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:29,233 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:29,483 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:29,735 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:29,985 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:30,234 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:30,489 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:30,735 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:30,987 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:31,237 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:31,492 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:31,737 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:31,991 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:32,240 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:32,494 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:32,744 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:32,996 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:33,242 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:33,495 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:33,745 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:33,997 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:34,245 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:34,498 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:34,746 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:34,999 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:35,248 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:35,501 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:35,750 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:36,000 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:36,254 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:36,503 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:36,751 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:37,004 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:37,257 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:37,505 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:37,758 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:38,006 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:38,260 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:38,509 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:38,757 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:39,011 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:39,263 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:39,513 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:39,760 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:40,011 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:40,264 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:40,515 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:40,762 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:41,014 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:41,268 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:41,517 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:41,769 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:42,019 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:42,270 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:42,520 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:42,772 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:43,019 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:43,274 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:43,520 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:43,774 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:44,025 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:44,274 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:44,528 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:44,776 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:45,029 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:45,276 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:45,529 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:45,777 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:46,046 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:46,295 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:46,550 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:46,796 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:47,051 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:47,300 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:47,551 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:47,800 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:48,052 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:48,301 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:48,554 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:48,802 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:49,056 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:49,305 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:49,558 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:49,806 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:50,061 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:50,310 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:50,563 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:50,811 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:51,061 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:51,316 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:51,572 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:51,819 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:52,070 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:52,324 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:52,571 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:52,825 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:53,072 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:53,328 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:53,576 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:53,823 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:54,078 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:54,331 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:54,579 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:54,827 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:55,078 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:55,332 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:55,586 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:55,830 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:56,081 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:56,336 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:56,582 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:56,836 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:57,088 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:57,338 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:57,586 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:57,838 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:58,086 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:58,340 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:58,589 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:58,842 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:59,093 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:59,341 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:59,595 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:38:59,845 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:00,096 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:00,343 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:00,594 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:00,847 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:01,096 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:01,350 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:01,600 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:01,860 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:02,107 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:02,356 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:02,611 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:02,860 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:03,108 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:03,360 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:03,613 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:03,864 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:04,113 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:04,365 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:04,617 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:04,867 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:05,116 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:05,367 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:05,620 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:05,867 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:06,121 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:06,369 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:06,623 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:06,870 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:07,123 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:07,372 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:07,626 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:07,875 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:08,123 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:08,378 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:08,628 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:08,876 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:09,125 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:09,380 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:09,627 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:09,877 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:10,131 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:10,383 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:10,630 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:10,883 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:11,134 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:11,382 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:11,635 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:11,882 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:12,135 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:12,386 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:12,639 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:12,886 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:13,139 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:13,391 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:13,639 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:13,892 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:14,143 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:14,392 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:14,666 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:14,912 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:15,166 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:15,419 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:15,676 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:15,926 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:16,177 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:16,426 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:16,679 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:16,927 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:17,179 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:17,429 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:17,684 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:17,928 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:18,182 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:18,431 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:18,681 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:18,935 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:19,185 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:19,434 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:19,687 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:19,940 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:20,188 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:20,441 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:20,689 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:20,942 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:21,188 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:21,441 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:21,690 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:21,943 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:22,196 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:22,442 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:22,697 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:22,943 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:23,194 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:23,448 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:23,698 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:23,945 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:24,200 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:24,450 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:24,699 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:24,951 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:25,199 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:25,456 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:25,701 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:25,954 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:26,210 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:26,457 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:26,710 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:26,960 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:27,209 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:27,462 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:27,713 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:27,963 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:28,211 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:28,465 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:28,715 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:28,966 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:29,214 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:29,469 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:29,715 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:29,969 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:30,217 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:30,471 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:30,718 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:30,973 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:31,221 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:31,475 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:31,722 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:31,972 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:32,228 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:32,483 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:32,725 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:32,975 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:33,229 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:33,478 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:33,731 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:33,982 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:34,237 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:34,485 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:34,731 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:34,982 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:35,235 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:35,486 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:35,734 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:35,988 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:36,236 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:36,486 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:36,743 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:36,991 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:37,246 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:37,495 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:37,748 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:37,995 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:38,248 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:38,500 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:38,747 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:39,000 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:39,248 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:39,503 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:39,749 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:40,003 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:40,252 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:40,506 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:40,756 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:41,003 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:41,260 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:41,505 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:41,759 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:42,008 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:42,259 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:42,509 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:42,758 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:43,013 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:43,262 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:43,510 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:43,760 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:44,015 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:44,264 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:44,513 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:44,775 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:45,024 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:45,276 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:45,528 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:45,782 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:46,034 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:46,282 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:46,537 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:46,781 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:47,035 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:47,295 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:47,544 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:47,793 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:48,046 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:48,295 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:48,548 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:48,798 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:49,049 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:49,296 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:49,548 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:49,799 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:50,051 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:50,302 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:50,551 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:50,803 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:51,051 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:51,303 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:51,567 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:51,805 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:52,054 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:52,307 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:52,558 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:52,806 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:53,059 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:53,316 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:53,563 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:53,819 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:54,065 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:54,319 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:54,565 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:54,818 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:55,068 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:55,321 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:55,571 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:55,818 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:56,071 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:56,326 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:56,573 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:56,823 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:57,072 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:57,324 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:57,574 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:57,822 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:58,075 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:58,325 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:58,578 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:58,826 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:59,079 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:59,327 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:59,580 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:39:59,828 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:00,082 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:00,332 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:00,586 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:00,832 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:01,084 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:01,333 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:01,586 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:01,836 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:02,087 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:02,337 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:02,591 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:02,836 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:03,090 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:03,338 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:03,590 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:03,838 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:04,092 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:04,343 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:04,592 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:04,844 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:05,094 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:05,344 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:05,593 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:05,846 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:06,094 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:06,346 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:06,599 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:06,850 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:07,097 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:07,348 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:07,600 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:07,851 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:08,101 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:08,352 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:08,603 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:08,856 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:09,104 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:09,355 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:09,605 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:09,857 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:10,107 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:10,358 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:10,611 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:10,859 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:11,109 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:11,360 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:11,610 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:11,861 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:12,125 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:12,373 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:12,623 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:12,873 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:13,124 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:13,374 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:13,624 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:13,880 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:14,126 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:14,384 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:14,632 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:14,883 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:15,134 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:15,383 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:15,637 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:15,887 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:16,137 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:16,386 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:16,636 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:16,887 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:17,138 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:17,389 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:17,643 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:17,891 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:18,142 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:18,394 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:18,643 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:18,894 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:19,222 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:19,467 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:19,716 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:19,967 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:20,217 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:20,469 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:20,719 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:20,972 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:21,222 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:21,475 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:21,722 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:21,973 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:22,223 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:22,474 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:22,727 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:22,975 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:23,227 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:23,476 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:23,727 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:23,980 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:24,232 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:24,480 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:24,729 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:24,982 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:25,231 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:25,482 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:25,735 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:25,986 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:26,234 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:26,492 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:26,741 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:26,988 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:27,237 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:27,492 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:27,741 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:27,992 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:28,243 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:28,496 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:28,758 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:29,005 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:29,270 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:29,519 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:29,772 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:30,018 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:30,291 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:30,538 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:30,790 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:31,040 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:31,294 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:31,542 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:31,797 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:32,043 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:32,297 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:32,546 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:32,799 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:33,045 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:33,298 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:33,551 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:33,798 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:34,048 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:34,302 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:34,550 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:34,801 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:35,055 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:35,305 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:35,553 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:35,804 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:36,097 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:36,347 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:36,597 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:36,846 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:37,096 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:37,354 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:37,601 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:37,849 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:38,103 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:38,351 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:38,601 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:38,852 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:39,101 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:39,352 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:39,607 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:39,857 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:40,106 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:40,357 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:40,609 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:40,859 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:41,109 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:41,403 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:41,653 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:41,903 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:42,153 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:42,402 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:42,652 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:42,904 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:43,159 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:43,405 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:43,659 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:43,908 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:44,159 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:44,410 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:44,658 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:44,913 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:45,162 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:45,411 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:45,660 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:45,915 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:46,166 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:46,413 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:46,663 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:46,914 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:47,165 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:47,416 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:47,666 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:47,920 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:48,167 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:48,420 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:48,670 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:48,920 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:49,171 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:49,439 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:49,689 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:49,938 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:50,188 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:50,440 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:50,690 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:50,941 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:51,196 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:51,444 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:51,693 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:51,944 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:52,194 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:52,445 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:52,699 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:52,947 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:53,200 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:53,448 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:53,698 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:53,951 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:54,202 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:54,451 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:54,701 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:54,955 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:55,204 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:55,455 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:55,707 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:55,957 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:56,205 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:56,460 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:56,709 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:56,957 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:57,208 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:57,463 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:57,710 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:57,965 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:58,212 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:58,466 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:58,716 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:58,964 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:59,218 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:59,467 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:59,719 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:40:59,967 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:00,235 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:00,484 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:00,737 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:00,985 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:01,239 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:01,488 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:01,743 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:01,988 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:02,238 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:02,496 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:02,745 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:02,991 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:03,244 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:03,496 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:03,744 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:03,996 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:04,248 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:04,499 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:04,747 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:05,001 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:05,252 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:05,501 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:05,751 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:06,050 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:06,298 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:06,551 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:06,800 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:07,051 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:07,301 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:07,554 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:07,804 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:08,056 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:08,304 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:08,555 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:08,807 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:09,057 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:09,307 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:09,562 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:09,811 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:10,059 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:10,311 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:10,562 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:10,811 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:11,062 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:11,355 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:11,602 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:11,854 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:12,102 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:12,355 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:12,604 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:12,855 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:13,109 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:13,356 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:13,610 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:13,858 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:14,112 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:14,359 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:14,610 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:14,863 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:15,117 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:15,362 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:15,615 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:15,866 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:16,116 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:16,366 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:16,625 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:16,870 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:17,119 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:17,370 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:17,622 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:17,875 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:18,122 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:18,374 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:18,630 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:18,875 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:19,126 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:19,398 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:19,654 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:19,895 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:20,147 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:20,396 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:20,655 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:20,897 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:21,152 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:21,402 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:21,672 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:21,902 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:22,152 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:22,404 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:22,660 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:22,904 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:23,157 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:23,408 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:23,656 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:23,913 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:24,161 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:24,413 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:24,663 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:24,916 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:25,164 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:25,414 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:25,677 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:25,924 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:26,174 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:26,428 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:26,678 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:26,927 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:27,178 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:27,431 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:27,678 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:27,932 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:28,179 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:28,435 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:28,686 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:28,932 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:29,189 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:29,434 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:29,688 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:29,935 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:30,187 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:30,436 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:30,690 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:30,937 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:31,190 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:31,440 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:31,693 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:31,940 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:32,211 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:32,464 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:32,713 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:32,962 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:33,213 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:33,466 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:33,712 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:33,967 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:34,216 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:34,466 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:34,715 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:34,970 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:35,220 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:35,468 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:35,720 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:35,978 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:36,226 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:36,478 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:36,728 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:36,980 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:37,230 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:37,481 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:37,732 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:37,985 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:38,232 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:38,484 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:38,734 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:38,985 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:39,237 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:39,486 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:39,742 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:39,988 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:40,238 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:40,490 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:40,741 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:40,990 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:41,273 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:41,517 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:41,765 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:42,014 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:42,265 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:42,516 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:42,766 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:43,021 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:43,268 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:43,520 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:43,773 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:44,023 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:44,272 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:44,523 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:44,774 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:45,025 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:45,272 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:45,523 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:45,777 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:46,026 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:46,274 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:46,526 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:46,777 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:47,027 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:47,278 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:47,529 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:47,782 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:48,032 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:48,282 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:48,532 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:48,784 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:49,034 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:49,336 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:49,584 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:49,834 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:50,085 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:50,336 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:50,587 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:50,836 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:51,090 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:51,338 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:51,591 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:51,842 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:52,092 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:52,343 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:52,598 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:52,845 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:53,097 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:53,347 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:53,600 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:53,852 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:54,101 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:54,351 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:54,605 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:54,856 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:55,105 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:55,354 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:55,611 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:55,860 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:56,108 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:56,359 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:56,610 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:56,860 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:57,110 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:57,362 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:57,613 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:57,863 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:58,114 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:58,366 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:58,616 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:58,866 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:59,118 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:59,367 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:59,619 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:41:59,869 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:42:00,121 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:42:00,372 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:42:00,623 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:42:00,874 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:42:01,125 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:42:01,378 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:42:01,626 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:42:01,879 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:42:02,128 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:42:02,379 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:42:02,630 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:42:02,880 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:42:03,130 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:42:03,381 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:42:03,636 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:42:03,882 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:42:04,132 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:42:04,383 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-25 18:42:04,507 [printer.py:change_state()] - Changing state from 'printing' to 'disconnected'
2025-08-25 18:42:04,508 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-25 18:42:04,511 [screensaver.py:close()] - Closing Screensaver
2025-08-25 18:42:04,518 [screen.py:wake_screen()] - Screen wake up
2025-08-25 18:42:04,714 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 900
2025-08-25 18:42:04,715 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 900 DPMS:True
2025-08-25 18:42:04,715 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-25 18:42:04,716 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 18:42:04,778 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-25 18:42:04,821 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 18:42:08,759 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 18:42:09,034 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 18:42:09,034 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 18:42:09,034 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 18:42:09,035 [printer.py:log_counts()] - # Fans: 3
2025-08-25 18:42:09,035 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 18:42:09,035 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 18:42:09,035 [printer.py:log_counts()] - # Leds: 1
2025-08-25 18:42:09,284 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 18:42:09,285 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 18:42:09,286 [screen.py:init_klipper()] - Printer initialized
2025-08-25 18:42:09,286 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 18:42:09,286 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 18:42:09,368 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 900
2025-08-25 18:42:09,369 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 900 DPMS:True
2025-08-25 18:42:09,369 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 18:42:09,372 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 18:42:09,434 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-25 18:42:09,537 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 18:42:09,552 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 18:42:09,556 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 18:42:09,583 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 18:42:09,598 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 18:42:09,634 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 18:42:09,651 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 18:57:09,740 [screensaver.py:show()] - Showing Screensaver
2025-08-25 19:04:38,285 [screensaver.py:close()] - Closing Screensaver
2025-08-25 19:04:38,287 [screen.py:wake_screen()] - Screen wake up
2025-08-25 19:06:47,403 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-08-25 19:06:47,405 [printer.py:change_state()] - Adding callback for state: printing
2025-08-25 19:06:47,621 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 900
2025-08-25 19:06:47,622 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 900 DPMS:True
2025-08-25 19:06:47,622 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 19:06:47,704 [screen.py:show_panel()] - Reinitializing panel job_status
2025-08-25 19:06:47,798 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-25 19:06:47,810 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-08-25 19:06:47,823 [job_status.py:update_filename()] - Updating filename to obj_2_Gothic Bunny_0.2mm_PLA_Generic Klipper Printer_2h19m.gcode
2025-08-25 19:06:47,824 [job_status.py:_update_file_metadata()] - Update Metadata. File: obj_2_Gothic Bunny_0.2mm_PLA_Generic Klipper Printer_2h19m.gcode Size: 15100291
2025-08-25 19:08:37,921 [screen.py:_go_to_submenu()] - #### Go to submenu 
2025-08-25 19:08:37,921 [screen.py:_go_to_submenu()] - #### Menu __print
2025-08-25 19:08:37,928 [screen.py:show_panel()] - Reinitializing panel menu
2025-08-25 19:08:37,998 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-25 19:08:38,163 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2025-08-25 19:08:38,190 [menu.py:arrangeMenuItems()] - X > move
2025-08-25 19:08:38,200 [menu.py:arrangeMenuItems()] - X > power
2025-08-25 19:08:38,230 [menu.py:arrangeMenuItems()] - X > spoolman
2025-08-25 19:08:38,231 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-25 19:08:38,239 [menu.py:arrangeMenuItems()] - X > pins
2025-08-25 19:08:38,259 [screen.py:_go_to_submenu()] - menu, {{ gettext('Print Control') }}, panel_name=, items=[{'notifications': {'name': "{{ gettext('Notifications') }}", 'icon': 'notifications', 'panel': 'notifications', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'temperature': {'name': "{{ gettext('Temperature') }}", 'icon': 'heat-up', 'panel': 'temperature', 'method': None, 'confirm': None, 'enable': '{{ (printer.temperature_devices.count > 0) or (printer.extruders.count > 0)}}', 'params': '{}', 'style': None}}, {'fan': {'name': "{{ gettext('Fan') }}", 'icon': 'fan', 'panel': 'fan', 'method': None, 'confirm': None, 'enable': '{{ printer.fans.count > 0 }}', 'params': '{}', 'style': None}}, {'move': {'name': "{{ gettext('Move') }}", 'icon': 'move', 'panel': 'move', 'method': None, 'confirm': None, 'enable': '{{ printer.pause_resume.is_paused }}', 'params': '{}', 'style': None}}, {'extrude': {'name': "{{ gettext('Extrude') }}", 'icon': 'extrude', 'panel': 'extrude', 'method': None, 'confirm': None, 'enable': '{{ printer.extruders.count > 0 }}', 'params': '{}', 'style': None}}, {'power': {'name': "{{ gettext('Power') }}", 'icon': 'shutdown', 'panel': 'power', 'method': None, 'confirm': None, 'enable': '{{ moonraker.power_devices.count > 0 }}', 'params': '{}', 'style': None}}, {'led': {'name': "{{ gettext('Leds') }}", 'icon': 'light', 'panel': 'led', 'method': None, 'confirm': None, 'enable': '{{ printer.leds.count > 0 }}', 'params': '{}', 'style': None}}, {'macros': {'name': "{{ gettext('Macros') }}", 'icon': 'custom-script', 'panel': 'gcode_macros', 'method': None, 'confirm': None, 'enable': '{{ printer.gcode_macros.count > 0 }}', 'params': '{}', 'style': None}}, {'camera': {'name': "{{ gettext('Camera') }}", 'icon': 'camera', 'panel': 'camera', 'method': None, 'confirm': None, 'enable': '{{ moonraker.cameras.count > 0 }}', 'params': '{}', 'style': None}}, {'console': {'name': "{{ gettext('Console') }}", 'icon': 'console', 'panel': 'console', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'limits': {'name': "{{ gettext('Limits') }}", 'icon': 'fine-tune', 'panel': 'limits', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'network': {'name': "{{ gettext('Network') }}", 'icon': 'network', 'panel': 'network', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'settings': {'name': 'KlipperScreen', 'icon': 'settings', 'panel': 'settings', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'spoolman': {'name': 'Spoolman', 'icon': 'spoolman', 'panel': 'spoolman', 'method': None, 'confirm': None, 'enable': '{{ moonraker.spoolman }}', 'params': '{}', 'style': None}}, {'system': {'name': "{{ gettext('System') }}", 'icon': 'info', 'panel': 'system', 'method': None, 'confirm': None, 'enable': '{{ moonraker_connected }}', 'params': '{}', 'style': None}}, {'pins': {'name': "{{ gettext('Pins') }}", 'icon': 'hashtag', 'panel': 'pins', 'method': None, 'confirm': None, 'enable': '{{ printer.output_pins.count > 0 or printer.pwm_tools.count > 0 }}', 'params': '{}', 'style': None}}]
2025-08-25 19:08:39,229 [screen.py:_load_panel()] - Loading panel: gcode_macros
2025-08-25 19:08:39,276 [screen.py:attach_panel()] - Current panel hierarchy: job_status >  > gcode_macros
2025-08-25 19:08:46,112 [screen.py:show_popup_message()] - echo: LED_PARTY_START 
2025-08-25 19:08:46,122 [screen.py:_send_action()] - printer.gcode.script: {'script': 'LED_PARTY_START'}
2025-08-25 19:09:19,479 [screen.py:show_popup_message()] - echo: LED_PARTY_STOP 
2025-08-25 19:09:19,489 [screen.py:_send_action()] - printer.gcode.script: {'script': 'LED_PARTY_STOP'}
2025-08-25 19:12:11,844 [screen.py:_menu_go_back()] - #### Menu go home
2025-08-25 19:12:11,897 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-25 19:27:12,740 [screensaver.py:show()] - Showing Screensaver
2025-08-25 21:24:52,324 [printer.py:change_state()] - Changing state from 'printing' to 'disconnected'
2025-08-25 21:24:52,325 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-25 21:24:52,326 [screensaver.py:close()] - Closing Screensaver
2025-08-25 21:24:52,337 [screen.py:wake_screen()] - Screen wake up
2025-08-25 21:24:52,520 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 900
2025-08-25 21:24:52,520 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 900 DPMS:True
2025-08-25 21:24:52,520 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-25 21:24:52,521 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 21:24:52,585 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-25 21:24:52,616 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 21:24:56,500 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 21:24:56,738 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 21:24:56,738 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 21:24:56,739 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 21:24:56,739 [printer.py:log_counts()] - # Fans: 3
2025-08-25 21:24:56,739 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 21:24:56,739 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 21:24:56,739 [printer.py:log_counts()] - # Leds: 1
2025-08-25 21:24:56,988 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 21:24:56,991 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 21:24:56,991 [screen.py:init_klipper()] - Printer initialized
2025-08-25 21:24:56,992 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 21:24:56,992 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 21:24:57,009 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 21:24:57,238 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 21:24:57,238 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 21:24:57,239 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 21:24:57,239 [printer.py:log_counts()] - # Fans: 3
2025-08-25 21:24:57,239 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 21:24:57,239 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 21:24:57,239 [printer.py:log_counts()] - # Leds: 1
2025-08-25 21:24:57,539 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 21:24:57,551 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 21:24:57,551 [screen.py:init_klipper()] - Printer initialized
2025-08-25 21:24:57,636 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 900
2025-08-25 21:24:57,637 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 900 DPMS:True
2025-08-25 21:24:57,637 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 21:24:57,640 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 21:24:57,704 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-25 21:24:57,802 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 21:24:57,824 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 21:24:57,829 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 21:24:57,855 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 21:24:57,870 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 21:24:57,908 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 21:24:57,930 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 21:33:16,639 [screen.py:_go_to_submenu()] - #### Go to submenu more
2025-08-25 21:33:16,640 [screen.py:_go_to_submenu()] - #### Menu __main
2025-08-25 21:33:16,648 [screen.py:_load_panel()] - Loading panel: menu
2025-08-25 21:33:16,710 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-25 21:33:16,900 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2025-08-25 21:33:16,941 [menu.py:arrangeMenuItems()] - X > more pins
2025-08-25 21:33:16,945 [menu.py:arrangeMenuItems()] - X > more power
2025-08-25 21:33:16,968 [menu.py:arrangeMenuItems()] - X > more spoolman
2025-08-25 21:33:16,969 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-25 21:33:16,993 [screen.py:_go_to_submenu()] - menu, {{ gettext('More') }}, panel_name=more, items=[{'more bedlevel': {'name': "{{ gettext('Bed Level') }}", 'icon': 'bed-level', 'panel': 'bed_level', 'method': None, 'confirm': None, 'enable': "{{ 'bed_screws' in printer.config_sections or 'screws_tilt_adjust' in printer.config_sections }}", 'params': '{}', 'style': None}}, {'more bedmesh': {'name': "{{ gettext('Bed Mesh') }}", 'icon': 'bed-mesh', 'panel': 'bed_mesh', 'method': None, 'confirm': None, 'enable': "{{ 'bed_mesh' in printer.config_sections }}", 'params': '{}', 'style': None}}, {'more zoffset': {'name': "{{ gettext('Z Calibrate') }}", 'icon': 'z-farther', 'panel': 'zcalibrate', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more limits': {'name': "{{ gettext('Limits') }}", 'icon': 'fine-tune', 'panel': 'limits', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more fan': {'name': "{{ gettext('Fan') }}", 'icon': 'fan', 'panel': 'fan', 'method': None, 'confirm': None, 'enable': '{{ printer.fans.count > 0 }}', 'params': '{}', 'style': None}}, {'more led': {'name': "{{ gettext('Leds') }}", 'icon': 'light', 'panel': 'led', 'method': None, 'confirm': None, 'enable': '{{ printer.leds.count > 0 }}', 'params': '{}', 'style': None}}, {'more macros': {'name': "{{ gettext('Macros') }}", 'icon': 'custom-script', 'panel': 'gcode_macros', 'method': None, 'confirm': None, 'enable': '{{ printer.gcode_macros.count > 0 }}', 'params': '{}', 'style': None}}, {'more pins': {'name': "{{ gettext('Pins') }}", 'icon': 'hashtag', 'panel': 'pins', 'method': None, 'confirm': None, 'enable': '{{ printer.output_pins.count > 0 or printer.pwm_tools.count > 0 }}', 'params': '{}', 'style': None}}, {'more power': {'name': "{{ gettext('Power') }}", 'icon': 'shutdown', 'panel': 'power', 'method': None, 'confirm': None, 'enable': '{{ moonraker.power_devices.count > 0 }}', 'params': '{}', 'style': None}}, {'more camera': {'name': "{{ gettext('Camera') }}", 'icon': 'camera', 'panel': 'camera', 'method': None, 'confirm': None, 'enable': '{{ moonraker.cameras.count > 0 }}', 'params': '{}', 'style': None}}, {'more console': {'name': "{{ gettext('Console') }}", 'icon': 'console', 'panel': 'console', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more updater': {'name': "{{ gettext('Update') }}", 'icon': 'refresh', 'panel': 'updater', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more input_shaper': {'name': "{{ gettext('Input Shaper') }}", 'icon': 'move', 'panel': 'input_shaper', 'method': None, 'confirm': None, 'enable': "{{ 'input_shaper' in printer.config_sections }}", 'params': '{}', 'style': None}}, {'more save': {'name': "{{ gettext('Save Config') }}", 'icon': 'complete', 'panel': None, 'method': 'ks_confirm_save', 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more settings': {'name': 'KlipperScreen', 'icon': 'settings', 'panel': 'settings', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more network': {'name': "{{ gettext('Network') }}", 'icon': 'network', 'panel': 'network', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more notifications': {'name': "{{ gettext('Notifications') }}", 'icon': 'notifications', 'panel': 'notifications', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more spoolman': {'name': 'Spoolman', 'icon': 'spoolman', 'panel': 'spoolman', 'method': None, 'confirm': None, 'enable': '{{ moonraker.spoolman }}', 'params': '{}', 'style': None}}, {'more system': {'name': "{{ gettext('System') }}", 'icon': 'info', 'panel': 'system', 'method': None, 'confirm': None, 'enable': '{{ moonraker_connected }}', 'params': '{}', 'style': None}}, {'more fine_tune': {'name': "{{ gettext('Fine Tuning') }}", 'icon': 'fine-tune', 'panel': 'fine_tune', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}]
2025-08-25 21:33:17,986 [screen.py:_load_panel()] - Loading panel: fan
2025-08-25 21:33:17,994 [fan.py:add_fan()] - Adding fan: fan
2025-08-25 21:33:18,008 [fan.py:add_fan()] - Adding fan: controller_fan stepper_fan
2025-08-25 21:33:18,014 [fan.py:add_fan()] - Adding fan: heater_fan hotend_fan
2025-08-25 21:33:18,039 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > fan
2025-08-25 21:33:19,338 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: M106 S0
2025-08-25 21:33:20,510 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-25 21:33:20,543 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2025-08-25 21:33:20,585 [menu.py:arrangeMenuItems()] - X > more pins
2025-08-25 21:33:20,589 [menu.py:arrangeMenuItems()] - X > more power
2025-08-25 21:33:20,611 [menu.py:arrangeMenuItems()] - X > more spoolman
2025-08-25 21:33:20,611 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-25 21:33:20,757 [screen.py:_menu_go_back()] - #### Menu go home
2025-08-25 21:33:20,784 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 21:33:23,101 [screen.py:_load_panel()] - Loading panel: move
2025-08-25 21:33:23,196 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-08-25 21:33:24,411 [screen.py:_load_panel()] - Loading panel: menu
2025-08-25 21:33:24,536 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move > menu
2025-08-25 21:33:24,557 [menu.py:arrangeMenuItems()] - X > homing quad_gantry_level
2025-08-25 21:33:24,561 [menu.py:arrangeMenuItems()] - X > homing Z-Tilt
2025-08-25 21:33:28,430 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G28'}
2025-08-25 21:33:30,301 [screen.py:_menu_go_back()] - #### Menu go home
2025-08-25 21:33:30,328 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 21:34:19,450 [screen.py:_load_panel()] - Loading panel: shutdown
2025-08-25 21:34:19,492 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > shutdown
2025-08-25 21:34:29,851 [KlippyGtk.py:Dialog()] - Showing dialog Shutdown (width=1024, height=600)
2025-08-25 21:34:31,699 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-08-25 21:34:46,381 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-08-25 21:34:46,382 [functions.py:log_start()] - KlipperScreen Version: v0.4.6-11-g6b6f63b6
2025-08-25 21:34:46,383 [functions.py:log_start()] - Python version: 3.9
2025-08-25 21:34:46,556 [config.py:get_config_file_location()] - Passed config (-c): .
2025-08-25 21:34:46,557 [config.py:__init__()] - Config path location: /home/sonic/printer_data/config/KlipperScreen.conf
2025-08-25 21:34:46,560 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/main_menu.conf']
2025-08-25 21:34:46,573 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/splash_menu.conf']
2025-08-25 21:34:46,578 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/print_menu.conf']
2025-08-25 21:34:46,587 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/move_menu.conf']
2025-08-25 21:34:46,599 [config.py:log_config()] - ===== Config File =====

=======================
2025-08-25 21:34:46,602 [config.py:__init__()] - ====== Saved Def ======

[main]
theme = material-darker
screen_blanking = 900
screen_blanking_printing = 900
24htime = False
font_size = small
show_heater_power = True

[graph Printer]
extruder = False

=======================
2025-08-25 21:34:46,602 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_path": "",
      "moonraker_ssl": null,
      "moonraker_api_key": ""
    }
  }
]
2025-08-25 21:34:46,780 [config.py:create_translations()] - Selected lang: system_lang OS lang: en_US
2025-08-25 21:34:46,781 [config.py:install_language()] - Using lang en
2025-08-25 21:34:46,797 [screen.py:__init__()] - Display for xset: :0
2025-08-25 21:34:46,799 [screen.py:__init__()] - Screen 0: 1024x600
2025-08-25 21:34:46,799 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-08-25 21:34:46,800 [screen.py:__init__()] - Wayland: False Display name: :0
2025-08-25 21:34:46,802 [screen.py:__init__()] - Screen resolution: 1024x600
2025-08-25 21:34:47,089 [KlippyGtk.py:__init__()] - Font size: 20.2 (small)
2025-08-25 21:34:47,275 [base_panel.py:battery_percentage()] - Battery information not available.
2025-08-25 21:34:47,768 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 900
2025-08-25 21:34:47,769 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 900 DPMS:True
2025-08-25 21:34:47,770 [screen.py:initial_connection()] - Default printer: None
2025-08-25 21:34:47,844 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-08-25 21:34:47,844 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 21:34:47,903 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-08-25 21:34:47,976 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-25 21:34:48,006 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-08-25 21:34:48,007 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-08-25 21:34:52,741 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-08-25 21:34:52,741 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-08-25 21:34:52,752 [_logging.py:info()] - Websocket connected
2025-08-25 21:34:52,752 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-08-25 21:34:52,753 [screen.py:websocket_connected()] - ### websocket_connected
2025-08-25 21:34:52,833 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-08-25 21:34:52,851 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-08-25 21:34:52,865 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-25 21:34:53,043 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-25 21:34:53,043 [printer.py:log_counts()] - # Extruders: 1
2025-08-25 21:34:53,043 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-25 21:34:53,044 [printer.py:log_counts()] - # Fans: 3
2025-08-25 21:34:53,044 [printer.py:log_counts()] - # Output pins: 0
2025-08-25 21:34:53,044 [printer.py:log_counts()] - # PWM tools: 0
2025-08-25 21:34:53,044 [printer.py:log_counts()] - # Leds: 1
2025-08-25 21:34:53,298 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-25 21:34:53,299 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-25 21:34:53,300 [screen.py:init_klipper()] - Printer initialized
2025-08-25 21:34:53,300 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-25 21:34:53,301 [printer.py:change_state()] - Adding callback for state: ready
2025-08-25 21:34:53,370 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 900
2025-08-25 21:34:53,371 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 900 DPMS:True
2025-08-25 21:34:53,371 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-25 21:34:53,374 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 21:34:53,447 [screen.py:_load_panel()] - Loading panel: main_menu
2025-08-25 21:34:53,681 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-25 21:34:53,698 [main_menu.py:add_device()] - Adding device: extruder
2025-08-25 21:34:53,707 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-25 21:34:53,739 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-25 21:34:53,754 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-25 21:34:53,787 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-25 21:34:53,807 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-25 23:24:18,150 [base_panel.py:battery_percentage()] - Battery information not available.
2025-08-25 23:35:57,365 [screen.py:show_popup_message()] - error: // Unknown command:"SUDO"
2025-08-25 23:36:57,333 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-08-25 23:36:57,333 [printer.py:change_state()] - Adding callback for state: printing
2025-08-25 23:36:57,461 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 900
2025-08-25 23:36:57,461 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 900 DPMS:True
2025-08-25 23:36:57,462 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-25 23:36:57,549 [screen.py:_load_panel()] - Loading panel: job_status
2025-08-25 23:36:57,718 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-25 23:36:57,729 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-08-25 23:36:57,761 [job_status.py:update_filename()] - Updating filename to obj_2_Halloween clicker_0.2mm_PLA_Generic Klipper Printer_57m52s.gcode
2025-08-25 23:36:57,762 [job_status.py:_update_file_metadata()] - Update Metadata. File: obj_2_Halloween clicker_0.2mm_PLA_Generic Klipper Printer_57m52s.gcode Size: 5372539
2025-08-25 23:51:58,152 [screensaver.py:show()] - Showing Screensaver
2025-08-26 00:34:12,553 [printer.py:change_state()] - Changing state from 'printing' to 'disconnected'
2025-08-26 00:34:12,554 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-26 00:34:12,554 [screensaver.py:close()] - Closing Screensaver
2025-08-26 00:34:12,561 [screen.py:wake_screen()] - Screen wake up
2025-08-26 00:34:12,672 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 900
2025-08-26 00:34:12,673 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 900 DPMS:True
2025-08-26 00:34:12,673 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-26 00:34:12,674 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-26 00:34:12,735 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-26 00:34:12,760 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-26 00:34:16,692 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 4, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-26 00:34:16,935 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-26 00:34:16,936 [printer.py:log_counts()] - # Extruders: 1
2025-08-26 00:34:16,936 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-26 00:34:16,936 [printer.py:log_counts()] - # Fans: 3
2025-08-26 00:34:16,936 [printer.py:log_counts()] - # Output pins: 0
2025-08-26 00:34:16,937 [printer.py:log_counts()] - # PWM tools: 0
2025-08-26 00:34:16,937 [printer.py:log_counts()] - # Leds: 1
2025-08-26 00:34:17,178 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-26 00:34:17,179 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-26 00:34:17,179 [screen.py:init_klipper()] - Printer initialized
2025-08-26 00:34:17,180 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-26 00:34:17,180 [printer.py:change_state()] - Adding callback for state: ready
2025-08-26 00:34:17,196 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 4, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-26 00:34:17,424 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-26 00:34:17,425 [printer.py:log_counts()] - # Extruders: 1
2025-08-26 00:34:17,425 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-26 00:34:17,425 [printer.py:log_counts()] - # Fans: 3
2025-08-26 00:34:17,425 [printer.py:log_counts()] - # Output pins: 0
2025-08-26 00:34:17,425 [printer.py:log_counts()] - # PWM tools: 0
2025-08-26 00:34:17,425 [printer.py:log_counts()] - # Leds: 1
2025-08-26 00:34:17,737 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-26 00:34:17,738 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-26 00:34:17,738 [screen.py:init_klipper()] - Printer initialized
2025-08-26 00:34:17,797 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 900
2025-08-26 00:34:17,798 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 900 DPMS:True
2025-08-26 00:34:17,798 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-26 00:34:17,801 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-26 00:34:17,857 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-26 00:34:18,019 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-26 00:34:18,034 [main_menu.py:add_device()] - Adding device: extruder
2025-08-26 00:34:18,039 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-26 00:34:18,065 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-26 00:34:18,080 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-26 00:34:18,114 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-26 00:34:18,139 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-26 00:49:18,155 [screensaver.py:show()] - Showing Screensaver
2025-08-26 00:53:46,645 [screensaver.py:close()] - Closing Screensaver
2025-08-26 00:53:46,646 [screen.py:wake_screen()] - Screen wake up
2025-08-26 00:53:48,191 [main_menu.py:toggle_visibility()] - Graph show False: heater_bed
2025-08-26 00:53:49,362 [screen.py:_load_panel()] - Loading panel: move
2025-08-26 00:53:49,457 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-08-26 00:53:50,786 [screen.py:_load_panel()] - Loading panel: menu
2025-08-26 00:53:50,902 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move > menu
2025-08-26 00:53:50,924 [menu.py:arrangeMenuItems()] - X > homing quad_gantry_level
2025-08-26 00:53:50,928 [menu.py:arrangeMenuItems()] - X > homing Z-Tilt
2025-08-26 00:53:52,489 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G28 X'}
2025-08-26 00:53:57,550 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G28'}
2025-08-26 00:54:57,269 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-26 00:54:57,297 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-08-26 00:55:03,095 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 z+25 F600'}
2025-08-26 00:55:03,100 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-08-26 00:55:05,554 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 z+25 F600'}
2025-08-26 00:55:05,557 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-08-26 00:55:17,360 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 z+25 F600'}
2025-08-26 00:55:17,365 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-08-26 00:55:50,019 [screen.py:_menu_go_back()] - #### Menu go home
2025-08-26 00:55:50,045 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-26 01:00:22,803 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-26 01:00:22,804 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-26 01:00:22,865 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 900
2025-08-26 01:00:22,865 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 900 DPMS:True
2025-08-26 01:00:22,865 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-26 01:00:22,866 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-26 01:00:22,924 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-26 01:00:22,949 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-26 01:00:26,945 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-26 01:00:27,178 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-26 01:00:27,179 [printer.py:log_counts()] - # Extruders: 1
2025-08-26 01:00:27,179 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-26 01:00:27,179 [printer.py:log_counts()] - # Fans: 3
2025-08-26 01:00:27,179 [printer.py:log_counts()] - # Output pins: 0
2025-08-26 01:00:27,179 [printer.py:log_counts()] - # PWM tools: 0
2025-08-26 01:00:27,179 [printer.py:log_counts()] - # Leds: 1
2025-08-26 01:00:27,428 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-26 01:00:27,430 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-26 01:00:27,430 [screen.py:init_klipper()] - Printer initialized
2025-08-26 01:00:27,431 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-26 01:00:27,432 [printer.py:change_state()] - Adding callback for state: ready
2025-08-26 01:00:27,447 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-26 01:00:27,682 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-26 01:00:27,682 [printer.py:log_counts()] - # Extruders: 1
2025-08-26 01:00:27,682 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-26 01:00:27,682 [printer.py:log_counts()] - # Fans: 3
2025-08-26 01:00:27,682 [printer.py:log_counts()] - # Output pins: 0
2025-08-26 01:00:27,683 [printer.py:log_counts()] - # PWM tools: 0
2025-08-26 01:00:27,683 [printer.py:log_counts()] - # Leds: 1
2025-08-26 01:00:27,927 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-26 01:00:27,930 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-26 01:00:27,930 [screen.py:init_klipper()] - Printer initialized
2025-08-26 01:00:27,982 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 900
2025-08-26 01:00:27,983 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 900 DPMS:True
2025-08-26 01:00:27,983 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-26 01:00:27,986 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-26 01:00:28,046 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-26 01:00:28,148 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-26 01:00:28,166 [main_menu.py:add_device()] - Adding device: extruder
2025-08-26 01:00:28,171 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-26 01:00:28,200 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-26 01:00:28,216 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-26 01:00:28,248 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-26 01:00:28,265 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-26 01:01:29,103 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-26 01:01:29,103 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-26 01:01:29,167 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 900
2025-08-26 01:01:29,167 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 900 DPMS:True
2025-08-26 01:01:29,168 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-26 01:01:29,169 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-26 01:01:29,228 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-26 01:01:29,255 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-26 01:01:33,164 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-26 01:01:33,227 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-26 01:01:33,227 [printer.py:log_counts()] - # Extruders: 1
2025-08-26 01:01:33,227 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-26 01:01:33,227 [printer.py:log_counts()] - # Fans: 3
2025-08-26 01:01:33,227 [printer.py:log_counts()] - # Output pins: 0
2025-08-26 01:01:33,227 [printer.py:log_counts()] - # PWM tools: 0
2025-08-26 01:01:33,228 [printer.py:log_counts()] - # Leds: 1
2025-08-26 01:01:33,480 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-26 01:01:33,481 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-26 01:01:33,482 [screen.py:init_klipper()] - Printer initialized
2025-08-26 01:01:33,483 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-26 01:01:33,483 [printer.py:change_state()] - Adding callback for state: ready
2025-08-26 01:01:33,534 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 900
2025-08-26 01:01:33,534 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 900 DPMS:True
2025-08-26 01:01:33,535 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-26 01:01:33,538 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-26 01:01:33,594 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-26 01:01:33,688 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-26 01:01:33,703 [main_menu.py:add_device()] - Adding device: extruder
2025-08-26 01:01:33,708 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-26 01:01:33,737 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-26 01:01:33,752 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-26 01:01:33,788 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-26 01:01:33,810 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-26 01:02:54,760 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-08-26 01:02:54,761 [printer.py:change_state()] - Adding callback for state: printing
2025-08-26 01:02:54,884 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 900
2025-08-26 01:02:54,884 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 900 DPMS:True
2025-08-26 01:02:54,885 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-26 01:02:54,969 [screen.py:show_panel()] - Reinitializing panel job_status
2025-08-26 01:02:55,070 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-26 01:02:55,082 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-08-26 01:02:55,095 [job_status.py:update_filename()] - Updating filename to Snap on Can Caps - Blank_0.2mm_PLA_Generic Klipper Printer_1h30m.gcode
2025-08-26 01:02:55,096 [job_status.py:_update_file_metadata()] - Update Metadata. File: Snap on Can Caps - Blank_0.2mm_PLA_Generic Klipper Printer_1h30m.gcode Size: 9729008
2025-08-26 01:13:11,326 [screen.py:_load_panel()] - Loading panel: fine_tune
2025-08-26 01:13:11,385 [screen.py:attach_panel()] - Current panel hierarchy: job_status > fine_tune
2025-08-26 01:13:15,683 [fine_tune.py:change_percent_delta()] - ### Delta 0.01
2025-08-26 01:13:25,448 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-26 01:13:25,477 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-26 01:13:33,330 [screen.py:_go_to_submenu()] - #### Go to submenu 
2025-08-26 01:13:33,330 [screen.py:_go_to_submenu()] - #### Menu __print
2025-08-26 01:13:33,337 [screen.py:_load_panel()] - Loading panel: menu
2025-08-26 01:13:33,394 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-26 01:13:33,583 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2025-08-26 01:13:33,610 [menu.py:arrangeMenuItems()] - X > move
2025-08-26 01:13:33,623 [menu.py:arrangeMenuItems()] - X > power
2025-08-26 01:13:33,648 [menu.py:arrangeMenuItems()] - X > spoolman
2025-08-26 01:13:33,649 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-26 01:13:33,656 [menu.py:arrangeMenuItems()] - X > pins
2025-08-26 01:13:33,675 [screen.py:_go_to_submenu()] - menu, {{ gettext('Print Control') }}, panel_name=, items=[{'notifications': {'name': "{{ gettext('Notifications') }}", 'icon': 'notifications', 'panel': 'notifications', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'temperature': {'name': "{{ gettext('Temperature') }}", 'icon': 'heat-up', 'panel': 'temperature', 'method': None, 'confirm': None, 'enable': '{{ (printer.temperature_devices.count > 0) or (printer.extruders.count > 0)}}', 'params': '{}', 'style': None}}, {'fan': {'name': "{{ gettext('Fan') }}", 'icon': 'fan', 'panel': 'fan', 'method': None, 'confirm': None, 'enable': '{{ printer.fans.count > 0 }}', 'params': '{}', 'style': None}}, {'move': {'name': "{{ gettext('Move') }}", 'icon': 'move', 'panel': 'move', 'method': None, 'confirm': None, 'enable': '{{ printer.pause_resume.is_paused }}', 'params': '{}', 'style': None}}, {'extrude': {'name': "{{ gettext('Extrude') }}", 'icon': 'extrude', 'panel': 'extrude', 'method': None, 'confirm': None, 'enable': '{{ printer.extruders.count > 0 }}', 'params': '{}', 'style': None}}, {'power': {'name': "{{ gettext('Power') }}", 'icon': 'shutdown', 'panel': 'power', 'method': None, 'confirm': None, 'enable': '{{ moonraker.power_devices.count > 0 }}', 'params': '{}', 'style': None}}, {'led': {'name': "{{ gettext('Leds') }}", 'icon': 'light', 'panel': 'led', 'method': None, 'confirm': None, 'enable': '{{ printer.leds.count > 0 }}', 'params': '{}', 'style': None}}, {'macros': {'name': "{{ gettext('Macros') }}", 'icon': 'custom-script', 'panel': 'gcode_macros', 'method': None, 'confirm': None, 'enable': '{{ printer.gcode_macros.count > 0 }}', 'params': '{}', 'style': None}}, {'camera': {'name': "{{ gettext('Camera') }}", 'icon': 'camera', 'panel': 'camera', 'method': None, 'confirm': None, 'enable': '{{ moonraker.cameras.count > 0 }}', 'params': '{}', 'style': None}}, {'console': {'name': "{{ gettext('Console') }}", 'icon': 'console', 'panel': 'console', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'limits': {'name': "{{ gettext('Limits') }}", 'icon': 'fine-tune', 'panel': 'limits', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'network': {'name': "{{ gettext('Network') }}", 'icon': 'network', 'panel': 'network', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'settings': {'name': 'KlipperScreen', 'icon': 'settings', 'panel': 'settings', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'spoolman': {'name': 'Spoolman', 'icon': 'spoolman', 'panel': 'spoolman', 'method': None, 'confirm': None, 'enable': '{{ moonraker.spoolman }}', 'params': '{}', 'style': None}}, {'system': {'name': "{{ gettext('System') }}", 'icon': 'info', 'panel': 'system', 'method': None, 'confirm': None, 'enable': '{{ moonraker_connected }}', 'params': '{}', 'style': None}}, {'pins': {'name': "{{ gettext('Pins') }}", 'icon': 'hashtag', 'panel': 'pins', 'method': None, 'confirm': None, 'enable': '{{ printer.output_pins.count > 0 or printer.pwm_tools.count > 0 }}', 'params': '{}', 'style': None}}]
2025-08-26 01:13:35,138 [screen.py:_load_panel()] - Loading panel: settings
2025-08-26 01:13:35,323 [screen.py:attach_panel()] - Current panel hierarchy: job_status >  > settings
2025-08-26 01:13:43,548 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-26 01:13:43,588 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2025-08-26 01:13:43,617 [menu.py:arrangeMenuItems()] - X > move
2025-08-26 01:13:43,626 [menu.py:arrangeMenuItems()] - X > power
2025-08-26 01:13:43,656 [menu.py:arrangeMenuItems()] - X > spoolman
2025-08-26 01:13:43,656 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-26 01:13:43,663 [menu.py:arrangeMenuItems()] - X > pins
2025-08-26 01:13:46,130 [screen.py:_load_panel()] - Loading panel: system
2025-08-26 01:13:46,135 [system.py:__init__()] - {'python': {'version': [3, 9, 2, 'final', 0], 'version_string': '3.9.2 (default, Feb 28 2021, 17:03:44)  [GCC 10.2.1 20210110]'}, 'cpu_info': {'cpu_count': 4, 'bits': '32bit', 'processor': 'aarch64', 'cpu_desc': 'ARMv8 Processor rev 4 (v8l)', 'serial_number': '', 'hardware_desc': 'T800', 'model': 'sonic_lcd', 'total_memory': 2030728, 'memory_units': 'kB'}, 'sd_info': {'manufacturer_id': '45', 'manufacturer': 'Unknown', 'oem_id': '0100', 'product_name': 'DG400', 'product_revision': '3.8', 'serial_number': '0127ea95', 'manufacturer_date': '9/2123', 'capacity': 'Unknown', 'total_bytes': 0}, 'distribution': {'name': 'Debian GNU/Linux 11 (bullseye)', 'id': 'debian', 'version': '11', 'version_parts': {'major': '11', 'minor': '', 'build_number': ''}, 'like': '', 'codename': 'bullseye', 'release_info': {}, 'kernel_version': '4.9.191'}, 'virtualization': {'virt_type': 'none', 'virt_identifier': 'none'}, 'network': {'wlan0': {'mac_address': 'fc:ee:92:11:14:05', 'ip_addresses': [{'family': 'ipv4', 'address': '192.168.1.14', 'is_link_local': False}, {'family': 'ipv6', 'address': 'fe80::767d:9ad7:3997:ec47', 'is_link_local': True}]}}, 'canbus': {}, 'provider': 'systemd_dbus', 'available_services': ['octoapp', 'klipper', 'moonraker', 'octoeverywhere', 'KlipperScreen', 'moonraker-obico'], 'service_state': {'octoapp': {'active_state': 'active', 'sub_state': 'running'}, 'klipper': {'active_state': 'active', 'sub_state': 'running'}, 'moonraker': {'active_state': 'active', 'sub_state': 'running'}, 'octoeverywhere': {'active_state': 'active', 'sub_state': 'running'}, 'KlipperScreen': {'active_state': 'active', 'sub_state': 'running'}, 'moonraker-obico': {'active_state': 'active', 'sub_state': 'running'}}, 'instance_ids': {'moonraker': 'moonraker', 'klipper': 'klipper'}}
2025-08-26 01:13:46,177 [screen.py:attach_panel()] - Current panel hierarchy: job_status >  > system
2025-08-26 01:13:53,222 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-26 01:13:53,255 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2025-08-26 01:13:53,285 [menu.py:arrangeMenuItems()] - X > move
2025-08-26 01:13:53,294 [menu.py:arrangeMenuItems()] - X > power
2025-08-26 01:13:53,319 [menu.py:arrangeMenuItems()] - X > spoolman
2025-08-26 01:13:53,320 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-26 01:13:53,329 [menu.py:arrangeMenuItems()] - X > pins
2025-08-26 01:14:00,111 [screen.py:attach_panel()] - Current panel hierarchy: job_status >  > settings
2025-08-26 01:14:18,014 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-26 01:14:18,045 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2025-08-26 01:14:18,072 [menu.py:arrangeMenuItems()] - X > move
2025-08-26 01:14:18,081 [menu.py:arrangeMenuItems()] - X > power
2025-08-26 01:14:18,106 [menu.py:arrangeMenuItems()] - X > spoolman
2025-08-26 01:14:18,106 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-26 01:14:18,113 [menu.py:arrangeMenuItems()] - X > pins
2025-08-26 01:14:20,535 [screen.py:_load_panel()] - Loading panel: camera
2025-08-26 01:14:22,438 [camera.py:__init__()] - {'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}
2025-08-26 01:14:22,491 [screen.py:attach_panel()] - Current panel hierarchy: job_status >  > camera
2025-08-26 01:14:22,491 [camera.py:play()] - camera URL is relative
2025-08-26 01:14:22,491 [camera.py:play()] - video filters: []
2025-08-26 01:14:22,532 [camera.py:play()] - Camera URL: http://127.0.0.1/webcam/?action=stream
2025-08-26 01:14:22,611 [camera.py:log()] - [warn] lavf: This format is marked by FFmpeg as having no timestamps!
2025-08-26 01:14:22,612 [camera.py:log()] - [warn] lavf: FFmpeg will likely make up its own broken timestamps. For
2025-08-26 01:14:22,614 [camera.py:log()] - [warn] lavf: video streams you can correct this with:
2025-08-26 01:14:22,615 [camera.py:log()] - [warn] lavf:     --no-correct-pts --fps=VALUE
2025-08-26 01:14:22,616 [camera.py:log()] - [warn] lavf: with VALUE being the real framerate of the stream. You can
2025-08-26 01:14:22,616 [camera.py:log()] - [warn] lavf: expect seeking and buffering estimation to be generally
2025-08-26 01:14:22,617 [camera.py:log()] - [warn] lavf: broken as well.
2025-08-26 01:14:22,617 [camera.py:log()] - [info] cplayer:  (+) Video --vid=1 (mjpeg)
2025-08-26 01:14:22,799 [camera.py:log()] - [warn] vo/gpu/opengl: Suspected software renderer or indirect context.
2025-08-26 01:14:23,048 [camera.py:log()] - [warn] vo/gpu/opengl: Suspected software renderer or indirect context.
2025-08-26 01:14:23,242 [camera.py:log()] - [warn] vo/x11: Warning: this legacy VO has bad performance. Consider fixing your graphics drivers, or not forcing the x11 VO.
2025-08-26 01:14:23,257 [camera.py:log()] - [info] cplayer: VO: [x11] 640x480 yuvj422p
2025-08-26 01:14:23,260 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly
2025-08-26 01:14:25,513 [camera.py:log()] - [info] cplayer: 
2025-08-26 01:14:25,532 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-26 01:14:25,564 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2025-08-26 01:14:25,597 [menu.py:arrangeMenuItems()] - X > move
2025-08-26 01:14:25,606 [menu.py:arrangeMenuItems()] - X > power
2025-08-26 01:14:25,632 [menu.py:arrangeMenuItems()] - X > spoolman
2025-08-26 01:14:25,632 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-26 01:14:25,640 [menu.py:arrangeMenuItems()] - X > pins
2025-08-26 01:14:28,788 [screen.py:attach_panel()] - Current panel hierarchy: job_status >  > camera
2025-08-26 01:14:28,789 [camera.py:play()] - camera URL is relative
2025-08-26 01:14:28,789 [camera.py:play()] - video filters: []
2025-08-26 01:14:28,819 [camera.py:play()] - Camera URL: http://127.0.0.1/webcam/?action=stream
2025-08-26 01:14:28,915 [camera.py:log()] - [warn] lavf: This format is marked by FFmpeg as having no timestamps!
2025-08-26 01:14:28,916 [camera.py:log()] - [warn] lavf: FFmpeg will likely make up its own broken timestamps. For
2025-08-26 01:14:28,916 [camera.py:log()] - [warn] lavf: video streams you can correct this with:
2025-08-26 01:14:28,917 [camera.py:log()] - [warn] lavf:     --no-correct-pts --fps=VALUE
2025-08-26 01:14:28,918 [camera.py:log()] - [warn] lavf: with VALUE being the real framerate of the stream. You can
2025-08-26 01:14:28,919 [camera.py:log()] - [warn] lavf: expect seeking and buffering estimation to be generally
2025-08-26 01:14:28,920 [camera.py:log()] - [warn] lavf: broken as well.
2025-08-26 01:14:28,920 [camera.py:log()] - [info] cplayer:  (+) Video --vid=1 (mjpeg)
2025-08-26 01:14:29,045 [camera.py:log()] - [warn] vo/gpu/opengl: Suspected software renderer or indirect context.
2025-08-26 01:14:29,260 [camera.py:log()] - [warn] vo/gpu/opengl: Suspected software renderer or indirect context.
2025-08-26 01:14:29,463 [camera.py:log()] - [warn] vo/x11: Warning: this legacy VO has bad performance. Consider fixing your graphics drivers, or not forcing the x11 VO.
2025-08-26 01:14:29,475 [camera.py:log()] - [info] cplayer: VO: [x11] 640x480 yuvj422p
2025-08-26 01:14:29,479 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly
2025-08-26 01:15:06,832 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-26 01:15:06,861 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2025-08-26 01:15:06,889 [menu.py:arrangeMenuItems()] - X > move
2025-08-26 01:15:06,899 [menu.py:arrangeMenuItems()] - X > power
2025-08-26 01:15:06,929 [menu.py:arrangeMenuItems()] - X > spoolman
2025-08-26 01:15:06,929 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-26 01:15:06,938 [menu.py:arrangeMenuItems()] - X > pins
2025-08-26 01:15:08,091 [screen.py:_load_panel()] - Loading panel: led
2025-08-26 01:15:08,098 [led.py:color_selector()] - neopixel my_neopixel
2025-08-26 01:15:08,102 [led.py:set_color()] - color: [1, 0, 0, 0]
2025-08-26 01:15:08,105 [led.py:set_color()] - color: [0, 1, 0, 0]
2025-08-26 01:15:08,109 [led.py:set_color()] - color: [0, 0, 1, 0]
2025-08-26 01:15:08,129 [KlippyRest.py:_do_request()] - 404 Client Error>>Key miscellaneous in namespace mainsail not found for url>>http://127.0.0.1:7125/server/database/item?namespace=mainsail&key=miscellaneous.entries
2025-08-26 01:15:08,130 [led.py:color_selector()] - Adding preset: off
2025-08-26 01:15:08,131 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-26 01:15:08,133 [led.py:color_selector()] - Adding preset: on
2025-08-26 01:15:08,134 [led.py:set_color()] - color: [1, 1, 1, 0]
2025-08-26 01:15:08,165 [screen.py:attach_panel()] - Current panel hierarchy: job_status >  > led
2025-08-26 01:15:08,168 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-08-26 01:15:08,219 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-08-26 01:15:08,467 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-08-26 01:15:08,718 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-08-26 01:15:08,972 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-08-26 01:15:09,220 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-08-26 01:15:09,472 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-08-26 01:15:09,683 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-08-26 01:15:09,684 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=1.0 GREEN=1.0 BLUE=1.0 WHITE=0.0 SYNC=0 TRANSMIT=1'}
2025-08-26 01:15:09,724 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-08-26 01:15:09,975 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-08-26 01:15:10,222 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-08-26 01:15:10,485 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-08-26 01:15:10,728 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-08-26 01:15:10,826 [led.py:set_color()] - color: [1.0, 0.0, 1.0, 0.0]
2025-08-26 01:15:10,827 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=1.0 GREEN=0.0 BLUE=1.0 WHITE=0.0 SYNC=0 TRANSMIT=1'}
2025-08-26 01:15:10,978 [led.py:set_color()] - color: [1.0, 0.0, 1.0, 0.0]
2025-08-26 01:15:11,227 [led.py:set_color()] - color: [1.0, 0.0, 1.0, 0.0]
2025-08-26 01:15:11,479 [led.py:set_color()] - color: [1.0, 0.0, 1.0, 0.0]
2025-08-26 01:15:11,730 [led.py:set_color()] - color: [1.0, 0.0, 1.0, 0.0]
2025-08-26 01:15:11,980 [led.py:set_color()] - color: [1.0, 0.0, 1.0, 0.0]
2025-08-26 01:15:12,230 [led.py:set_color()] - color: [1.0, 0.0, 1.0, 0.0]
2025-08-26 01:15:12,480 [led.py:set_color()] - color: [1.0, 0.0, 1.0, 0.0]
2025-08-26 01:15:12,731 [led.py:set_color()] - color: [1.0, 0.0, 1.0, 0.0]
2025-08-26 01:15:12,983 [led.py:set_color()] - color: [1.0, 0.0, 1.0, 0.0]
2025-08-26 01:15:13,140 [led.py:set_color()] - color: [1.0, 0.0, 0.0, 0.0]
2025-08-26 01:15:13,141 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=1.0 GREEN=0.0 BLUE=0.0 WHITE=0.0 SYNC=0 TRANSMIT=1'}
2025-08-26 01:15:13,235 [led.py:set_color()] - color: [1.0, 0.0, 0.0, 0.0]
2025-08-26 01:15:13,482 [led.py:set_color()] - color: [1.0, 0.0, 0.0, 0.0]
2025-08-26 01:15:13,732 [led.py:set_color()] - color: [1.0, 0.0, 0.0, 0.0]
2025-08-26 01:15:13,988 [led.py:set_color()] - color: [1.0, 0.0, 0.0, 0.0]
2025-08-26 01:15:14,235 [led.py:set_color()] - color: [1.0, 0.0, 0.0, 0.0]
2025-08-26 01:15:14,488 [led.py:set_color()] - color: [1.0, 0.0, 0.0, 0.0]
2025-08-26 01:15:14,736 [led.py:set_color()] - color: [1.0, 0.0, 0.0, 0.0]
2025-08-26 01:15:14,991 [led.py:set_color()] - color: [1.0, 0.0, 0.0, 0.0]
2025-08-26 01:15:15,236 [led.py:set_color()] - color: [1.0, 0.0, 0.0, 0.0]
2025-08-26 01:15:15,490 [led.py:set_color()] - color: [1.0, 0.0, 0.0, 0.0]
2025-08-26 01:15:15,742 [led.py:set_color()] - color: [1.0, 0.0, 0.0, 0.0]
2025-08-26 01:15:15,993 [led.py:set_color()] - color: [1.0, 0.0, 0.0, 0.0]
2025-08-26 01:15:16,113 [led.py:set_color()] - color: [1.0, 1.0, 0.0, 0.0]
2025-08-26 01:15:16,113 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=1.0 GREEN=1.0 BLUE=0.0 WHITE=0.0 SYNC=0 TRANSMIT=1'}
2025-08-26 01:15:16,246 [led.py:set_color()] - color: [1.0, 1.0, 0.0, 0.0]
2025-08-26 01:15:16,492 [led.py:set_color()] - color: [1.0, 1.0, 0.0, 0.0]
2025-08-26 01:15:16,742 [led.py:set_color()] - color: [1.0, 1.0, 0.0, 0.0]
2025-08-26 01:15:17,015 [led.py:set_color()] - color: [1.0, 1.0, 0.0, 0.0]
2025-08-26 01:15:17,168 [led.py:set_color()] - color: [0.0, 1.0, 0.0, 0.0]
2025-08-26 01:15:17,169 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=0.0 GREEN=1.0 BLUE=0.0 WHITE=0.0 SYNC=0 TRANSMIT=1'}
2025-08-26 01:15:17,247 [led.py:set_color()] - color: [0.0, 1.0, 0.0, 0.0]
2025-08-26 01:15:17,495 [led.py:set_color()] - color: [0.0, 1.0, 0.0, 0.0]
2025-08-26 01:15:17,742 [led.py:set_color()] - color: [0.0, 1.0, 0.0, 0.0]
2025-08-26 01:15:17,996 [led.py:set_color()] - color: [0.0, 1.0, 0.0, 0.0]
2025-08-26 01:15:18,265 [led.py:set_color()] - color: [0.0, 1.0, 0.0, 0.0]
2025-08-26 01:15:18,300 [led.py:set_color()] - color: [0.0, 1.0, 1.0, 0.0]
2025-08-26 01:15:18,301 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=0.0 GREEN=1.0 BLUE=1.0 WHITE=0.0 SYNC=0 TRANSMIT=1'}
2025-08-26 01:15:18,502 [led.py:set_color()] - color: [0.0, 1.0, 1.0, 0.0]
2025-08-26 01:15:18,748 [led.py:set_color()] - color: [0.0, 1.0, 1.0, 0.0]
2025-08-26 01:15:19,002 [led.py:set_color()] - color: [0.0, 1.0, 1.0, 0.0]
2025-08-26 01:15:19,257 [led.py:set_color()] - color: [0.0, 1.0, 1.0, 0.0]
2025-08-26 01:15:19,506 [led.py:set_color()] - color: [0.0, 1.0, 1.0, 0.0]
2025-08-26 01:15:19,762 [led.py:set_color()] - color: [0.0, 1.0, 1.0, 0.0]
2025-08-26 01:15:20,011 [led.py:set_color()] - color: [0.0, 1.0, 1.0, 0.0]
2025-08-26 01:15:20,260 [led.py:set_color()] - color: [0.0, 1.0, 1.0, 0.0]
2025-08-26 01:15:20,522 [led.py:set_color()] - color: [0.0, 1.0, 1.0, 0.0]
2025-08-26 01:15:20,772 [led.py:set_color()] - color: [0.0, 1.0, 1.0, 0.0]
2025-08-26 01:15:21,025 [led.py:set_color()] - color: [0.0, 1.0, 1.0, 0.0]
2025-08-26 01:15:21,049 [led.py:set_color()] - color: [0.0, 0.0, 1.0, 0.0]
2025-08-26 01:15:21,051 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=0.0 GREEN=0.0 BLUE=1.0 WHITE=0.0 SYNC=0 TRANSMIT=1'}
2025-08-26 01:15:21,271 [led.py:set_color()] - color: [0.0, 0.0, 1.0, 0.0]
2025-08-26 01:15:21,536 [led.py:set_color()] - color: [0.0, 0.0, 1.0, 0.0]
2025-08-26 01:15:21,682 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-26 01:15:21,683 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=0.0 GREEN=0.0 BLUE=0.0 WHITE=0.0 SYNC=0 TRANSMIT=1'}
2025-08-26 01:15:21,778 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-26 01:15:22,026 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-26 01:15:22,280 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-26 01:15:22,527 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-26 01:15:22,778 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-26 01:15:22,867 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-26 01:15:22,869 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=0.0 GREEN=0.0 BLUE=0.0 WHITE=0.0 SYNC=0 TRANSMIT=1'}
2025-08-26 01:15:23,035 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-26 01:15:23,280 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-26 01:15:23,537 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-26 01:15:23,632 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0]
2025-08-26 01:15:23,633 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=1.0 GREEN=1.0 BLUE=1.0 WHITE=0 SYNC=0 TRANSMIT=1'}
2025-08-26 01:15:23,777 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0]
2025-08-26 01:15:24,031 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-08-26 01:15:24,281 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-08-26 01:15:24,537 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-08-26 01:15:24,782 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-08-26 01:15:25,031 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-08-26 01:15:25,284 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-08-26 01:15:25,306 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-26 01:15:25,306 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=0.0 GREEN=0.0 BLUE=0.0 WHITE=0.0 SYNC=0 TRANSMIT=1'}
2025-08-26 01:15:25,533 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-26 01:15:25,786 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-26 01:15:26,037 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-26 01:15:26,286 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-26 01:15:26,538 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-26 01:15:26,789 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-26 01:15:27,037 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-26 01:15:27,290 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-26 01:15:27,538 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-08-26 01:15:27,790 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-26 01:15:27,819 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2025-08-26 01:15:27,847 [menu.py:arrangeMenuItems()] - X > move
2025-08-26 01:15:27,860 [menu.py:arrangeMenuItems()] - X > power
2025-08-26 01:15:27,888 [menu.py:arrangeMenuItems()] - X > spoolman
2025-08-26 01:15:27,888 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-26 01:15:27,896 [menu.py:arrangeMenuItems()] - X > pins
2025-08-26 01:15:32,222 [screen.py:attach_panel()] - Current panel hierarchy: job_status >  > settings
2025-08-26 01:15:39,191 [screen_panel.py:on_dropdown_change()] - [main] theme changed to material-light
2025-08-26 01:15:39,280 [base_panel.py:battery_percentage()] - Battery information not available.
2025-08-26 01:15:43,121 [screen_panel.py:on_dropdown_change()] - [main] theme changed to z-bolt
2025-08-26 01:15:43,227 [base_panel.py:battery_percentage()] - Battery information not available.
2025-08-26 01:15:47,085 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-26 01:15:47,088 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-26 01:15:47,150 [screen.py:show_panel()] - Reinitializing panel job_status
2025-08-26 01:15:47,334 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-26 01:15:47,344 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-08-26 01:15:47,369 [job_status.py:update_filename()] - Updating filename to Snap on Can Caps - Blank_0.2mm_PLA_Generic Klipper Printer_1h30m.gcode
2025-08-26 01:15:47,370 [job_status.py:_update_file_metadata()] - Update Metadata. File: Snap on Can Caps - Blank_0.2mm_PLA_Generic Klipper Printer_1h30m.gcode Size: 9729008
2025-08-26 01:15:51,291 [screen.py:_go_to_submenu()] - #### Go to submenu 
2025-08-26 01:15:51,291 [screen.py:_go_to_submenu()] - #### Menu __print
2025-08-26 01:15:51,298 [screen.py:show_panel()] - Reinitializing panel menu
2025-08-26 01:15:51,365 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-26 01:15:51,593 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2025-08-26 01:15:51,628 [menu.py:arrangeMenuItems()] - X > move
2025-08-26 01:15:51,638 [menu.py:arrangeMenuItems()] - X > power
2025-08-26 01:15:51,662 [menu.py:arrangeMenuItems()] - X > spoolman
2025-08-26 01:15:51,662 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-26 01:15:51,669 [menu.py:arrangeMenuItems()] - X > pins
2025-08-26 01:15:51,691 [screen.py:_go_to_submenu()] - menu, {{ gettext('Print Control') }}, panel_name=, items=[{'notifications': {'name': "{{ gettext('Notifications') }}", 'icon': 'notifications', 'panel': 'notifications', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'temperature': {'name': "{{ gettext('Temperature') }}", 'icon': 'heat-up', 'panel': 'temperature', 'method': None, 'confirm': None, 'enable': '{{ (printer.temperature_devices.count > 0) or (printer.extruders.count > 0)}}', 'params': '{}', 'style': None}}, {'fan': {'name': "{{ gettext('Fan') }}", 'icon': 'fan', 'panel': 'fan', 'method': None, 'confirm': None, 'enable': '{{ printer.fans.count > 0 }}', 'params': '{}', 'style': None}}, {'move': {'name': "{{ gettext('Move') }}", 'icon': 'move', 'panel': 'move', 'method': None, 'confirm': None, 'enable': '{{ printer.pause_resume.is_paused }}', 'params': '{}', 'style': None}}, {'extrude': {'name': "{{ gettext('Extrude') }}", 'icon': 'extrude', 'panel': 'extrude', 'method': None, 'confirm': None, 'enable': '{{ printer.extruders.count > 0 }}', 'params': '{}', 'style': None}}, {'power': {'name': "{{ gettext('Power') }}", 'icon': 'shutdown', 'panel': 'power', 'method': None, 'confirm': None, 'enable': '{{ moonraker.power_devices.count > 0 }}', 'params': '{}', 'style': None}}, {'led': {'name': "{{ gettext('Leds') }}", 'icon': 'light', 'panel': 'led', 'method': None, 'confirm': None, 'enable': '{{ printer.leds.count > 0 }}', 'params': '{}', 'style': None}}, {'macros': {'name': "{{ gettext('Macros') }}", 'icon': 'custom-script', 'panel': 'gcode_macros', 'method': None, 'confirm': None, 'enable': '{{ printer.gcode_macros.count > 0 }}', 'params': '{}', 'style': None}}, {'camera': {'name': "{{ gettext('Camera') }}", 'icon': 'camera', 'panel': 'camera', 'method': None, 'confirm': None, 'enable': '{{ moonraker.cameras.count > 0 }}', 'params': '{}', 'style': None}}, {'console': {'name': "{{ gettext('Console') }}", 'icon': 'console', 'panel': 'console', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'limits': {'name': "{{ gettext('Limits') }}", 'icon': 'fine-tune', 'panel': 'limits', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'network': {'name': "{{ gettext('Network') }}", 'icon': 'network', 'panel': 'network', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'settings': {'name': 'KlipperScreen', 'icon': 'settings', 'panel': 'settings', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'spoolman': {'name': 'Spoolman', 'icon': 'spoolman', 'panel': 'spoolman', 'method': None, 'confirm': None, 'enable': '{{ moonraker.spoolman }}', 'params': '{}', 'style': None}}, {'system': {'name': "{{ gettext('System') }}", 'icon': 'info', 'panel': 'system', 'method': None, 'confirm': None, 'enable': '{{ moonraker_connected }}', 'params': '{}', 'style': None}}, {'pins': {'name': "{{ gettext('Pins') }}", 'icon': 'hashtag', 'panel': 'pins', 'method': None, 'confirm': None, 'enable': '{{ printer.output_pins.count > 0 or printer.pwm_tools.count > 0 }}', 'params': '{}', 'style': None}}]
2025-08-26 01:15:57,300 [screen.py:_load_panel()] - Loading panel: notifications
2025-08-26 01:15:57,340 [screen.py:attach_panel()] - Current panel hierarchy: job_status >  > notifications
2025-08-26 01:16:00,713 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-26 01:16:00,741 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2025-08-26 01:16:00,768 [menu.py:arrangeMenuItems()] - X > move
2025-08-26 01:16:00,777 [menu.py:arrangeMenuItems()] - X > power
2025-08-26 01:16:00,801 [menu.py:arrangeMenuItems()] - X > spoolman
2025-08-26 01:16:00,801 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-26 01:16:00,808 [menu.py:arrangeMenuItems()] - X > pins
2025-08-26 01:16:01,626 [screen.py:attach_panel()] - Current panel hierarchy: job_status >  > notifications
2025-08-26 01:16:03,234 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-26 01:16:03,264 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2025-08-26 01:16:03,293 [menu.py:arrangeMenuItems()] - X > move
2025-08-26 01:16:03,304 [menu.py:arrangeMenuItems()] - X > power
2025-08-26 01:16:03,331 [menu.py:arrangeMenuItems()] - X > spoolman
2025-08-26 01:16:03,332 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-26 01:16:03,340 [menu.py:arrangeMenuItems()] - X > pins
2025-08-26 01:16:04,191 [screen.py:_load_panel()] - Loading panel: temperature
2025-08-26 01:16:04,232 [temperature.py:add_device()] - Adding device: extruder
2025-08-26 01:16:04,239 [temperature.py:add_device()] - Adding device: heater_bed
2025-08-26 01:16:04,287 [screen.py:attach_panel()] - Current panel hierarchy: job_status >  > temperature
2025-08-26 01:16:04,289 [temperature.py:select_heater()] - Selecting extruder
2025-08-26 01:16:07,285 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-26 01:16:07,318 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2025-08-26 01:16:07,348 [menu.py:arrangeMenuItems()] - X > move
2025-08-26 01:16:07,359 [menu.py:arrangeMenuItems()] - X > power
2025-08-26 01:16:07,385 [menu.py:arrangeMenuItems()] - X > spoolman
2025-08-26 01:16:07,385 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-26 01:16:07,392 [menu.py:arrangeMenuItems()] - X > pins
2025-08-26 01:16:08,268 [screen.py:_load_panel()] - Loading panel: fan
2025-08-26 01:16:08,274 [fan.py:add_fan()] - Adding fan: fan
2025-08-26 01:16:08,294 [fan.py:add_fan()] - Adding fan: controller_fan stepper_fan
2025-08-26 01:16:08,300 [fan.py:add_fan()] - Adding fan: heater_fan hotend_fan
2025-08-26 01:16:08,326 [screen.py:attach_panel()] - Current panel hierarchy: job_status >  > fan
2025-08-26 01:16:15,805 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-26 01:16:15,836 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2025-08-26 01:16:15,866 [menu.py:arrangeMenuItems()] - X > move
2025-08-26 01:16:15,876 [menu.py:arrangeMenuItems()] - X > power
2025-08-26 01:16:15,901 [menu.py:arrangeMenuItems()] - X > spoolman
2025-08-26 01:16:15,901 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-26 01:16:15,910 [menu.py:arrangeMenuItems()] - X > pins
2025-08-26 01:16:20,812 [screen.py:show_panel()] - Reinitializing panel settings
2025-08-26 01:16:21,037 [screen.py:attach_panel()] - Current panel hierarchy: job_status >  > settings
2025-08-26 01:16:40,222 [screen_panel.py:load_menu()] - loading menu printers
2025-08-26 01:16:40,227 [screen_panel.py:load_menu()] - self.menu: ['settings_menu', 'printers_menu']
2025-08-26 01:16:41,638 [screen_panel.py:unload_menu()] - self.menu: ['settings_menu']
2025-08-26 01:16:52,970 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-26 01:16:53,001 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2025-08-26 01:16:53,028 [menu.py:arrangeMenuItems()] - X > move
2025-08-26 01:16:53,037 [menu.py:arrangeMenuItems()] - X > power
2025-08-26 01:16:53,061 [menu.py:arrangeMenuItems()] - X > spoolman
2025-08-26 01:16:53,061 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-26 01:16:53,068 [menu.py:arrangeMenuItems()] - X > pins
2025-08-26 01:16:59,299 [screen.py:_load_panel()] - Loading panel: network
2025-08-26 01:16:59,996 [network.py:__init__()] - Network interfaces: ['lo', 'eth0', 'p2p0', 'wlan0', 'p2p-dev-wlan0']
2025-08-26 01:17:00,013 [network.py:__init__()] - Wireless interfaces: ['p2p0', 'wlan0']
2025-08-26 01:17:00,018 [network.py:__init__()] - Primary interface: wlan0
2025-08-26 01:17:00,059 [screen.py:attach_panel()] - Current panel hierarchy: job_status >  > network
2025-08-26 01:17:00,065 [screen.py:show_popup_message()] - error: Unexpected error: Scanning not allowed while unavailable
2025-08-26 01:17:01,155 [sdbus_nm.py:monitor_connection_status()] - State changed: 10 (10, 0)
2025-08-26 01:17:01,155 [sdbus_nm.py:monitor_connection_status()] - Starting to monitor state
2025-08-26 01:17:06,742 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-26 01:17:06,777 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2025-08-26 01:17:06,805 [menu.py:arrangeMenuItems()] - X > move
2025-08-26 01:17:06,815 [menu.py:arrangeMenuItems()] - X > power
2025-08-26 01:17:06,844 [menu.py:arrangeMenuItems()] - X > spoolman
2025-08-26 01:17:06,844 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-26 01:17:06,851 [menu.py:arrangeMenuItems()] - X > pins
2025-08-26 01:17:07,855 [screen.py:_load_panel()] - Loading panel: limits
2025-08-26 01:17:07,861 [limits.py:add_option()] - Adding option: max_accel
2025-08-26 01:17:07,870 [limits.py:add_option()] - Adding option: minimum_cruise_ratio
2025-08-26 01:17:07,877 [limits.py:add_option()] - Adding option: max_velocity
2025-08-26 01:17:07,883 [limits.py:add_option()] - Adding option: square_corner_velocity
2025-08-26 01:17:07,920 [screen.py:attach_panel()] - Current panel hierarchy: job_status >  > limits
2025-08-26 01:17:07,921 [limits.py:update_option()] - max_accel 5000.0
2025-08-26 01:17:07,923 [limits.py:update_option()] - minimum_cruise_ratio 0.5
2025-08-26 01:17:07,924 [limits.py:update_option()] - max_velocity 300.0
2025-08-26 01:17:07,924 [limits.py:update_option()] - square_corner_velocity 5.0
2025-08-26 01:17:11,433 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=5.0
2025-08-26 01:17:12,337 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-26 01:17:12,370 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2025-08-26 01:17:12,401 [menu.py:arrangeMenuItems()] - X > move
2025-08-26 01:17:12,410 [menu.py:arrangeMenuItems()] - X > power
2025-08-26 01:17:12,436 [menu.py:arrangeMenuItems()] - X > spoolman
2025-08-26 01:17:12,436 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-26 01:17:12,446 [menu.py:arrangeMenuItems()] - X > pins
2025-08-26 01:17:15,687 [screen.py:attach_panel()] - Current panel hierarchy: job_status >  > notifications
2025-08-26 01:17:17,788 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-26 01:17:17,818 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2025-08-26 01:17:17,847 [menu.py:arrangeMenuItems()] - X > move
2025-08-26 01:17:17,855 [menu.py:arrangeMenuItems()] - X > power
2025-08-26 01:17:17,879 [menu.py:arrangeMenuItems()] - X > spoolman
2025-08-26 01:17:17,879 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-26 01:17:17,886 [menu.py:arrangeMenuItems()] - X > pins
2025-08-26 01:17:19,568 [screen.py:_load_panel()] - Loading panel: console
2025-08-26 01:17:19,624 [screen.py:attach_panel()] - Current panel hierarchy: job_status >  > console
2025-08-26 01:17:29,018 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-26 01:17:29,048 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2025-08-26 01:17:29,077 [menu.py:arrangeMenuItems()] - X > move
2025-08-26 01:17:29,085 [menu.py:arrangeMenuItems()] - X > power
2025-08-26 01:17:29,108 [menu.py:arrangeMenuItems()] - X > spoolman
2025-08-26 01:17:29,108 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-26 01:17:29,117 [menu.py:arrangeMenuItems()] - X > pins
2025-08-26 01:17:30,927 [screen.py:show_panel()] - Reinitializing panel system
2025-08-26 01:17:30,934 [system.py:__init__()] - {'python': {'version': [3, 9, 2, 'final', 0], 'version_string': '3.9.2 (default, Feb 28 2021, 17:03:44)  [GCC 10.2.1 20210110]'}, 'cpu_info': {'cpu_count': 4, 'bits': '32bit', 'processor': 'aarch64', 'cpu_desc': 'ARMv8 Processor rev 4 (v8l)', 'serial_number': '', 'hardware_desc': 'T800', 'model': 'sonic_lcd', 'total_memory': 2030728, 'memory_units': 'kB'}, 'sd_info': {'manufacturer_id': '45', 'manufacturer': 'Unknown', 'oem_id': '0100', 'product_name': 'DG400', 'product_revision': '3.8', 'serial_number': '0127ea95', 'manufacturer_date': '9/2123', 'capacity': 'Unknown', 'total_bytes': 0}, 'distribution': {'name': 'Debian GNU/Linux 11 (bullseye)', 'id': 'debian', 'version': '11', 'version_parts': {'major': '11', 'minor': '', 'build_number': ''}, 'like': '', 'codename': 'bullseye', 'release_info': {}, 'kernel_version': '4.9.191'}, 'virtualization': {'virt_type': 'none', 'virt_identifier': 'none'}, 'network': {'wlan0': {'mac_address': 'fc:ee:92:11:14:05', 'ip_addresses': [{'family': 'ipv4', 'address': '192.168.1.14', 'is_link_local': False}, {'family': 'ipv6', 'address': 'fe80::767d:9ad7:3997:ec47', 'is_link_local': True}]}}, 'canbus': {}, 'provider': 'systemd_dbus', 'available_services': ['octoapp', 'klipper', 'moonraker', 'octoeverywhere', 'KlipperScreen', 'moonraker-obico'], 'service_state': {'octoapp': {'active_state': 'active', 'sub_state': 'running'}, 'klipper': {'active_state': 'active', 'sub_state': 'running'}, 'moonraker': {'active_state': 'active', 'sub_state': 'running'}, 'octoeverywhere': {'active_state': 'active', 'sub_state': 'running'}, 'KlipperScreen': {'active_state': 'active', 'sub_state': 'running'}, 'moonraker-obico': {'active_state': 'active', 'sub_state': 'running'}}, 'instance_ids': {'moonraker': 'moonraker', 'klipper': 'klipper'}}
2025-08-26 01:17:30,970 [screen.py:attach_panel()] - Current panel hierarchy: job_status >  > system
2025-08-26 01:32:38,151 [screensaver.py:show()] - Showing Screensaver
2025-08-26 02:33:49,380 [printer.py:change_state()] - Changing state from 'printing' to 'disconnected'
2025-08-26 02:33:49,381 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-26 02:33:49,386 [screensaver.py:close()] - Closing Screensaver
2025-08-26 02:33:49,389 [screen.py:wake_screen()] - Screen wake up
2025-08-26 02:33:49,569 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 900
2025-08-26 02:33:49,570 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 900 DPMS:True
2025-08-26 02:33:49,570 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-26 02:33:49,571 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-26 02:33:49,646 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-26 02:33:49,691 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-26 02:33:53,554 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-26 02:33:53,793 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-26 02:33:53,794 [printer.py:log_counts()] - # Extruders: 1
2025-08-26 02:33:53,794 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-26 02:33:53,794 [printer.py:log_counts()] - # Fans: 3
2025-08-26 02:33:53,794 [printer.py:log_counts()] - # Output pins: 0
2025-08-26 02:33:53,794 [printer.py:log_counts()] - # PWM tools: 0
2025-08-26 02:33:53,794 [printer.py:log_counts()] - # Leds: 1
2025-08-26 02:33:54,038 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-26 02:33:54,040 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-26 02:33:54,041 [screen.py:init_klipper()] - Printer initialized
2025-08-26 02:33:54,041 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-26 02:33:54,042 [printer.py:change_state()] - Adding callback for state: ready
2025-08-26 02:33:54,126 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 900
2025-08-26 02:33:54,126 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 900 DPMS:True
2025-08-26 02:33:54,127 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-26 02:33:54,129 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-26 02:33:54,203 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-26 02:33:54,320 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-26 02:33:54,338 [main_menu.py:add_device()] - Adding device: extruder
2025-08-26 02:33:54,343 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-26 02:33:54,377 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-26 02:33:54,392 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-26 02:33:54,429 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-26 02:33:54,446 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-26 02:33:54,482 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-26 02:33:54,539 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-26 02:33:54,540 [printer.py:log_counts()] - # Extruders: 1
2025-08-26 02:33:54,540 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-26 02:33:54,540 [printer.py:log_counts()] - # Fans: 3
2025-08-26 02:33:54,540 [printer.py:log_counts()] - # Output pins: 0
2025-08-26 02:33:54,540 [printer.py:log_counts()] - # PWM tools: 0
2025-08-26 02:33:54,541 [printer.py:log_counts()] - # Leds: 1
2025-08-26 02:33:54,787 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-26 02:33:54,788 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-26 02:33:54,789 [screen.py:init_klipper()] - Printer initialized
2025-08-26 02:48:54,151 [screensaver.py:show()] - Showing Screensaver
2025-08-26 02:57:48,162 [screensaver.py:close()] - Closing Screensaver
2025-08-26 02:57:48,164 [screen.py:wake_screen()] - Screen wake up
2025-08-26 02:57:49,506 [main_menu.py:toggle_visibility()] - Graph show True: extruder
2025-08-26 02:57:49,520 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-08-26 02:57:49,555 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-26 02:57:49,572 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-26 02:57:51,108 [screen.py:_go_to_submenu()] - #### Go to submenu more
2025-08-26 02:57:51,108 [screen.py:_go_to_submenu()] - #### Menu __main
2025-08-26 02:57:51,116 [screen.py:_load_panel()] - Loading panel: menu
2025-08-26 02:57:51,183 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-26 02:57:51,371 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2025-08-26 02:57:51,411 [menu.py:arrangeMenuItems()] - X > more pins
2025-08-26 02:57:51,415 [menu.py:arrangeMenuItems()] - X > more power
2025-08-26 02:57:51,439 [menu.py:arrangeMenuItems()] - X > more spoolman
2025-08-26 02:57:51,440 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-26 02:57:51,467 [screen.py:_go_to_submenu()] - menu, {{ gettext('More') }}, panel_name=more, items=[{'more bedlevel': {'name': "{{ gettext('Bed Level') }}", 'icon': 'bed-level', 'panel': 'bed_level', 'method': None, 'confirm': None, 'enable': "{{ 'bed_screws' in printer.config_sections or 'screws_tilt_adjust' in printer.config_sections }}", 'params': '{}', 'style': None}}, {'more bedmesh': {'name': "{{ gettext('Bed Mesh') }}", 'icon': 'bed-mesh', 'panel': 'bed_mesh', 'method': None, 'confirm': None, 'enable': "{{ 'bed_mesh' in printer.config_sections }}", 'params': '{}', 'style': None}}, {'more zoffset': {'name': "{{ gettext('Z Calibrate') }}", 'icon': 'z-farther', 'panel': 'zcalibrate', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more limits': {'name': "{{ gettext('Limits') }}", 'icon': 'fine-tune', 'panel': 'limits', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more fan': {'name': "{{ gettext('Fan') }}", 'icon': 'fan', 'panel': 'fan', 'method': None, 'confirm': None, 'enable': '{{ printer.fans.count > 0 }}', 'params': '{}', 'style': None}}, {'more led': {'name': "{{ gettext('Leds') }}", 'icon': 'light', 'panel': 'led', 'method': None, 'confirm': None, 'enable': '{{ printer.leds.count > 0 }}', 'params': '{}', 'style': None}}, {'more macros': {'name': "{{ gettext('Macros') }}", 'icon': 'custom-script', 'panel': 'gcode_macros', 'method': None, 'confirm': None, 'enable': '{{ printer.gcode_macros.count > 0 }}', 'params': '{}', 'style': None}}, {'more pins': {'name': "{{ gettext('Pins') }}", 'icon': 'hashtag', 'panel': 'pins', 'method': None, 'confirm': None, 'enable': '{{ printer.output_pins.count > 0 or printer.pwm_tools.count > 0 }}', 'params': '{}', 'style': None}}, {'more power': {'name': "{{ gettext('Power') }}", 'icon': 'shutdown', 'panel': 'power', 'method': None, 'confirm': None, 'enable': '{{ moonraker.power_devices.count > 0 }}', 'params': '{}', 'style': None}}, {'more camera': {'name': "{{ gettext('Camera') }}", 'icon': 'camera', 'panel': 'camera', 'method': None, 'confirm': None, 'enable': '{{ moonraker.cameras.count > 0 }}', 'params': '{}', 'style': None}}, {'more console': {'name': "{{ gettext('Console') }}", 'icon': 'console', 'panel': 'console', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more updater': {'name': "{{ gettext('Update') }}", 'icon': 'refresh', 'panel': 'updater', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more input_shaper': {'name': "{{ gettext('Input Shaper') }}", 'icon': 'move', 'panel': 'input_shaper', 'method': None, 'confirm': None, 'enable': "{{ 'input_shaper' in printer.config_sections }}", 'params': '{}', 'style': None}}, {'more save': {'name': "{{ gettext('Save Config') }}", 'icon': 'complete', 'panel': None, 'method': 'ks_confirm_save', 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more settings': {'name': 'KlipperScreen', 'icon': 'settings', 'panel': 'settings', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more network': {'name': "{{ gettext('Network') }}", 'icon': 'network', 'panel': 'network', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more notifications': {'name': "{{ gettext('Notifications') }}", 'icon': 'notifications', 'panel': 'notifications', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more spoolman': {'name': 'Spoolman', 'icon': 'spoolman', 'panel': 'spoolman', 'method': None, 'confirm': None, 'enable': '{{ moonraker.spoolman }}', 'params': '{}', 'style': None}}, {'more system': {'name': "{{ gettext('System') }}", 'icon': 'info', 'panel': 'system', 'method': None, 'confirm': None, 'enable': '{{ moonraker_connected }}', 'params': '{}', 'style': None}}, {'more fine_tune': {'name': "{{ gettext('Fine Tuning') }}", 'icon': 'fine-tune', 'panel': 'fine_tune', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}]
2025-08-26 02:57:53,315 [screen.py:show_panel()] - Reinitializing panel system
2025-08-26 02:57:53,322 [system.py:__init__()] - {'python': {'version': [3, 9, 2, 'final', 0], 'version_string': '3.9.2 (default, Feb 28 2021, 17:03:44)  [GCC 10.2.1 20210110]'}, 'cpu_info': {'cpu_count': 4, 'bits': '32bit', 'processor': 'aarch64', 'cpu_desc': 'ARMv8 Processor rev 4 (v8l)', 'serial_number': '', 'hardware_desc': 'T800', 'model': 'sonic_lcd', 'total_memory': 2030728, 'memory_units': 'kB'}, 'sd_info': {'manufacturer_id': '45', 'manufacturer': 'Unknown', 'oem_id': '0100', 'product_name': 'DG400', 'product_revision': '3.8', 'serial_number': '0127ea95', 'manufacturer_date': '9/2123', 'capacity': 'Unknown', 'total_bytes': 0}, 'distribution': {'name': 'Debian GNU/Linux 11 (bullseye)', 'id': 'debian', 'version': '11', 'version_parts': {'major': '11', 'minor': '', 'build_number': ''}, 'like': '', 'codename': 'bullseye', 'release_info': {}, 'kernel_version': '4.9.191'}, 'virtualization': {'virt_type': 'none', 'virt_identifier': 'none'}, 'network': {'wlan0': {'mac_address': 'fc:ee:92:11:14:05', 'ip_addresses': [{'family': 'ipv4', 'address': '192.168.1.14', 'is_link_local': False}, {'family': 'ipv6', 'address': 'fe80::767d:9ad7:3997:ec47', 'is_link_local': True}]}}, 'canbus': {}, 'provider': 'systemd_dbus', 'available_services': ['octoapp', 'klipper', 'moonraker', 'octoeverywhere', 'KlipperScreen', 'moonraker-obico'], 'service_state': {'octoapp': {'active_state': 'active', 'sub_state': 'running'}, 'klipper': {'active_state': 'active', 'sub_state': 'running'}, 'moonraker': {'active_state': 'active', 'sub_state': 'running'}, 'octoeverywhere': {'active_state': 'active', 'sub_state': 'running'}, 'KlipperScreen': {'active_state': 'active', 'sub_state': 'running'}, 'moonraker-obico': {'active_state': 'active', 'sub_state': 'running'}}, 'instance_ids': {'moonraker': 'moonraker', 'klipper': 'klipper'}}
2025-08-26 02:57:53,353 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > system
2025-08-26 02:57:56,000 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-26 02:57:56,040 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2025-08-26 02:57:56,085 [menu.py:arrangeMenuItems()] - X > more pins
2025-08-26 02:57:56,091 [menu.py:arrangeMenuItems()] - X > more power
2025-08-26 02:57:56,116 [menu.py:arrangeMenuItems()] - X > more spoolman
2025-08-26 02:57:56,117 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-26 02:57:57,658 [screen.py:show_panel()] - Reinitializing panel settings
2025-08-26 02:57:57,868 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > settings
2025-08-26 02:58:00,709 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-26 02:58:00,748 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2025-08-26 02:58:00,796 [menu.py:arrangeMenuItems()] - X > more pins
2025-08-26 02:58:00,801 [menu.py:arrangeMenuItems()] - X > more power
2025-08-26 02:58:00,825 [menu.py:arrangeMenuItems()] - X > more spoolman
2025-08-26 02:58:00,825 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-26 02:58:06,944 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > settings
2025-08-26 02:58:09,277 [screen_panel.py:on_dropdown_change()] - [main] screen_blanking changed to 60
2025-08-26 02:58:09,380 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-26 02:58:09,381 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-26 02:58:11,085 [screen_panel.py:on_dropdown_change()] - [main] screen_blanking_printing changed to 60
2025-08-26 02:58:12,157 [screen.py:_menu_go_back()] - #### Menu go back
2025-08-26 02:58:12,196 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2025-08-26 02:58:12,246 [menu.py:arrangeMenuItems()] - X > more pins
2025-08-26 02:58:12,250 [menu.py:arrangeMenuItems()] - X > more power
2025-08-26 02:58:12,276 [menu.py:arrangeMenuItems()] - X > more spoolman
2025-08-26 02:58:12,276 [menu.py:evaluate_enable()] - moonraker connected True
2025-08-26 02:58:12,522 [screen.py:_menu_go_back()] - #### Menu go home
2025-08-26 02:58:12,550 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-26 02:59:13,153 [screensaver.py:show()] - Showing Screensaver
2025-08-26 17:07:06,203 [screensaver.py:close()] - Closing Screensaver
2025-08-26 17:07:06,204 [screen.py:wake_screen()] - Screen wake up
2025-08-26 17:08:07,152 [screensaver.py:show()] - Showing Screensaver
2025-08-26 17:08:27,128 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=1024, height=600)
2025-08-26 17:09:56,575 [screensaver.py:close()] - Closing Screensaver
2025-08-26 17:09:56,578 [screen.py:wake_screen()] - Screen wake up
2025-08-26 17:09:56,647 [screensaver.py:close()] - Restoring Dialog <Gtk.Dialog object at 0xe3a8a6a8 (GtkDialog at 0x136a1c0)>
2025-08-26 17:09:56,663 [screen.py:show_popup_message()] - error: Probe samples exceed samples_tolerance
2025-08-26 17:10:57,152 [screensaver.py:show()] - Showing Screensaver
2025-08-26 17:10:57,152 [screensaver.py:show()] - Hiding dialog
2025-08-26 17:12:36,128 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-26 17:12:36,128 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-26 17:12:36,131 [screensaver.py:close()] - Closing Screensaver
2025-08-26 17:12:36,136 [screen.py:wake_screen()] - Screen wake up
2025-08-26 17:12:36,209 [screensaver.py:close()] - Restoring Dialog <Gtk.Dialog object at 0xe3a8a6a8 (GtkDialog at 0x136a1c0)>
2025-08-26 17:12:36,313 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-26 17:12:36,314 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-26 17:12:36,314 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-26 17:12:36,315 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-26 17:12:36,401 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-08-26 17:12:36,402 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-26 17:12:36,430 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-26 17:12:40,383 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-26 17:12:40,597 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-26 17:12:40,597 [printer.py:log_counts()] - # Extruders: 1
2025-08-26 17:12:40,597 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-26 17:12:40,598 [printer.py:log_counts()] - # Fans: 3
2025-08-26 17:12:40,598 [printer.py:log_counts()] - # Output pins: 0
2025-08-26 17:12:40,598 [printer.py:log_counts()] - # PWM tools: 0
2025-08-26 17:12:40,598 [printer.py:log_counts()] - # Leds: 1
2025-08-26 17:12:40,854 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-26 17:12:40,855 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-26 17:12:40,856 [screen.py:init_klipper()] - Printer initialized
2025-08-26 17:12:40,856 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-26 17:12:40,857 [printer.py:change_state()] - Adding callback for state: ready
2025-08-26 17:12:40,942 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-26 17:12:40,942 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-26 17:12:40,942 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-26 17:12:40,945 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-26 17:12:41,019 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-26 17:12:41,121 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-26 17:12:41,137 [main_menu.py:add_device()] - Adding device: extruder
2025-08-26 17:12:41,142 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-26 17:12:41,171 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-26 17:12:41,186 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-26 17:12:41,219 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-26 17:12:41,236 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-26 17:12:41,266 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-26 17:12:41,354 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-26 17:12:41,355 [printer.py:log_counts()] - # Extruders: 1
2025-08-26 17:12:41,355 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-26 17:12:41,355 [printer.py:log_counts()] - # Fans: 3
2025-08-26 17:12:41,355 [printer.py:log_counts()] - # Output pins: 0
2025-08-26 17:12:41,355 [printer.py:log_counts()] - # PWM tools: 0
2025-08-26 17:12:41,355 [printer.py:log_counts()] - # Leds: 1
2025-08-26 17:12:41,603 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-26 17:12:41,605 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-26 17:12:41,606 [screen.py:init_klipper()] - Printer initialized
2025-08-26 17:12:41,639 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-08-26 17:12:41,683 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-26 17:12:41,718 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-26 17:13:41,153 [screensaver.py:show()] - Showing Screensaver
2025-08-26 17:15:31,970 [screensaver.py:close()] - Closing Screensaver
2025-08-26 17:15:31,976 [screen.py:wake_screen()] - Screen wake up
2025-08-26 17:15:32,062 [screen.py:show_popup_message()] - error: Probe samples exceed samples_tolerance
2025-08-26 17:16:32,151 [screensaver.py:show()] - Showing Screensaver
2025-08-26 17:17:30,566 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-26 17:17:30,567 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-26 17:17:30,569 [screensaver.py:close()] - Closing Screensaver
2025-08-26 17:17:30,572 [screen.py:wake_screen()] - Screen wake up
2025-08-26 17:17:30,742 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-26 17:17:30,743 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-26 17:17:30,743 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-26 17:17:30,745 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-26 17:17:30,830 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-26 17:17:30,858 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-26 17:17:34,808 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-26 17:17:35,021 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-26 17:17:35,022 [printer.py:log_counts()] - # Extruders: 1
2025-08-26 17:17:35,022 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-26 17:17:35,022 [printer.py:log_counts()] - # Fans: 3
2025-08-26 17:17:35,022 [printer.py:log_counts()] - # Output pins: 0
2025-08-26 17:17:35,022 [printer.py:log_counts()] - # PWM tools: 0
2025-08-26 17:17:35,022 [printer.py:log_counts()] - # Leds: 1
2025-08-26 17:17:35,276 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-26 17:17:35,278 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-26 17:17:35,278 [screen.py:init_klipper()] - Printer initialized
2025-08-26 17:17:35,279 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-26 17:17:35,280 [printer.py:change_state()] - Adding callback for state: ready
2025-08-26 17:17:35,296 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-26 17:17:35,529 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-26 17:17:35,529 [printer.py:log_counts()] - # Extruders: 1
2025-08-26 17:17:35,530 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-26 17:17:35,530 [printer.py:log_counts()] - # Fans: 3
2025-08-26 17:17:35,530 [printer.py:log_counts()] - # Output pins: 0
2025-08-26 17:17:35,530 [printer.py:log_counts()] - # PWM tools: 0
2025-08-26 17:17:35,530 [printer.py:log_counts()] - # Leds: 1
2025-08-26 17:17:35,780 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-26 17:17:35,781 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-26 17:17:35,781 [screen.py:init_klipper()] - Printer initialized
2025-08-26 17:17:35,877 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-26 17:17:35,877 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-26 17:17:35,877 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-26 17:17:35,881 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-26 17:17:35,957 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-26 17:17:36,070 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-26 17:17:36,087 [main_menu.py:add_device()] - Adding device: extruder
2025-08-26 17:17:36,092 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-26 17:17:36,121 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-26 17:17:36,136 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-26 17:17:36,171 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-26 17:17:36,189 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-26 17:18:36,151 [screensaver.py:show()] - Showing Screensaver
2025-08-26 17:26:08,325 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=1024, height=600)
2025-08-26 17:26:10,233 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-26 17:26:10,233 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-26 17:26:10,236 [screensaver.py:close()] - Closing Screensaver
2025-08-26 17:26:10,242 [screen.py:wake_screen()] - Screen wake up
2025-08-26 17:26:10,319 [screensaver.py:close()] - Restoring Dialog <Gtk.Dialog object at 0xdbe12d28 (GtkDialog at 0x136a380)>
2025-08-26 17:26:10,434 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-26 17:26:10,434 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-26 17:26:10,434 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-26 17:26:10,435 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-26 17:26:10,515 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-08-26 17:26:10,515 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-26 17:26:10,544 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-26 17:26:14,426 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-26 17:26:14,655 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-26 17:26:14,655 [printer.py:log_counts()] - # Extruders: 1
2025-08-26 17:26:14,656 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-26 17:26:14,656 [printer.py:log_counts()] - # Fans: 3
2025-08-26 17:26:14,656 [printer.py:log_counts()] - # Output pins: 0
2025-08-26 17:26:14,656 [printer.py:log_counts()] - # PWM tools: 0
2025-08-26 17:26:14,656 [printer.py:log_counts()] - # Leds: 1
2025-08-26 17:26:14,922 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-26 17:26:14,924 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-26 17:26:14,924 [screen.py:init_klipper()] - Printer initialized
2025-08-26 17:26:14,925 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-26 17:26:14,925 [printer.py:change_state()] - Adding callback for state: ready
2025-08-26 17:26:15,015 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-26 17:26:15,016 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-26 17:26:15,016 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-26 17:26:15,019 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-26 17:26:15,100 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-26 17:26:15,241 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-26 17:26:15,258 [main_menu.py:add_device()] - Adding device: extruder
2025-08-26 17:26:15,262 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-26 17:26:15,300 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-26 17:26:15,315 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-26 17:26:15,355 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-26 17:26:15,373 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-26 17:26:15,411 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-26 17:26:15,662 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-26 17:26:15,662 [printer.py:log_counts()] - # Extruders: 1
2025-08-26 17:26:15,663 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-26 17:26:15,663 [printer.py:log_counts()] - # Fans: 3
2025-08-26 17:26:15,663 [printer.py:log_counts()] - # Output pins: 0
2025-08-26 17:26:15,663 [printer.py:log_counts()] - # PWM tools: 0
2025-08-26 17:26:15,663 [printer.py:log_counts()] - # Leds: 1
2025-08-26 17:26:15,916 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-26 17:26:15,917 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-26 17:26:15,917 [screen.py:init_klipper()] - Printer initialized
2025-08-26 17:26:15,950 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-08-26 17:26:15,991 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-26 17:26:16,012 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-26 17:27:14,236 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-26 17:27:14,236 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-26 17:27:14,337 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-26 17:27:14,337 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-26 17:27:14,338 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-26 17:27:14,338 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-26 17:27:14,417 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-26 17:27:14,446 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-26 17:27:18,497 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-26 17:27:18,727 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-26 17:27:18,727 [printer.py:log_counts()] - # Extruders: 1
2025-08-26 17:27:18,728 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-26 17:27:18,728 [printer.py:log_counts()] - # Fans: 3
2025-08-26 17:27:18,728 [printer.py:log_counts()] - # Output pins: 0
2025-08-26 17:27:18,728 [printer.py:log_counts()] - # PWM tools: 0
2025-08-26 17:27:18,728 [printer.py:log_counts()] - # Leds: 1
2025-08-26 17:27:18,981 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-26 17:27:18,983 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-26 17:27:18,983 [screen.py:init_klipper()] - Printer initialized
2025-08-26 17:27:18,984 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-26 17:27:18,984 [printer.py:change_state()] - Adding callback for state: ready
2025-08-26 17:27:19,070 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-26 17:27:19,070 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-26 17:27:19,071 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-26 17:27:19,074 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-26 17:27:19,153 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-26 17:27:19,262 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-26 17:27:19,279 [main_menu.py:add_device()] - Adding device: extruder
2025-08-26 17:27:19,284 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-26 17:27:19,311 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-26 17:27:19,326 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-26 17:27:19,357 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-26 17:27:19,374 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-26 17:27:19,403 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-26 17:27:19,482 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-26 17:27:19,483 [printer.py:log_counts()] - # Extruders: 1
2025-08-26 17:27:19,483 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-26 17:27:19,483 [printer.py:log_counts()] - # Fans: 3
2025-08-26 17:27:19,483 [printer.py:log_counts()] - # Output pins: 0
2025-08-26 17:27:19,483 [printer.py:log_counts()] - # PWM tools: 0
2025-08-26 17:27:19,483 [printer.py:log_counts()] - # Leds: 1
2025-08-26 17:27:19,737 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-26 17:27:19,739 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-26 17:27:19,740 [screen.py:init_klipper()] - Printer initialized
2025-08-26 17:27:19,769 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-08-26 17:27:19,807 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-26 17:27:19,829 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-26 17:28:19,188 [screensaver.py:show()] - Showing Screensaver
2025-08-26 17:29:13,809 [screen.py:_load_panel()] - Loading panel: bed_level
2025-08-26 17:29:13,829 [bed_level.py:_get_screws()] - screws_tilt_adjust
2025-08-26 17:29:13,829 [bed_level.py:_get_screws()] - screw1: 35,35
2025-08-26 17:29:13,831 [bed_level.py:_get_screws()] - screw1_name: front left
2025-08-26 17:29:13,831 [bed_level.py:_get_screws()] - screw2: 275,35
2025-08-26 17:29:13,831 [bed_level.py:_get_screws()] - screw2_name: front right
2025-08-26 17:29:13,831 [bed_level.py:_get_screws()] - screw3: 275,275
2025-08-26 17:29:13,832 [bed_level.py:_get_screws()] - screw3_name: back right
2025-08-26 17:29:13,832 [bed_level.py:_get_screws()] - screw4: 35,275
2025-08-26 17:29:13,832 [bed_level.py:_get_screws()] - screw4_name: back left
2025-08-26 17:29:13,832 [bed_level.py:_get_screws()] - speed: 100
2025-08-26 17:29:13,832 [bed_level.py:_get_screws()] - screw_thread: CW-M5
2025-08-26 17:29:13,832 [bed_level.py:__init__()] - screws_tilt_adjust: [[35.0, 35.0], [275.0, 35.0], [35.0, 275.0], [275.0, 275.0]]
2025-08-26 17:29:13,833 [printer.py:get_probe()] - Probe type: bltouch
2025-08-26 17:29:13,833 [bed_level.py:__init__()] - offset X: 27.25 Y: -12.8
2025-08-26 17:29:13,833 [bed_level.py:__init__()] - screws with offset: [[62.25, 22.2], [302.25, 22.2], [62.25, 262.2], [302.25, 262.2]]
2025-08-26 17:29:13,833 [bed_level.py:__init__()] - X: {302.25, 62.25}
Y: {262.2, 22.2}
2025-08-26 17:29:13,834 [bed_level.py:__init__()] - Using max_distance: 80 to fit: 4 screws.
2025-08-26 17:29:13,834 [bed_level.py:__init__()] - Using 4/4-screw locations
2025-08-26 17:29:13,898 [bed_level.py:__init__()] - screw_positions: {'bl': [62.25, 262.2], 'br': [302.25, 262.2], 'fr': [302.25, 22.2], 'fl': [62.25, 22.2]}
2025-08-26 17:29:13,915 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > bed_level
2025-08-26 17:29:13,918 [bed_level.py:process_update()] - screw1 CW 00:00
2025-08-26 17:29:13,918 [bed_level.py:process_update()] - X: 62.25 Y: 22.2 Adjust: 00:00 Pos: fl
2025-08-26 17:29:13,918 [bed_level.py:process_update()] - screw1 is the Reference
2025-08-26 17:29:13,926 [bed_level.py:process_update()] - screw2 CCW 00:51
2025-08-26 17:29:13,926 [bed_level.py:process_update()] - X: 302.25 Y: 22.2 Adjust: 00:51 Pos: fr
2025-08-26 17:29:13,936 [bed_level.py:process_update()] - screw3 CCW 00:29
2025-08-26 17:29:13,936 [bed_level.py:process_update()] - X: 302.25 Y: 262.2 Adjust: 00:29 Pos: br
2025-08-26 17:29:13,940 [bed_level.py:process_update()] - screw4 CW 00:03
2025-08-26 17:29:13,940 [bed_level.py:process_update()] - X: 62.25 Y: 262.2 Adjust: 00:03 Pos: bl
2025-08-26 17:29:13,949 [bed_level.py:process_update()] - screw1 CW 00:00
2025-08-26 17:29:13,950 [bed_level.py:process_update()] - X: 62.25 Y: 22.2 Adjust: 00:00 Pos: fl
2025-08-26 17:29:13,950 [bed_level.py:process_update()] - screw1 is the Reference
2025-08-26 17:29:13,963 [bed_level.py:process_update()] - screw2 CCW 00:51
2025-08-26 17:29:13,963 [bed_level.py:process_update()] - X: 302.25 Y: 22.2 Adjust: 00:51 Pos: fr
2025-08-26 17:29:13,967 [bed_level.py:process_update()] - screw3 CCW 00:29
2025-08-26 17:29:13,968 [bed_level.py:process_update()] - X: 302.25 Y: 262.2 Adjust: 00:29 Pos: br
2025-08-26 17:29:13,972 [bed_level.py:process_update()] - screw4 CW 00:03
2025-08-26 17:29:13,973 [bed_level.py:process_update()] - X: 62.25 Y: 262.2 Adjust: 00:03 Pos: bl
2025-08-26 17:31:46,607 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-26 17:31:46,608 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-26 17:31:46,609 [screensaver.py:close()] - Closing Screensaver
2025-08-26 17:31:46,610 [screen.py:wake_screen()] - Screen wake up
2025-08-26 17:31:46,788 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-26 17:31:46,789 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-26 17:31:46,789 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-26 17:31:46,790 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-26 17:31:46,868 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-26 17:31:46,897 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-26 17:31:50,810 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-26 17:31:51,029 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-26 17:31:51,029 [printer.py:log_counts()] - # Extruders: 1
2025-08-26 17:31:51,029 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-26 17:31:51,030 [printer.py:log_counts()] - # Fans: 3
2025-08-26 17:31:51,030 [printer.py:log_counts()] - # Output pins: 0
2025-08-26 17:31:51,030 [printer.py:log_counts()] - # PWM tools: 0
2025-08-26 17:31:51,030 [printer.py:log_counts()] - # Leds: 1
2025-08-26 17:31:51,285 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-26 17:31:51,287 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-26 17:31:51,287 [screen.py:init_klipper()] - Printer initialized
2025-08-26 17:31:51,288 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-26 17:31:51,288 [printer.py:change_state()] - Adding callback for state: ready
2025-08-26 17:31:51,305 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-26 17:31:51,538 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-26 17:31:51,539 [printer.py:log_counts()] - # Extruders: 1
2025-08-26 17:31:51,539 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-26 17:31:51,539 [printer.py:log_counts()] - # Fans: 3
2025-08-26 17:31:51,539 [printer.py:log_counts()] - # Output pins: 0
2025-08-26 17:31:51,540 [printer.py:log_counts()] - # PWM tools: 0
2025-08-26 17:31:51,540 [printer.py:log_counts()] - # Leds: 1
2025-08-26 17:31:51,786 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-26 17:31:51,787 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-26 17:31:51,788 [screen.py:init_klipper()] - Printer initialized
2025-08-26 17:31:51,879 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-26 17:31:51,879 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-26 17:31:51,880 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-26 17:31:51,883 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-26 17:31:51,969 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-26 17:31:52,093 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-26 17:31:52,111 [main_menu.py:add_device()] - Adding device: extruder
2025-08-26 17:31:52,117 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-26 17:31:52,147 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-26 17:31:52,166 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-26 17:31:52,206 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-26 17:31:52,227 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-26 17:32:52,152 [screensaver.py:show()] - Showing Screensaver
2025-08-26 17:33:25,789 [screen.py:show_panel()] - Reinitializing panel bed_level
2025-08-26 17:33:25,802 [bed_level.py:_get_screws()] - screws_tilt_adjust
2025-08-26 17:33:25,802 [bed_level.py:_get_screws()] - screw1: 23,63
2025-08-26 17:33:25,802 [bed_level.py:_get_screws()] - screw1_name: front left
2025-08-26 17:33:25,802 [bed_level.py:_get_screws()] - screw2: 223,63
2025-08-26 17:33:25,802 [bed_level.py:_get_screws()] - screw2_name: front right
2025-08-26 17:33:25,803 [bed_level.py:_get_screws()] - screw3: 223,263
2025-08-26 17:33:25,803 [bed_level.py:_get_screws()] - screw3_name: back right
2025-08-26 17:33:25,803 [bed_level.py:_get_screws()] - screw4: 23,263
2025-08-26 17:33:25,803 [bed_level.py:_get_screws()] - screw4_name: back left
2025-08-26 17:33:25,803 [bed_level.py:_get_screws()] - speed: 100.0
2025-08-26 17:33:25,803 [bed_level.py:_get_screws()] - screw_thread: CW-M5
2025-08-26 17:33:25,804 [bed_level.py:__init__()] - screws_tilt_adjust: [[23.0, 63.0], [223.0, 63.0], [23.0, 263.0], [223.0, 263.0]]
2025-08-26 17:33:25,804 [printer.py:get_probe()] - Probe type: bltouch
2025-08-26 17:33:25,804 [bed_level.py:__init__()] - offset X: 27.25 Y: -12.8
2025-08-26 17:33:25,805 [bed_level.py:__init__()] - screws with offset: [[50.25, 50.2], [250.25, 50.2], [50.25, 250.2], [250.25, 250.2]]
2025-08-26 17:33:25,805 [bed_level.py:__init__()] - X: {50.25, 250.25}
Y: {50.2, 250.2}
2025-08-26 17:33:25,805 [bed_level.py:__init__()] - Using max_distance: 66 to fit: 4 screws.
2025-08-26 17:33:25,805 [bed_level.py:__init__()] - Using 4/4-screw locations
2025-08-26 17:33:25,827 [bed_level.py:__init__()] - screw_positions: {'bl': [50.25, 250.2], 'br': [250.25, 250.2], 'fr': [250.25, 50.2], 'fl': [50.25, 50.2]}
2025-08-26 17:33:25,842 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > bed_level
2025-08-26 17:33:25,844 [bed_level.py:process_update()] - screw1 CW 00:00
2025-08-26 17:33:25,844 [bed_level.py:process_update()] - X: 50.25 Y: 50.2 Adjust: 00:00 Pos: fl
2025-08-26 17:33:25,845 [bed_level.py:process_update()] - screw1 is the Reference
2025-08-26 17:33:25,848 [bed_level.py:process_update()] - screw2 CCW 00:41
2025-08-26 17:33:25,848 [bed_level.py:process_update()] - X: 250.25 Y: 50.2 Adjust: 00:41 Pos: fr
2025-08-26 17:33:25,851 [bed_level.py:process_update()] - screw3 CCW 00:29
2025-08-26 17:33:25,852 [bed_level.py:process_update()] - X: 250.25 Y: 250.2 Adjust: 00:29 Pos: br
2025-08-26 17:33:25,855 [bed_level.py:process_update()] - screw4 CCW 00:02
2025-08-26 17:33:25,855 [bed_level.py:process_update()] - X: 50.25 Y: 250.2 Adjust: 00:02 Pos: bl
2025-08-26 17:33:25,864 [bed_level.py:process_update()] - screw1 CW 00:00
2025-08-26 17:33:25,864 [bed_level.py:process_update()] - X: 50.25 Y: 50.2 Adjust: 00:00 Pos: fl
2025-08-26 17:33:25,864 [bed_level.py:process_update()] - screw1 is the Reference
2025-08-26 17:33:25,870 [bed_level.py:process_update()] - screw2 CCW 00:41
2025-08-26 17:33:25,871 [bed_level.py:process_update()] - X: 250.25 Y: 50.2 Adjust: 00:41 Pos: fr
2025-08-26 17:33:25,874 [bed_level.py:process_update()] - screw3 CCW 00:29
2025-08-26 17:33:25,875 [bed_level.py:process_update()] - X: 250.25 Y: 250.2 Adjust: 00:29 Pos: br
2025-08-26 17:33:25,879 [bed_level.py:process_update()] - screw4 CCW 00:02
2025-08-26 17:33:25,880 [bed_level.py:process_update()] - X: 50.25 Y: 250.2 Adjust: 00:02 Pos: bl
2025-08-26 17:35:37,197 [bed_level.py:process_update()] - screw1 CW 00:00
2025-08-26 17:35:37,198 [bed_level.py:process_update()] - X: 50.25 Y: 50.2 Adjust: 00:00 Pos: fl
2025-08-26 17:35:37,198 [bed_level.py:process_update()] - screw1 is the Reference
2025-08-26 17:35:37,203 [bed_level.py:process_update()] - screw2 CCW 00:54
2025-08-26 17:35:37,203 [bed_level.py:process_update()] - X: 250.25 Y: 50.2 Adjust: 00:54 Pos: fr
2025-08-26 17:35:37,207 [bed_level.py:process_update()] - screw3 CCW 00:09
2025-08-26 17:35:37,208 [bed_level.py:process_update()] - X: 250.25 Y: 250.2 Adjust: 00:09 Pos: br
2025-08-26 17:35:37,215 [bed_level.py:process_update()] - screw4 CW 00:25
2025-08-26 17:35:37,216 [bed_level.py:process_update()] - X: 50.25 Y: 250.2 Adjust: 00:25 Pos: bl
2025-08-26 17:37:37,812 [bed_level.py:process_update()] - screw1 CW 00:00
2025-08-26 17:37:37,813 [bed_level.py:process_update()] - X: 50.25 Y: 50.2 Adjust: 00:00 Pos: fl
2025-08-26 17:37:37,813 [bed_level.py:process_update()] - screw1 is the Reference
2025-08-26 17:37:37,816 [bed_level.py:process_update()] - screw2 CCW 01:02
2025-08-26 17:37:37,817 [bed_level.py:process_update()] - X: 250.25 Y: 50.2 Adjust: 01:02 Pos: fr
2025-08-26 17:37:37,820 [bed_level.py:process_update()] - screw3 CCW 00:09
2025-08-26 17:37:37,821 [bed_level.py:process_update()] - X: 250.25 Y: 250.2 Adjust: 00:09 Pos: br
2025-08-26 17:37:37,824 [bed_level.py:process_update()] - screw4 CW 00:33
2025-08-26 17:37:37,825 [bed_level.py:process_update()] - X: 50.25 Y: 250.2 Adjust: 00:33 Pos: bl
2025-08-26 17:40:03,000 [bed_level.py:process_update()] - screw1 CW 00:00
2025-08-26 17:40:03,001 [bed_level.py:process_update()] - X: 50.25 Y: 50.2 Adjust: 00:00 Pos: fl
2025-08-26 17:40:03,001 [bed_level.py:process_update()] - screw1 is the Reference
2025-08-26 17:40:03,007 [bed_level.py:process_update()] - screw2 CCW 01:34
2025-08-26 17:40:03,008 [bed_level.py:process_update()] - X: 250.25 Y: 50.2 Adjust: 01:34 Pos: fr
2025-08-26 17:40:03,012 [bed_level.py:process_update()] - screw3 CCW 00:31
2025-08-26 17:40:03,012 [bed_level.py:process_update()] - X: 250.25 Y: 250.2 Adjust: 00:31 Pos: br
2025-08-26 17:40:03,019 [bed_level.py:process_update()] - screw4 CW 00:38
2025-08-26 17:40:03,020 [bed_level.py:process_update()] - X: 50.25 Y: 250.2 Adjust: 00:38 Pos: bl
2025-08-26 17:45:02,917 [bed_level.py:process_update()] - screw1 CW 00:00
2025-08-26 17:45:02,917 [bed_level.py:process_update()] - X: 50.25 Y: 50.2 Adjust: 00:00 Pos: fl
2025-08-26 17:45:02,918 [bed_level.py:process_update()] - screw1 is the Reference
2025-08-26 17:45:02,921 [bed_level.py:process_update()] - screw2 CCW 00:26
2025-08-26 17:45:02,922 [bed_level.py:process_update()] - X: 250.25 Y: 50.2 Adjust: 00:26 Pos: fr
2025-08-26 17:45:02,925 [bed_level.py:process_update()] - screw3 CW 00:11
2025-08-26 17:45:02,925 [bed_level.py:process_update()] - X: 250.25 Y: 250.2 Adjust: 00:11 Pos: br
2025-08-26 17:45:02,929 [bed_level.py:process_update()] - screw4 CW 00:09
2025-08-26 17:45:02,929 [bed_level.py:process_update()] - X: 50.25 Y: 250.2 Adjust: 00:09 Pos: bl
2025-08-26 17:48:22,556 [bed_level.py:process_update()] - screw1 CW 00:00
2025-08-26 17:48:22,556 [bed_level.py:process_update()] - X: 50.25 Y: 50.2 Adjust: 00:00 Pos: fl
2025-08-26 17:48:22,556 [bed_level.py:process_update()] - screw1 is the Reference
2025-08-26 17:48:22,561 [bed_level.py:process_update()] - screw2 CCW 00:40
2025-08-26 17:48:22,561 [bed_level.py:process_update()] - X: 250.25 Y: 50.2 Adjust: 00:40 Pos: fr
2025-08-26 17:48:22,565 [bed_level.py:process_update()] - screw3 CCW 00:05
2025-08-26 17:48:22,565 [bed_level.py:process_update()] - X: 250.25 Y: 250.2 Adjust: 00:05 Pos: br
2025-08-26 17:48:22,569 [bed_level.py:process_update()] - screw4 CW 00:07
2025-08-26 17:48:22,569 [bed_level.py:process_update()] - X: 50.25 Y: 250.2 Adjust: 00:07 Pos: bl
2025-08-26 17:50:34,490 [bed_level.py:process_update()] - screw1 CW 00:00
2025-08-26 17:50:34,490 [bed_level.py:process_update()] - X: 50.25 Y: 50.2 Adjust: 00:00 Pos: fl
2025-08-26 17:50:34,490 [bed_level.py:process_update()] - screw1 is the Reference
2025-08-26 17:50:34,494 [bed_level.py:process_update()] - screw2 CCW 00:01
2025-08-26 17:50:34,494 [bed_level.py:process_update()] - X: 250.25 Y: 50.2 Adjust: 00:01 Pos: fr
2025-08-26 17:50:34,498 [bed_level.py:process_update()] - screw3 CW 00:09
2025-08-26 17:50:34,498 [bed_level.py:process_update()] - X: 250.25 Y: 250.2 Adjust: 00:09 Pos: br
2025-08-26 17:50:34,502 [bed_level.py:process_update()] - screw4 CCW 00:41
2025-08-26 17:50:34,502 [bed_level.py:process_update()] - X: 50.25 Y: 250.2 Adjust: 00:41 Pos: bl
2025-08-26 17:52:17,305 [bed_level.py:process_update()] - screw1 CW 00:00
2025-08-26 17:52:17,305 [bed_level.py:process_update()] - X: 50.25 Y: 50.2 Adjust: 00:00 Pos: fl
2025-08-26 17:52:17,306 [bed_level.py:process_update()] - screw1 is the Reference
2025-08-26 17:52:17,310 [bed_level.py:process_update()] - screw2 CW 00:36
2025-08-26 17:52:17,310 [bed_level.py:process_update()] - X: 250.25 Y: 50.2 Adjust: 00:36 Pos: fr
2025-08-26 17:52:17,314 [bed_level.py:process_update()] - screw3 CW 00:02
2025-08-26 17:52:17,315 [bed_level.py:process_update()] - X: 250.25 Y: 250.2 Adjust: 00:02 Pos: br
2025-08-26 17:52:17,318 [bed_level.py:process_update()] - screw4 CCW 00:48
2025-08-26 17:52:17,319 [bed_level.py:process_update()] - X: 50.25 Y: 250.2 Adjust: 00:48 Pos: bl
2025-08-26 17:54:52,060 [bed_level.py:process_update()] - screw1 CW 00:00
2025-08-26 17:54:52,060 [bed_level.py:process_update()] - X: 50.25 Y: 50.2 Adjust: 00:00 Pos: fl
2025-08-26 17:54:52,061 [bed_level.py:process_update()] - screw1 is the Reference
2025-08-26 17:54:52,065 [bed_level.py:process_update()] - screw2 CW 00:23
2025-08-26 17:54:52,065 [bed_level.py:process_update()] - X: 250.25 Y: 50.2 Adjust: 00:23 Pos: fr
2025-08-26 17:54:52,069 [bed_level.py:process_update()] - screw3 CW 00:06
2025-08-26 17:54:52,070 [bed_level.py:process_update()] - X: 250.25 Y: 250.2 Adjust: 00:06 Pos: br
2025-08-26 17:54:52,074 [bed_level.py:process_update()] - screw4 CCW 00:34
2025-08-26 17:54:52,074 [bed_level.py:process_update()] - X: 50.25 Y: 250.2 Adjust: 00:34 Pos: bl
2025-08-26 17:57:03,728 [bed_level.py:process_update()] - screw1 CW 00:00
2025-08-26 17:57:03,729 [bed_level.py:process_update()] - X: 50.25 Y: 50.2 Adjust: 00:00 Pos: fl
2025-08-26 17:57:03,729 [bed_level.py:process_update()] - screw1 is the Reference
2025-08-26 17:57:03,733 [bed_level.py:process_update()] - screw2 CW 00:19
2025-08-26 17:57:03,733 [bed_level.py:process_update()] - X: 250.25 Y: 50.2 Adjust: 00:19 Pos: fr
2025-08-26 17:57:03,737 [bed_level.py:process_update()] - screw3 CW 00:11
2025-08-26 17:57:03,737 [bed_level.py:process_update()] - X: 250.25 Y: 250.2 Adjust: 00:11 Pos: br
2025-08-26 17:57:03,741 [bed_level.py:process_update()] - screw4 CCW 00:16
2025-08-26 17:57:03,741 [bed_level.py:process_update()] - X: 50.25 Y: 250.2 Adjust: 00:16 Pos: bl
2025-08-26 17:58:16,714 [bed_level.py:process_update()] - screw1 CW 00:00
2025-08-26 17:58:16,715 [bed_level.py:process_update()] - X: 50.25 Y: 50.2 Adjust: 00:00 Pos: fl
2025-08-26 17:58:16,715 [bed_level.py:process_update()] - screw1 is the Reference
2025-08-26 17:58:16,720 [bed_level.py:process_update()] - screw2 CCW 00:21
2025-08-26 17:58:16,720 [bed_level.py:process_update()] - X: 250.25 Y: 50.2 Adjust: 00:21 Pos: fr
2025-08-26 17:58:16,724 [bed_level.py:process_update()] - screw3 CCW 00:03
2025-08-26 17:58:16,725 [bed_level.py:process_update()] - X: 250.25 Y: 250.2 Adjust: 00:03 Pos: br
2025-08-26 17:58:16,729 [bed_level.py:process_update()] - screw4 CCW 00:02
2025-08-26 17:58:16,729 [bed_level.py:process_update()] - X: 50.25 Y: 250.2 Adjust: 00:02 Pos: bl
2025-08-26 17:59:08,633 [bed_level.py:process_update()] - screw1 CW 00:00
2025-08-26 17:59:08,634 [bed_level.py:process_update()] - X: 50.25 Y: 50.2 Adjust: 00:00 Pos: fl
2025-08-26 17:59:08,634 [bed_level.py:process_update()] - screw1 is the Reference
2025-08-26 17:59:08,638 [bed_level.py:process_update()] - screw2 CCW 00:26
2025-08-26 17:59:08,638 [bed_level.py:process_update()] - X: 250.25 Y: 50.2 Adjust: 00:26 Pos: fr
2025-08-26 17:59:08,642 [bed_level.py:process_update()] - screw3 CW 00:04
2025-08-26 17:59:08,643 [bed_level.py:process_update()] - X: 250.25 Y: 250.2 Adjust: 00:04 Pos: br
2025-08-26 17:59:08,646 [bed_level.py:process_update()] - screw4 CW 00:04
2025-08-26 17:59:08,647 [bed_level.py:process_update()] - X: 50.25 Y: 250.2 Adjust: 00:04 Pos: bl
2025-08-26 18:00:30,869 [bed_level.py:process_update()] - screw1 CW 00:00
2025-08-26 18:00:30,869 [bed_level.py:process_update()] - X: 50.25 Y: 50.2 Adjust: 00:00 Pos: fl
2025-08-26 18:00:30,870 [bed_level.py:process_update()] - screw1 is the Reference
2025-08-26 18:00:30,873 [bed_level.py:process_update()] - screw2 CCW 00:22
2025-08-26 18:00:30,873 [bed_level.py:process_update()] - X: 250.25 Y: 50.2 Adjust: 00:22 Pos: fr
2025-08-26 18:00:30,877 [bed_level.py:process_update()] - screw3 CW 00:05
2025-08-26 18:00:30,877 [bed_level.py:process_update()] - X: 250.25 Y: 250.2 Adjust: 00:05 Pos: br
2025-08-26 18:00:30,881 [bed_level.py:process_update()] - screw4 CCW 00:03
2025-08-26 18:00:30,882 [bed_level.py:process_update()] - X: 50.25 Y: 250.2 Adjust: 00:03 Pos: bl
2025-08-26 18:01:32,798 [bed_level.py:process_update()] - screw1 CW 00:00
2025-08-26 18:01:32,798 [bed_level.py:process_update()] - X: 50.25 Y: 50.2 Adjust: 00:00 Pos: fl
2025-08-26 18:01:32,798 [bed_level.py:process_update()] - screw1 is the Reference
2025-08-26 18:01:32,802 [bed_level.py:process_update()] - screw2 CCW 00:16
2025-08-26 18:01:32,803 [bed_level.py:process_update()] - X: 250.25 Y: 50.2 Adjust: 00:16 Pos: fr
2025-08-26 18:01:32,808 [bed_level.py:process_update()] - screw3 CW 00:07
2025-08-26 18:01:32,808 [bed_level.py:process_update()] - X: 250.25 Y: 250.2 Adjust: 00:07 Pos: br
2025-08-26 18:01:32,812 [bed_level.py:process_update()] - screw4 CCW 00:07
2025-08-26 18:01:32,813 [bed_level.py:process_update()] - X: 50.25 Y: 250.2 Adjust: 00:07 Pos: bl
2025-08-26 18:02:41,917 [screensaver.py:close()] - Closing Screensaver
2025-08-26 18:02:41,922 [screen.py:wake_screen()] - Screen wake up
2025-08-26 18:02:42,008 [screen.py:show_popup_message()] - error: Probe samples exceed samples_tolerance
2025-08-26 18:03:42,152 [screensaver.py:show()] - Showing Screensaver
2025-08-26 18:04:06,497 [bed_level.py:process_update()] - screw1 CW 00:00
2025-08-26 18:04:06,497 [bed_level.py:process_update()] - X: 50.25 Y: 50.2 Adjust: 00:00 Pos: fl
2025-08-26 18:04:06,497 [bed_level.py:process_update()] - screw1 is the Reference
2025-08-26 18:04:06,501 [bed_level.py:process_update()] - screw2 CCW 00:06
2025-08-26 18:04:06,501 [bed_level.py:process_update()] - X: 250.25 Y: 50.2 Adjust: 00:06 Pos: fr
2025-08-26 18:04:06,505 [bed_level.py:process_update()] - screw3 CW 00:07
2025-08-26 18:04:06,505 [bed_level.py:process_update()] - X: 250.25 Y: 250.2 Adjust: 00:07 Pos: br
2025-08-26 18:04:06,508 [bed_level.py:process_update()] - screw4 CCW 00:11
2025-08-26 18:04:06,509 [bed_level.py:process_update()] - X: 50.25 Y: 250.2 Adjust: 00:11 Pos: bl
2025-08-26 18:05:47,037 [bed_level.py:process_update()] - screw1 CW 00:00
2025-08-26 18:05:47,037 [bed_level.py:process_update()] - X: 50.25 Y: 50.2 Adjust: 00:00 Pos: fl
2025-08-26 18:05:47,037 [bed_level.py:process_update()] - screw1 is the Reference
2025-08-26 18:05:47,042 [bed_level.py:process_update()] - screw2 CCW 00:04
2025-08-26 18:05:47,043 [bed_level.py:process_update()] - X: 250.25 Y: 50.2 Adjust: 00:04 Pos: fr
2025-08-26 18:05:47,045 [bed_level.py:process_update()] - screw3 CW 00:07
2025-08-26 18:05:47,046 [bed_level.py:process_update()] - X: 250.25 Y: 250.2 Adjust: 00:07 Pos: br
2025-08-26 18:05:47,049 [bed_level.py:process_update()] - screw4 CCW 00:12
2025-08-26 18:05:47,049 [bed_level.py:process_update()] - X: 50.25 Y: 250.2 Adjust: 00:12 Pos: bl
2025-08-26 18:06:59,011 [bed_level.py:process_update()] - screw1 CW 00:00
2025-08-26 18:06:59,011 [bed_level.py:process_update()] - X: 50.25 Y: 50.2 Adjust: 00:00 Pos: fl
2025-08-26 18:06:59,011 [bed_level.py:process_update()] - screw1 is the Reference
2025-08-26 18:06:59,016 [bed_level.py:process_update()] - screw2 CCW 00:03
2025-08-26 18:06:59,016 [bed_level.py:process_update()] - X: 250.25 Y: 50.2 Adjust: 00:03 Pos: fr
2025-08-26 18:06:59,019 [bed_level.py:process_update()] - screw3 CW 00:06
2025-08-26 18:06:59,020 [bed_level.py:process_update()] - X: 250.25 Y: 250.2 Adjust: 00:06 Pos: br
2025-08-26 18:06:59,023 [bed_level.py:process_update()] - screw4 CCW 00:18
2025-08-26 18:06:59,024 [bed_level.py:process_update()] - X: 50.25 Y: 250.2 Adjust: 00:18 Pos: bl
2025-08-26 18:08:17,255 [bed_level.py:process_update()] - screw1 CW 00:00
2025-08-26 18:08:17,255 [bed_level.py:process_update()] - X: 50.25 Y: 50.2 Adjust: 00:00 Pos: fl
2025-08-26 18:08:17,255 [bed_level.py:process_update()] - screw1 is the Reference
2025-08-26 18:08:17,260 [bed_level.py:process_update()] - screw2 CW 00:00
2025-08-26 18:08:17,260 [bed_level.py:process_update()] - X: 250.25 Y: 50.2 Adjust: 00:00 Pos: fr
2025-08-26 18:08:17,263 [bed_level.py:process_update()] - screw3 CW 00:05
2025-08-26 18:08:17,263 [bed_level.py:process_update()] - X: 250.25 Y: 250.2 Adjust: 00:05 Pos: br
2025-08-26 18:08:17,267 [bed_level.py:process_update()] - screw4 CCW 00:15
2025-08-26 18:08:17,267 [bed_level.py:process_update()] - X: 50.25 Y: 250.2 Adjust: 00:15 Pos: bl
2025-08-26 18:09:25,965 [bed_level.py:process_update()] - screw1 CW 00:00
2025-08-26 18:09:25,966 [bed_level.py:process_update()] - X: 50.25 Y: 50.2 Adjust: 00:00 Pos: fl
2025-08-26 18:09:25,966 [bed_level.py:process_update()] - screw1 is the Reference
2025-08-26 18:09:25,971 [bed_level.py:process_update()] - screw2 CCW 00:05
2025-08-26 18:09:25,971 [bed_level.py:process_update()] - X: 250.25 Y: 50.2 Adjust: 00:05 Pos: fr
2025-08-26 18:09:25,974 [bed_level.py:process_update()] - screw3 CW 00:06
2025-08-26 18:09:25,975 [bed_level.py:process_update()] - X: 250.25 Y: 250.2 Adjust: 00:06 Pos: br
2025-08-26 18:09:25,978 [bed_level.py:process_update()] - screw4 CCW 00:07
2025-08-26 18:09:25,979 [bed_level.py:process_update()] - X: 50.25 Y: 250.2 Adjust: 00:07 Pos: bl
2025-08-26 18:10:36,178 [bed_level.py:process_update()] - screw1 CW 00:00
2025-08-26 18:10:36,179 [bed_level.py:process_update()] - X: 50.25 Y: 50.2 Adjust: 00:00 Pos: fl
2025-08-26 18:10:36,179 [bed_level.py:process_update()] - screw1 is the Reference
2025-08-26 18:10:36,183 [bed_level.py:process_update()] - screw2 CCW 00:07
2025-08-26 18:10:36,184 [bed_level.py:process_update()] - X: 250.25 Y: 50.2 Adjust: 00:07 Pos: fr
2025-08-26 18:10:36,187 [bed_level.py:process_update()] - screw3 CW 00:00
2025-08-26 18:10:36,187 [bed_level.py:process_update()] - X: 250.25 Y: 250.2 Adjust: 00:00 Pos: br
2025-08-26 18:10:36,191 [bed_level.py:process_update()] - screw4 CCW 00:09
2025-08-26 18:10:36,191 [bed_level.py:process_update()] - X: 50.25 Y: 250.2 Adjust: 00:09 Pos: bl
2025-08-26 18:13:23,621 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-26 18:13:23,621 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-26 18:13:23,623 [screensaver.py:close()] - Closing Screensaver
2025-08-26 18:13:23,634 [screen.py:wake_screen()] - Screen wake up
2025-08-26 18:13:23,807 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-26 18:13:23,807 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-26 18:13:23,807 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-26 18:13:23,808 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-26 18:13:23,898 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-26 18:13:23,930 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-26 18:13:27,879 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-26 18:13:28,101 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-26 18:13:28,101 [printer.py:log_counts()] - # Extruders: 1
2025-08-26 18:13:28,101 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-26 18:13:28,102 [printer.py:log_counts()] - # Fans: 3
2025-08-26 18:13:28,102 [printer.py:log_counts()] - # Output pins: 0
2025-08-26 18:13:28,102 [printer.py:log_counts()] - # PWM tools: 0
2025-08-26 18:13:28,102 [printer.py:log_counts()] - # Leds: 1
2025-08-26 18:13:28,364 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-26 18:13:28,366 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-26 18:13:28,366 [screen.py:init_klipper()] - Printer initialized
2025-08-26 18:13:28,367 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-26 18:13:28,367 [printer.py:change_state()] - Adding callback for state: ready
2025-08-26 18:13:28,385 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-26 18:13:28,614 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-26 18:13:28,614 [printer.py:log_counts()] - # Extruders: 1
2025-08-26 18:13:28,614 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-26 18:13:28,615 [printer.py:log_counts()] - # Fans: 3
2025-08-26 18:13:28,615 [printer.py:log_counts()] - # Output pins: 0
2025-08-26 18:13:28,615 [printer.py:log_counts()] - # PWM tools: 0
2025-08-26 18:13:28,615 [printer.py:log_counts()] - # Leds: 1
2025-08-26 18:13:28,859 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-26 18:13:28,860 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-26 18:13:28,861 [screen.py:init_klipper()] - Printer initialized
2025-08-26 18:13:28,957 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-26 18:13:28,958 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-26 18:13:28,958 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-26 18:13:28,961 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-26 18:13:29,047 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-26 18:13:29,144 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-26 18:13:29,161 [main_menu.py:add_device()] - Adding device: extruder
2025-08-26 18:13:29,165 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-26 18:13:29,192 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-26 18:13:29,207 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-26 18:13:29,245 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-26 18:13:29,262 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-26 18:13:32,975 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=1024, height=600)
2025-08-26 18:13:54,000 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-08-26 18:14:54,168 [screensaver.py:show()] - Showing Screensaver
2025-08-26 18:18:31,738 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=1024, height=600)
2025-08-26 18:18:46,744 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-26 18:18:46,744 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-26 18:18:46,748 [screensaver.py:close()] - Closing Screensaver
2025-08-26 18:18:46,750 [screen.py:wake_screen()] - Screen wake up
2025-08-26 18:18:46,822 [screensaver.py:close()] - Restoring Dialog <Gtk.Dialog object at 0xe4724388 (GtkDialog at 0x136a700)>
2025-08-26 18:18:46,926 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-26 18:18:46,927 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-26 18:18:46,927 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-26 18:18:46,927 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-26 18:18:47,006 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-08-26 18:18:47,006 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-26 18:18:47,043 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-26 18:18:51,019 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-26 18:18:51,255 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-26 18:18:51,256 [printer.py:log_counts()] - # Extruders: 1
2025-08-26 18:18:51,256 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-26 18:18:51,256 [printer.py:log_counts()] - # Fans: 3
2025-08-26 18:18:51,256 [printer.py:log_counts()] - # Output pins: 0
2025-08-26 18:18:51,256 [printer.py:log_counts()] - # PWM tools: 0
2025-08-26 18:18:51,256 [printer.py:log_counts()] - # Leds: 1
2025-08-26 18:18:51,519 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-26 18:18:51,520 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-26 18:18:51,521 [screen.py:init_klipper()] - Printer initialized
2025-08-26 18:18:51,522 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-26 18:18:51,522 [printer.py:change_state()] - Adding callback for state: ready
2025-08-26 18:18:51,551 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-26 18:18:51,766 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-26 18:18:51,766 [printer.py:log_counts()] - # Extruders: 1
2025-08-26 18:18:51,766 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-26 18:18:51,766 [printer.py:log_counts()] - # Fans: 3
2025-08-26 18:18:51,767 [printer.py:log_counts()] - # Output pins: 0
2025-08-26 18:18:51,767 [printer.py:log_counts()] - # PWM tools: 0
2025-08-26 18:18:51,767 [printer.py:log_counts()] - # Leds: 1
2025-08-26 18:18:52,012 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-26 18:18:52,013 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-26 18:18:52,014 [screen.py:init_klipper()] - Printer initialized
2025-08-26 18:18:52,112 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-26 18:18:52,112 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-26 18:18:52,112 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-26 18:18:52,115 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-26 18:18:52,201 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-26 18:18:52,307 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-26 18:18:52,323 [main_menu.py:add_device()] - Adding device: extruder
2025-08-26 18:18:52,327 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-26 18:18:52,355 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-26 18:18:52,370 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-26 18:18:52,405 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-26 18:18:52,423 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-26 18:19:52,152 [screensaver.py:show()] - Showing Screensaver
2025-08-26 18:20:31,813 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-08-26 18:20:31,813 [printer.py:change_state()] - Adding callback for state: printing
2025-08-26 18:20:31,815 [screensaver.py:close()] - Closing Screensaver
2025-08-26 18:20:31,818 [screen.py:wake_screen()] - Screen wake up
2025-08-26 18:20:31,994 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-26 18:20:31,995 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-26 18:20:31,995 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-26 18:20:32,083 [screen.py:show_panel()] - Reinitializing panel job_status
2025-08-26 18:20:32,203 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-26 18:20:32,213 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-08-26 18:20:32,226 [job_status.py:update_filename()] - Updating filename to 1st layer test 250x250mm by 02 layerheight_0.2mm_PLA_Generic Klipper Printer_38m45s.gcode
2025-08-26 18:20:32,226 [job_status.py:_update_file_metadata()] - Update Metadata. File: 1st layer test 250x250mm by 02 layerheight_0.2mm_PLA_Generic Klipper Printer_38m45s.gcode Size: 79791
2025-08-26 18:21:32,152 [screensaver.py:show()] - Showing Screensaver
2025-08-26 18:25:56,009 [screensaver.py:close()] - Closing Screensaver
2025-08-26 18:25:56,014 [screen.py:wake_screen()] - Screen wake up
2025-08-26 18:25:57,601 [screen.py:show_panel()] - Reinitializing panel fine_tune
2025-08-26 18:25:57,678 [screen.py:attach_panel()] - Current panel hierarchy: job_status > fine_tune
2025-08-26 18:25:59,142 [screen.py:_send_action()] - printer.gcode.script: {'script': 'M220 S125'}
2025-08-26 18:26:00,720 [screen.py:_send_action()] - printer.gcode.script: {'script': 'M220 S150'}
2025-08-26 18:26:57,674 [screen.py:_send_action()] - printer.gcode.script: {'script': 'M220 S175'}
2025-08-26 18:27:58,162 [screensaver.py:show()] - Showing Screensaver
2025-08-26 18:32:07,640 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2025-08-26 18:32:07,641 [printer.py:change_state()] - Adding callback for state: paused
2025-08-26 18:32:07,642 [screensaver.py:close()] - Closing Screensaver
2025-08-26 18:32:07,644 [screen.py:wake_screen()] - Screen wake up
2025-08-26 18:32:07,814 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-26 18:32:07,815 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-26 18:32:07,815 [screen.py:_menu_go_back()] - #### Menu go home
2025-08-26 18:32:07,819 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-26 18:32:07,908 [screen.py:show_panel()] - Reinitializing panel job_status
2025-08-26 18:32:07,986 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-26 18:32:07,996 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'paused'
2025-08-26 18:32:08,008 [job_status.py:update_filename()] - Updating filename to 1st layer test 250x250mm by 02 layerheight_0.2mm_PLA_Generic Klipper Printer_38m45s.gcode
2025-08-26 18:32:08,009 [job_status.py:_update_file_metadata()] - Update Metadata. File: 1st layer test 250x250mm by 02 layerheight_0.2mm_PLA_Generic Klipper Printer_38m45s.gcode Size: 79791
2025-08-26 18:32:08,031 [screen.py:attach_panel()] - Current panel hierarchy: job_status > job_status
2025-08-26 18:32:08,063 [screen.py:_load_panel()] - Loading panel: extrude
2025-08-26 18:32:08,128 [screen.py:attach_panel()] - Current panel hierarchy: job_status > job_status > extrude
2025-08-26 18:32:32,703 [printer.py:change_state()] - Changing state from 'paused' to 'ready'
2025-08-26 18:32:32,704 [printer.py:change_state()] - Adding callback for state: ready
2025-08-26 18:32:32,832 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-26 18:32:32,833 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-26 18:33:33,152 [screensaver.py:show()] - Showing Screensaver
2025-08-26 18:36:01,730 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-26 18:36:01,731 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-26 18:36:01,743 [screensaver.py:close()] - Closing Screensaver
2025-08-26 18:36:01,746 [screen.py:wake_screen()] - Screen wake up
2025-08-26 18:36:01,906 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-26 18:36:01,907 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-26 18:36:01,907 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-26 18:36:01,908 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-26 18:36:01,992 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-26 18:36:02,019 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-26 18:36:06,039 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-26 18:36:06,254 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-26 18:36:06,254 [printer.py:log_counts()] - # Extruders: 1
2025-08-26 18:36:06,254 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-26 18:36:06,254 [printer.py:log_counts()] - # Fans: 3
2025-08-26 18:36:06,254 [printer.py:log_counts()] - # Output pins: 0
2025-08-26 18:36:06,255 [printer.py:log_counts()] - # PWM tools: 0
2025-08-26 18:36:06,255 [printer.py:log_counts()] - # Leds: 1
2025-08-26 18:36:06,513 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-26 18:36:06,515 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-26 18:36:06,517 [screen.py:init_klipper()] - Printer initialized
2025-08-26 18:36:06,518 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-26 18:36:06,518 [printer.py:change_state()] - Adding callback for state: ready
2025-08-26 18:36:06,539 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-26 18:36:06,765 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-26 18:36:06,766 [printer.py:log_counts()] - # Extruders: 1
2025-08-26 18:36:06,766 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-26 18:36:06,766 [printer.py:log_counts()] - # Fans: 3
2025-08-26 18:36:06,766 [printer.py:log_counts()] - # Output pins: 0
2025-08-26 18:36:06,767 [printer.py:log_counts()] - # PWM tools: 0
2025-08-26 18:36:06,767 [printer.py:log_counts()] - # Leds: 1
2025-08-26 18:36:07,012 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-26 18:36:07,013 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-26 18:36:07,013 [screen.py:init_klipper()] - Printer initialized
2025-08-26 18:36:07,101 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-26 18:36:07,102 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-26 18:36:07,102 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-26 18:36:07,105 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-26 18:36:07,182 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-26 18:36:07,286 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-26 18:36:07,301 [main_menu.py:add_device()] - Adding device: extruder
2025-08-26 18:36:07,307 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-26 18:36:07,335 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-26 18:36:07,355 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-26 18:36:07,391 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-26 18:36:07,410 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-26 18:36:41,595 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-08-26 18:36:41,596 [printer.py:change_state()] - Adding callback for state: printing
2025-08-26 18:36:41,760 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-26 18:36:41,760 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-26 18:36:41,761 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-26 18:36:41,853 [screen.py:show_panel()] - Reinitializing panel job_status
2025-08-26 18:36:41,978 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-26 18:36:41,989 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-08-26 18:36:42,002 [job_status.py:update_filename()] - Updating filename to xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_14m34s.gcode
2025-08-26 18:36:42,003 [job_status.py:_update_file_metadata()] - Update Metadata. File: xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_14m34s.gcode Size: 675721
2025-08-26 18:37:42,152 [screensaver.py:show()] - Showing Screensaver
2025-08-26 18:52:24,236 [printer.py:change_state()] - Changing state from 'printing' to 'disconnected'
2025-08-26 18:52:24,237 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-26 18:52:24,237 [screensaver.py:close()] - Closing Screensaver
2025-08-26 18:52:24,249 [screen.py:wake_screen()] - Screen wake up
2025-08-26 18:52:24,426 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-26 18:52:24,426 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-26 18:52:24,427 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-26 18:52:24,427 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-26 18:52:24,511 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-26 18:52:24,540 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-26 18:52:28,636 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-26 18:52:28,877 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-26 18:52:28,878 [printer.py:log_counts()] - # Extruders: 1
2025-08-26 18:52:28,878 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-26 18:52:28,878 [printer.py:log_counts()] - # Fans: 3
2025-08-26 18:52:28,878 [printer.py:log_counts()] - # Output pins: 0
2025-08-26 18:52:28,879 [printer.py:log_counts()] - # PWM tools: 0
2025-08-26 18:52:28,879 [printer.py:log_counts()] - # Leds: 1
2025-08-26 18:52:29,117 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-26 18:52:29,119 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-26 18:52:29,119 [screen.py:init_klipper()] - Printer initialized
2025-08-26 18:52:29,120 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-26 18:52:29,121 [printer.py:change_state()] - Adding callback for state: ready
2025-08-26 18:52:29,221 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-26 18:52:29,221 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-26 18:52:29,222 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-26 18:52:29,225 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-26 18:52:29,310 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-26 18:52:29,415 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-26 18:52:29,430 [main_menu.py:add_device()] - Adding device: extruder
2025-08-26 18:52:29,435 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-26 18:52:29,463 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-26 18:52:29,478 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-26 18:52:29,513 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-26 18:52:29,532 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-26 18:52:29,562 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-26 18:52:29,857 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-26 18:52:29,857 [printer.py:log_counts()] - # Extruders: 1
2025-08-26 18:52:29,857 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-26 18:52:29,857 [printer.py:log_counts()] - # Fans: 3
2025-08-26 18:52:29,858 [printer.py:log_counts()] - # Output pins: 0
2025-08-26 18:52:29,858 [printer.py:log_counts()] - # PWM tools: 0
2025-08-26 18:52:29,858 [printer.py:log_counts()] - # Leds: 1
2025-08-26 18:52:30,109 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-26 18:52:30,111 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-26 18:52:30,111 [screen.py:init_klipper()] - Printer initialized
2025-08-26 18:52:30,146 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-08-26 18:52:30,186 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-26 18:52:30,204 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-26 18:53:30,151 [screensaver.py:show()] - Showing Screensaver
2025-08-26 18:58:06,177 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-26 18:58:06,178 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-26 18:58:06,178 [screensaver.py:close()] - Closing Screensaver
2025-08-26 18:58:06,180 [screen.py:wake_screen()] - Screen wake up
2025-08-26 18:58:06,350 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-26 18:58:06,350 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-26 18:58:06,350 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-26 18:58:06,351 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-26 18:58:06,432 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-26 18:58:06,469 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-26 18:58:10,335 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-26 18:58:10,557 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-26 18:58:10,558 [printer.py:log_counts()] - # Extruders: 1
2025-08-26 18:58:10,558 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-26 18:58:10,558 [printer.py:log_counts()] - # Fans: 3
2025-08-26 18:58:10,558 [printer.py:log_counts()] - # Output pins: 0
2025-08-26 18:58:10,559 [printer.py:log_counts()] - # PWM tools: 0
2025-08-26 18:58:10,559 [printer.py:log_counts()] - # Leds: 1
2025-08-26 18:58:10,800 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-26 18:58:10,801 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-26 18:58:10,802 [screen.py:init_klipper()] - Printer initialized
2025-08-26 18:58:10,803 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-26 18:58:10,803 [printer.py:change_state()] - Adding callback for state: ready
2025-08-26 18:58:10,889 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-26 18:58:10,889 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-26 18:58:10,889 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-26 18:58:10,892 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-26 18:58:10,972 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-26 18:58:11,074 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-26 18:58:11,091 [main_menu.py:add_device()] - Adding device: extruder
2025-08-26 18:58:11,097 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-26 18:58:11,132 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-26 18:58:11,147 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-26 18:58:11,180 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-26 18:58:11,197 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-26 18:58:11,226 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-26 18:58:11,298 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-26 18:58:11,299 [printer.py:log_counts()] - # Extruders: 1
2025-08-26 18:58:11,299 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-26 18:58:11,299 [printer.py:log_counts()] - # Fans: 3
2025-08-26 18:58:11,299 [printer.py:log_counts()] - # Output pins: 0
2025-08-26 18:58:11,299 [printer.py:log_counts()] - # PWM tools: 0
2025-08-26 18:58:11,299 [printer.py:log_counts()] - # Leds: 1
2025-08-26 18:58:11,549 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-26 18:58:11,551 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-26 18:58:11,551 [screen.py:init_klipper()] - Printer initialized
2025-08-26 18:58:11,583 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-08-26 18:58:11,620 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-26 18:58:11,636 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-26 18:59:11,152 [screensaver.py:show()] - Showing Screensaver
2025-08-26 18:59:46,245 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-26 18:59:46,245 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-26 18:59:46,247 [screensaver.py:close()] - Closing Screensaver
2025-08-26 18:59:46,250 [screen.py:wake_screen()] - Screen wake up
2025-08-26 18:59:46,425 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-26 18:59:46,426 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-26 18:59:46,426 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-26 18:59:46,426 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-26 18:59:46,506 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-26 18:59:46,534 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-26 18:59:50,394 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-26 18:59:50,626 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-26 18:59:50,626 [printer.py:log_counts()] - # Extruders: 1
2025-08-26 18:59:50,627 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-26 18:59:50,627 [printer.py:log_counts()] - # Fans: 3
2025-08-26 18:59:50,627 [printer.py:log_counts()] - # Output pins: 0
2025-08-26 18:59:50,627 [printer.py:log_counts()] - # PWM tools: 0
2025-08-26 18:59:50,627 [printer.py:log_counts()] - # Leds: 1
2025-08-26 18:59:50,883 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-26 18:59:50,884 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-26 18:59:50,884 [screen.py:init_klipper()] - Printer initialized
2025-08-26 18:59:50,885 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-26 18:59:50,885 [printer.py:change_state()] - Adding callback for state: ready
2025-08-26 18:59:50,981 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-26 18:59:50,981 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-26 18:59:50,981 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-26 18:59:50,984 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-26 18:59:51,059 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-26 18:59:51,162 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-26 18:59:51,179 [main_menu.py:add_device()] - Adding device: extruder
2025-08-26 18:59:51,185 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-26 18:59:51,214 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-26 18:59:51,233 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-26 18:59:51,267 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-26 18:59:51,285 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-26 18:59:51,317 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-26 18:59:51,377 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-26 18:59:51,377 [printer.py:log_counts()] - # Extruders: 1
2025-08-26 18:59:51,377 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-26 18:59:51,377 [printer.py:log_counts()] - # Fans: 3
2025-08-26 18:59:51,378 [printer.py:log_counts()] - # Output pins: 0
2025-08-26 18:59:51,378 [printer.py:log_counts()] - # PWM tools: 0
2025-08-26 18:59:51,378 [printer.py:log_counts()] - # Leds: 1
2025-08-26 18:59:51,628 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-26 18:59:51,629 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-26 18:59:51,630 [screen.py:init_klipper()] - Printer initialized
2025-08-26 18:59:51,665 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-08-26 18:59:51,707 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-26 18:59:51,723 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-26 19:00:51,151 [screensaver.py:show()] - Showing Screensaver
2025-08-26 19:04:20,975 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-08-26 19:04:20,976 [printer.py:change_state()] - Adding callback for state: printing
2025-08-26 19:04:20,978 [screensaver.py:close()] - Closing Screensaver
2025-08-26 19:04:20,981 [screen.py:wake_screen()] - Screen wake up
2025-08-26 19:04:21,191 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-26 19:04:21,192 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-26 19:04:21,193 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-26 19:04:21,285 [screen.py:show_panel()] - Reinitializing panel job_status
2025-08-26 19:04:21,374 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-26 19:04:21,384 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-08-26 19:04:21,397 [job_status.py:update_filename()] - Updating filename to Planetary Gear Spinner_0.2mm_PLA_Generic Klipper Printer_2h59m.gcode
2025-08-26 19:04:21,397 [job_status.py:_update_file_metadata()] - Update Metadata. File: Planetary Gear Spinner_0.2mm_PLA_Generic Klipper Printer_2h59m.gcode Size: 18303375
2025-08-26 19:05:22,165 [screensaver.py:show()] - Showing Screensaver
2025-08-26 22:00:40,038 [screensaver.py:close()] - Closing Screensaver
2025-08-26 22:00:40,049 [screen.py:wake_screen()] - Screen wake up
2025-08-26 22:00:40,146 [screen.py:show_popup_message()] - error: Move out of range: 124.955 418.944 28.155 [10205.182]
2025-08-26 22:00:40,159 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-08-26 22:00:40,160 [printer.py:change_state()] - Adding callback for state: ready
2025-08-26 22:00:40,179 [screen.py:show_popup_message()] - error: Move out of range: 124.955 418.944 28.155 [10205.182]
2025-08-26 22:00:40,186 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'error'
2025-08-26 22:00:40,347 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-26 22:00:40,348 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-26 22:01:41,152 [screensaver.py:show()] - Showing Screensaver
2025-08-27 00:03:24,297 [screensaver.py:close()] - Closing Screensaver
2025-08-27 00:03:24,301 [screen.py:wake_screen()] - Screen wake up
2025-08-27 00:03:33,097 [job_status.py:close_panel()] - Closing job_status panel
2025-08-27 00:03:33,097 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-27 00:03:33,100 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-27 00:03:33,178 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-27 00:03:33,279 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-27 00:03:33,296 [main_menu.py:add_device()] - Adding device: extruder
2025-08-27 00:03:33,302 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-27 00:03:33,329 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-27 00:03:33,344 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-27 00:03:35,359 [screen.py:show_panel()] - Reinitializing panel move
2025-08-27 00:03:35,451 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-08-27 00:03:43,032 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 z+25 F600'}
2025-08-27 00:03:43,037 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-08-27 00:03:48,891 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y+25 F3000'}
2025-08-27 00:03:48,897 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-08-27 00:03:50,413 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y+25 F3000'}
2025-08-27 00:03:50,417 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-08-27 00:03:51,431 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y+25 F3000'}
2025-08-27 00:03:51,435 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-08-27 00:03:52,642 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y+25 F3000'}
2025-08-27 00:03:52,646 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-08-27 00:04:53,152 [screensaver.py:show()] - Showing Screensaver
2025-08-27 13:12:01,682 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-27 13:12:01,682 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-27 13:12:01,684 [screensaver.py:close()] - Closing Screensaver
2025-08-27 13:12:01,686 [screen.py:wake_screen()] - Screen wake up
2025-08-27 13:12:01,851 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 13:12:01,851 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 13:12:01,852 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-27 13:12:01,852 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-27 13:12:01,927 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-27 13:12:01,955 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-27 13:12:05,824 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-27 13:12:06,058 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-27 13:12:06,059 [printer.py:log_counts()] - # Extruders: 1
2025-08-27 13:12:06,059 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-27 13:12:06,059 [printer.py:log_counts()] - # Fans: 3
2025-08-27 13:12:06,059 [printer.py:log_counts()] - # Output pins: 0
2025-08-27 13:12:06,059 [printer.py:log_counts()] - # PWM tools: 0
2025-08-27 13:12:06,059 [printer.py:log_counts()] - # Leds: 1
2025-08-27 13:12:06,319 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-27 13:12:06,320 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-27 13:12:06,321 [screen.py:init_klipper()] - Printer initialized
2025-08-27 13:12:06,321 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-27 13:12:06,322 [printer.py:change_state()] - Adding callback for state: ready
2025-08-27 13:12:06,355 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-27 13:12:06,567 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-27 13:12:06,567 [printer.py:log_counts()] - # Extruders: 1
2025-08-27 13:12:06,568 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-27 13:12:06,568 [printer.py:log_counts()] - # Fans: 3
2025-08-27 13:12:06,568 [printer.py:log_counts()] - # Output pins: 0
2025-08-27 13:12:06,568 [printer.py:log_counts()] - # PWM tools: 0
2025-08-27 13:12:06,568 [printer.py:log_counts()] - # Leds: 1
2025-08-27 13:12:06,822 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-27 13:12:06,824 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-27 13:12:06,825 [screen.py:init_klipper()] - Printer initialized
2025-08-27 13:12:06,924 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 13:12:06,925 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 13:12:06,925 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-27 13:12:06,931 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-27 13:12:07,015 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-27 13:12:07,136 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-27 13:12:07,153 [main_menu.py:add_device()] - Adding device: extruder
2025-08-27 13:12:07,157 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-27 13:12:07,184 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-27 13:12:07,200 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-27 13:12:07,235 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-27 13:12:07,251 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-27 13:13:07,151 [screensaver.py:show()] - Showing Screensaver
2025-08-27 13:18:05,429 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-08-27 13:18:05,429 [printer.py:change_state()] - Adding callback for state: printing
2025-08-27 13:18:05,434 [screensaver.py:close()] - Closing Screensaver
2025-08-27 13:18:05,438 [screen.py:wake_screen()] - Screen wake up
2025-08-27 13:18:05,615 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 13:18:05,616 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 13:18:05,616 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-27 13:18:05,717 [screen.py:show_panel()] - Reinitializing panel job_status
2025-08-27 13:18:05,820 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-27 13:18:05,830 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-08-27 13:18:05,845 [job_status.py:update_filename()] - Updating filename to xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_14m34s.gcode
2025-08-27 13:18:05,846 [job_status.py:_update_file_metadata()] - Update Metadata. File: xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_14m34s.gcode Size: 675721
2025-08-27 13:19:06,152 [screensaver.py:show()] - Showing Screensaver
2025-08-27 13:33:01,336 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-08-27 13:33:01,336 [printer.py:change_state()] - Adding callback for state: ready
2025-08-27 13:33:01,348 [screensaver.py:close()] - Closing Screensaver
2025-08-27 13:33:01,354 [screen.py:wake_screen()] - Screen wake up
2025-08-27 13:33:01,444 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'complete'
2025-08-27 13:33:01,591 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 13:33:01,591 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 13:33:32,123 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-27 13:33:32,124 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-27 13:33:32,227 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 13:33:32,227 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 13:33:32,228 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-27 13:33:32,229 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-27 13:33:32,322 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-27 13:33:32,357 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-27 13:33:36,165 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-27 13:33:36,276 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-27 13:33:36,277 [printer.py:log_counts()] - # Extruders: 1
2025-08-27 13:33:36,277 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-27 13:33:36,277 [printer.py:log_counts()] - # Fans: 3
2025-08-27 13:33:36,277 [printer.py:log_counts()] - # Output pins: 0
2025-08-27 13:33:36,277 [printer.py:log_counts()] - # PWM tools: 0
2025-08-27 13:33:36,277 [printer.py:log_counts()] - # Leds: 1
2025-08-27 13:33:36,525 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-27 13:33:36,526 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-27 13:33:36,527 [screen.py:init_klipper()] - Printer initialized
2025-08-27 13:33:36,527 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-27 13:33:36,527 [printer.py:change_state()] - Adding callback for state: ready
2025-08-27 13:33:36,613 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 13:33:36,614 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 13:33:36,614 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-27 13:33:36,617 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-27 13:33:36,698 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-27 13:33:36,797 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-27 13:33:36,813 [main_menu.py:add_device()] - Adding device: extruder
2025-08-27 13:33:36,819 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-27 13:33:36,847 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-27 13:33:36,862 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-27 13:33:36,897 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-27 13:33:36,914 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-27 13:34:37,152 [screensaver.py:show()] - Showing Screensaver
2025-08-27 13:55:46,726 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-08-27 13:55:46,726 [printer.py:change_state()] - Adding callback for state: printing
2025-08-27 13:55:46,749 [screensaver.py:close()] - Closing Screensaver
2025-08-27 13:55:46,751 [screen.py:wake_screen()] - Screen wake up
2025-08-27 13:55:46,959 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 13:55:46,959 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 13:55:46,960 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-27 13:55:47,061 [screen.py:show_panel()] - Reinitializing panel job_status
2025-08-27 13:55:47,189 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-27 13:55:47,205 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-08-27 13:55:47,219 [job_status.py:update_filename()] - Updating filename to obj_1_mew opke_0.2mm_PLA_Generic Klipper Printer_2h18m.gcode
2025-08-27 13:55:47,220 [job_status.py:_update_file_metadata()] - Update Metadata. File: obj_1_mew opke_0.2mm_PLA_Generic Klipper Printer_2h18m.gcode Size: 20152651
2025-08-27 13:56:47,151 [screensaver.py:show()] - Showing Screensaver
2025-08-27 16:14:19,125 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-08-27 16:14:19,125 [printer.py:change_state()] - Adding callback for state: ready
2025-08-27 16:14:19,134 [screensaver.py:close()] - Closing Screensaver
2025-08-27 16:14:19,139 [screen.py:wake_screen()] - Screen wake up
2025-08-27 16:14:19,223 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'complete'
2025-08-27 16:14:19,352 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 16:14:19,353 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 16:14:50,045 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-27 16:14:50,045 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-27 16:14:50,159 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 16:14:50,159 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 16:14:50,160 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-27 16:14:50,160 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-27 16:14:50,240 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-27 16:14:50,280 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-27 16:14:54,168 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-27 16:14:54,417 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-27 16:14:54,417 [printer.py:log_counts()] - # Extruders: 1
2025-08-27 16:14:54,417 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-27 16:14:54,418 [printer.py:log_counts()] - # Fans: 3
2025-08-27 16:14:54,418 [printer.py:log_counts()] - # Output pins: 0
2025-08-27 16:14:54,418 [printer.py:log_counts()] - # PWM tools: 0
2025-08-27 16:14:54,418 [printer.py:log_counts()] - # Leds: 1
2025-08-27 16:14:54,664 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-27 16:14:54,666 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-27 16:14:54,666 [screen.py:init_klipper()] - Printer initialized
2025-08-27 16:14:54,667 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-27 16:14:54,667 [printer.py:change_state()] - Adding callback for state: ready
2025-08-27 16:14:54,754 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 16:14:54,755 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 16:14:54,755 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-27 16:14:54,758 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-27 16:14:54,833 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-27 16:14:54,932 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-27 16:14:54,947 [main_menu.py:add_device()] - Adding device: extruder
2025-08-27 16:14:54,952 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-27 16:14:54,979 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-27 16:14:54,994 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-27 16:14:55,028 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-27 16:14:55,045 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-27 16:15:55,152 [screensaver.py:show()] - Showing Screensaver
2025-08-27 17:26:12,311 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=1024, height=600)
2025-08-27 17:33:09,248 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-27 17:33:09,249 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-27 17:33:09,250 [screensaver.py:close()] - Closing Screensaver
2025-08-27 17:33:09,257 [screen.py:wake_screen()] - Screen wake up
2025-08-27 17:33:09,337 [screensaver.py:close()] - Restoring Dialog <Gtk.Dialog object at 0xdbdab328 (GtkDialog at 0x136a700)>
2025-08-27 17:33:09,436 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 17:33:09,437 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 17:33:09,437 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-27 17:33:09,438 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-27 17:33:09,519 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-08-27 17:33:09,519 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-27 17:33:09,549 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-27 17:33:13,705 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-27 17:33:13,918 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-27 17:33:13,918 [printer.py:log_counts()] - # Extruders: 1
2025-08-27 17:33:13,919 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-27 17:33:13,919 [printer.py:log_counts()] - # Fans: 3
2025-08-27 17:33:13,919 [printer.py:log_counts()] - # Output pins: 0
2025-08-27 17:33:13,919 [printer.py:log_counts()] - # PWM tools: 0
2025-08-27 17:33:13,919 [printer.py:log_counts()] - # Leds: 1
2025-08-27 17:33:14,170 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-27 17:33:14,172 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-27 17:33:14,172 [screen.py:init_klipper()] - Printer initialized
2025-08-27 17:33:14,173 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-27 17:33:14,173 [printer.py:change_state()] - Adding callback for state: ready
2025-08-27 17:33:14,193 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-27 17:33:14,415 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-27 17:33:14,416 [printer.py:log_counts()] - # Extruders: 1
2025-08-27 17:33:14,416 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-27 17:33:14,416 [printer.py:log_counts()] - # Fans: 3
2025-08-27 17:33:14,416 [printer.py:log_counts()] - # Output pins: 0
2025-08-27 17:33:14,416 [printer.py:log_counts()] - # PWM tools: 0
2025-08-27 17:33:14,416 [printer.py:log_counts()] - # Leds: 1
2025-08-27 17:33:14,667 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-27 17:33:14,668 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-27 17:33:14,669 [screen.py:init_klipper()] - Printer initialized
2025-08-27 17:33:14,756 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 17:33:14,757 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 17:33:14,757 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-27 17:33:14,760 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-27 17:33:14,838 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-27 17:33:14,946 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-27 17:33:14,962 [main_menu.py:add_device()] - Adding device: extruder
2025-08-27 17:33:14,967 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-27 17:33:15,000 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-27 17:33:15,015 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-27 17:33:15,055 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-27 17:33:15,076 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-27 17:34:15,163 [screensaver.py:show()] - Showing Screensaver
2025-08-27 17:40:08,695 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-27 17:40:08,698 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-27 17:40:08,701 [screensaver.py:close()] - Closing Screensaver
2025-08-27 17:40:08,702 [screen.py:wake_screen()] - Screen wake up
2025-08-27 17:40:08,882 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 17:40:08,883 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 17:40:08,883 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-27 17:40:08,884 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-27 17:40:08,962 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-27 17:40:08,991 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-27 17:40:12,898 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-27 17:40:13,107 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-27 17:40:13,107 [printer.py:log_counts()] - # Extruders: 1
2025-08-27 17:40:13,107 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-27 17:40:13,107 [printer.py:log_counts()] - # Fans: 3
2025-08-27 17:40:13,107 [printer.py:log_counts()] - # Output pins: 0
2025-08-27 17:40:13,108 [printer.py:log_counts()] - # PWM tools: 0
2025-08-27 17:40:13,108 [printer.py:log_counts()] - # Leds: 1
2025-08-27 17:40:13,351 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-27 17:40:13,352 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-27 17:40:13,352 [screen.py:init_klipper()] - Printer initialized
2025-08-27 17:40:13,353 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-27 17:40:13,354 [printer.py:change_state()] - Adding callback for state: ready
2025-08-27 17:40:13,370 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-27 17:40:13,611 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-27 17:40:13,611 [printer.py:log_counts()] - # Extruders: 1
2025-08-27 17:40:13,611 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-27 17:40:13,611 [printer.py:log_counts()] - # Fans: 3
2025-08-27 17:40:13,611 [printer.py:log_counts()] - # Output pins: 0
2025-08-27 17:40:13,611 [printer.py:log_counts()] - # PWM tools: 0
2025-08-27 17:40:13,612 [printer.py:log_counts()] - # Leds: 1
2025-08-27 17:40:13,855 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-27 17:40:13,858 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-27 17:40:13,859 [screen.py:init_klipper()] - Printer initialized
2025-08-27 17:40:13,948 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 17:40:13,949 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 17:40:13,949 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-27 17:40:13,952 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-27 17:40:14,033 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-27 17:40:14,144 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-27 17:40:14,162 [main_menu.py:add_device()] - Adding device: extruder
2025-08-27 17:40:14,167 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-27 17:40:14,195 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-27 17:40:14,211 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-27 17:40:14,246 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-27 17:40:14,264 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-27 17:41:14,152 [screensaver.py:show()] - Showing Screensaver
2025-08-27 17:41:24,808 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-08-27 17:41:24,808 [printer.py:change_state()] - Adding callback for state: printing
2025-08-27 17:41:24,811 [screensaver.py:close()] - Closing Screensaver
2025-08-27 17:41:24,813 [screen.py:wake_screen()] - Screen wake up
2025-08-27 17:41:24,994 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 17:41:24,995 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 17:41:24,995 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-27 17:41:25,078 [screen.py:show_panel()] - Reinitializing panel job_status
2025-08-27 17:41:25,187 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-27 17:41:25,198 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-08-27 17:41:25,211 [job_status.py:update_filename()] - Updating filename to 1st layer test 250x250mm by 02 layerheight_0.2mm_PLA_Generic Klipper Printer_51m17s.gcode
2025-08-27 17:41:25,212 [job_status.py:_update_file_metadata()] - Update Metadata. File: 1st layer test 250x250mm by 02 layerheight_0.2mm_PLA_Generic Klipper Printer_51m17s.gcode Size: 81296
2025-08-27 17:42:25,152 [screensaver.py:show()] - Showing Screensaver
2025-08-27 18:25:05,923 [screensaver.py:close()] - Closing Screensaver
2025-08-27 18:25:05,929 [screen.py:wake_screen()] - Screen wake up
2025-08-27 18:26:06,151 [screensaver.py:show()] - Showing Screensaver
2025-08-27 18:30:38,278 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-08-27 18:30:38,279 [printer.py:change_state()] - Adding callback for state: ready
2025-08-27 18:30:38,291 [screensaver.py:close()] - Closing Screensaver
2025-08-27 18:30:38,296 [screen.py:wake_screen()] - Screen wake up
2025-08-27 18:30:38,390 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'complete'
2025-08-27 18:30:38,529 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 18:30:38,530 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 18:31:09,088 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-27 18:31:09,088 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-27 18:31:09,191 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 18:31:09,192 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 18:31:09,192 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-27 18:31:09,193 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-27 18:31:09,277 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-27 18:31:09,318 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-27 18:31:13,195 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-27 18:31:13,505 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-27 18:31:13,506 [printer.py:log_counts()] - # Extruders: 1
2025-08-27 18:31:13,506 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-27 18:31:13,506 [printer.py:log_counts()] - # Fans: 3
2025-08-27 18:31:13,506 [printer.py:log_counts()] - # Output pins: 0
2025-08-27 18:31:13,506 [printer.py:log_counts()] - # PWM tools: 0
2025-08-27 18:31:13,506 [printer.py:log_counts()] - # Leds: 1
2025-08-27 18:31:13,759 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-27 18:31:13,761 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-27 18:31:13,761 [screen.py:init_klipper()] - Printer initialized
2025-08-27 18:31:13,762 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-27 18:31:13,762 [printer.py:change_state()] - Adding callback for state: ready
2025-08-27 18:31:13,850 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 18:31:13,850 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 18:31:13,851 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-27 18:31:13,854 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-27 18:31:13,929 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-27 18:31:14,033 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-27 18:31:14,050 [main_menu.py:add_device()] - Adding device: extruder
2025-08-27 18:31:14,055 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-27 18:31:14,084 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-27 18:31:14,099 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-27 18:31:14,133 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-27 18:31:14,150 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-27 18:32:14,152 [screensaver.py:show()] - Showing Screensaver
2025-08-27 19:21:55,088 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-08-27 19:21:55,090 [printer.py:change_state()] - Adding callback for state: printing
2025-08-27 19:21:55,094 [screensaver.py:close()] - Closing Screensaver
2025-08-27 19:21:55,096 [screen.py:wake_screen()] - Screen wake up
2025-08-27 19:21:55,304 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 19:21:55,305 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 19:21:55,305 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-27 19:21:55,406 [screen.py:show_panel()] - Reinitializing panel job_status
2025-08-27 19:21:55,504 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-27 19:21:55,516 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-08-27 19:21:55,532 [job_status.py:update_filename()] - Updating filename to Test_Supports(1)_0.2mm_PLA_Generic Klipper Printer_16m51s.gcode
2025-08-27 19:21:55,533 [job_status.py:_update_file_metadata()] - Update Metadata. File: Test_Supports(1)_0.2mm_PLA_Generic Klipper Printer_16m51s.gcode Size: 1821649
2025-08-27 19:22:56,166 [screensaver.py:show()] - Showing Screensaver
2025-08-27 19:25:02,242 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2025-08-27 19:25:02,243 [printer.py:change_state()] - Adding callback for state: paused
2025-08-27 19:25:02,252 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'paused'
2025-08-27 19:25:02,260 [screensaver.py:close()] - Closing Screensaver
2025-08-27 19:25:02,269 [screen.py:wake_screen()] - Screen wake up
2025-08-27 19:25:02,430 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 19:25:02,430 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 19:25:02,431 [screen.py:show_panel()] - Panel is already is in view
2025-08-27 19:25:02,434 [screen.py:show_panel()] - Reinitializing panel extrude
2025-08-27 19:25:02,492 [screen.py:attach_panel()] - Current panel hierarchy: job_status > extrude
2025-08-27 19:25:29,820 [printer.py:change_state()] - Changing state from 'paused' to 'ready'
2025-08-27 19:25:29,820 [printer.py:change_state()] - Adding callback for state: ready
2025-08-27 19:25:29,948 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 19:25:29,949 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 19:26:30,152 [screensaver.py:show()] - Showing Screensaver
2025-08-27 19:26:39,287 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-08-27 19:26:39,288 [printer.py:change_state()] - Adding callback for state: printing
2025-08-27 19:26:39,290 [screensaver.py:close()] - Closing Screensaver
2025-08-27 19:26:39,292 [screen.py:wake_screen()] - Screen wake up
2025-08-27 19:26:39,484 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 19:26:39,485 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 19:26:39,485 [screen.py:_menu_go_back()] - #### Menu go home
2025-08-27 19:26:39,489 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-27 19:26:39,568 [screen.py:show_panel()] - Reinitializing panel job_status
2025-08-27 19:26:39,659 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-27 19:26:39,672 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-08-27 19:26:39,685 [job_status.py:update_filename()] - Updating filename to Test_Supports(1)_0.2mm_PLA_Generic Klipper Printer_16m51s.gcode
2025-08-27 19:26:39,686 [job_status.py:_update_file_metadata()] - Update Metadata. File: Test_Supports(1)_0.2mm_PLA_Generic Klipper Printer_16m51s.gcode Size: 1821649
2025-08-27 19:26:39,709 [screen.py:attach_panel()] - Current panel hierarchy: job_status > job_status
2025-08-27 19:27:40,155 [screensaver.py:show()] - Showing Screensaver
2025-08-27 19:27:57,766 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2025-08-27 19:27:57,766 [printer.py:change_state()] - Adding callback for state: paused
2025-08-27 19:27:57,775 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'paused'
2025-08-27 19:27:57,784 [screensaver.py:close()] - Closing Screensaver
2025-08-27 19:27:57,792 [screen.py:wake_screen()] - Screen wake up
2025-08-27 19:27:57,961 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 19:27:57,962 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 19:27:57,962 [screen.py:show_panel()] - Panel is already is in view
2025-08-27 19:27:57,966 [screen.py:show_panel()] - Reinitializing panel extrude
2025-08-27 19:27:58,028 [screen.py:attach_panel()] - Current panel hierarchy: job_status > job_status > extrude
2025-08-27 19:28:41,639 [printer.py:change_state()] - Changing state from 'paused' to 'ready'
2025-08-27 19:28:41,639 [printer.py:change_state()] - Adding callback for state: ready
2025-08-27 19:28:41,771 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 19:28:41,771 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 19:29:22,956 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-27 19:29:22,957 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-27 19:29:23,059 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 19:29:23,059 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 19:29:23,059 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-27 19:29:23,060 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-27 19:29:23,137 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-27 19:29:23,164 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-27 19:29:27,170 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-27 19:29:27,394 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-27 19:29:27,394 [printer.py:log_counts()] - # Extruders: 1
2025-08-27 19:29:27,394 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-27 19:29:27,394 [printer.py:log_counts()] - # Fans: 3
2025-08-27 19:29:27,394 [printer.py:log_counts()] - # Output pins: 0
2025-08-27 19:29:27,395 [printer.py:log_counts()] - # PWM tools: 0
2025-08-27 19:29:27,395 [printer.py:log_counts()] - # Leds: 1
2025-08-27 19:29:27,646 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-27 19:29:27,647 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-27 19:29:27,648 [screen.py:init_klipper()] - Printer initialized
2025-08-27 19:29:27,649 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2025-08-27 19:29:27,649 [printer.py:change_state()] - Adding callback for state: startup
2025-08-27 19:29:27,734 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 19:29:27,735 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 19:29:28,640 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2025-08-27 19:29:28,640 [printer.py:change_state()] - Adding callback for state: ready
2025-08-27 19:29:28,729 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 19:29:28,729 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 19:29:28,730 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-27 19:29:28,733 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-27 19:29:28,820 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-27 19:29:28,936 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-27 19:29:28,955 [main_menu.py:add_device()] - Adding device: extruder
2025-08-27 19:29:28,962 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-27 19:29:28,997 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-27 19:29:29,017 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-27 19:29:29,077 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-27 19:29:29,097 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-27 19:30:29,152 [screensaver.py:show()] - Showing Screensaver
2025-08-27 19:31:04,837 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-27 19:31:04,838 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-27 19:31:04,838 [screensaver.py:close()] - Closing Screensaver
2025-08-27 19:31:04,842 [screen.py:wake_screen()] - Screen wake up
2025-08-27 19:31:05,029 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 19:31:05,029 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 19:31:05,029 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-27 19:31:05,030 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-27 19:31:05,123 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-27 19:31:05,155 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-27 19:31:09,092 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-27 19:31:09,303 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-27 19:31:09,303 [printer.py:log_counts()] - # Extruders: 1
2025-08-27 19:31:09,303 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-27 19:31:09,303 [printer.py:log_counts()] - # Fans: 3
2025-08-27 19:31:09,303 [printer.py:log_counts()] - # Output pins: 0
2025-08-27 19:31:09,304 [printer.py:log_counts()] - # PWM tools: 0
2025-08-27 19:31:09,304 [printer.py:log_counts()] - # Leds: 1
2025-08-27 19:31:09,548 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-27 19:31:09,549 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-27 19:31:09,550 [screen.py:init_klipper()] - Printer initialized
2025-08-27 19:31:09,551 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-27 19:31:09,551 [printer.py:change_state()] - Adding callback for state: ready
2025-08-27 19:31:09,570 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-27 19:31:09,801 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-27 19:31:09,802 [printer.py:log_counts()] - # Extruders: 1
2025-08-27 19:31:09,802 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-27 19:31:09,802 [printer.py:log_counts()] - # Fans: 3
2025-08-27 19:31:09,802 [printer.py:log_counts()] - # Output pins: 0
2025-08-27 19:31:09,802 [printer.py:log_counts()] - # PWM tools: 0
2025-08-27 19:31:09,802 [printer.py:log_counts()] - # Leds: 1
2025-08-27 19:31:10,053 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-27 19:31:10,054 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-27 19:31:10,055 [screen.py:init_klipper()] - Printer initialized
2025-08-27 19:31:10,146 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 19:31:10,147 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 19:31:10,147 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-27 19:31:10,151 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-27 19:31:10,246 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-27 19:31:10,357 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-27 19:31:10,375 [main_menu.py:add_device()] - Adding device: extruder
2025-08-27 19:31:10,380 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-27 19:31:10,408 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-27 19:31:10,423 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-27 19:31:10,459 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-27 19:31:10,476 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-27 19:32:10,152 [screensaver.py:show()] - Showing Screensaver
2025-08-27 19:32:17,749 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-08-27 19:32:17,750 [printer.py:change_state()] - Adding callback for state: printing
2025-08-27 19:32:17,752 [screensaver.py:close()] - Closing Screensaver
2025-08-27 19:32:17,755 [screen.py:wake_screen()] - Screen wake up
2025-08-27 19:32:17,972 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 19:32:17,973 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 19:32:17,973 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-27 19:32:18,061 [screen.py:show_panel()] - Reinitializing panel job_status
2025-08-27 19:32:18,152 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-27 19:32:18,164 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-08-27 19:32:18,178 [job_status.py:update_filename()] - Updating filename to Test_Supports(1)_0.2mm_PLA_Generic Klipper Printer_16m51s.gcode
2025-08-27 19:32:18,178 [job_status.py:_update_file_metadata()] - Update Metadata. File: Test_Supports(1)_0.2mm_PLA_Generic Klipper Printer_16m51s.gcode Size: 1821649
2025-08-27 19:33:18,152 [screensaver.py:show()] - Showing Screensaver
2025-08-27 19:50:34,190 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-08-27 19:50:34,191 [printer.py:change_state()] - Adding callback for state: ready
2025-08-27 19:50:34,202 [screensaver.py:close()] - Closing Screensaver
2025-08-27 19:50:34,206 [screen.py:wake_screen()] - Screen wake up
2025-08-27 19:50:34,289 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'complete'
2025-08-27 19:50:34,414 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 19:50:34,414 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 19:51:04,998 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-27 19:51:04,998 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-27 19:51:05,102 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 19:51:05,103 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 19:51:05,103 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-27 19:51:05,103 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-27 19:51:05,181 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-27 19:51:05,211 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-27 19:51:09,139 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 4, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-27 19:51:09,378 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-27 19:51:09,379 [printer.py:log_counts()] - # Extruders: 1
2025-08-27 19:51:09,379 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-27 19:51:09,379 [printer.py:log_counts()] - # Fans: 3
2025-08-27 19:51:09,379 [printer.py:log_counts()] - # Output pins: 0
2025-08-27 19:51:09,379 [printer.py:log_counts()] - # PWM tools: 0
2025-08-27 19:51:09,379 [printer.py:log_counts()] - # Leds: 1
2025-08-27 19:51:09,626 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-27 19:51:09,627 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-27 19:51:09,627 [screen.py:init_klipper()] - Printer initialized
2025-08-27 19:51:09,628 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-27 19:51:09,628 [printer.py:change_state()] - Adding callback for state: ready
2025-08-27 19:51:09,644 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 4, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-27 19:51:09,880 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-27 19:51:09,880 [printer.py:log_counts()] - # Extruders: 1
2025-08-27 19:51:09,880 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-27 19:51:09,880 [printer.py:log_counts()] - # Fans: 3
2025-08-27 19:51:09,880 [printer.py:log_counts()] - # Output pins: 0
2025-08-27 19:51:09,880 [printer.py:log_counts()] - # PWM tools: 0
2025-08-27 19:51:09,881 [printer.py:log_counts()] - # Leds: 1
2025-08-27 19:51:10,195 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-27 19:51:10,196 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-27 19:51:10,196 [screen.py:init_klipper()] - Printer initialized
2025-08-27 19:51:10,286 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 19:51:10,287 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 19:51:10,287 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-27 19:51:10,290 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-27 19:51:10,367 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-27 19:51:10,533 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-27 19:51:10,548 [main_menu.py:add_device()] - Adding device: extruder
2025-08-27 19:51:10,553 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-27 19:51:10,580 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-27 19:51:10,595 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-27 19:51:10,633 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-27 19:51:10,649 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-27 19:52:11,151 [screensaver.py:show()] - Showing Screensaver
2025-08-27 20:00:41,913 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-08-27 20:00:41,913 [printer.py:change_state()] - Adding callback for state: printing
2025-08-27 20:00:41,915 [screensaver.py:close()] - Closing Screensaver
2025-08-27 20:00:41,919 [screen.py:wake_screen()] - Screen wake up
2025-08-27 20:00:42,153 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 20:00:42,154 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 20:00:42,154 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-27 20:00:42,261 [screen.py:show_panel()] - Reinitializing panel job_status
2025-08-27 20:00:42,353 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-27 20:00:42,366 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-08-27 20:00:42,382 [job_status.py:update_filename()] - Updating filename to Test_Supports(1)_0.2mm_PLA_Generic Klipper Printer_16m50s.gcode
2025-08-27 20:00:42,383 [job_status.py:_update_file_metadata()] - Update Metadata. File: Test_Supports(1)_0.2mm_PLA_Generic Klipper Printer_16m50s.gcode Size: 1819851
2025-08-27 20:01:42,154 [screensaver.py:show()] - Showing Screensaver
2025-08-27 20:18:58,328 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-08-27 20:18:58,328 [printer.py:change_state()] - Adding callback for state: ready
2025-08-27 20:18:58,349 [screensaver.py:close()] - Closing Screensaver
2025-08-27 20:18:58,357 [screen.py:wake_screen()] - Screen wake up
2025-08-27 20:18:58,449 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'complete'
2025-08-27 20:18:58,603 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 20:18:58,604 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 20:19:13,065 [job_status.py:_update_file_metadata()] - Update Metadata. File: Test_Supports(1)_0.2mm_PLA_Generic Klipper Printer_16m50s.gcode Size: 1819851
2025-08-27 20:19:29,201 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-27 20:19:29,201 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-27 20:19:29,325 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 20:19:29,325 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 20:19:29,325 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-27 20:19:29,326 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-27 20:19:29,419 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-27 20:19:29,468 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-27 20:19:33,443 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 9, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-27 20:19:33,673 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-27 20:19:33,673 [printer.py:log_counts()] - # Extruders: 1
2025-08-27 20:19:33,674 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-27 20:19:33,674 [printer.py:log_counts()] - # Fans: 3
2025-08-27 20:19:33,674 [printer.py:log_counts()] - # Output pins: 0
2025-08-27 20:19:33,674 [printer.py:log_counts()] - # PWM tools: 0
2025-08-27 20:19:33,674 [printer.py:log_counts()] - # Leds: 1
2025-08-27 20:19:33,933 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-27 20:19:33,934 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-27 20:19:33,935 [screen.py:init_klipper()] - Printer initialized
2025-08-27 20:19:33,936 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-27 20:19:33,936 [printer.py:change_state()] - Adding callback for state: ready
2025-08-27 20:19:34,035 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 20:19:34,036 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 20:19:34,036 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-27 20:19:34,039 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-27 20:19:34,122 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-27 20:19:34,242 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-27 20:19:34,259 [main_menu.py:add_device()] - Adding device: extruder
2025-08-27 20:19:34,264 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-27 20:19:34,296 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-27 20:19:34,312 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-27 20:19:34,354 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-27 20:19:34,379 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-27 20:19:34,418 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 9, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-27 20:19:34,694 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-27 20:19:34,695 [printer.py:log_counts()] - # Extruders: 1
2025-08-27 20:19:34,695 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-27 20:19:34,695 [printer.py:log_counts()] - # Fans: 3
2025-08-27 20:19:34,695 [printer.py:log_counts()] - # Output pins: 0
2025-08-27 20:19:34,695 [printer.py:log_counts()] - # PWM tools: 0
2025-08-27 20:19:34,695 [printer.py:log_counts()] - # Leds: 1
2025-08-27 20:19:34,936 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-27 20:19:34,938 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-27 20:19:34,938 [screen.py:init_klipper()] - Printer initialized
2025-08-27 20:19:35,114 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-08-27 20:19:35,152 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-27 20:19:35,189 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-27 20:20:34,161 [screensaver.py:show()] - Showing Screensaver
2025-08-27 20:22:07,890 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-08-27 20:22:07,890 [printer.py:change_state()] - Adding callback for state: printing
2025-08-27 20:22:07,892 [screensaver.py:close()] - Closing Screensaver
2025-08-27 20:22:07,895 [screen.py:wake_screen()] - Screen wake up
2025-08-27 20:22:08,114 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 20:22:08,114 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 20:22:08,115 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-27 20:22:08,219 [screen.py:show_panel()] - Reinitializing panel job_status
2025-08-27 20:22:08,308 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-27 20:22:08,320 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-08-27 20:22:08,333 [job_status.py:update_filename()] - Updating filename to obj_1_Support Test Model v3_0.2mm_PLA_Generic Klipper Printer_30m30s.gcode
2025-08-27 20:22:08,334 [job_status.py:_update_file_metadata()] - Update Metadata. File: obj_1_Support Test Model v3_0.2mm_PLA_Generic Klipper Printer_30m30s.gcode Size: 2512946
2025-08-27 20:23:08,152 [screensaver.py:show()] - Showing Screensaver
2025-08-27 20:54:10,827 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-08-27 20:54:10,828 [printer.py:change_state()] - Adding callback for state: ready
2025-08-27 20:54:10,847 [screensaver.py:close()] - Closing Screensaver
2025-08-27 20:54:10,855 [screen.py:wake_screen()] - Screen wake up
2025-08-27 20:54:10,943 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'complete'
2025-08-27 20:54:11,084 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 20:54:11,085 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 20:54:41,797 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-27 20:54:41,797 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-27 20:54:41,903 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 20:54:41,904 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 20:54:41,904 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-27 20:54:41,905 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-27 20:54:41,985 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-27 20:54:42,015 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-27 20:54:45,998 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 9, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-27 20:54:46,229 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-27 20:54:46,229 [printer.py:log_counts()] - # Extruders: 1
2025-08-27 20:54:46,229 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-27 20:54:46,230 [printer.py:log_counts()] - # Fans: 3
2025-08-27 20:54:46,230 [printer.py:log_counts()] - # Output pins: 0
2025-08-27 20:54:46,230 [printer.py:log_counts()] - # PWM tools: 0
2025-08-27 20:54:46,230 [printer.py:log_counts()] - # Leds: 1
2025-08-27 20:54:46,494 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-27 20:54:46,497 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-27 20:54:46,498 [screen.py:init_klipper()] - Printer initialized
2025-08-27 20:54:46,499 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-27 20:54:46,500 [printer.py:change_state()] - Adding callback for state: ready
2025-08-27 20:54:46,524 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 9, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-27 20:54:46,744 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-27 20:54:46,744 [printer.py:log_counts()] - # Extruders: 1
2025-08-27 20:54:46,744 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-27 20:54:46,745 [printer.py:log_counts()] - # Fans: 3
2025-08-27 20:54:46,745 [printer.py:log_counts()] - # Output pins: 0
2025-08-27 20:54:46,745 [printer.py:log_counts()] - # PWM tools: 0
2025-08-27 20:54:46,745 [printer.py:log_counts()] - # Leds: 1
2025-08-27 20:54:46,986 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-27 20:54:46,988 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-27 20:54:46,989 [screen.py:init_klipper()] - Printer initialized
2025-08-27 20:54:47,079 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 20:54:47,080 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 20:54:47,080 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-27 20:54:47,083 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-27 20:54:47,166 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-27 20:54:47,283 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-27 20:54:47,300 [main_menu.py:add_device()] - Adding device: extruder
2025-08-27 20:54:47,306 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-27 20:54:47,336 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-27 20:54:47,352 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-27 20:54:47,388 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-27 20:54:47,409 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-27 20:55:47,155 [screensaver.py:show()] - Showing Screensaver
2025-08-27 21:43:28,569 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-08-27 21:43:28,570 [printer.py:change_state()] - Adding callback for state: printing
2025-08-27 21:43:28,572 [screensaver.py:close()] - Closing Screensaver
2025-08-27 21:43:28,577 [screen.py:wake_screen()] - Screen wake up
2025-08-27 21:43:28,832 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-27 21:43:28,833 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-27 21:43:28,835 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-27 21:43:28,928 [screen.py:show_panel()] - Reinitializing panel job_status
2025-08-27 21:43:29,022 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-27 21:43:29,034 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-08-27 21:43:29,050 [job_status.py:update_filename()] - Updating filename to 機甲超夢s_0.2mm_PLA_Generic Klipper Printer_2h19m.gcode
2025-08-27 21:43:29,052 [job_status.py:_update_file_metadata()] - Update Metadata. File: 機甲超夢s_0.2mm_PLA_Generic Klipper Printer_2h19m.gcode Size: 16053695
2025-08-27 21:44:29,152 [screensaver.py:show()] - Showing Screensaver
2025-08-28 00:04:06,535 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-08-28 00:04:06,537 [printer.py:change_state()] - Adding callback for state: ready
2025-08-28 00:04:06,555 [screensaver.py:close()] - Closing Screensaver
2025-08-28 00:04:06,561 [screen.py:wake_screen()] - Screen wake up
2025-08-28 00:04:06,642 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'complete'
2025-08-28 00:04:06,767 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-28 00:04:06,767 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-28 00:04:37,459 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-28 00:04:37,459 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-28 00:04:37,560 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-28 00:04:37,561 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-28 00:04:37,561 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-28 00:04:37,562 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-28 00:04:37,643 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-28 00:04:37,676 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-28 00:04:41,664 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-28 00:04:41,900 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-28 00:04:41,900 [printer.py:log_counts()] - # Extruders: 1
2025-08-28 00:04:41,901 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-28 00:04:41,901 [printer.py:log_counts()] - # Fans: 3
2025-08-28 00:04:41,901 [printer.py:log_counts()] - # Output pins: 0
2025-08-28 00:04:41,901 [printer.py:log_counts()] - # PWM tools: 0
2025-08-28 00:04:41,901 [printer.py:log_counts()] - # Leds: 1
2025-08-28 00:04:42,160 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-28 00:04:42,162 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-28 00:04:42,162 [screen.py:init_klipper()] - Printer initialized
2025-08-28 00:04:42,163 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-28 00:04:42,164 [printer.py:change_state()] - Adding callback for state: ready
2025-08-28 00:04:42,197 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-28 00:04:42,407 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-28 00:04:42,407 [printer.py:log_counts()] - # Extruders: 1
2025-08-28 00:04:42,407 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-28 00:04:42,408 [printer.py:log_counts()] - # Fans: 3
2025-08-28 00:04:42,408 [printer.py:log_counts()] - # Output pins: 0
2025-08-28 00:04:42,408 [printer.py:log_counts()] - # PWM tools: 0
2025-08-28 00:04:42,408 [printer.py:log_counts()] - # Leds: 1
2025-08-28 00:04:42,657 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-28 00:04:42,658 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-28 00:04:42,659 [screen.py:init_klipper()] - Printer initialized
2025-08-28 00:04:42,749 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-28 00:04:42,750 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-28 00:04:42,750 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-28 00:04:42,753 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-28 00:04:42,837 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-28 00:04:42,947 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-28 00:04:42,963 [main_menu.py:add_device()] - Adding device: extruder
2025-08-28 00:04:42,969 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-28 00:04:42,996 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-28 00:04:43,011 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-28 00:04:43,046 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-28 00:04:43,062 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-28 00:05:43,151 [screensaver.py:show()] - Showing Screensaver
2025-08-28 00:11:23,396 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-08-28 00:11:23,397 [printer.py:change_state()] - Adding callback for state: printing
2025-08-28 00:11:23,400 [screensaver.py:close()] - Closing Screensaver
2025-08-28 00:11:23,406 [screen.py:wake_screen()] - Screen wake up
2025-08-28 00:11:23,604 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-28 00:11:23,605 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-28 00:11:23,606 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-28 00:11:23,714 [screen.py:show_panel()] - Reinitializing panel job_status
2025-08-28 00:11:23,819 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-28 00:11:23,831 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-08-28 00:11:23,843 [job_status.py:update_filename()] - Updating filename to obj_2_Stealth Stash 420 v8_2_0.2mm_PLA_Generic Klipper Printer_1h48m.gcode
2025-08-28 00:11:23,844 [job_status.py:_update_file_metadata()] - Update Metadata. File: obj_2_Stealth Stash 420 v8_2_0.2mm_PLA_Generic Klipper Printer_1h48m.gcode Size: 3911375
2025-08-28 00:12:24,152 [screensaver.py:show()] - Showing Screensaver
2025-08-28 02:01:42,970 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-08-28 02:01:42,971 [printer.py:change_state()] - Adding callback for state: ready
2025-08-28 02:01:42,993 [screensaver.py:close()] - Closing Screensaver
2025-08-28 02:01:42,998 [screen.py:wake_screen()] - Screen wake up
2025-08-28 02:01:43,088 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'complete'
2025-08-28 02:01:43,233 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-28 02:01:43,233 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-28 02:02:13,893 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-28 02:02:13,894 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-28 02:02:14,014 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-28 02:02:14,014 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-28 02:02:14,014 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-28 02:02:14,015 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-28 02:02:14,092 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-28 02:02:14,126 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-28 02:02:18,079 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-28 02:02:18,299 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-28 02:02:18,299 [printer.py:log_counts()] - # Extruders: 1
2025-08-28 02:02:18,299 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-28 02:02:18,299 [printer.py:log_counts()] - # Fans: 3
2025-08-28 02:02:18,300 [printer.py:log_counts()] - # Output pins: 0
2025-08-28 02:02:18,300 [printer.py:log_counts()] - # PWM tools: 0
2025-08-28 02:02:18,300 [printer.py:log_counts()] - # Leds: 1
2025-08-28 02:02:18,561 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-28 02:02:18,562 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-28 02:02:18,563 [screen.py:init_klipper()] - Printer initialized
2025-08-28 02:02:18,564 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-28 02:02:18,564 [printer.py:change_state()] - Adding callback for state: ready
2025-08-28 02:02:18,582 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-28 02:02:18,811 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-28 02:02:18,811 [printer.py:log_counts()] - # Extruders: 1
2025-08-28 02:02:18,811 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-28 02:02:18,811 [printer.py:log_counts()] - # Fans: 3
2025-08-28 02:02:18,812 [printer.py:log_counts()] - # Output pins: 0
2025-08-28 02:02:18,812 [printer.py:log_counts()] - # PWM tools: 0
2025-08-28 02:02:18,812 [printer.py:log_counts()] - # Leds: 1
2025-08-28 02:02:19,059 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-28 02:02:19,060 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-28 02:02:19,060 [screen.py:init_klipper()] - Printer initialized
2025-08-28 02:02:19,149 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-28 02:02:19,149 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-28 02:02:19,150 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-28 02:02:19,154 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-28 02:02:19,240 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-28 02:02:19,360 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-28 02:02:19,377 [main_menu.py:add_device()] - Adding device: extruder
2025-08-28 02:02:19,382 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-28 02:02:19,411 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-28 02:02:19,430 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-28 02:02:19,464 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-28 02:02:19,486 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-28 02:03:19,152 [screensaver.py:show()] - Showing Screensaver
2025-08-28 02:30:21,521 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-28 02:30:21,521 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-28 02:30:21,523 [screensaver.py:close()] - Closing Screensaver
2025-08-28 02:30:21,526 [screen.py:wake_screen()] - Screen wake up
2025-08-28 02:30:21,695 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-28 02:30:21,695 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-28 02:30:21,695 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-28 02:30:21,696 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-28 02:30:21,770 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-28 02:30:21,798 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-28 02:30:25,726 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-28 02:30:25,940 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-28 02:30:25,940 [printer.py:log_counts()] - # Extruders: 1
2025-08-28 02:30:25,940 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-28 02:30:25,941 [printer.py:log_counts()] - # Fans: 3
2025-08-28 02:30:25,941 [printer.py:log_counts()] - # Output pins: 0
2025-08-28 02:30:25,941 [printer.py:log_counts()] - # PWM tools: 0
2025-08-28 02:30:25,941 [printer.py:log_counts()] - # Leds: 1
2025-08-28 02:30:26,206 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-28 02:30:26,209 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-28 02:30:26,209 [screen.py:init_klipper()] - Printer initialized
2025-08-28 02:30:26,210 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-28 02:30:26,211 [printer.py:change_state()] - Adding callback for state: ready
2025-08-28 02:30:26,240 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-28 02:30:26,450 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-28 02:30:26,450 [printer.py:log_counts()] - # Extruders: 1
2025-08-28 02:30:26,450 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-28 02:30:26,450 [printer.py:log_counts()] - # Fans: 3
2025-08-28 02:30:26,451 [printer.py:log_counts()] - # Output pins: 0
2025-08-28 02:30:26,451 [printer.py:log_counts()] - # PWM tools: 0
2025-08-28 02:30:26,451 [printer.py:log_counts()] - # Leds: 1
2025-08-28 02:30:26,700 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-28 02:30:26,701 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-28 02:30:26,702 [screen.py:init_klipper()] - Printer initialized
2025-08-28 02:30:26,792 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-28 02:30:26,793 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-28 02:30:26,793 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-28 02:30:26,796 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-28 02:30:26,880 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-28 02:30:26,999 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-28 02:30:27,015 [main_menu.py:add_device()] - Adding device: extruder
2025-08-28 02:30:27,020 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-28 02:30:27,053 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-28 02:30:27,068 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-28 02:30:27,107 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-28 02:30:27,125 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-28 02:31:27,181 [screensaver.py:show()] - Showing Screensaver
2025-08-28 02:37:14,277 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-08-28 02:37:14,278 [printer.py:change_state()] - Adding callback for state: printing
2025-08-28 02:37:14,280 [screensaver.py:close()] - Closing Screensaver
2025-08-28 02:37:14,282 [screen.py:wake_screen()] - Screen wake up
2025-08-28 02:37:14,493 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-28 02:37:14,493 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-28 02:37:14,493 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-28 02:37:14,586 [screen.py:show_panel()] - Reinitializing panel job_status
2025-08-28 02:37:14,674 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-28 02:37:14,685 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-08-28 02:37:14,698 [job_status.py:update_filename()] - Updating filename to temperature_tower_0.2mm_PLA_Generic Klipper Printer_57m39s.gcode
2025-08-28 02:37:14,699 [job_status.py:_update_file_metadata()] - Update Metadata. File: temperature_tower_0.2mm_PLA_Generic Klipper Printer_57m39s.gcode Size: 2785196
2025-08-28 02:38:15,154 [screensaver.py:show()] - Showing Screensaver
2025-08-28 03:38:11,074 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-08-28 03:38:11,074 [printer.py:change_state()] - Adding callback for state: ready
2025-08-28 03:38:11,093 [screensaver.py:close()] - Closing Screensaver
2025-08-28 03:38:11,100 [screen.py:wake_screen()] - Screen wake up
2025-08-28 03:38:11,184 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'complete'
2025-08-28 03:38:11,314 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-28 03:38:11,315 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-28 03:38:42,083 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-28 03:38:42,083 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-28 03:38:42,180 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-28 03:38:42,181 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-28 03:38:42,181 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-28 03:38:42,182 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-28 03:38:42,265 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-28 03:38:42,294 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-28 03:38:46,167 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-28 03:38:46,447 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-28 03:38:46,447 [printer.py:log_counts()] - # Extruders: 1
2025-08-28 03:38:46,447 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-28 03:38:46,448 [printer.py:log_counts()] - # Fans: 3
2025-08-28 03:38:46,448 [printer.py:log_counts()] - # Output pins: 0
2025-08-28 03:38:46,448 [printer.py:log_counts()] - # PWM tools: 0
2025-08-28 03:38:46,448 [printer.py:log_counts()] - # Leds: 1
2025-08-28 03:38:46,706 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-28 03:38:46,707 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-28 03:38:46,707 [screen.py:init_klipper()] - Printer initialized
2025-08-28 03:38:46,708 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-28 03:38:46,708 [printer.py:change_state()] - Adding callback for state: ready
2025-08-28 03:38:46,799 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-28 03:38:46,800 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-28 03:38:46,800 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-28 03:38:46,804 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-28 03:38:46,885 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-28 03:38:46,994 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-28 03:38:47,011 [main_menu.py:add_device()] - Adding device: extruder
2025-08-28 03:38:47,016 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-28 03:38:47,043 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-28 03:38:47,067 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-28 03:38:47,103 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-28 03:38:47,120 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-28 03:39:47,164 [screensaver.py:show()] - Showing Screensaver
2025-08-29 18:41:58,958 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-08-29 18:41:58,959 [functions.py:log_start()] - KlipperScreen Version: v0.4.6-11-g6b6f63b6
2025-08-29 18:41:58,960 [functions.py:log_start()] - Python version: 3.9
2025-08-29 18:41:59,153 [config.py:get_config_file_location()] - Passed config (-c): .
2025-08-29 18:41:59,154 [config.py:__init__()] - Config path location: /home/sonic/printer_data/config/KlipperScreen.conf
2025-08-29 18:41:59,157 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/main_menu.conf']
2025-08-29 18:41:59,171 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/splash_menu.conf']
2025-08-29 18:41:59,177 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/print_menu.conf']
2025-08-29 18:41:59,187 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/move_menu.conf']
2025-08-29 18:41:59,199 [config.py:log_config()] - ===== Config File =====

=======================
2025-08-29 18:41:59,202 [config.py:__init__()] - ====== Saved Def ======

[main]
screen_blanking = 60
screen_blanking_printing = 60
24htime = False
font_size = small
show_heater_power = True

[graph Printer]
heater_bed = False

=======================
2025-08-29 18:41:59,203 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_path": "",
      "moonraker_ssl": null,
      "moonraker_api_key": ""
    }
  }
]
2025-08-29 18:41:59,396 [config.py:create_translations()] - Selected lang: system_lang OS lang: en_US
2025-08-29 18:41:59,397 [config.py:install_language()] - Using lang en
2025-08-29 18:41:59,417 [screen.py:__init__()] - Display for xset: :0
2025-08-29 18:41:59,419 [screen.py:__init__()] - Screen 0: 1024x600
2025-08-29 18:41:59,419 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-08-29 18:41:59,420 [screen.py:__init__()] - Wayland: False Display name: :0
2025-08-29 18:41:59,424 [screen.py:__init__()] - Screen resolution: 1024x600
2025-08-29 18:41:59,740 [KlippyGtk.py:__init__()] - Font size: 20.2 (small)
2025-08-29 18:42:00,203 [base_panel.py:battery_percentage()] - Battery information not available.
2025-08-29 18:42:00,590 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-29 18:42:00,591 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-29 18:42:00,592 [screen.py:initial_connection()] - Default printer: None
2025-08-29 18:42:00,685 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-08-29 18:42:00,686 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-29 18:42:00,760 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-08-29 18:42:00,886 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-29 18:42:00,926 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-08-29 18:42:00,927 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-08-29 18:42:05,575 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-08-29 18:42:05,576 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-08-29 18:42:05,596 [_logging.py:info()] - Websocket connected
2025-08-29 18:42:05,597 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-08-29 18:42:05,598 [screen.py:websocket_connected()] - ### websocket_connected
2025-08-29 18:42:05,712 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-08-29 18:42:05,748 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-08-29 18:42:05,771 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-29 18:42:05,900 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-29 18:42:05,901 [printer.py:log_counts()] - # Extruders: 1
2025-08-29 18:42:05,901 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-29 18:42:05,901 [printer.py:log_counts()] - # Fans: 3
2025-08-29 18:42:05,901 [printer.py:log_counts()] - # Output pins: 0
2025-08-29 18:42:05,901 [printer.py:log_counts()] - # PWM tools: 0
2025-08-29 18:42:05,902 [printer.py:log_counts()] - # Leds: 1
2025-08-29 18:42:06,151 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-29 18:42:06,155 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-29 18:42:06,156 [screen.py:init_klipper()] - Printer initialized
2025-08-29 18:42:06,157 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-29 18:42:06,158 [printer.py:change_state()] - Adding callback for state: ready
2025-08-29 18:42:06,222 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-29 18:42:06,223 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-29 18:42:06,223 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-29 18:42:06,229 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-29 18:42:06,292 [screen.py:_load_panel()] - Loading panel: main_menu
2025-08-29 18:42:06,522 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-29 18:42:06,540 [main_menu.py:add_device()] - Adding device: extruder
2025-08-29 18:42:06,551 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-29 18:42:06,590 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-29 18:42:06,631 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-29 18:42:06,661 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-29 18:42:06,681 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-29 18:43:13,138 [base_panel.py:battery_percentage()] - Battery information not available.
2025-08-29 18:43:19,140 [screensaver.py:show()] - Showing Screensaver
2025-08-29 18:44:11,838 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-29 18:44:11,839 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-29 18:44:11,839 [screensaver.py:close()] - Closing Screensaver
2025-08-29 18:44:11,841 [screen.py:wake_screen()] - Screen wake up
2025-08-29 18:44:11,945 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-29 18:44:11,945 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-29 18:44:11,945 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-29 18:44:11,946 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-29 18:44:12,000 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-29 18:44:12,024 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-29 18:44:15,989 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-29 18:44:16,223 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-29 18:44:16,223 [printer.py:log_counts()] - # Extruders: 1
2025-08-29 18:44:16,223 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-29 18:44:16,223 [printer.py:log_counts()] - # Fans: 3
2025-08-29 18:44:16,223 [printer.py:log_counts()] - # Output pins: 0
2025-08-29 18:44:16,224 [printer.py:log_counts()] - # PWM tools: 0
2025-08-29 18:44:16,224 [printer.py:log_counts()] - # Leds: 1
2025-08-29 18:44:16,480 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-29 18:44:16,482 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-29 18:44:16,482 [screen.py:init_klipper()] - Printer initialized
2025-08-29 18:44:16,483 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-29 18:44:16,483 [printer.py:change_state()] - Adding callback for state: ready
2025-08-29 18:44:16,500 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-29 18:44:16,738 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-29 18:44:16,739 [printer.py:log_counts()] - # Extruders: 1
2025-08-29 18:44:16,739 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-29 18:44:16,740 [printer.py:log_counts()] - # Fans: 3
2025-08-29 18:44:16,740 [printer.py:log_counts()] - # Output pins: 0
2025-08-29 18:44:16,741 [printer.py:log_counts()] - # PWM tools: 0
2025-08-29 18:44:16,741 [printer.py:log_counts()] - # Leds: 1
2025-08-29 18:44:16,981 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-29 18:44:16,982 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-29 18:44:16,983 [screen.py:init_klipper()] - Printer initialized
2025-08-29 18:44:17,035 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-29 18:44:17,035 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-29 18:44:17,035 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-29 18:44:17,038 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-29 18:44:17,094 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-29 18:44:17,192 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-29 18:44:17,207 [main_menu.py:add_device()] - Adding device: extruder
2025-08-29 18:44:17,213 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-29 18:44:17,240 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-29 18:44:17,255 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-29 18:44:17,286 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-29 18:44:17,303 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-29 18:44:21,281 [KlippyGtk.py:Dialog()] - Showing dialog Updating (width=1024, height=600)
2025-08-29 18:44:24,089 [base_panel.py:process_update()] - Update complete
2025-08-29 18:45:17,140 [screensaver.py:show()] - Showing Screensaver
2025-08-29 18:45:17,141 [screensaver.py:show()] - Hiding dialog
2025-08-29 19:36:15,562 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-29 19:36:15,562 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-29 19:36:15,565 [screensaver.py:close()] - Closing Screensaver
2025-08-29 19:36:15,568 [screen.py:wake_screen()] - Screen wake up
2025-08-29 19:36:15,605 [screensaver.py:close()] - Restoring Dialog <Gtk.Dialog object at 0xe4a07b48 (GtkDialog at 0xf441c0)>
2025-08-29 19:36:15,668 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-29 19:36:15,668 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-29 19:36:15,668 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-29 19:36:15,669 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-29 19:36:15,723 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-29 19:36:15,748 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-29 19:36:19,740 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-29 19:36:19,959 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-29 19:36:19,959 [printer.py:log_counts()] - # Extruders: 1
2025-08-29 19:36:19,960 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-29 19:36:19,960 [printer.py:log_counts()] - # Fans: 3
2025-08-29 19:36:19,960 [printer.py:log_counts()] - # Output pins: 0
2025-08-29 19:36:19,960 [printer.py:log_counts()] - # PWM tools: 0
2025-08-29 19:36:19,960 [printer.py:log_counts()] - # Leds: 1
2025-08-29 19:36:20,220 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-29 19:36:20,221 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-29 19:36:20,222 [screen.py:init_klipper()] - Printer initialized
2025-08-29 19:36:20,223 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-29 19:36:20,223 [printer.py:change_state()] - Adding callback for state: ready
2025-08-29 19:36:20,252 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-29 19:36:20,474 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-29 19:36:20,475 [printer.py:log_counts()] - # Extruders: 1
2025-08-29 19:36:20,475 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-29 19:36:20,475 [printer.py:log_counts()] - # Fans: 3
2025-08-29 19:36:20,475 [printer.py:log_counts()] - # Output pins: 0
2025-08-29 19:36:20,475 [printer.py:log_counts()] - # PWM tools: 0
2025-08-29 19:36:20,476 [printer.py:log_counts()] - # Leds: 1
2025-08-29 19:36:20,721 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-29 19:36:20,722 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-29 19:36:20,722 [screen.py:init_klipper()] - Printer initialized
2025-08-29 19:36:20,774 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-29 19:36:20,774 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-29 19:36:20,775 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-29 19:36:20,778 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-29 19:36:20,834 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-29 19:36:20,934 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-29 19:36:20,951 [main_menu.py:add_device()] - Adding device: extruder
2025-08-29 19:36:20,956 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-29 19:36:20,983 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-29 19:36:20,998 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-29 19:36:21,029 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-29 19:36:21,046 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-29 19:37:21,141 [screensaver.py:show()] - Showing Screensaver
2025-08-29 19:37:21,141 [screensaver.py:show()] - Hiding dialog
2025-08-29 19:40:08,746 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-29 19:40:08,747 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-29 19:40:08,748 [screensaver.py:close()] - Closing Screensaver
2025-08-29 19:40:08,752 [screen.py:wake_screen()] - Screen wake up
2025-08-29 19:40:08,798 [screensaver.py:close()] - Restoring Dialog <Gtk.Dialog object at 0xe4a07b48 (GtkDialog at 0xf441c0)>
2025-08-29 19:40:08,845 [KlippyWebsocket.py:on_close()] - 1001 Server Shutdown
2025-08-29 19:40:08,848 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2025-08-29 19:40:08,866 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-29 19:40:08,867 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-29 19:40:08,867 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-29 19:40:08,867 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-29 19:40:08,930 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-29 19:40:08,960 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-29 19:40:08,977 [screen.py:websocket_disconnected()] - ### websocket_disconnected
2025-08-29 19:40:08,978 [screen.py:show_panel()] - Panel is already is in view
2025-08-29 19:40:09,042 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-08-29 19:40:09,043 [screen.py:show_panel()] - Panel is already is in view
2025-08-29 19:40:09,057 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-08-29 19:40:09,057 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-08-29 19:40:13,149 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-08-29 19:40:13,149 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-08-29 19:40:13,163 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-08-29 19:40:13,164 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-08-29 19:40:17,154 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-08-29 19:40:17,155 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-08-29 19:40:17,157 [screen.py:connect_to_moonraker()] - Already Initializing
2025-08-29 19:40:17,165 [_logging.py:info()] - Websocket connected
2025-08-29 19:40:17,165 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-08-29 19:40:17,166 [screen.py:websocket_connected()] - ### websocket_connected
2025-08-29 19:40:17,242 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-08-29 19:40:17,246 [screen.py:show_popup_message()] - warning: 
Moonraker warnings:
[update_manager]:
 Failed to load extension crowsnest:
 Invalid path for option `install_script` in section [update_manager crowsnest]:
 Path `/home/sonic/crowsnest/tools/pkglist.sh` does not exist
Unparsed config option 'origin:
 https:
//github.com/mainsail-crew/crowsnest.git' detected in section [update_manager crowsnest].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.
Unparsed config option 'managed_services:
 crowsnest' detected in section [update_manager crowsnest].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.

2025-08-29 19:40:17,270 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-08-29 19:40:17,282 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': ['[update_manager]: Failed to load extension crowsnest: Invalid path for option `install_script` in section [update_manager crowsnest]: Path `/home/sonic/crowsnest/tools/pkglist.sh` does not exist', "Unparsed config option 'origin: https://github.com/mainsail-crew/crowsnest.git' detected in section [update_manager crowsnest].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.", "Unparsed config option 'managed_services: crowsnest' detected in section [update_manager crowsnest].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error."], 'websocket_count': 4, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-29 19:40:17,557 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-29 19:40:17,557 [printer.py:log_counts()] - # Extruders: 1
2025-08-29 19:40:17,558 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-29 19:40:17,558 [printer.py:log_counts()] - # Fans: 3
2025-08-29 19:40:17,558 [printer.py:log_counts()] - # Output pins: 0
2025-08-29 19:40:17,558 [printer.py:log_counts()] - # PWM tools: 0
2025-08-29 19:40:17,558 [printer.py:log_counts()] - # Leds: 1
2025-08-29 19:40:17,839 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-29 19:40:17,840 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-29 19:40:17,840 [screen.py:init_klipper()] - Printer initialized
2025-08-29 19:40:17,841 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-29 19:40:17,842 [printer.py:change_state()] - Adding callback for state: ready
2025-08-29 19:40:18,003 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-29 19:40:18,003 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-29 19:40:18,003 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-29 19:40:18,006 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-29 19:40:18,068 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-29 19:40:18,260 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-29 19:40:18,277 [main_menu.py:add_device()] - Adding device: extruder
2025-08-29 19:40:18,282 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-29 19:40:18,312 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-29 19:40:18,329 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-29 19:40:18,362 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-29 19:40:18,381 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-29 19:41:18,140 [screensaver.py:show()] - Showing Screensaver
2025-08-29 19:41:18,143 [screensaver.py:show()] - Hiding dialog
2025-08-29 19:46:08,045 [KlippyWebsocket.py:on_close()] - 1001 Server Shutdown
2025-08-29 19:46:08,047 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2025-08-29 19:46:08,047 [screen.py:websocket_disconnected()] - ### websocket_disconnected
2025-08-29 19:46:08,048 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-29 19:46:08,052 [screensaver.py:close()] - Closing Screensaver
2025-08-29 19:46:08,058 [screen.py:wake_screen()] - Screen wake up
2025-08-29 19:46:08,108 [screensaver.py:close()] - Restoring Dialog <Gtk.Dialog object at 0xe4a07b48 (GtkDialog at 0xf441c0)>
2025-08-29 19:46:08,204 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-29 19:46:08,246 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-29 19:46:08,345 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-08-29 19:46:08,347 [screen.py:show_panel()] - Panel is already is in view
2025-08-29 19:46:08,364 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-08-29 19:46:08,365 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-08-29 19:46:12,160 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-08-29 19:46:12,160 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-08-29 19:46:12,169 [_logging.py:info()] - Websocket connected
2025-08-29 19:46:12,170 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-08-29 19:46:12,170 [screen.py:websocket_connected()] - ### websocket_connected
2025-08-29 19:46:12,247 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-08-29 19:46:12,250 [screen.py:show_popup_message()] - warning: 
Moonraker warnings:
[update_manager]:
 Failed to load extension crowsnest:
 Invalid path for option `install_script` in section [update_manager crowsnest]:
 Path `/home/sonic/crowsnest/tools/pkglist.sh` does not exist
Unparsed config option 'origin:
 https:
//github.com/mainsail-crew/crowsnest.git' detected in section [update_manager crowsnest].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.
Unparsed config option 'managed_services:
 crowsnest' detected in section [update_manager crowsnest].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.

2025-08-29 19:46:12,271 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-08-29 19:46:12,284 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': ['[update_manager]: Failed to load extension crowsnest: Invalid path for option `install_script` in section [update_manager crowsnest]: Path `/home/sonic/crowsnest/tools/pkglist.sh` does not exist', "Unparsed config option 'origin: https://github.com/mainsail-crew/crowsnest.git' detected in section [update_manager crowsnest].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.", "Unparsed config option 'managed_services: crowsnest' detected in section [update_manager crowsnest].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error."], 'websocket_count': 3, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-29 19:46:12,580 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-29 19:46:12,580 [printer.py:log_counts()] - # Extruders: 1
2025-08-29 19:46:12,580 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-29 19:46:12,581 [printer.py:log_counts()] - # Fans: 3
2025-08-29 19:46:12,581 [printer.py:log_counts()] - # Output pins: 0
2025-08-29 19:46:12,581 [printer.py:log_counts()] - # PWM tools: 0
2025-08-29 19:46:12,581 [printer.py:log_counts()] - # Leds: 1
2025-08-29 19:46:12,827 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-29 19:46:12,828 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-29 19:46:12,828 [screen.py:init_klipper()] - Printer initialized
2025-08-29 19:46:12,829 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-29 19:46:12,829 [printer.py:change_state()] - Adding callback for state: ready
2025-08-29 19:46:12,972 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-29 19:46:12,973 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-29 19:46:12,973 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-29 19:46:12,976 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-29 19:46:13,032 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-29 19:46:13,134 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-29 19:46:13,153 [main_menu.py:add_device()] - Adding device: extruder
2025-08-29 19:46:13,158 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-29 19:46:13,191 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-29 19:46:13,210 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-29 19:46:13,247 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-29 19:46:13,264 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-29 19:47:13,140 [screensaver.py:show()] - Showing Screensaver
2025-08-29 19:47:13,142 [screensaver.py:show()] - Hiding dialog
2025-08-29 20:32:02,716 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-08-29 20:32:02,716 [printer.py:change_state()] - Adding callback for state: printing
2025-08-29 20:32:02,719 [screensaver.py:close()] - Closing Screensaver
2025-08-29 20:32:02,721 [screen.py:wake_screen()] - Screen wake up
2025-08-29 20:32:02,766 [screensaver.py:close()] - Restoring Dialog <Gtk.Dialog object at 0xe4a07b48 (GtkDialog at 0xf441c0)>
2025-08-29 20:32:02,850 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-29 20:32:02,851 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-29 20:32:02,851 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-29 20:32:02,911 [screen.py:_load_panel()] - Loading panel: job_status
2025-08-29 20:32:03,126 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-08-29 20:32:03,140 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-08-29 20:32:03,172 [job_status.py:update_filename()] - Updating filename to xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m36s.gcode
2025-08-29 20:32:03,173 [job_status.py:_update_file_metadata()] - Update Metadata. File: xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m36s.gcode Size: 648535
2025-08-29 20:33:03,141 [screensaver.py:show()] - Showing Screensaver
2025-08-29 20:33:03,141 [screensaver.py:show()] - Hiding dialog
2025-08-29 20:46:45,232 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-08-29 20:46:45,233 [printer.py:change_state()] - Adding callback for state: ready
2025-08-29 20:46:45,253 [screensaver.py:close()] - Closing Screensaver
2025-08-29 20:46:45,258 [screen.py:wake_screen()] - Screen wake up
2025-08-29 20:46:45,302 [screensaver.py:close()] - Restoring Dialog <Gtk.Dialog object at 0xe4a07b48 (GtkDialog at 0xf441c0)>
2025-08-29 20:46:45,323 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'complete'
2025-08-29 20:46:45,438 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-29 20:46:45,439 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-29 20:47:16,245 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-08-29 20:47:16,246 [printer.py:change_state()] - Adding callback for state: disconnected
2025-08-29 20:47:16,311 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-29 20:47:16,312 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-29 20:47:16,312 [screen.py:state_disconnected()] - ### Going to disconnected
2025-08-29 20:47:16,313 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-29 20:47:16,377 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-29 20:47:16,409 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-29 20:47:20,624 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': ['[update_manager]: Failed to load extension crowsnest: Invalid path for option `install_script` in section [update_manager crowsnest]: Path `/home/sonic/crowsnest/tools/pkglist.sh` does not exist', "Unparsed config option 'origin: https://github.com/mainsail-crew/crowsnest.git' detected in section [update_manager crowsnest].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.", "Unparsed config option 'managed_services: crowsnest' detected in section [update_manager crowsnest].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error."], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-29 20:47:20,861 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-29 20:47:20,861 [printer.py:log_counts()] - # Extruders: 1
2025-08-29 20:47:20,861 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-29 20:47:20,861 [printer.py:log_counts()] - # Fans: 3
2025-08-29 20:47:20,861 [printer.py:log_counts()] - # Output pins: 0
2025-08-29 20:47:20,862 [printer.py:log_counts()] - # PWM tools: 0
2025-08-29 20:47:20,862 [printer.py:log_counts()] - # Leds: 1
2025-08-29 20:47:21,113 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-29 20:47:21,115 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-29 20:47:21,115 [screen.py:init_klipper()] - Printer initialized
2025-08-29 20:47:21,116 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-29 20:47:21,116 [printer.py:change_state()] - Adding callback for state: ready
2025-08-29 20:47:21,171 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-29 20:47:21,171 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-29 20:47:21,171 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-29 20:47:21,174 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-29 20:47:21,239 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-08-29 20:47:21,350 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-29 20:47:21,367 [main_menu.py:add_device()] - Adding device: extruder
2025-08-29 20:47:21,372 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-29 20:47:21,401 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-29 20:47:21,417 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-29 20:47:21,452 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-29 20:47:21,470 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-29 20:47:21,503 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': ['[update_manager]: Failed to load extension crowsnest: Invalid path for option `install_script` in section [update_manager crowsnest]: Path `/home/sonic/crowsnest/tools/pkglist.sh` does not exist', "Unparsed config option 'origin: https://github.com/mainsail-crew/crowsnest.git' detected in section [update_manager crowsnest].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.", "Unparsed config option 'managed_services: crowsnest' detected in section [update_manager crowsnest].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error."], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-29 20:47:21,678 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-29 20:47:21,679 [printer.py:log_counts()] - # Extruders: 1
2025-08-29 20:47:21,679 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-29 20:47:21,679 [printer.py:log_counts()] - # Fans: 3
2025-08-29 20:47:21,679 [printer.py:log_counts()] - # Output pins: 0
2025-08-29 20:47:21,679 [printer.py:log_counts()] - # PWM tools: 0
2025-08-29 20:47:21,679 [printer.py:log_counts()] - # Leds: 1
2025-08-29 20:47:21,865 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-29 20:47:21,866 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-29 20:47:21,866 [screen.py:init_klipper()] - Printer initialized
2025-08-29 20:47:21,913 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-08-29 20:47:21,961 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-29 20:47:22,002 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-29 20:48:22,140 [screensaver.py:show()] - Showing Screensaver
2025-08-29 20:48:22,141 [screensaver.py:show()] - Hiding dialog
2025-08-31 23:56:44,932 [printer.py:change_state()] - Changing state from 'ready' to 'shutdown'
2025-08-31 23:56:44,933 [printer.py:change_state()] - Adding callback for state: shutdown
2025-08-31 23:56:44,936 [screensaver.py:close()] - Closing Screensaver
2025-08-31 23:56:44,939 [screen.py:wake_screen()] - Screen wake up
2025-08-31 23:56:44,978 [screensaver.py:close()] - Restoring Dialog <Gtk.Dialog object at 0xe4a07b48 (GtkDialog at 0xf441c0)>
2025-08-31 23:56:45,041 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-31 23:56:45,041 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-31 23:56:45,042 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-31 23:56:45,098 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-08-31 23:56:45,124 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-31 23:57:45,141 [screensaver.py:show()] - Showing Screensaver
2025-08-31 23:57:45,141 [screensaver.py:show()] - Hiding dialog
2025-08-31 23:56:32,567 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-08-31 23:56:32,569 [functions.py:log_start()] - KlipperScreen Version: v0.4.6-11-g6b6f63b6
2025-08-31 23:56:32,569 [functions.py:log_start()] - Python version: 3.9
2025-08-31 23:56:32,769 [config.py:get_config_file_location()] - Passed config (-c): .
2025-08-31 23:56:32,769 [config.py:__init__()] - Config path location: /home/sonic/printer_data/config/KlipperScreen.conf
2025-08-31 23:56:32,773 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/main_menu.conf']
2025-08-31 23:56:32,790 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/splash_menu.conf']
2025-08-31 23:56:32,797 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/print_menu.conf']
2025-08-31 23:56:32,807 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/move_menu.conf']
2025-08-31 23:56:32,821 [config.py:log_config()] - ===== Config File =====

=======================
2025-08-31 23:56:32,824 [config.py:__init__()] - ====== Saved Def ======

[main]
screen_blanking = 60
screen_blanking_printing = 60
24htime = False
font_size = small
show_heater_power = True

[graph Printer]
heater_bed = False

=======================
2025-08-31 23:56:32,825 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_path": "",
      "moonraker_ssl": null,
      "moonraker_api_key": ""
    }
  }
]
2025-08-31 23:56:33,014 [config.py:create_translations()] - Selected lang: system_lang OS lang: en_US
2025-08-31 23:56:33,015 [config.py:install_language()] - Using lang en
2025-08-31 23:56:33,034 [screen.py:__init__()] - Display for xset: :0
2025-08-31 23:56:33,035 [screen.py:__init__()] - Screen 0: 1024x600
2025-08-31 23:56:33,036 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-08-31 23:56:33,036 [screen.py:__init__()] - Wayland: False Display name: :0
2025-08-31 23:56:33,040 [screen.py:__init__()] - Screen resolution: 1024x600
2025-08-31 23:56:33,353 [KlippyGtk.py:__init__()] - Font size: 20.2 (small)
2025-08-31 23:56:33,565 [base_panel.py:battery_percentage()] - Battery information not available.
2025-08-31 23:56:33,814 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-31 23:56:33,816 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-31 23:56:33,816 [screen.py:initial_connection()] - Default printer: None
2025-08-31 23:56:33,886 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-08-31 23:56:33,887 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-31 23:56:33,941 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-08-31 23:56:34,014 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-08-31 23:56:34,043 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-08-31 23:56:34,044 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-08-31 23:56:38,465 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-08-31 23:56:38,465 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-08-31 23:56:42,471 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-08-31 23:56:42,472 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-08-31 23:56:42,484 [_logging.py:info()] - Websocket connected
2025-08-31 23:56:42,485 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-08-31 23:56:42,487 [screen.py:websocket_connected()] - ### websocket_connected
2025-08-31 23:56:42,566 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-08-31 23:56:42,588 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-08-31 23:56:42,606 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-08-31 23:56:42,821 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-08-31 23:56:42,822 [printer.py:log_counts()] - # Extruders: 1
2025-08-31 23:56:42,822 [printer.py:log_counts()] - # Temperature devices: 1
2025-08-31 23:56:42,822 [printer.py:log_counts()] - # Fans: 3
2025-08-31 23:56:42,822 [printer.py:log_counts()] - # Output pins: 0
2025-08-31 23:56:42,822 [printer.py:log_counts()] - # PWM tools: 0
2025-08-31 23:56:42,823 [printer.py:log_counts()] - # Leds: 1
2025-08-31 23:56:43,080 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-08-31 23:56:43,086 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-08-31 23:56:43,087 [screen.py:init_klipper()] - Printer initialized
2025-08-31 23:56:43,088 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-08-31 23:56:43,088 [printer.py:change_state()] - Adding callback for state: ready
2025-08-31 23:56:43,156 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-08-31 23:56:43,157 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-08-31 23:56:43,157 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-08-31 23:56:43,160 [screen.py:_remove_all_panels()] - Removing all panels
2025-08-31 23:56:43,230 [screen.py:_load_panel()] - Loading panel: main_menu
2025-08-31 23:56:43,483 [main_menu.py:__init__()] - ### Making MainMenu
2025-08-31 23:56:43,501 [main_menu.py:add_device()] - Adding device: extruder
2025-08-31 23:56:43,511 [main_menu.py:add_device()] - Adding device: heater_bed
2025-08-31 23:56:43,549 [menu.py:arrangeMenuItems()] - X > gcodes
2025-08-31 23:56:43,567 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-08-31 23:56:43,602 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-08-31 23:56:43,624 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-08-31 23:56:48,725 [main_menu.py:toggle_visibility()] - Graph show False: extruder
2025-08-31 23:56:49,782 [main_menu.py:toggle_visibility()] - Graph show True: extruder
2025-09-01 00:15:04,868 [screen.py:_load_panel()] - Loading panel: temperature
2025-09-01 00:15:04,888 [temperature.py:add_device()] - Adding device: extruder
2025-09-01 00:15:04,894 [temperature.py:add_device()] - Adding device: heater_bed
2025-09-01 00:15:04,979 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > temperature
2025-09-01 00:15:04,981 [temperature.py:select_heater()] - Selecting extruder
2025-09-01 00:15:04,982 [temperature.py:select_heater()] - Selecting heater_bed
2025-09-01 00:15:09,395 [temperature.py:verify_max_temp()] - 220/250
2025-09-01 00:15:09,395 [KlippyWebsocket.py:set_tool_temp()] - Sending set_tool_temp: M104 T0 S220
2025-09-01 00:15:46,964 [base_panel.py:battery_percentage()] - Battery information not available.
2025-09-01 00:16:06,625 [screen.py:_menu_go_back()] - #### Menu go back
2025-09-01 00:16:06,652 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-01 00:16:07,888 [screen.py:_load_panel()] - Loading panel: extrude
2025-09-01 00:16:07,957 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > extrude
2025-09-01 00:16:14,433 [extrude.py:change_distance()] - ### Distance 25
2025-09-01 00:16:17,478 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: M83
2025-09-01 00:16:17,479 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G1 E+25 F120'}
2025-09-01 00:16:21,630 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: M83
2025-09-01 00:16:21,632 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G1 E+25 F120'}
2025-09-01 00:16:55,096 [screen.py:_menu_go_back()] - #### Menu go back
2025-09-01 00:16:55,125 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-01 00:17:02,434 [screen.py:_load_panel()] - Loading panel: move
2025-09-01 00:17:02,529 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-09-01 00:17:04,122 [screen.py:_menu_go_back()] - #### Menu go home
2025-09-01 00:17:04,150 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-01 00:17:05,795 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-09-01 00:17:06,542 [screen.py:_load_panel()] - Loading panel: menu
2025-09-01 00:17:06,668 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move > menu
2025-09-01 00:17:06,691 [menu.py:arrangeMenuItems()] - X > homing quad_gantry_level
2025-09-01 00:17:06,696 [menu.py:arrangeMenuItems()] - X > homing Z-Tilt
2025-09-01 00:17:08,516 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G28'}
2025-09-01 00:18:08,966 [screensaver.py:show()] - Showing Screensaver
2025-09-01 00:18:56,744 [screensaver.py:close()] - Closing Screensaver
2025-09-01 00:18:56,746 [screen.py:wake_screen()] - Screen wake up
2025-09-01 00:19:00,828 [screen.py:_menu_go_back()] - #### Menu go back
2025-09-01 00:19:00,858 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-09-01 00:19:03,031 [move.py:change_distance()] - ### Distance 50
2025-09-01 00:19:03,672 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 z+50 F600'}
2025-09-01 00:19:03,677 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-09-01 00:20:03,965 [screensaver.py:show()] - Showing Screensaver
2025-09-01 00:24:36,321 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-01 00:24:36,321 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-01 00:24:36,322 [screensaver.py:close()] - Closing Screensaver
2025-09-01 00:24:36,325 [screen.py:wake_screen()] - Screen wake up
2025-09-01 00:24:36,446 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 00:24:36,446 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 00:24:36,446 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-01 00:24:36,447 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 00:24:36,505 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-01 00:24:36,533 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-01 00:24:40,500 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-01 00:24:40,722 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-01 00:24:40,723 [printer.py:log_counts()] - # Extruders: 1
2025-09-01 00:24:40,723 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-01 00:24:40,723 [printer.py:log_counts()] - # Fans: 3
2025-09-01 00:24:40,723 [printer.py:log_counts()] - # Output pins: 0
2025-09-01 00:24:40,723 [printer.py:log_counts()] - # PWM tools: 0
2025-09-01 00:24:40,723 [printer.py:log_counts()] - # Leds: 1
2025-09-01 00:24:40,977 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-01 00:24:40,978 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-01 00:24:40,979 [screen.py:init_klipper()] - Printer initialized
2025-09-01 00:24:40,980 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-01 00:24:40,980 [printer.py:change_state()] - Adding callback for state: ready
2025-09-01 00:24:40,999 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-01 00:24:41,225 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-01 00:24:41,225 [printer.py:log_counts()] - # Extruders: 1
2025-09-01 00:24:41,225 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-01 00:24:41,225 [printer.py:log_counts()] - # Fans: 3
2025-09-01 00:24:41,226 [printer.py:log_counts()] - # Output pins: 0
2025-09-01 00:24:41,226 [printer.py:log_counts()] - # PWM tools: 0
2025-09-01 00:24:41,226 [printer.py:log_counts()] - # Leds: 1
2025-09-01 00:24:41,479 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-01 00:24:41,480 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-01 00:24:41,481 [screen.py:init_klipper()] - Printer initialized
2025-09-01 00:24:41,534 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 00:24:41,535 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 00:24:41,535 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-01 00:24:41,538 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 00:24:41,598 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-01 00:24:41,715 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-01 00:24:41,732 [main_menu.py:add_device()] - Adding device: extruder
2025-09-01 00:24:41,736 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-01 00:24:41,762 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-01 00:24:41,782 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-01 00:24:41,818 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-01 00:24:41,837 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-01 00:25:41,965 [screensaver.py:show()] - Showing Screensaver
2025-09-01 00:26:19,830 [screensaver.py:close()] - Closing Screensaver
2025-09-01 00:26:19,834 [screen.py:wake_screen()] - Screen wake up
2025-09-01 00:26:19,898 [screen.py:show_popup_message()] - error: Must home axis first: 0.000 0.000 -0.910 [0.000]
2025-09-01 00:26:21,458 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=1024, height=600)
2025-09-01 00:26:23,873 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-01 00:26:23,874 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-01 00:26:23,943 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 00:26:23,944 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 00:26:23,944 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-01 00:26:23,946 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 00:26:24,008 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-09-01 00:26:24,008 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-01 00:26:24,038 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-01 00:26:27,982 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-01 00:26:28,043 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-01 00:26:28,044 [printer.py:log_counts()] - # Extruders: 1
2025-09-01 00:26:28,044 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-01 00:26:28,044 [printer.py:log_counts()] - # Fans: 3
2025-09-01 00:26:28,044 [printer.py:log_counts()] - # Output pins: 0
2025-09-01 00:26:28,044 [printer.py:log_counts()] - # PWM tools: 0
2025-09-01 00:26:28,044 [printer.py:log_counts()] - # Leds: 1
2025-09-01 00:26:28,312 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-01 00:26:28,313 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-01 00:26:28,314 [screen.py:init_klipper()] - Printer initialized
2025-09-01 00:26:28,315 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-01 00:26:28,315 [printer.py:change_state()] - Adding callback for state: ready
2025-09-01 00:26:28,378 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 00:26:28,379 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 00:26:28,379 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-01 00:26:28,382 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 00:26:28,454 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-01 00:26:28,655 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-01 00:26:28,673 [main_menu.py:add_device()] - Adding device: extruder
2025-09-01 00:26:28,678 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-01 00:26:28,711 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-01 00:26:28,729 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-01 00:26:28,765 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-01 00:26:28,792 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-01 00:27:28,965 [screensaver.py:show()] - Showing Screensaver
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      2025-09-01 00:23:16,657 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-09-01 00:23:16,658 [functions.py:log_start()] - KlipperScreen Version: v0.4.6-11-g6b6f63b6
2025-09-01 00:23:16,658 [functions.py:log_start()] - Python version: 3.9
2025-09-01 00:23:16,845 [config.py:get_config_file_location()] - Passed config (-c): .
2025-09-01 00:23:16,846 [config.py:__init__()] - Config path location: /home/sonic/printer_data/config/KlipperScreen.conf
2025-09-01 00:23:16,850 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/main_menu.conf']
2025-09-01 00:23:16,864 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/splash_menu.conf']
2025-09-01 00:23:16,870 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/print_menu.conf']
2025-09-01 00:23:16,880 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/move_menu.conf']
2025-09-01 00:23:16,894 [config.py:log_config()] - ===== Config File =====

=======================
2025-09-01 00:23:16,897 [config.py:__init__()] - ====== Saved Def ======

[main]
screen_blanking = 60
screen_blanking_printing = 60
24htime = False
font_size = small
show_heater_power = True

[graph Printer]
heater_bed = False

=======================
2025-09-01 00:23:16,898 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_path": "",
      "moonraker_ssl": null,
      "moonraker_api_key": ""
    }
  }
]
2025-09-01 00:23:17,092 [config.py:create_translations()] - Selected lang: system_lang OS lang: en_US
2025-09-01 00:23:17,093 [config.py:install_language()] - Using lang en
2025-09-01 00:23:17,111 [screen.py:__init__()] - Display for xset: :0
2025-09-01 00:23:17,113 [screen.py:__init__()] - Screen 0: 1024x600
2025-09-01 00:23:17,113 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-09-01 00:23:17,114 [screen.py:__init__()] - Wayland: False Display name: :0
2025-09-01 00:23:17,117 [screen.py:__init__()] - Screen resolution: 1024x600
2025-09-01 00:23:17,435 [KlippyGtk.py:__init__()] - Font size: 20.2 (small)
2025-09-01 00:23:17,649 [base_panel.py:battery_percentage()] - Battery information not available.
2025-09-01 00:23:17,910 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 00:23:17,911 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 00:23:17,912 [screen.py:initial_connection()] - Default printer: None
2025-09-01 00:23:17,980 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-09-01 00:23:17,981 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 00:23:18,041 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-09-01 00:23:18,117 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-01 00:23:18,148 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-01 00:23:18,149 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-01 00:23:22,327 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-09-01 00:23:22,327 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-09-01 00:23:22,342 [_logging.py:info()] - Websocket connected
2025-09-01 00:23:22,342 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-09-01 00:23:22,345 [screen.py:websocket_connected()] - ### websocket_connected
2025-09-01 00:23:22,432 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-09-01 00:23:22,465 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-09-01 00:23:22,525 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-01 00:23:22,550 [KlippyRest.py:_do_request()] - 404 Client Error>>Not Found for url>>http://127.0.0.1:7125/printer/info
2025-09-01 00:23:23,394 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-01 00:23:23,621 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-01 00:23:23,621 [printer.py:log_counts()] - # Extruders: 1
2025-09-01 00:23:23,621 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-01 00:23:23,622 [printer.py:log_counts()] - # Fans: 3
2025-09-01 00:23:23,622 [printer.py:log_counts()] - # Output pins: 0
2025-09-01 00:23:23,622 [printer.py:log_counts()] - # PWM tools: 0
2025-09-01 00:23:23,622 [printer.py:log_counts()] - # Leds: 1
2025-09-01 00:23:23,882 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-01 00:23:23,884 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-01 00:23:23,885 [screen.py:init_klipper()] - Printer initialized
2025-09-01 00:23:23,886 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-01 00:23:23,886 [printer.py:change_state()] - Adding callback for state: ready
2025-09-01 00:23:23,994 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 00:23:23,994 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 00:23:23,995 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-01 00:23:24,000 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 00:23:24,089 [screen.py:_load_panel()] - Loading panel: main_menu
2025-09-01 00:23:24,299 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-01 00:23:24,320 [main_menu.py:add_device()] - Adding device: extruder
2025-09-01 00:23:24,334 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-01 00:23:24,388 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-01 00:23:24,491 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-01 00:23:24,524 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-01 00:23:24,550 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-01 00:23:27,320 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-01 00:23:27,380 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-01 00:23:27,381 [printer.py:log_counts()] - # Extruders: 1
2025-09-01 00:23:27,381 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-01 00:23:27,381 [printer.py:log_counts()] - # Fans: 3
2025-09-01 00:23:27,381 [printer.py:log_counts()] - # Output pins: 0
2025-09-01 00:23:27,381 [printer.py:log_counts()] - # PWM tools: 0
2025-09-01 00:23:27,382 [printer.py:log_counts()] - # Leds: 1
2025-09-01 00:23:27,637 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-01 00:23:27,638 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-01 00:23:27,639 [screen.py:init_klipper()] - Printer initialized
2025-09-01 00:23:29,308 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-09-01 00:23:29,354 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-01 00:23:29,402 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-01 00:36:48,892 [screen.py:show_popup_message()] - error: Must home before probe
2025-09-01 00:37:23,838 [base_panel.py:battery_percentage()] - Battery information not available.
2025-09-01 00:37:29,857 [screensaver.py:show()] - Showing Screensaver
2025-09-01 00:38:03,668 [screen.py:_load_panel()] - Loading panel: zcalibrate
2025-09-01 00:38:03,674 [printer.py:get_probe()] - Probe type: bltouch
2025-09-01 00:38:03,675 [zcalibrate.py:initialize_probe_params()] - Offset X:27.25 Y:-12.8 Z:1.01
2025-09-01 00:38:03,719 [zcalibrate.py:set_commands()] - Available commands for calibration: ['PROBE_CALIBRATE', 'BED_MESH_CALIBRATE METHOD=manual']
2025-09-01 00:38:03,729 [zcalibrate.py:on_dropdown_change()] - Selected PROBE_CALIBRATE
2025-09-01 00:38:03,755 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > zcalibrate
2025-09-01 00:38:13,599 [screensaver.py:close()] - Closing Screensaver
2025-09-01 00:38:13,603 [screen.py:wake_screen()] - Screen wake up
2025-09-01 00:38:13,656 [screen.py:show_popup_message()] - error: Failed, adjust position first
2025-09-01 00:38:13,662 [zcalibrate.py:process_update()] - // Manual probe failed! Use TESTZ commands to position the
// nozzle prior to running ACCEPT.
2025-09-01 00:39:13,824 [screensaver.py:show()] - Showing Screensaver
2025-09-01 00:38:29,047 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-09-01 00:38:29,048 [functions.py:log_start()] - KlipperScreen Version: v0.4.6-11-g6b6f63b6
2025-09-01 00:38:29,049 [functions.py:log_start()] - Python version: 3.9
2025-09-01 00:38:29,235 [config.py:get_config_file_location()] - Passed config (-c): .
2025-09-01 00:38:29,236 [config.py:__init__()] - Config path location: /home/sonic/printer_data/config/KlipperScreen.conf
2025-09-01 00:38:29,240 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/main_menu.conf']
2025-09-01 00:38:29,255 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/splash_menu.conf']
2025-09-01 00:38:29,261 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/print_menu.conf']
2025-09-01 00:38:29,272 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/move_menu.conf']
2025-09-01 00:38:29,285 [config.py:log_config()] - ===== Config File =====

=======================
2025-09-01 00:38:29,288 [config.py:__init__()] - ====== Saved Def ======

[main]
screen_blanking = 60
screen_blanking_printing = 60
24htime = False
font_size = small
show_heater_power = True

[graph Printer]
heater_bed = False

=======================
2025-09-01 00:38:29,289 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_path": "",
      "moonraker_ssl": null,
      "moonraker_api_key": ""
    }
  }
]
2025-09-01 00:38:29,485 [config.py:create_translations()] - Selected lang: system_lang OS lang: en_US
2025-09-01 00:38:29,486 [config.py:install_language()] - Using lang en
2025-09-01 00:38:29,504 [screen.py:__init__()] - Display for xset: :0
2025-09-01 00:38:29,506 [screen.py:__init__()] - Screen 0: 1024x600
2025-09-01 00:38:29,506 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-09-01 00:38:29,507 [screen.py:__init__()] - Wayland: False Display name: :0
2025-09-01 00:38:29,510 [screen.py:__init__()] - Screen resolution: 1024x600
2025-09-01 00:38:29,826 [KlippyGtk.py:__init__()] - Font size: 20.2 (small)
2025-09-01 00:38:30,046 [base_panel.py:battery_percentage()] - Battery information not available.
2025-09-01 00:38:30,317 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 00:38:30,318 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 00:38:30,319 [screen.py:initial_connection()] - Default printer: None
2025-09-01 00:38:30,386 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-09-01 00:38:30,387 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 00:38:30,448 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-09-01 00:38:30,527 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-01 00:38:30,555 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-01 00:38:30,556 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-01 00:38:34,405 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-01 00:38:34,406 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-01 00:38:38,426 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-09-01 00:38:38,427 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-09-01 00:38:38,440 [_logging.py:info()] - Websocket connected
2025-09-01 00:38:38,441 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-09-01 00:38:38,444 [screen.py:websocket_connected()] - ### websocket_connected
2025-09-01 00:38:38,551 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-09-01 00:38:38,614 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-09-01 00:38:38,642 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 4, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-01 00:38:38,844 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-01 00:38:38,844 [printer.py:log_counts()] - # Extruders: 1
2025-09-01 00:38:38,844 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-01 00:38:38,845 [printer.py:log_counts()] - # Fans: 3
2025-09-01 00:38:38,845 [printer.py:log_counts()] - # Output pins: 0
2025-09-01 00:38:38,845 [printer.py:log_counts()] - # PWM tools: 0
2025-09-01 00:38:38,845 [printer.py:log_counts()] - # Leds: 1
2025-09-01 00:38:39,102 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-01 00:38:39,104 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-01 00:38:39,105 [screen.py:init_klipper()] - Printer initialized
2025-09-01 00:38:39,106 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-01 00:38:39,106 [printer.py:change_state()] - Adding callback for state: ready
2025-09-01 00:38:39,175 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 00:38:39,176 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 00:38:39,176 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-01 00:38:39,185 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 00:38:39,268 [screen.py:_load_panel()] - Loading panel: main_menu
2025-09-01 00:38:39,535 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-01 00:38:39,552 [main_menu.py:add_device()] - Adding device: extruder
2025-09-01 00:38:39,564 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-01 00:38:39,617 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-01 00:38:39,641 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-01 00:38:39,686 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-01 00:38:39,711 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-01 03:00:39,258 [screen.py:_load_panel()] - Loading panel: move
2025-09-01 03:00:39,374 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-09-01 03:00:40,506 [screen.py:_load_panel()] - Loading panel: menu
2025-09-01 03:00:40,663 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move > menu
2025-09-01 03:00:40,688 [menu.py:arrangeMenuItems()] - X > homing quad_gantry_level
2025-09-01 03:00:40,692 [menu.py:arrangeMenuItems()] - X > homing Z-Tilt
2025-09-01 03:00:41,697 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G28'}
2025-09-01 03:00:51,708 [base_panel.py:battery_percentage()] - Battery information not available.
2025-09-01 03:01:41,711 [screensaver.py:show()] - Showing Screensaver
2025-09-01 03:02:02,488 [screen.py:_load_panel()] - Loading panel: zcalibrate
2025-09-01 03:02:02,495 [printer.py:get_probe()] - Probe type: bltouch
2025-09-01 03:02:02,496 [zcalibrate.py:initialize_probe_params()] - Offset X:27.25 Y:-12.8 Z:1.01
2025-09-01 03:02:02,527 [zcalibrate.py:set_commands()] - Available commands for calibration: ['PROBE_CALIBRATE', 'BED_MESH_CALIBRATE METHOD=manual']
2025-09-01 03:02:02,536 [zcalibrate.py:on_dropdown_change()] - Selected PROBE_CALIBRATE
2025-09-01 03:02:02,561 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move > menu > zcalibrate
2025-09-01 03:02:04,585 [screensaver.py:close()] - Closing Screensaver
2025-09-01 03:02:04,587 [screen.py:wake_screen()] - Screen wake up
2025-09-01 03:02:04,637 [screen.py:show_popup_message()] - error: Failed, adjust position first
2025-09-01 03:02:04,646 [zcalibrate.py:process_update()] - // Manual probe failed! Use TESTZ commands to position the
// nozzle prior to running ACCEPT.
2025-09-01 03:03:04,727 [screensaver.py:show()] - Showing Screensaver
2025-09-01 03:05:12,440 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-01 03:05:12,441 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-01 03:05:12,443 [screensaver.py:close()] - Closing Screensaver
2025-09-01 03:05:12,454 [screen.py:wake_screen()] - Screen wake up
2025-09-01 03:05:12,558 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 03:05:12,559 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 03:05:12,559 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-01 03:05:12,561 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 03:05:12,629 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-01 03:05:12,664 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-01 03:05:16,733 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-01 03:05:16,969 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-01 03:05:16,969 [printer.py:log_counts()] - # Extruders: 1
2025-09-01 03:05:16,970 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-01 03:05:16,970 [printer.py:log_counts()] - # Fans: 3
2025-09-01 03:05:16,970 [printer.py:log_counts()] - # Output pins: 0
2025-09-01 03:05:16,970 [printer.py:log_counts()] - # PWM tools: 0
2025-09-01 03:05:16,970 [printer.py:log_counts()] - # Leds: 1
2025-09-01 03:05:17,221 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-01 03:05:17,223 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-01 03:05:17,223 [screen.py:init_klipper()] - Printer initialized
2025-09-01 03:05:17,224 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-01 03:05:17,224 [printer.py:change_state()] - Adding callback for state: ready
2025-09-01 03:05:17,278 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 03:05:17,279 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 03:05:17,279 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-01 03:05:17,288 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 03:05:17,352 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-01 03:05:17,484 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-01 03:05:17,500 [main_menu.py:add_device()] - Adding device: extruder
2025-09-01 03:05:17,506 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-01 03:05:17,536 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-01 03:05:17,552 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-01 03:05:17,588 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-01 03:05:17,607 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-01 03:06:17,710 [screensaver.py:show()] - Showing Screensaver
2025-09-01 03:08:16,798 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-01 03:08:16,799 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-01 03:08:16,802 [screensaver.py:close()] - Closing Screensaver
2025-09-01 03:08:16,804 [screen.py:wake_screen()] - Screen wake up
2025-09-01 03:08:16,925 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 03:08:16,925 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 03:08:16,925 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-01 03:08:16,926 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 03:08:16,983 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-01 03:08:17,010 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-01 03:08:21,225 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-01 03:08:21,440 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-01 03:08:21,440 [printer.py:log_counts()] - # Extruders: 1
2025-09-01 03:08:21,441 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-01 03:08:21,441 [printer.py:log_counts()] - # Fans: 3
2025-09-01 03:08:21,441 [printer.py:log_counts()] - # Output pins: 0
2025-09-01 03:08:21,441 [printer.py:log_counts()] - # PWM tools: 0
2025-09-01 03:08:21,441 [printer.py:log_counts()] - # Leds: 1
2025-09-01 03:08:21,703 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-01 03:08:21,705 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-01 03:08:21,705 [screen.py:init_klipper()] - Printer initialized
2025-09-01 03:08:21,706 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-01 03:08:21,707 [printer.py:change_state()] - Adding callback for state: ready
2025-09-01 03:08:21,725 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-01 03:08:21,948 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-01 03:08:21,948 [printer.py:log_counts()] - # Extruders: 1
2025-09-01 03:08:21,948 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-01 03:08:21,948 [printer.py:log_counts()] - # Fans: 3
2025-09-01 03:08:21,948 [printer.py:log_counts()] - # Output pins: 0
2025-09-01 03:08:21,948 [printer.py:log_counts()] - # PWM tools: 0
2025-09-01 03:08:21,949 [printer.py:log_counts()] - # Leds: 1
2025-09-01 03:08:22,206 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-01 03:08:22,207 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-01 03:08:22,208 [screen.py:init_klipper()] - Printer initialized
2025-09-01 03:08:22,289 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 03:08:22,289 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 03:08:22,290 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-01 03:08:22,303 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 03:08:22,367 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-01 03:08:22,577 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-01 03:08:22,608 [main_menu.py:add_device()] - Adding device: extruder
2025-09-01 03:08:22,614 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-01 03:08:22,646 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-01 03:08:22,662 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-01 03:08:22,702 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-01 03:08:22,721 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-01 03:09:22,710 [screensaver.py:show()] - Showing Screensaver
2025-09-01 03:10:53,641 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=1024, height=600)
2025-09-01 03:11:15,743 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-01 03:11:15,744 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-01 03:11:15,748 [screensaver.py:close()] - Closing Screensaver
2025-09-01 03:11:15,750 [screen.py:wake_screen()] - Screen wake up
2025-09-01 03:11:15,795 [screensaver.py:close()] - Restoring Dialog <Gtk.Dialog object at 0xe73adfa8 (GtkDialog at 0x22541c0)>
2025-09-01 03:11:15,872 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 03:11:15,873 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 03:11:15,873 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-01 03:11:15,877 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 03:11:15,948 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-09-01 03:11:15,948 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-01 03:11:15,982 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-01 03:11:20,096 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-01 03:11:20,332 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-01 03:11:20,332 [printer.py:log_counts()] - # Extruders: 1
2025-09-01 03:11:20,333 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-01 03:11:20,333 [printer.py:log_counts()] - # Fans: 3
2025-09-01 03:11:20,333 [printer.py:log_counts()] - # Output pins: 0
2025-09-01 03:11:20,333 [printer.py:log_counts()] - # PWM tools: 0
2025-09-01 03:11:20,333 [printer.py:log_counts()] - # Leds: 1
2025-09-01 03:11:20,598 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-01 03:11:20,600 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-01 03:11:20,600 [screen.py:init_klipper()] - Printer initialized
2025-09-01 03:11:20,601 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-01 03:11:20,602 [printer.py:change_state()] - Adding callback for state: ready
2025-09-01 03:11:20,657 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 03:11:20,658 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 03:11:20,658 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-01 03:11:20,661 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 03:11:20,726 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-01 03:11:20,859 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-01 03:11:20,877 [main_menu.py:add_device()] - Adding device: extruder
2025-09-01 03:11:20,882 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-01 03:11:20,914 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-01 03:11:20,929 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-01 03:11:20,966 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-01 03:11:20,987 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-01 03:11:21,024 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-01 03:11:21,326 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-01 03:11:21,326 [printer.py:log_counts()] - # Extruders: 1
2025-09-01 03:11:21,326 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-01 03:11:21,327 [printer.py:log_counts()] - # Fans: 3
2025-09-01 03:11:21,327 [printer.py:log_counts()] - # Output pins: 0
2025-09-01 03:11:21,327 [printer.py:log_counts()] - # PWM tools: 0
2025-09-01 03:11:21,327 [printer.py:log_counts()] - # Leds: 1
2025-09-01 03:11:21,593 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-01 03:11:21,595 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-01 03:11:21,595 [screen.py:init_klipper()] - Printer initialized
2025-09-01 03:11:21,800 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-09-01 03:11:21,846 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-01 03:11:21,937 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-01 03:11:54,130 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=1024, height=600)
2025-09-01 03:12:20,710 [screensaver.py:show()] - Showing Screensaver
2025-09-01 03:12:20,711 [screensaver.py:show()] - Hiding dialog
2025-09-01 03:17:26,314 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-09-01 03:17:26,349 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=1024, height=600)
2025-09-01 03:20:36,410 [screensaver.py:close()] - Closing Screensaver
2025-09-01 03:20:36,413 [screen.py:wake_screen()] - Screen wake up
2025-09-01 03:20:36,452 [screensaver.py:close()] - Restoring Dialog <Gtk.Dialog object at 0xe4bc96e8 (GtkDialog at 0x2254540)>
2025-09-01 03:20:36,471 [screen.py:show_popup_message()] - error: // Unknown command:"SCREWS_TILT_ADJUST"
2025-09-01 03:21:36,726 [screensaver.py:show()] - Showing Screensaver
2025-09-01 03:21:36,726 [screensaver.py:show()] - Hiding dialog
2025-09-01 03:21:42,691 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-01 03:21:42,691 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-01 03:21:42,695 [screensaver.py:close()] - Closing Screensaver
2025-09-01 03:21:42,697 [screen.py:wake_screen()] - Screen wake up
2025-09-01 03:21:42,740 [screensaver.py:close()] - Restoring Dialog <Gtk.Dialog object at 0xe4bc96e8 (GtkDialog at 0x2254540)>
2025-09-01 03:21:42,818 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 03:21:42,818 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 03:21:42,819 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-01 03:21:42,820 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 03:21:42,883 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-09-01 03:21:42,883 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-01 03:21:42,914 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-01 03:21:46,726 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-01 03:21:46,902 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-01 03:21:46,902 [printer.py:log_counts()] - # Extruders: 1
2025-09-01 03:21:46,903 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-01 03:21:46,903 [printer.py:log_counts()] - # Fans: 3
2025-09-01 03:21:46,903 [printer.py:log_counts()] - # Output pins: 0
2025-09-01 03:21:46,903 [printer.py:log_counts()] - # PWM tools: 0
2025-09-01 03:21:46,903 [printer.py:log_counts()] - # Leds: 1
2025-09-01 03:21:47,165 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-01 03:21:47,169 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-01 03:21:47,169 [screen.py:init_klipper()] - Printer initialized
2025-09-01 03:21:47,170 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-01 03:21:47,171 [printer.py:change_state()] - Adding callback for state: ready
2025-09-01 03:21:47,228 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 03:21:47,229 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 03:21:47,229 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-01 03:21:47,232 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 03:21:47,304 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-01 03:21:47,416 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-01 03:21:47,434 [main_menu.py:add_device()] - Adding device: extruder
2025-09-01 03:21:47,440 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-01 03:21:47,470 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-01 03:21:47,486 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-01 03:21:47,524 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-01 03:21:47,544 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-01 03:21:55,126 [screen.py:show_popup_message()] - error: // Unknown command:"SCREWS_TILT_ADJUST"
2025-09-01 03:22:47,710 [screensaver.py:show()] - Showing Screensaver
2025-09-01 03:28:17,885 [screen.py:_load_panel()] - Loading panel: bed_level
2025-09-01 03:28:17,896 [bed_level.py:_get_screws()] - screws_tilt_adjust
2025-09-01 03:28:17,896 [bed_level.py:_get_screws()] - screw1: 23,63
2025-09-01 03:28:17,897 [bed_level.py:_get_screws()] - screw1_name: front left
2025-09-01 03:28:17,898 [bed_level.py:_get_screws()] - screw2: 223,63
2025-09-01 03:28:17,898 [bed_level.py:_get_screws()] - screw2_name: front right
2025-09-01 03:28:17,898 [bed_level.py:_get_screws()] - screw3: 223,263
2025-09-01 03:28:17,898 [bed_level.py:_get_screws()] - screw3_name: back right
2025-09-01 03:28:17,898 [bed_level.py:_get_screws()] - screw4: 23,263
2025-09-01 03:28:17,898 [bed_level.py:_get_screws()] - screw4_name: back left
2025-09-01 03:28:17,898 [bed_level.py:_get_screws()] - speed: 100.0
2025-09-01 03:28:17,899 [bed_level.py:_get_screws()] - screw_thread: CW-M5
2025-09-01 03:28:17,899 [bed_level.py:__init__()] - screws_tilt_adjust: [[23.0, 63.0], [223.0, 63.0], [23.0, 263.0], [223.0, 263.0]]
2025-09-01 03:28:17,899 [printer.py:get_probe()] - Probe type: bltouch
2025-09-01 03:28:17,899 [bed_level.py:__init__()] - offset X: 27.25 Y: -12.8
2025-09-01 03:28:17,900 [bed_level.py:__init__()] - screws with offset: [[50.25, 50.2], [250.25, 50.2], [50.25, 250.2], [250.25, 250.2]]
2025-09-01 03:28:17,900 [bed_level.py:__init__()] - X: {50.25, 250.25}
Y: {50.2, 250.2}
2025-09-01 03:28:17,900 [bed_level.py:__init__()] - Using max_distance: 66 to fit: 4 screws.
2025-09-01 03:28:17,900 [bed_level.py:__init__()] - Using 4/4-screw locations
2025-09-01 03:28:17,961 [bed_level.py:__init__()] - screw_positions: {'bl': [50.25, 250.2], 'br': [250.25, 250.2], 'fr': [250.25, 50.2], 'fl': [50.25, 50.2]}
2025-09-01 03:28:17,976 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > bed_level
2025-09-01 03:28:17,978 [bed_level.py:process_update()] - screw1 CW 00:00
2025-09-01 03:28:17,979 [bed_level.py:process_update()] - X: 50.25 Y: 50.2 Adjust: 00:00 Pos: fl
2025-09-01 03:28:17,979 [bed_level.py:process_update()] - screw1 is the Reference
2025-09-01 03:28:17,986 [bed_level.py:process_update()] - screw2 CW 00:17
2025-09-01 03:28:17,986 [bed_level.py:process_update()] - X: 250.25 Y: 50.2 Adjust: 00:17 Pos: fr
2025-09-01 03:28:17,994 [bed_level.py:process_update()] - screw3 CW 00:10
2025-09-01 03:28:17,994 [bed_level.py:process_update()] - X: 250.25 Y: 250.2 Adjust: 00:10 Pos: br
2025-09-01 03:28:17,997 [bed_level.py:process_update()] - screw4 CCW 00:25
2025-09-01 03:28:17,998 [bed_level.py:process_update()] - X: 50.25 Y: 250.2 Adjust: 00:25 Pos: bl
2025-09-01 03:28:18,010 [bed_level.py:process_update()] - screw1 CW 00:00
2025-09-01 03:28:18,011 [bed_level.py:process_update()] - X: 50.25 Y: 50.2 Adjust: 00:00 Pos: fl
2025-09-01 03:28:18,011 [bed_level.py:process_update()] - screw1 is the Reference
2025-09-01 03:28:18,015 [bed_level.py:process_update()] - screw2 CW 00:17
2025-09-01 03:28:18,016 [bed_level.py:process_update()] - X: 250.25 Y: 50.2 Adjust: 00:17 Pos: fr
2025-09-01 03:28:18,019 [bed_level.py:process_update()] - screw3 CW 00:10
2025-09-01 03:28:18,020 [bed_level.py:process_update()] - X: 250.25 Y: 250.2 Adjust: 00:10 Pos: br
2025-09-01 03:28:18,024 [bed_level.py:process_update()] - screw4 CCW 00:25
2025-09-01 03:28:18,024 [bed_level.py:process_update()] - X: 50.25 Y: 250.2 Adjust: 00:25 Pos: bl
2025-09-01 03:29:48,422 [bed_level.py:process_update()] - screw1 CW 00:00
2025-09-01 03:29:48,423 [bed_level.py:process_update()] - X: 50.25 Y: 50.2 Adjust: 00:00 Pos: fl
2025-09-01 03:29:48,423 [bed_level.py:process_update()] - screw1 is the Reference
2025-09-01 03:29:48,432 [bed_level.py:process_update()] - screw2 CW 00:10
2025-09-01 03:29:48,433 [bed_level.py:process_update()] - X: 250.25 Y: 50.2 Adjust: 00:10 Pos: fr
2025-09-01 03:29:48,438 [bed_level.py:process_update()] - screw3 CW 00:04
2025-09-01 03:29:48,438 [bed_level.py:process_update()] - X: 250.25 Y: 250.2 Adjust: 00:04 Pos: br
2025-09-01 03:29:48,443 [bed_level.py:process_update()] - screw4 CCW 00:21
2025-09-01 03:29:48,443 [bed_level.py:process_update()] - X: 50.25 Y: 250.2 Adjust: 00:21 Pos: bl
2025-09-01 03:31:30,224 [bed_level.py:process_update()] - screw1 CW 00:00
2025-09-01 03:31:30,224 [bed_level.py:process_update()] - X: 50.25 Y: 50.2 Adjust: 00:00 Pos: fl
2025-09-01 03:31:30,224 [bed_level.py:process_update()] - screw1 is the Reference
2025-09-01 03:31:30,229 [bed_level.py:process_update()] - screw2 CW 00:03
2025-09-01 03:31:30,229 [bed_level.py:process_update()] - X: 250.25 Y: 50.2 Adjust: 00:03 Pos: fr
2025-09-01 03:31:30,233 [bed_level.py:process_update()] - screw3 CW 00:06
2025-09-01 03:31:30,234 [bed_level.py:process_update()] - X: 250.25 Y: 250.2 Adjust: 00:06 Pos: br
2025-09-01 03:31:30,238 [bed_level.py:process_update()] - screw4 CCW 00:10
2025-09-01 03:31:30,238 [bed_level.py:process_update()] - X: 50.25 Y: 250.2 Adjust: 00:10 Pos: bl
2025-09-01 03:33:02,024 [bed_level.py:process_update()] - screw1 CW 00:00
2025-09-01 03:33:02,025 [bed_level.py:process_update()] - X: 50.25 Y: 50.2 Adjust: 00:00 Pos: fl
2025-09-01 03:33:02,025 [bed_level.py:process_update()] - screw1 is the Reference
2025-09-01 03:33:02,030 [bed_level.py:process_update()] - screw2 CCW 00:04
2025-09-01 03:33:02,030 [bed_level.py:process_update()] - X: 250.25 Y: 50.2 Adjust: 00:04 Pos: fr
2025-09-01 03:33:02,034 [bed_level.py:process_update()] - screw3 CW 00:02
2025-09-01 03:33:02,034 [bed_level.py:process_update()] - X: 250.25 Y: 250.2 Adjust: 00:02 Pos: br
2025-09-01 03:33:02,038 [bed_level.py:process_update()] - screw4 CCW 00:07
2025-09-01 03:33:02,038 [bed_level.py:process_update()] - X: 50.25 Y: 250.2 Adjust: 00:07 Pos: bl
2025-09-01 03:33:08,843 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=1024, height=600)
2025-09-01 03:38:53,252 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-09-01 03:38:53,286 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=1024, height=600)
2025-09-01 03:39:12,332 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-01 03:39:12,333 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-01 03:39:12,335 [screensaver.py:close()] - Closing Screensaver
2025-09-01 03:39:12,337 [screen.py:wake_screen()] - Screen wake up
2025-09-01 03:39:12,382 [screensaver.py:close()] - Restoring Dialog <Gtk.Dialog object at 0xe3f9fee8 (GtkDialog at 0x2254700)>
2025-09-01 03:39:12,453 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 03:39:12,454 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 03:39:12,454 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-01 03:39:12,455 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 03:39:12,521 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-09-01 03:39:12,521 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-01 03:39:12,551 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-01 03:39:16,723 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-01 03:39:16,769 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-01 03:39:16,770 [printer.py:log_counts()] - # Extruders: 1
2025-09-01 03:39:16,770 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-01 03:39:16,770 [printer.py:log_counts()] - # Fans: 3
2025-09-01 03:39:16,770 [printer.py:log_counts()] - # Output pins: 0
2025-09-01 03:39:16,770 [printer.py:log_counts()] - # PWM tools: 0
2025-09-01 03:39:16,770 [printer.py:log_counts()] - # Leds: 1
2025-09-01 03:39:17,023 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-01 03:39:17,025 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-01 03:39:17,025 [screen.py:init_klipper()] - Printer initialized
2025-09-01 03:39:17,026 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2025-09-01 03:39:17,026 [printer.py:change_state()] - Adding callback for state: startup
2025-09-01 03:39:17,084 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 03:39:17,084 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 03:39:21,272 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2025-09-01 03:39:21,272 [printer.py:change_state()] - Adding callback for state: ready
2025-09-01 03:39:21,327 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 03:39:21,328 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 03:39:21,328 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-01 03:39:21,332 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 03:39:21,400 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-01 03:39:21,525 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-01 03:39:21,547 [main_menu.py:add_device()] - Adding device: extruder
2025-09-01 03:39:21,553 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-01 03:39:21,583 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-01 03:39:21,599 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-01 03:39:21,635 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-01 03:39:21,654 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-01 03:40:21,710 [screensaver.py:show()] - Showing Screensaver
2025-09-01 03:41:09,626 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-01 03:41:09,626 [printer.py:change_state()] - Adding callback for state: printing
2025-09-01 03:41:09,630 [screensaver.py:close()] - Closing Screensaver
2025-09-01 03:41:09,633 [screen.py:wake_screen()] - Screen wake up
2025-09-01 03:41:09,742 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 03:41:09,743 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 03:41:09,743 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 03:41:09,810 [screen.py:_load_panel()] - Loading panel: job_status
2025-09-01 03:41:10,013 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-01 03:41:10,033 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-01 03:41:10,060 [job_status.py:update_filename()] - Updating filename to 1st layer test 250x250mm by 02 layerheight_0.2mm_PLA_Generic Klipper Printer_51m18s.gcode
2025-09-01 03:41:10,061 [job_status.py:_update_file_metadata()] - Update Metadata. File: 1st layer test 250x250mm by 02 layerheight_0.2mm_PLA_Generic Klipper Printer_51m18s.gcode Size: 81475
2025-09-01 03:42:10,711 [screensaver.py:show()] - Showing Screensaver
2025-09-01 03:46:10,012 [screensaver.py:close()] - Closing Screensaver
2025-09-01 03:46:10,021 [screen.py:wake_screen()] - Screen wake up
2025-09-01 03:46:11,977 [screen.py:_load_panel()] - Loading panel: fine_tune
2025-09-01 03:46:12,066 [screen.py:attach_panel()] - Current panel hierarchy: job_status > fine_tune
2025-09-01 03:46:13,186 [fine_tune.py:change_percent_delta()] - ### Delta 25
2025-09-01 03:46:14,003 [screen.py:_send_action()] - printer.gcode.script: {'script': 'M220 S125'}
2025-09-01 03:46:16,159 [screen.py:_send_action()] - printer.gcode.script: {'script': 'M220 S150'}
2025-09-01 03:46:18,369 [screen.py:_send_action()] - printer.gcode.script: {'script': 'M220 S175'}
2025-09-01 03:46:24,523 [screen.py:_send_action()] - printer.gcode.script: {'script': 'M220 S200'}
2025-09-01 03:47:02,975 [screen.py:_send_action()] - printer.gcode.script: {'script': 'M220 S225'}
2025-09-01 03:47:04,240 [screen.py:_send_action()] - printer.gcode.script: {'script': 'M220 S250'}
2025-09-01 03:47:05,388 [screen.py:_send_action()] - printer.gcode.script: {'script': 'M220 S275'}
2025-09-01 03:47:06,944 [screen.py:_send_action()] - printer.gcode.script: {'script': 'M220 S300'}
2025-09-01 03:48:07,710 [screensaver.py:show()] - Showing Screensaver
2025-09-01 03:50:17,285 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2025-09-01 03:50:17,285 [printer.py:change_state()] - Adding callback for state: paused
2025-09-01 03:50:17,287 [screensaver.py:close()] - Closing Screensaver
2025-09-01 03:50:17,289 [screen.py:wake_screen()] - Screen wake up
2025-09-01 03:50:17,392 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 03:50:17,393 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 03:50:17,393 [screen.py:_menu_go_back()] - #### Menu go home
2025-09-01 03:50:17,395 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 03:50:17,453 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-01 03:50:17,529 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-01 03:50:17,546 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'paused'
2025-09-01 03:50:17,559 [job_status.py:update_filename()] - Updating filename to 1st layer test 250x250mm by 02 layerheight_0.2mm_PLA_Generic Klipper Printer_51m18s.gcode
2025-09-01 03:50:17,560 [job_status.py:_update_file_metadata()] - Update Metadata. File: 1st layer test 250x250mm by 02 layerheight_0.2mm_PLA_Generic Klipper Printer_51m18s.gcode Size: 81475
2025-09-01 03:50:17,580 [screen.py:attach_panel()] - Current panel hierarchy: job_status > job_status
2025-09-01 03:50:17,602 [screen.py:_load_panel()] - Loading panel: extrude
2025-09-01 03:50:17,669 [screen.py:attach_panel()] - Current panel hierarchy: job_status > job_status > extrude
2025-09-01 03:50:38,333 [printer.py:change_state()] - Changing state from 'paused' to 'ready'
2025-09-01 03:50:38,333 [printer.py:change_state()] - Adding callback for state: ready
2025-09-01 03:50:38,430 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 03:50:38,430 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 03:51:38,710 [screensaver.py:show()] - Showing Screensaver
2025-09-01 03:54:12,758 [screen.py:show_panel()] - Reinitializing panel zcalibrate
2025-09-01 03:54:12,766 [printer.py:get_probe()] - Probe type: bltouch
2025-09-01 03:54:12,766 [zcalibrate.py:initialize_probe_params()] - Offset X:27.25 Y:-12.8 Z:1.01
2025-09-01 03:54:12,789 [zcalibrate.py:set_commands()] - Available commands for calibration: ['PROBE_CALIBRATE', 'BED_MESH_CALIBRATE METHOD=manual']
2025-09-01 03:54:12,793 [zcalibrate.py:on_dropdown_change()] - Selected PROBE_CALIBRATE
2025-09-01 03:54:12,818 [screen.py:attach_panel()] - Current panel hierarchy: job_status > job_status > extrude > zcalibrate
2025-09-01 04:00:32,600 [screensaver.py:close()] - Closing Screensaver
2025-09-01 04:00:32,602 [screen.py:wake_screen()] - Screen wake up
2025-09-01 04:00:32,655 [screen.py:show_popup_message()] - error: Move out of range: 150.000 150.000 1101.000 [1345.739]
2025-09-01 04:00:32,665 [screen.py:show_popup_message()] - error: !! Move out of range: 150.000 150.000 1101.000 [1345.739]
2025-09-01 04:00:32,670 [zcalibrate.py:process_update()] - !! Move out of range: 150.000 150.000 1101.000 [1345.739]
2025-09-01 04:01:32,710 [screensaver.py:show()] - Showing Screensaver
2025-09-01 04:05:47,469 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=1024, height=600)
2025-09-01 04:06:02,147 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-01 04:06:02,148 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-01 04:06:02,149 [screensaver.py:close()] - Closing Screensaver
2025-09-01 04:06:02,152 [screen.py:wake_screen()] - Screen wake up
2025-09-01 04:06:02,196 [screensaver.py:close()] - Restoring Dialog <Gtk.Dialog object at 0xe3ee40c8 (GtkDialog at 0x2254540)>
2025-09-01 04:06:02,260 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 04:06:02,261 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 04:06:02,261 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-01 04:06:02,261 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 04:06:02,323 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-09-01 04:06:02,324 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-01 04:06:02,356 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-01 04:06:06,405 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-01 04:06:06,627 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-01 04:06:06,628 [printer.py:log_counts()] - # Extruders: 1
2025-09-01 04:06:06,628 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-01 04:06:06,628 [printer.py:log_counts()] - # Fans: 3
2025-09-01 04:06:06,628 [printer.py:log_counts()] - # Output pins: 0
2025-09-01 04:06:06,628 [printer.py:log_counts()] - # PWM tools: 0
2025-09-01 04:06:06,629 [printer.py:log_counts()] - # Leds: 1
2025-09-01 04:06:06,891 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-01 04:06:06,892 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-01 04:06:06,893 [screen.py:init_klipper()] - Printer initialized
2025-09-01 04:06:06,894 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-01 04:06:06,894 [printer.py:change_state()] - Adding callback for state: ready
2025-09-01 04:06:06,926 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-01 04:06:07,137 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-01 04:06:07,138 [printer.py:log_counts()] - # Extruders: 1
2025-09-01 04:06:07,138 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-01 04:06:07,138 [printer.py:log_counts()] - # Fans: 3
2025-09-01 04:06:07,138 [printer.py:log_counts()] - # Output pins: 0
2025-09-01 04:06:07,138 [printer.py:log_counts()] - # PWM tools: 0
2025-09-01 04:06:07,139 [printer.py:log_counts()] - # Leds: 1
2025-09-01 04:06:07,387 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-01 04:06:07,389 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-01 04:06:07,389 [screen.py:init_klipper()] - Printer initialized
2025-09-01 04:06:07,446 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 04:06:07,446 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 04:06:07,446 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-01 04:06:07,449 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 04:06:07,511 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-01 04:06:07,623 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-01 04:06:07,639 [main_menu.py:add_device()] - Adding device: extruder
2025-09-01 04:06:07,643 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-01 04:06:07,672 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-01 04:06:07,688 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-01 04:06:07,721 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-01 04:06:07,742 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-01 04:07:07,710 [screensaver.py:show()] - Showing Screensaver
2025-09-01 04:09:58,978 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-01 04:09:58,978 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-01 04:09:58,980 [screensaver.py:close()] - Closing Screensaver
2025-09-01 04:09:58,983 [screen.py:wake_screen()] - Screen wake up
2025-09-01 04:09:59,086 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 04:09:59,086 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 04:09:59,086 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-01 04:09:59,087 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 04:09:59,155 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-01 04:09:59,186 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-01 04:10:03,164 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-01 04:10:03,352 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-01 04:10:03,352 [printer.py:log_counts()] - # Extruders: 1
2025-09-01 04:10:03,352 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-01 04:10:03,352 [printer.py:log_counts()] - # Fans: 3
2025-09-01 04:10:03,352 [printer.py:log_counts()] - # Output pins: 0
2025-09-01 04:10:03,352 [printer.py:log_counts()] - # PWM tools: 0
2025-09-01 04:10:03,352 [printer.py:log_counts()] - # Leds: 1
2025-09-01 04:10:03,609 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-01 04:10:03,611 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-01 04:10:03,611 [screen.py:init_klipper()] - Printer initialized
2025-09-01 04:10:03,612 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-01 04:10:03,612 [printer.py:change_state()] - Adding callback for state: ready
2025-09-01 04:10:03,673 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 04:10:03,674 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 04:10:03,674 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-01 04:10:03,677 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 04:10:03,737 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-01 04:10:03,840 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-01 04:10:03,856 [main_menu.py:add_device()] - Adding device: extruder
2025-09-01 04:10:03,862 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-01 04:10:03,891 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-01 04:10:03,906 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-01 04:10:03,939 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-01 04:10:03,956 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-01 04:10:03,985 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-01 04:10:04,107 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-01 04:10:04,107 [printer.py:log_counts()] - # Extruders: 1
2025-09-01 04:10:04,107 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-01 04:10:04,107 [printer.py:log_counts()] - # Fans: 3
2025-09-01 04:10:04,107 [printer.py:log_counts()] - # Output pins: 0
2025-09-01 04:10:04,108 [printer.py:log_counts()] - # PWM tools: 0
2025-09-01 04:10:04,108 [printer.py:log_counts()] - # Leds: 1
2025-09-01 04:10:04,362 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-01 04:10:04,364 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-01 04:10:04,364 [screen.py:init_klipper()] - Printer initialized
2025-09-01 04:10:04,500 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-09-01 04:10:04,532 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-01 04:10:04,549 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-01 04:10:42,983 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=1024, height=600)
2025-09-01 04:11:03,710 [screensaver.py:show()] - Showing Screensaver
2025-09-01 04:11:03,711 [screensaver.py:show()] - Hiding dialog
2025-09-01 04:16:20,927 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-09-01 04:16:20,967 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=1024, height=600)
2025-09-01 04:17:31,447 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-01 04:17:31,448 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-01 04:17:31,454 [screensaver.py:close()] - Closing Screensaver
2025-09-01 04:17:31,457 [screen.py:wake_screen()] - Screen wake up
2025-09-01 04:17:31,502 [screensaver.py:close()] - Restoring Dialog <Gtk.Dialog object at 0xe3fc2c88 (GtkDialog at 0x22541c0)>
2025-09-01 04:17:31,568 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 04:17:31,568 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 04:17:31,568 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-01 04:17:31,569 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 04:17:31,642 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-09-01 04:17:31,642 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-01 04:17:31,681 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-01 04:17:35,694 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-01 04:17:35,898 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-01 04:17:35,898 [printer.py:log_counts()] - # Extruders: 1
2025-09-01 04:17:35,898 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-01 04:17:35,899 [printer.py:log_counts()] - # Fans: 3
2025-09-01 04:17:35,899 [printer.py:log_counts()] - # Output pins: 0
2025-09-01 04:17:35,899 [printer.py:log_counts()] - # PWM tools: 0
2025-09-01 04:17:35,899 [printer.py:log_counts()] - # Leds: 1
2025-09-01 04:17:36,158 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-01 04:17:36,162 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-01 04:17:36,162 [screen.py:init_klipper()] - Printer initialized
2025-09-01 04:17:36,163 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-01 04:17:36,163 [printer.py:change_state()] - Adding callback for state: ready
2025-09-01 04:17:36,196 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-01 04:17:36,408 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-01 04:17:36,408 [printer.py:log_counts()] - # Extruders: 1
2025-09-01 04:17:36,408 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-01 04:17:36,409 [printer.py:log_counts()] - # Fans: 3
2025-09-01 04:17:36,409 [printer.py:log_counts()] - # Output pins: 0
2025-09-01 04:17:36,409 [printer.py:log_counts()] - # PWM tools: 0
2025-09-01 04:17:36,409 [printer.py:log_counts()] - # Leds: 1
2025-09-01 04:17:36,659 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-01 04:17:36,661 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-01 04:17:36,662 [screen.py:init_klipper()] - Printer initialized
2025-09-01 04:17:36,720 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 04:17:36,720 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 04:17:36,721 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-01 04:17:36,724 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 04:17:36,795 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-01 04:17:36,906 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-01 04:17:36,922 [main_menu.py:add_device()] - Adding device: extruder
2025-09-01 04:17:36,928 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-01 04:17:36,957 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-01 04:17:36,972 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-01 04:17:37,005 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-01 04:17:37,024 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-01 04:18:37,710 [screensaver.py:show()] - Showing Screensaver
2025-09-01 04:19:46,284 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-01 04:19:46,285 [printer.py:change_state()] - Adding callback for state: printing
2025-09-01 04:19:46,286 [screensaver.py:close()] - Closing Screensaver
2025-09-01 04:19:46,289 [screen.py:wake_screen()] - Screen wake up
2025-09-01 04:19:46,404 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 04:19:46,405 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 04:19:46,405 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 04:19:46,465 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-01 04:19:46,552 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-01 04:19:46,573 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-01 04:19:46,597 [job_status.py:update_filename()] - Updating filename to 1st layer test 250x250mm by 02 layerheight_0.2mm_PLA_Generic Klipper Printer_51m18s.gcode
2025-09-01 04:19:46,599 [job_status.py:_update_file_metadata()] - Update Metadata. File: 1st layer test 250x250mm by 02 layerheight_0.2mm_PLA_Generic Klipper Printer_51m18s.gcode Size: 81475
2025-09-01 04:20:46,712 [screensaver.py:show()] - Showing Screensaver
2025-09-01 04:26:12,151 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2025-09-01 04:26:12,152 [printer.py:change_state()] - Adding callback for state: paused
2025-09-01 04:26:12,162 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'paused'
2025-09-01 04:26:12,172 [screensaver.py:close()] - Closing Screensaver
2025-09-01 04:26:12,181 [screen.py:wake_screen()] - Screen wake up
2025-09-01 04:26:12,292 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 04:26:12,293 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 04:26:12,294 [screen.py:show_panel()] - Panel is already is in view
2025-09-01 04:26:12,298 [screen.py:show_panel()] - Reinitializing panel extrude
2025-09-01 04:26:12,367 [screen.py:attach_panel()] - Current panel hierarchy: job_status > extrude
2025-09-01 04:26:41,487 [printer.py:change_state()] - Changing state from 'paused' to 'ready'
2025-09-01 04:26:41,487 [printer.py:change_state()] - Adding callback for state: ready
2025-09-01 04:26:41,587 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 04:26:41,588 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 04:27:41,710 [screensaver.py:show()] - Showing Screensaver
2025-09-01 04:28:50,138 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-01 04:28:50,138 [printer.py:change_state()] - Adding callback for state: printing
2025-09-01 04:28:50,145 [screensaver.py:close()] - Closing Screensaver
2025-09-01 04:28:50,147 [screen.py:wake_screen()] - Screen wake up
2025-09-01 04:28:50,256 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 04:28:50,256 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 04:28:50,256 [screen.py:_menu_go_back()] - #### Menu go home
2025-09-01 04:28:50,260 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 04:28:50,325 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-01 04:28:50,433 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-01 04:28:50,453 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-01 04:28:50,480 [job_status.py:update_filename()] - Updating filename to xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m42s.gcode
2025-09-01 04:28:50,481 [job_status.py:_update_file_metadata()] - Update Metadata. File: xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m42s.gcode Size: 650247
2025-09-01 04:28:50,522 [screen.py:attach_panel()] - Current panel hierarchy: job_status > job_status
2025-09-01 04:29:50,711 [screensaver.py:show()] - Showing Screensaver
2025-09-01 04:30:38,102 [screensaver.py:close()] - Closing Screensaver
2025-09-01 04:30:38,109 [screen.py:wake_screen()] - Screen wake up
2025-09-01 04:30:40,010 [KlippyGtk.py:Dialog()] - Showing dialog xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m42s.gcode (width=1024, height=600)
2025-09-01 04:30:40,901 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-09-01 04:30:41,867 [screen.py:show_panel()] - Reinitializing panel fine_tune
2025-09-01 04:30:41,917 [screen.py:attach_panel()] - Current panel hierarchy: job_status > job_status > fine_tune
2025-09-01 04:30:43,025 [fine_tune.py:change_percent_delta()] - ### Delta 25
2025-09-01 04:30:43,787 [screen.py:_send_action()] - printer.gcode.script: {'script': 'M220 S125'}
2025-09-01 04:30:44,567 [screen.py:_send_action()] - printer.gcode.script: {'script': 'M220 S150'}
2025-09-01 04:30:45,207 [screen.py:_send_action()] - printer.gcode.script: {'script': 'M220 S175'}
2025-09-01 04:30:46,194 [screen.py:_send_action()] - printer.gcode.script: {'script': 'M220 S200'}
2025-09-01 04:31:46,724 [screensaver.py:show()] - Showing Screensaver
2025-09-01 04:33:28,987 [screensaver.py:close()] - Closing Screensaver
2025-09-01 04:33:28,988 [screen.py:wake_screen()] - Screen wake up
2025-09-01 04:33:31,363 [screen.py:_send_action()] - printer.gcode.script: {'script': 'M220 S225'}
2025-09-01 04:33:32,557 [screen.py:_send_action()] - printer.gcode.script: {'script': 'M220 S250'}
2025-09-01 04:33:33,479 [screen.py:_send_action()] - printer.gcode.script: {'script': 'M220 S275'}
2025-09-01 04:33:34,607 [screen.py:_send_action()] - printer.gcode.script: {'script': 'M220 S300'}
2025-09-01 04:34:34,710 [screensaver.py:show()] - Showing Screensaver
2025-09-01 04:42:18,725 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-09-01 04:42:18,726 [printer.py:change_state()] - Adding callback for state: ready
2025-09-01 04:42:18,729 [screensaver.py:close()] - Closing Screensaver
2025-09-01 04:42:18,731 [screen.py:wake_screen()] - Screen wake up
2025-09-01 04:42:18,841 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 04:42:18,842 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 04:42:49,724 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-01 04:42:49,724 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-01 04:42:49,788 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 04:42:49,789 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 04:42:49,789 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-01 04:42:49,790 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 04:42:49,856 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-01 04:42:49,886 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-01 04:42:53,723 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-01 04:42:53,985 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-01 04:42:53,986 [printer.py:log_counts()] - # Extruders: 1
2025-09-01 04:42:53,986 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-01 04:42:53,986 [printer.py:log_counts()] - # Fans: 3
2025-09-01 04:42:53,986 [printer.py:log_counts()] - # Output pins: 0
2025-09-01 04:42:53,986 [printer.py:log_counts()] - # PWM tools: 0
2025-09-01 04:42:53,986 [printer.py:log_counts()] - # Leds: 1
2025-09-01 04:42:54,256 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-01 04:42:54,257 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-01 04:42:54,257 [screen.py:init_klipper()] - Printer initialized
2025-09-01 04:42:54,258 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-01 04:42:54,259 [printer.py:change_state()] - Adding callback for state: ready
2025-09-01 04:42:54,316 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 04:42:54,317 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 04:42:54,317 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-01 04:42:54,320 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 04:42:54,384 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-01 04:42:54,603 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-01 04:42:54,628 [main_menu.py:add_device()] - Adding device: extruder
2025-09-01 04:42:54,633 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-01 04:42:54,660 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-01 04:42:54,675 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-01 04:42:54,712 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-01 04:42:54,731 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-01 04:43:54,769 [screensaver.py:show()] - Showing Screensaver
2025-09-01 04:48:42,400 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-01 04:48:42,400 [printer.py:change_state()] - Adding callback for state: printing
2025-09-01 04:48:42,402 [screensaver.py:close()] - Closing Screensaver
2025-09-01 04:48:42,406 [screen.py:wake_screen()] - Screen wake up
2025-09-01 04:48:42,553 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 04:48:42,553 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 04:48:42,554 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 04:48:42,632 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-01 04:48:42,738 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-01 04:48:42,751 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-01 04:48:42,764 [job_status.py:update_filename()] - Updating filename to Basic_0.2mm_PLA_Generic Klipper Printer_34m18s.gcode
2025-09-01 04:48:42,766 [job_status.py:_update_file_metadata()] - Update Metadata. File: Basic_0.2mm_PLA_Generic Klipper Printer_34m18s.gcode Size: 5965528
2025-09-01 04:49:34,797 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2025-09-01 04:49:34,798 [printer.py:change_state()] - Adding callback for state: paused
2025-09-01 04:49:34,811 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'paused'
2025-09-01 04:49:34,931 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 04:49:34,932 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 04:49:34,932 [screen.py:show_panel()] - Panel is already is in view
2025-09-01 04:49:34,936 [screen.py:show_panel()] - Reinitializing panel extrude
2025-09-01 04:49:35,005 [screen.py:attach_panel()] - Current panel hierarchy: job_status > extrude
2025-09-01 04:49:57,622 [printer.py:change_state()] - Changing state from 'paused' to 'printing'
2025-09-01 04:49:57,622 [printer.py:change_state()] - Adding callback for state: printing
2025-09-01 04:49:57,710 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 04:49:57,710 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 04:49:57,711 [screen.py:_menu_go_back()] - #### Menu go home
2025-09-01 04:49:57,714 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 04:49:57,774 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-01 04:49:57,861 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-01 04:49:57,876 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-01 04:49:57,890 [job_status.py:update_filename()] - Updating filename to Basic_0.2mm_PLA_Generic Klipper Printer_34m18s.gcode
2025-09-01 04:49:57,890 [job_status.py:_update_file_metadata()] - Update Metadata. File: Basic_0.2mm_PLA_Generic Klipper Printer_34m18s.gcode Size: 5965528
2025-09-01 04:49:57,911 [screen.py:attach_panel()] - Current panel hierarchy: job_status > job_status
2025-09-01 04:50:55,319 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2025-09-01 04:50:55,319 [printer.py:change_state()] - Adding callback for state: paused
2025-09-01 04:50:55,340 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'paused'
2025-09-01 04:50:55,441 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 04:50:55,442 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 04:50:55,442 [screen.py:show_panel()] - Panel is already is in view
2025-09-01 04:50:55,448 [screen.py:show_panel()] - Reinitializing panel extrude
2025-09-01 04:50:55,515 [screen.py:attach_panel()] - Current panel hierarchy: job_status > job_status > extrude
2025-09-01 04:51:23,661 [printer.py:change_state()] - Changing state from 'paused' to 'ready'
2025-09-01 04:51:23,662 [printer.py:change_state()] - Adding callback for state: ready
2025-09-01 04:51:23,758 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 04:51:23,758 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 04:51:41,337 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-01 04:51:41,338 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-01 04:51:41,408 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 04:51:41,408 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 04:51:41,409 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-01 04:51:41,409 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 04:51:41,470 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-01 04:51:41,499 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-01 04:51:45,627 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-01 04:51:45,842 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-01 04:51:45,843 [printer.py:log_counts()] - # Extruders: 1
2025-09-01 04:51:45,843 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-01 04:51:45,843 [printer.py:log_counts()] - # Fans: 3
2025-09-01 04:51:45,843 [printer.py:log_counts()] - # Output pins: 0
2025-09-01 04:51:45,844 [printer.py:log_counts()] - # PWM tools: 0
2025-09-01 04:51:45,844 [printer.py:log_counts()] - # Leds: 1
2025-09-01 04:51:46,100 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-01 04:51:46,102 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-01 04:51:46,102 [screen.py:init_klipper()] - Printer initialized
2025-09-01 04:51:46,103 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-01 04:51:46,103 [printer.py:change_state()] - Adding callback for state: ready
2025-09-01 04:51:46,123 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-01 04:51:46,353 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-01 04:51:46,353 [printer.py:log_counts()] - # Extruders: 1
2025-09-01 04:51:46,353 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-01 04:51:46,354 [printer.py:log_counts()] - # Fans: 3
2025-09-01 04:51:46,354 [printer.py:log_counts()] - # Output pins: 0
2025-09-01 04:51:46,354 [printer.py:log_counts()] - # PWM tools: 0
2025-09-01 04:51:46,354 [printer.py:log_counts()] - # Leds: 1
2025-09-01 04:51:46,599 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-01 04:51:46,600 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-01 04:51:46,601 [screen.py:init_klipper()] - Printer initialized
2025-09-01 04:51:46,658 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 04:51:46,660 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 04:51:46,660 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-01 04:51:46,666 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 04:51:46,737 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-01 04:51:46,872 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-01 04:51:46,892 [main_menu.py:add_device()] - Adding device: extruder
2025-09-01 04:51:46,897 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-01 04:51:46,928 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-01 04:51:46,945 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-01 04:51:46,985 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-01 04:51:47,008 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-01 04:52:24,216 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-01 04:52:24,217 [printer.py:change_state()] - Adding callback for state: printing
2025-09-01 04:52:24,373 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 04:52:24,373 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 04:52:24,374 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 04:52:24,435 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-01 04:52:24,536 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-01 04:52:24,547 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-01 04:52:24,560 [job_status.py:update_filename()] - Updating filename to Basic_0.2mm_PLA_Generic Klipper Printer_34m18s.gcode
2025-09-01 04:52:24,561 [job_status.py:_update_file_metadata()] - Update Metadata. File: Basic_0.2mm_PLA_Generic Klipper Printer_34m18s.gcode Size: 5965528
2025-09-01 04:53:24,710 [screensaver.py:show()] - Showing Screensaver
2025-09-01 04:55:52,828 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2025-09-01 04:55:52,829 [printer.py:change_state()] - Adding callback for state: paused
2025-09-01 04:55:52,846 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'paused'
2025-09-01 04:55:52,858 [screensaver.py:close()] - Closing Screensaver
2025-09-01 04:55:52,870 [screen.py:wake_screen()] - Screen wake up
2025-09-01 04:55:52,990 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 04:55:52,991 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 04:55:52,992 [screen.py:show_panel()] - Panel is already is in view
2025-09-01 04:55:52,996 [screen.py:show_panel()] - Reinitializing panel extrude
2025-09-01 04:55:53,081 [screen.py:attach_panel()] - Current panel hierarchy: job_status > extrude
2025-09-01 04:56:20,666 [printer.py:change_state()] - Changing state from 'paused' to 'ready'
2025-09-01 04:56:20,666 [printer.py:change_state()] - Adding callback for state: ready
2025-09-01 04:56:20,775 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 04:56:20,775 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 04:57:21,710 [screensaver.py:show()] - Showing Screensaver
2025-09-01 04:57:57,153 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=1024, height=600)
2025-09-01 04:57:59,396 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-01 04:57:59,397 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-01 04:57:59,401 [screensaver.py:close()] - Closing Screensaver
2025-09-01 04:57:59,405 [screen.py:wake_screen()] - Screen wake up
2025-09-01 04:57:59,452 [screensaver.py:close()] - Restoring Dialog <Gtk.Dialog object at 0xe4bea508 (GtkDialog at 0x2254380)>
2025-09-01 04:57:59,522 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 04:57:59,522 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 04:57:59,522 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-01 04:57:59,523 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 04:57:59,595 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-09-01 04:57:59,595 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-01 04:57:59,628 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-01 04:58:03,727 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-01 04:58:03,851 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-01 04:58:03,852 [printer.py:log_counts()] - # Extruders: 1
2025-09-01 04:58:03,852 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-01 04:58:03,852 [printer.py:log_counts()] - # Fans: 3
2025-09-01 04:58:03,852 [printer.py:log_counts()] - # Output pins: 0
2025-09-01 04:58:03,853 [printer.py:log_counts()] - # PWM tools: 0
2025-09-01 04:58:03,853 [printer.py:log_counts()] - # Leds: 1
2025-09-01 04:58:04,078 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-01 04:58:04,079 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-01 04:58:04,079 [screen.py:init_klipper()] - Printer initialized
2025-09-01 04:58:04,080 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-01 04:58:04,080 [printer.py:change_state()] - Adding callback for state: ready
2025-09-01 04:58:04,141 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 04:58:04,142 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 04:58:04,142 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-01 04:58:04,145 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 04:58:04,206 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-01 04:58:04,311 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-01 04:58:04,329 [main_menu.py:add_device()] - Adding device: extruder
2025-09-01 04:58:04,335 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-01 04:58:04,364 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-01 04:58:04,381 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-01 04:58:04,417 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-01 04:58:04,437 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-01 04:58:49,724 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-01 04:58:49,724 [printer.py:change_state()] - Adding callback for state: printing
2025-09-01 04:58:49,899 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 04:58:49,900 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 04:58:49,900 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 04:58:50,002 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-01 04:58:50,104 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-01 04:58:50,117 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-01 04:58:50,132 [job_status.py:update_filename()] - Updating filename to Basic_0.2mm_PLA_Generic Klipper Printer_31m31s.gcode
2025-09-01 04:58:50,132 [job_status.py:_update_file_metadata()] - Update Metadata. File: Basic_0.2mm_PLA_Generic Klipper Printer_31m31s.gcode Size: 5995856
2025-09-01 04:59:50,710 [screensaver.py:show()] - Showing Screensaver
2025-09-01 05:32:14,370 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-09-01 05:32:14,370 [printer.py:change_state()] - Adding callback for state: ready
2025-09-01 05:32:14,394 [screensaver.py:close()] - Closing Screensaver
2025-09-01 05:32:14,402 [screen.py:wake_screen()] - Screen wake up
2025-09-01 05:32:14,458 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'complete'
2025-09-01 05:32:14,551 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 05:32:14,552 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 05:32:45,309 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-01 05:32:45,309 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-01 05:32:45,380 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 05:32:45,381 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 05:32:45,381 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-01 05:32:45,388 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 05:32:45,452 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-01 05:32:45,479 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-01 05:32:49,508 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-01 05:32:49,721 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-01 05:32:49,721 [printer.py:log_counts()] - # Extruders: 1
2025-09-01 05:32:49,721 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-01 05:32:49,722 [printer.py:log_counts()] - # Fans: 3
2025-09-01 05:32:49,722 [printer.py:log_counts()] - # Output pins: 0
2025-09-01 05:32:49,722 [printer.py:log_counts()] - # PWM tools: 0
2025-09-01 05:32:49,722 [printer.py:log_counts()] - # Leds: 1
2025-09-01 05:32:49,984 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-01 05:32:49,985 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-01 05:32:49,986 [screen.py:init_klipper()] - Printer initialized
2025-09-01 05:32:49,986 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-01 05:32:49,987 [printer.py:change_state()] - Adding callback for state: ready
2025-09-01 05:32:50,035 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-01 05:32:50,232 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-01 05:32:50,232 [printer.py:log_counts()] - # Extruders: 1
2025-09-01 05:32:50,232 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-01 05:32:50,233 [printer.py:log_counts()] - # Fans: 3
2025-09-01 05:32:50,233 [printer.py:log_counts()] - # Output pins: 0
2025-09-01 05:32:50,233 [printer.py:log_counts()] - # PWM tools: 0
2025-09-01 05:32:50,233 [printer.py:log_counts()] - # Leds: 1
2025-09-01 05:32:50,482 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-01 05:32:50,484 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-01 05:32:50,484 [screen.py:init_klipper()] - Printer initialized
2025-09-01 05:32:50,541 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 05:32:50,542 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 05:32:50,543 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-01 05:32:50,545 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 05:32:50,609 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-01 05:32:50,733 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-01 05:32:50,753 [main_menu.py:add_device()] - Adding device: extruder
2025-09-01 05:32:50,757 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-01 05:32:50,787 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-01 05:32:50,805 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-01 05:32:50,843 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-01 05:32:50,865 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-01 05:33:50,719 [screensaver.py:show()] - Showing Screensaver
2025-09-01 05:37:04,531 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-01 05:37:04,531 [printer.py:change_state()] - Adding callback for state: printing
2025-09-01 05:37:04,534 [screensaver.py:close()] - Closing Screensaver
2025-09-01 05:37:04,537 [screen.py:wake_screen()] - Screen wake up
2025-09-01 05:37:04,695 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 05:37:04,695 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 05:37:04,696 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 05:37:04,770 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-01 05:37:04,870 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-01 05:37:04,882 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-01 05:37:04,895 [job_status.py:update_filename()] - Updating filename to SpeedTestStructure_0.2mm_PLA_Generic Klipper Printer_51m36s.gcode
2025-09-01 05:37:04,896 [job_status.py:_update_file_metadata()] - Update Metadata. File: SpeedTestStructure_0.2mm_PLA_Generic Klipper Printer_51m36s.gcode Size: 2991959
2025-09-01 05:38:04,713 [screensaver.py:show()] - Showing Screensaver
2025-09-01 06:16:05,739 [screensaver.py:close()] - Closing Screensaver
2025-09-01 06:16:05,746 [screen.py:wake_screen()] - Screen wake up
2025-09-01 06:16:06,898 [screen.py:show_panel()] - Reinitializing panel fine_tune
2025-09-01 06:16:06,946 [screen.py:attach_panel()] - Current panel hierarchy: job_status > fine_tune
2025-09-01 06:16:08,674 [fine_tune.py:change_percent_delta()] - ### Delta 25
2025-09-01 06:16:09,533 [screen.py:_send_action()] - printer.gcode.script: {'script': 'M220 S125'}
2025-09-01 06:16:11,869 [screen.py:_send_action()] - printer.gcode.script: {'script': 'M220 S150'}
2025-09-01 06:16:15,337 [screen.py:_send_action()] - printer.gcode.script: {'script': 'M220 S175'}
2025-09-01 06:16:48,508 [screen.py:_send_action()] - printer.gcode.script: {'script': 'M220 S200'}
2025-09-01 06:16:50,222 [screen.py:_send_action()] - printer.gcode.script: {'script': 'M220 S225'}
2025-09-01 06:16:51,819 [screen.py:_send_action()] - printer.gcode.script: {'script': 'M220 S250'}
2025-09-01 06:17:07,573 [screen.py:_send_action()] - printer.gcode.script: {'script': 'M220 S225'}
2025-09-01 06:17:09,170 [screen.py:_send_action()] - printer.gcode.script: {'script': 'M220 S200'}
2025-09-01 06:17:36,712 [screen.py:_send_action()] - printer.gcode.script: {'script': 'M220 S175'}
2025-09-01 06:18:02,601 [screen.py:_send_action()] - printer.gcode.script: {'script': 'M220 S150'}
2025-09-01 06:18:48,729 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2025-09-01 06:18:48,729 [printer.py:change_state()] - Adding callback for state: paused
2025-09-01 06:18:48,807 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 06:18:48,807 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 06:18:48,807 [screen.py:_menu_go_back()] - #### Menu go home
2025-09-01 06:18:48,811 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 06:18:48,875 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-01 06:18:48,965 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-01 06:18:48,980 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'paused'
2025-09-01 06:18:48,999 [job_status.py:update_filename()] - Updating filename to SpeedTestStructure_0.2mm_PLA_Generic Klipper Printer_51m36s.gcode
2025-09-01 06:18:49,000 [job_status.py:_update_file_metadata()] - Update Metadata. File: SpeedTestStructure_0.2mm_PLA_Generic Klipper Printer_51m36s.gcode Size: 2991959
2025-09-01 06:18:49,020 [screen.py:attach_panel()] - Current panel hierarchy: job_status > job_status
2025-09-01 06:18:49,050 [screen.py:show_panel()] - Reinitializing panel extrude
2025-09-01 06:18:49,102 [screen.py:attach_panel()] - Current panel hierarchy: job_status > job_status > extrude
2025-09-01 06:19:13,800 [printer.py:change_state()] - Changing state from 'paused' to 'ready'
2025-09-01 06:19:13,800 [printer.py:change_state()] - Adding callback for state: ready
2025-09-01 06:19:13,904 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 06:19:13,904 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 06:20:14,710 [screensaver.py:show()] - Showing Screensaver
2025-09-01 06:23:41,238 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-01 06:23:41,239 [printer.py:change_state()] - Adding callback for state: printing
2025-09-01 06:23:41,242 [screensaver.py:close()] - Closing Screensaver
2025-09-01 06:23:41,248 [screen.py:wake_screen()] - Screen wake up
2025-09-01 06:23:41,385 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 06:23:41,386 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 06:23:41,386 [screen.py:_menu_go_back()] - #### Menu go home
2025-09-01 06:23:41,391 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 06:23:41,462 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-01 06:23:41,583 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-01 06:23:41,597 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-01 06:23:41,613 [job_status.py:update_filename()] - Updating filename to obj_1_Gothic Bunny_0.2mm_PLA_Generic Klipper Printer_1h10m.gcode
2025-09-01 06:23:41,616 [job_status.py:_update_file_metadata()] - Update Metadata. File: obj_1_Gothic Bunny_0.2mm_PLA_Generic Klipper Printer_1h10m.gcode Size: 10146286
2025-09-01 06:23:41,659 [screen.py:attach_panel()] - Current panel hierarchy: job_status > job_status
2025-09-01 06:24:41,709 [screensaver.py:show()] - Showing Screensaver
2025-09-01 06:33:35,866 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2025-09-01 06:33:35,867 [printer.py:change_state()] - Adding callback for state: paused
2025-09-01 06:33:35,879 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'paused'
2025-09-01 06:33:35,887 [screensaver.py:close()] - Closing Screensaver
2025-09-01 06:33:35,895 [screen.py:wake_screen()] - Screen wake up
2025-09-01 06:33:35,995 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 06:33:35,995 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 06:33:35,996 [screen.py:show_panel()] - Panel is already is in view
2025-09-01 06:33:36,000 [screen.py:show_panel()] - Reinitializing panel extrude
2025-09-01 06:33:36,055 [screen.py:attach_panel()] - Current panel hierarchy: job_status > job_status > extrude
2025-09-01 06:33:59,930 [printer.py:change_state()] - Changing state from 'paused' to 'ready'
2025-09-01 06:33:59,931 [printer.py:change_state()] - Adding callback for state: ready
2025-09-01 06:34:00,026 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 06:34:00,026 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 06:35:00,710 [screensaver.py:show()] - Showing Screensaver
2025-09-01 06:35:07,198 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-01 06:35:07,198 [printer.py:change_state()] - Adding callback for state: printing
2025-09-01 06:35:07,199 [screensaver.py:close()] - Closing Screensaver
2025-09-01 06:35:07,204 [screen.py:wake_screen()] - Screen wake up
2025-09-01 06:35:07,327 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 06:35:07,328 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 06:35:07,328 [screen.py:_menu_go_back()] - #### Menu go home
2025-09-01 06:35:07,332 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 06:35:07,411 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-01 06:35:07,509 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-01 06:35:07,521 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-01 06:35:07,535 [job_status.py:update_filename()] - Updating filename to 3DBenchy_0.2mm_PLA_Generic Klipper Printer_50m32s.gcode
2025-09-01 06:35:07,536 [job_status.py:_update_file_metadata()] - Update Metadata. File: 3DBenchy_0.2mm_PLA_Generic Klipper Printer_50m32s.gcode Size: 4234058
2025-09-01 06:35:07,571 [screen.py:attach_panel()] - Current panel hierarchy: job_status > job_status
2025-09-01 06:36:07,710 [screensaver.py:show()] - Showing Screensaver
2025-09-01 06:45:17,272 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2025-09-01 06:45:17,274 [printer.py:change_state()] - Adding callback for state: paused
2025-09-01 06:45:17,297 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'paused'
2025-09-01 06:45:17,308 [screensaver.py:close()] - Closing Screensaver
2025-09-01 06:45:17,320 [screen.py:wake_screen()] - Screen wake up
2025-09-01 06:45:17,467 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 06:45:17,468 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 06:45:17,469 [screen.py:show_panel()] - Panel is already is in view
2025-09-01 06:45:17,474 [screen.py:show_panel()] - Reinitializing panel extrude
2025-09-01 06:45:17,573 [screen.py:attach_panel()] - Current panel hierarchy: job_status > job_status > extrude
2025-09-01 06:45:44,598 [printer.py:change_state()] - Changing state from 'paused' to 'ready'
2025-09-01 06:45:44,598 [printer.py:change_state()] - Adding callback for state: ready
2025-09-01 06:45:44,703 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 06:45:44,703 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 06:46:07,036 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=1024, height=600)
2025-09-01 06:46:09,149 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-01 06:46:09,149 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-01 06:46:09,218 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 06:46:09,218 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 06:46:09,218 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-01 06:46:09,219 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 06:46:09,282 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-09-01 06:46:09,282 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-01 06:46:09,312 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-01 06:46:13,359 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-01 06:46:13,574 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-01 06:46:13,575 [printer.py:log_counts()] - # Extruders: 1
2025-09-01 06:46:13,575 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-01 06:46:13,575 [printer.py:log_counts()] - # Fans: 3
2025-09-01 06:46:13,575 [printer.py:log_counts()] - # Output pins: 0
2025-09-01 06:46:13,575 [printer.py:log_counts()] - # PWM tools: 0
2025-09-01 06:46:13,575 [printer.py:log_counts()] - # Leds: 1
2025-09-01 06:46:13,834 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-01 06:46:13,836 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-01 06:46:13,837 [screen.py:init_klipper()] - Printer initialized
2025-09-01 06:46:13,837 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-01 06:46:13,838 [printer.py:change_state()] - Adding callback for state: ready
2025-09-01 06:46:13,870 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-01 06:46:14,083 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-01 06:46:14,084 [printer.py:log_counts()] - # Extruders: 1
2025-09-01 06:46:14,084 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-01 06:46:14,084 [printer.py:log_counts()] - # Fans: 3
2025-09-01 06:46:14,084 [printer.py:log_counts()] - # Output pins: 0
2025-09-01 06:46:14,084 [printer.py:log_counts()] - # PWM tools: 0
2025-09-01 06:46:14,084 [printer.py:log_counts()] - # Leds: 1
2025-09-01 06:46:14,336 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-01 06:46:14,337 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-01 06:46:14,338 [screen.py:init_klipper()] - Printer initialized
2025-09-01 06:46:14,398 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 06:46:14,398 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 06:46:14,398 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-01 06:46:14,402 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 06:46:14,474 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-01 06:46:14,605 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-01 06:46:14,625 [main_menu.py:add_device()] - Adding device: extruder
2025-09-01 06:46:14,631 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-01 06:46:14,661 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-01 06:46:14,680 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-01 06:46:14,719 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-01 06:46:14,739 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-01 06:47:14,711 [screensaver.py:show()] - Showing Screensaver
2025-09-01 06:49:08,181 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-01 06:49:08,181 [printer.py:change_state()] - Adding callback for state: printing
2025-09-01 06:49:08,184 [screensaver.py:close()] - Closing Screensaver
2025-09-01 06:49:08,195 [screen.py:wake_screen()] - Screen wake up
2025-09-01 06:49:08,328 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 06:49:08,329 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 06:49:08,329 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 06:49:08,417 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-01 06:49:08,514 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-01 06:49:08,526 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-01 06:49:08,541 [job_status.py:update_filename()] - Updating filename to 3DBenchy_0.2mm_PLA_Generic Klipper Printer_58m19s.gcode
2025-09-01 06:49:08,542 [job_status.py:_update_file_metadata()] - Update Metadata. File: 3DBenchy_0.2mm_PLA_Generic Klipper Printer_58m19s.gcode Size: 4696144
2025-09-01 06:50:08,711 [screensaver.py:show()] - Showing Screensaver
2025-09-01 07:47:09,178 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-09-01 07:47:09,179 [printer.py:change_state()] - Adding callback for state: ready
2025-09-01 07:47:09,190 [screensaver.py:close()] - Closing Screensaver
2025-09-01 07:47:09,200 [screen.py:wake_screen()] - Screen wake up
2025-09-01 07:47:09,277 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'complete'
2025-09-01 07:47:09,382 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 07:47:09,383 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 07:47:39,953 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-01 07:47:39,954 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-01 07:47:40,036 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 07:47:40,037 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 07:47:40,037 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-01 07:47:40,037 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 07:47:40,110 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-01 07:47:40,147 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-01 07:47:44,212 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-01 07:47:44,441 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-01 07:47:44,441 [printer.py:log_counts()] - # Extruders: 1
2025-09-01 07:47:44,442 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-01 07:47:44,442 [printer.py:log_counts()] - # Fans: 3
2025-09-01 07:47:44,442 [printer.py:log_counts()] - # Output pins: 0
2025-09-01 07:47:44,442 [printer.py:log_counts()] - # PWM tools: 0
2025-09-01 07:47:44,442 [printer.py:log_counts()] - # Leds: 1
2025-09-01 07:47:44,685 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-01 07:47:44,686 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-01 07:47:44,686 [screen.py:init_klipper()] - Printer initialized
2025-09-01 07:47:44,688 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-01 07:47:44,688 [printer.py:change_state()] - Adding callback for state: ready
2025-09-01 07:47:44,745 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 07:47:44,745 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 07:47:44,745 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-01 07:47:44,748 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 07:47:44,808 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-01 07:47:44,909 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-01 07:47:44,928 [main_menu.py:add_device()] - Adding device: extruder
2025-09-01 07:47:44,934 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-01 07:47:44,964 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-01 07:47:44,980 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-01 07:47:45,017 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-01 07:47:45,043 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-01 07:47:45,080 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-01 07:47:45,189 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-01 07:47:45,190 [printer.py:log_counts()] - # Extruders: 1
2025-09-01 07:47:45,190 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-01 07:47:45,190 [printer.py:log_counts()] - # Fans: 3
2025-09-01 07:47:45,190 [printer.py:log_counts()] - # Output pins: 0
2025-09-01 07:47:45,190 [printer.py:log_counts()] - # PWM tools: 0
2025-09-01 07:47:45,190 [printer.py:log_counts()] - # Leds: 1
2025-09-01 07:47:45,432 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-01 07:47:45,433 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-01 07:47:45,433 [screen.py:init_klipper()] - Printer initialized
2025-09-01 07:47:45,470 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-09-01 07:47:45,512 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-01 07:47:45,531 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-01 07:48:45,711 [screensaver.py:show()] - Showing Screensaver
2025-09-01 08:06:55,661 [screensaver.py:close()] - Closing Screensaver
2025-09-01 08:06:55,663 [screen.py:wake_screen()] - Screen wake up
                                                                      2025-09-01 07:44:41,091 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-09-01 07:44:41,092 [functions.py:log_start()] - KlipperScreen Version: v0.4.6-11-g6b6f63b6
2025-09-01 07:44:41,092 [functions.py:log_start()] - Python version: 3.9
2025-09-01 07:44:41,278 [config.py:get_config_file_location()] - Passed config (-c): .
2025-09-01 07:44:41,279 [config.py:__init__()] - Config path location: /home/sonic/printer_data/config/KlipperScreen.conf
2025-09-01 07:44:41,283 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/main_menu.conf']
2025-09-01 07:44:41,299 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/splash_menu.conf']
2025-09-01 07:44:41,305 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/print_menu.conf']
2025-09-01 07:44:41,315 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/move_menu.conf']
2025-09-01 07:44:41,328 [config.py:log_config()] - ===== Config File =====

=======================
2025-09-01 07:44:41,332 [config.py:__init__()] - ====== Saved Def ======

[main]
screen_blanking = 60
screen_blanking_printing = 60
24htime = False
font_size = small
show_heater_power = True

[graph Printer]
heater_bed = False

=======================
2025-09-01 07:44:41,333 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_path": "",
      "moonraker_ssl": null,
      "moonraker_api_key": ""
    }
  }
]
2025-09-01 07:44:41,522 [config.py:create_translations()] - Selected lang: system_lang OS lang: en_US
2025-09-01 07:44:41,522 [config.py:install_language()] - Using lang en
2025-09-01 07:44:41,541 [screen.py:__init__()] - Display for xset: :0
2025-09-01 07:44:41,543 [screen.py:__init__()] - Screen 0: 1024x600
2025-09-01 07:44:41,543 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-09-01 07:44:41,543 [screen.py:__init__()] - Wayland: False Display name: :0
2025-09-01 07:44:41,547 [screen.py:__init__()] - Screen resolution: 1024x600
2025-09-01 07:44:41,862 [KlippyGtk.py:__init__()] - Font size: 20.2 (small)
2025-09-01 07:44:42,080 [base_panel.py:battery_percentage()] - Battery information not available.
2025-09-01 07:44:42,329 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 07:44:42,330 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 07:44:42,331 [screen.py:initial_connection()] - Default printer: None
2025-09-01 07:44:42,398 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-09-01 07:44:42,399 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 07:44:42,458 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-09-01 07:44:42,537 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-01 07:44:42,567 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-01 07:44:42,567 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-01 07:44:46,830 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-01 07:44:46,831 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-01 07:44:50,849 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-09-01 07:44:50,849 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-09-01 07:44:50,865 [_logging.py:info()] - Websocket connected
2025-09-01 07:44:50,865 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-09-01 07:44:50,867 [screen.py:websocket_connected()] - ### websocket_connected
2025-09-01 07:44:50,961 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-09-01 07:44:50,988 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-09-01 07:44:51,012 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-01 07:44:51,289 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-01 07:44:51,290 [printer.py:log_counts()] - # Extruders: 1
2025-09-01 07:44:51,290 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-01 07:44:51,290 [printer.py:log_counts()] - # Fans: 3
2025-09-01 07:44:51,290 [printer.py:log_counts()] - # Output pins: 0
2025-09-01 07:44:51,290 [printer.py:log_counts()] - # PWM tools: 0
2025-09-01 07:44:51,290 [printer.py:log_counts()] - # Leds: 1
2025-09-01 07:44:51,547 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-01 07:44:51,548 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-01 07:44:51,549 [screen.py:init_klipper()] - Printer initialized
2025-09-01 07:44:51,549 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-01 07:44:51,550 [printer.py:change_state()] - Adding callback for state: ready
2025-09-01 07:44:51,607 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-01 07:44:51,607 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-01 07:44:51,607 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-01 07:44:51,611 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-01 07:44:51,672 [screen.py:_load_panel()] - Loading panel: main_menu
2025-09-01 07:44:51,902 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-01 07:44:51,921 [main_menu.py:add_device()] - Adding device: extruder
2025-09-01 07:44:51,931 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-01 07:44:51,969 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-01 07:44:51,986 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-01 07:44:52,020 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-01 07:44:52,040 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-01 07:44:53,912 [screen.py:_load_panel()] - Loading panel: move
2025-09-01 07:44:54,058 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-09-01 07:44:55,247 [screen.py:_load_panel()] - Loading panel: menu
2025-09-01 07:44:55,412 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move > menu
2025-09-01 07:44:55,437 [menu.py:arrangeMenuItems()] - X > homing quad_gantry_level
2025-09-01 07:44:55,442 [menu.py:arrangeMenuItems()] - X > homing Z-Tilt
2025-09-01 07:44:56,308 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G28'}
2025-09-02 18:19:09,134 [base_panel.py:battery_percentage()] - Battery information not available.
2025-09-02 18:19:23,135 [screensaver.py:show()] - Showing Screensaver
2025-09-02 18:49:41,433 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=1024, height=600)
2025-09-02 18:55:38,506 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-09-02 18:55:38,539 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=1024, height=600)
2025-09-02 18:55:45,812 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-02 18:55:45,812 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-02 18:55:45,814 [screensaver.py:close()] - Closing Screensaver
2025-09-02 18:55:45,822 [screen.py:wake_screen()] - Screen wake up
2025-09-02 18:55:45,861 [screensaver.py:close()] - Restoring Dialog <Gtk.Dialog object at 0xe457b948 (GtkDialog at 0x1e34360)>
2025-09-02 18:55:45,929 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 18:55:45,930 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 18:55:45,930 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-02 18:55:45,930 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-02 18:55:45,989 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-09-02 18:55:45,989 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-02 18:55:46,017 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-02 18:55:50,149 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-02 18:55:50,275 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-02 18:55:50,276 [printer.py:log_counts()] - # Extruders: 1
2025-09-02 18:55:50,277 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-02 18:55:50,278 [printer.py:log_counts()] - # Fans: 3
2025-09-02 18:55:50,278 [printer.py:log_counts()] - # Output pins: 0
2025-09-02 18:55:50,279 [printer.py:log_counts()] - # PWM tools: 0
2025-09-02 18:55:50,280 [printer.py:log_counts()] - # Leds: 1
2025-09-02 18:55:50,517 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-02 18:55:50,518 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-02 18:55:50,519 [screen.py:init_klipper()] - Printer initialized
2025-09-02 18:55:50,519 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-02 18:55:50,519 [printer.py:change_state()] - Adding callback for state: ready
2025-09-02 18:55:50,574 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 18:55:50,575 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 18:55:50,575 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-02 18:55:50,578 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-02 18:55:50,642 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-02 18:55:50,761 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-02 18:55:50,780 [main_menu.py:add_device()] - Adding device: extruder
2025-09-02 18:55:50,785 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-02 18:55:50,818 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-02 18:55:50,836 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-02 18:55:50,871 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-02 18:55:50,888 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-02 18:56:51,136 [screensaver.py:show()] - Showing Screensaver
2025-09-02 18:58:02,446 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-02 18:58:02,447 [printer.py:change_state()] - Adding callback for state: printing
2025-09-02 18:58:02,457 [screensaver.py:close()] - Closing Screensaver
2025-09-02 18:58:02,465 [screen.py:wake_screen()] - Screen wake up
2025-09-02 18:58:02,589 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 18:58:02,590 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 18:58:02,590 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-02 18:58:02,656 [screen.py:_load_panel()] - Loading panel: job_status
2025-09-02 18:58:02,851 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-02 18:58:02,867 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-02 18:58:02,899 [job_status.py:update_filename()] - Updating filename to obj_1_Part Studio 1 - Part 1_0.2mm_PLA_Generic Klipper Printer_25m38s.gcode
2025-09-02 18:58:02,901 [job_status.py:_update_file_metadata()] - Update Metadata. File: obj_1_Part Studio 1 - Part 1_0.2mm_PLA_Generic Klipper Printer_25m38s.gcode Size: 2596234
2025-09-02 18:59:03,140 [screensaver.py:show()] - Showing Screensaver
2025-09-02 19:11:36,477 [screensaver.py:close()] - Closing Screensaver
2025-09-02 19:11:36,483 [screen.py:wake_screen()] - Screen wake up
2025-09-02 19:11:38,141 [KlippyGtk.py:Dialog()] - Showing dialog Cancel (width=1024, height=600)
2025-09-02 19:11:39,285 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-09-02 19:11:39,285 [job_status.py:cancel_confirm()] - Canceling print
2025-09-02 19:11:39,291 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'cancelling'
2025-09-02 19:11:39,298 [KlippyWebsocket.py:print_cancel()] - Sending printer.print.cancel
2025-09-02 19:11:58,603 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-09-02 19:11:58,604 [printer.py:change_state()] - Adding callback for state: ready
2025-09-02 19:11:58,620 [job_status.py:set_state()] - Changing job_status state from 'cancelling' to 'cancelled'
2025-09-02 19:11:58,720 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 19:11:58,720 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 19:12:59,136 [screensaver.py:show()] - Showing Screensaver
2025-09-02 19:14:47,177 [screensaver.py:close()] - Closing Screensaver
2025-09-02 19:14:47,181 [screen.py:wake_screen()] - Screen wake up
2025-09-02 19:14:47,235 [job_status.py:set_state()] - Changing job_status state from 'cancelled' to 'standby'
2025-09-02 19:15:48,137 [screensaver.py:show()] - Showing Screensaver
2025-09-02 19:18:13,423 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-02 19:18:13,423 [printer.py:change_state()] - Adding callback for state: printing
2025-09-02 19:18:13,438 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-02 19:18:13,444 [job_status.py:update_filename()] - Updating filename to obj_1_Part Studio 1 - Part 1_0.2mm_PLA_Generic Klipper Printer_23m30s.gcode
2025-09-02 19:18:13,445 [job_status.py:_update_file_metadata()] - Update Metadata. File: obj_1_Part Studio 1 - Part 1_0.2mm_PLA_Generic Klipper Printer_23m30s.gcode Size: 2041032
2025-09-02 19:18:13,476 [screensaver.py:close()] - Closing Screensaver
2025-09-02 19:18:13,487 [screen.py:wake_screen()] - Screen wake up
2025-09-02 19:18:13,631 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 19:18:13,632 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 19:18:13,633 [screen.py:show_panel()] - Panel is already is in view
2025-09-02 19:19:01,651 [screen.py:_load_panel()] - Loading panel: fine_tune
2025-09-02 19:19:01,735 [screen.py:attach_panel()] - Current panel hierarchy: job_status > fine_tune
2025-09-02 19:19:08,086 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:19:10,913 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:19:13,061 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:19:15,842 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:19:18,732 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:19:38,518 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:19:40,150 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:19:41,700 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:19:42,876 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:19:45,733 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:19:47,326 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:19:50,171 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:19:52,359 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:19:54,572 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:19:57,361 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:19:58,832 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:20:01,324 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:20:02,136 [screensaver.py:show()] - Showing Screensaver
2025-09-02 19:20:03,449 [screensaver.py:close()] - Closing Screensaver
2025-09-02 19:20:03,452 [screen.py:wake_screen()] - Screen wake up
2025-09-02 19:20:03,512 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:20:05,548 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:20:06,800 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:20:08,076 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:20:10,104 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:20:15,988 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:20:17,214 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:20:20,413 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:20:21,936 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:20:23,013 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:20:24,649 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:20:26,998 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:20:28,150 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:20:29,888 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:20:30,932 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:20:32,448 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:20:33,564 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:20:34,705 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:20:35,934 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:20:38,860 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:20:40,442 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:20:41,528 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:20:42,824 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:20:44,584 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:20:49,540 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:20:50,662 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:20:52,998 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:20:54,340 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:20:55,923 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:20:57,092 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:20:59,113 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:21:00,294 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:21:01,781 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:21:02,850 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:21:04,136 [screensaver.py:show()] - Showing Screensaver
2025-09-02 19:21:04,314 [screensaver.py:close()] - Closing Screensaver
2025-09-02 19:21:04,316 [screen.py:wake_screen()] - Screen wake up
2025-09-02 19:21:04,370 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:21:05,407 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:21:06,468 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:21:07,811 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:21:10,098 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:21:11,566 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:21:13,457 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:21:15,443 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:21:16,321 [screen.py:_menu_go_back()] - #### Menu go back
2025-09-02 19:21:16,360 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-02 19:21:16,518 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:21:21,236 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:21:22,446 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:21:24,556 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:21:25,921 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:21:27,310 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:21:28,758 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:21:30,768 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:21:32,860 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:21:34,230 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:21:35,618 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:21:37,003 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:21:38,193 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:21:39,515 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:21:41,824 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:21:43,723 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:21:44,851 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:21:50,369 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:21:51,428 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:21:53,514 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:21:54,772 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:21:57,280 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:21:59,421 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:22:00,777 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:22:02,151 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:22:03,339 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:22:04,351 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:22:05,808 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:22:07,900 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:22:10,123 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:22:11,232 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:22:16,737 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:22:17,135 [screensaver.py:show()] - Showing Screensaver
2025-09-02 19:22:17,786 [screensaver.py:close()] - Closing Screensaver
2025-09-02 19:22:17,799 [screen.py:wake_screen()] - Screen wake up
2025-09-02 19:22:17,850 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:22:19,873 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:22:21,150 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:22:23,695 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:22:26,057 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:22:27,198 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:22:29,291 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:22:30,725 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:22:32,746 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:22:34,641 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:22:36,596 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:22:37,770 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:22:38,976 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:22:43,840 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:22:47,047 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:22:48,315 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:22:51,961 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:22:54,467 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:22:57,272 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:22:58,630 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:23:01,474 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:23:03,394 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:23:04,567 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:23:05,759 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:23:10,615 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:23:13,824 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:23:15,078 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:23:18,136 [screensaver.py:show()] - Showing Screensaver
2025-09-02 19:23:18,635 [screensaver.py:close()] - Closing Screensaver
2025-09-02 19:23:18,643 [screen.py:wake_screen()] - Screen wake up
2025-09-02 19:23:18,694 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:23:20,242 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:23:23,055 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:23:24,461 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:23:25,521 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:23:27,309 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:23:29,210 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:23:30,377 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:23:31,589 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:23:36,471 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:23:39,641 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:23:40,904 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:23:44,151 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:23:45,898 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:23:48,722 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:23:50,118 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:23:51,179 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:23:52,941 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:23:54,853 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:23:55,975 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:24:01,476 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:24:04,601 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:24:05,865 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:24:09,217 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:24:11,151 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:24:13,617 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:24:14,973 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:24:16,037 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:24:17,819 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:24:19,153 [screensaver.py:show()] - Showing Screensaver
2025-09-02 19:24:19,723 [screensaver.py:close()] - Closing Screensaver
2025-09-02 19:24:19,729 [screen.py:wake_screen()] - Screen wake up
2025-09-02 19:24:19,779 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:24:20,899 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:24:26,393 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:24:29,500 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:24:30,765 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:24:34,236 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:24:36,013 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:24:38,479 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:24:39,873 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:24:40,962 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:24:42,721 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:24:44,620 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:24:45,774 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:24:46,994 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:24:51,853 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:24:55,045 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:24:56,310 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:24:59,784 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:25:01,559 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:25:04,035 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:25:05,413 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:25:06,480 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:25:08,273 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:25:10,182 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:25:11,350 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:25:12,565 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:25:17,409 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:25:20,137 [screensaver.py:show()] - Showing Screensaver
2025-09-02 19:25:20,637 [screensaver.py:close()] - Closing Screensaver
2025-09-02 19:25:20,645 [screen.py:wake_screen()] - Screen wake up
2025-09-02 19:25:20,697 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:25:21,877 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:25:25,377 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:25:27,196 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:25:29,665 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:25:31,032 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:25:32,103 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:25:33,857 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:25:35,766 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:25:36,957 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:25:38,145 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:25:43,027 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:25:46,239 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:25:47,464 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:25:51,033 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:25:52,844 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:25:55,327 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:25:56,712 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:25:57,781 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:25:59,593 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:26:01,477 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:26:02,631 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:26:08,128 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:26:11,281 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:26:12,513 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:26:16,083 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:26:17,916 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:26:20,361 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:26:21,160 [screensaver.py:show()] - Showing Screensaver
2025-09-02 19:26:21,753 [screensaver.py:close()] - Closing Screensaver
2025-09-02 19:26:21,763 [screen.py:wake_screen()] - Screen wake up
2025-09-02 19:26:21,818 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:26:22,830 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:26:24,620 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:26:26,529 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:26:27,701 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:26:28,942 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:26:33,782 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:26:37,008 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:26:38,241 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:26:41,814 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:26:43,660 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:26:46,133 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:26:47,542 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:26:48,609 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:26:50,397 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:26:52,305 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:26:53,471 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:26:58,961 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:27:00,021 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:27:02,136 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:27:03,388 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:27:06,745 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:27:09,270 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:27:10,738 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:27:13,188 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:27:14,616 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:27:15,664 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:27:17,452 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:27:19,392 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:27:20,534 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:27:21,757 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:27:22,137 [screensaver.py:show()] - Showing Screensaver
2025-09-02 19:27:26,698 [screensaver.py:close()] - Closing Screensaver
2025-09-02 19:27:26,706 [screen.py:wake_screen()] - Screen wake up
2025-09-02 19:27:26,761 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:27:27,841 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:27:29,203 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:27:31,304 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:27:32,536 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:27:36,062 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:27:38,133 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:27:39,599 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:27:42,056 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:27:43,477 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:27:44,538 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:27:46,328 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:27:48,346 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:27:49,506 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:27:50,751 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:27:55,673 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:27:57,465 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:27:59,579 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:28:00,811 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:28:04,377 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:28:06,932 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:28:08,410 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:28:10,882 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:28:12,289 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:28:13,356 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:28:15,151 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:28:16,969 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:28:20,673 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:28:21,927 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:28:23,613 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:28:24,732 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:28:26,166 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:28:27,154 [screensaver.py:show()] - Showing Screensaver
2025-09-02 19:28:27,177 [screensaver.py:close()] - Closing Screensaver
2025-09-02 19:28:27,180 [screen.py:wake_screen()] - Screen wake up
2025-09-02 19:28:27,232 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:28:29,063 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:28:30,144 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:28:32,327 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:28:33,486 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:28:34,714 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:28:39,659 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:28:40,727 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:28:42,833 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:28:44,062 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:28:46,757 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:28:49,407 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:28:51,369 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:28:52,653 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:28:54,691 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:28:55,806 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:28:57,240 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:29:00,152 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:29:01,965 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:29:03,123 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:29:04,365 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:29:09,316 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:29:10,578 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:29:12,672 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:29:13,944 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:29:17,284 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:29:19,455 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:29:21,441 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:29:22,465 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:29:23,728 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:29:25,375 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:29:26,499 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:29:27,923 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:29:28,136 [screensaver.py:show()] - Showing Screensaver
2025-09-02 19:29:30,801 [screensaver.py:close()] - Closing Screensaver
2025-09-02 19:29:30,807 [screen.py:wake_screen()] - Screen wake up
2025-09-02 19:29:30,860 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:29:32,638 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:29:33,802 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:29:35,746 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:29:40,704 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:29:41,976 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:29:44,077 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:29:45,334 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:29:48,871 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:29:51,034 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:29:53,025 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:29:54,284 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:29:55,968 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:29:57,184 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:29:58,697 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:30:00,599 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:30:02,420 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:30:04,362 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:30:05,548 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:30:07,779 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:30:12,766 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:30:14,053 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:30:16,153 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:30:17,412 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:30:21,038 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:30:23,309 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:30:25,308 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:30:27,518 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:30:29,611 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:30:31,119 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:30:31,168 [screensaver.py:show()] - Showing Screensaver
2025-09-02 19:30:32,996 [screensaver.py:close()] - Closing Screensaver
2025-09-02 19:30:33,005 [screen.py:wake_screen()] - Screen wake up
2025-09-02 19:30:33,057 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:30:34,053 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:30:35,541 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:30:37,762 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:30:38,955 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:30:40,182 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:30:45,138 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:30:46,422 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:30:48,529 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:30:49,795 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:30:53,032 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:30:55,507 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:30:56,514 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:30:58,863 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:31:00,607 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:31:01,821 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:31:03,849 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:31:05,324 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:31:06,359 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:31:07,811 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:31:09,354 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:31:11,394 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:31:12,617 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:31:17,716 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:31:19,086 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:31:21,222 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:31:22,453 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:31:25,742 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:31:27,645 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:31:28,691 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:31:30,875 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:31:32,909 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:31:33,158 [screensaver.py:show()] - Showing Screensaver
2025-09-02 19:31:34,932 [screensaver.py:close()] - Closing Screensaver
2025-09-02 19:31:34,942 [screen.py:wake_screen()] - Screen wake up
2025-09-02 19:31:34,996 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:31:40,058 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:31:41,485 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:31:43,590 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:31:45,028 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:31:46,033 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:31:49,671 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:31:51,609 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:31:52,675 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:31:54,109 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:31:55,701 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:31:56,894 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:32:03,411 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:32:04,954 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:32:07,064 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:32:08,209 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:32:09,649 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:32:13,331 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:32:15,209 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:32:17,118 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:32:19,166 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:32:24,531 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:32:25,686 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:32:27,806 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:32:29,000 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:32:31,505 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:32:32,713 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:32:34,174 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:32:35,136 [screensaver.py:show()] - Showing Screensaver
2025-09-02 19:32:36,310 [screensaver.py:close()] - Closing Screensaver
2025-09-02 19:32:36,322 [screen.py:wake_screen()] - Screen wake up
2025-09-02 19:32:36,375 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:32:38,391 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:32:40,298 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:32:41,438 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:32:47,590 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:32:48,740 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:32:50,858 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:32:52,428 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:32:53,554 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:32:54,979 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:32:57,558 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:32:59,373 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:33:01,434 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:33:02,596 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:33:08,759 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:33:10,181 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:33:11,995 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:33:13,528 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:33:14,621 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:33:16,033 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:33:18,635 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:33:20,194 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:33:22,658 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:33:23,797 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:33:24,961 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:33:29,684 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:33:31,034 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:33:33,688 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:33:34,849 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:33:37,029 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:33:37,143 [screensaver.py:show()] - Showing Screensaver
2025-09-02 19:33:38,216 [screensaver.py:close()] - Closing Screensaver
2025-09-02 19:33:38,225 [screen.py:wake_screen()] - Screen wake up
2025-09-02 19:33:38,276 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:33:39,678 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:33:41,072 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:33:42,252 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:33:43,466 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:33:46,848 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:33:49,817 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:33:50,897 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:33:52,066 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:33:56,078 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:33:58,970 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:34:00,052 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:34:01,209 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:34:05,212 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:34:08,113 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:34:09,206 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:34:10,051 [screen.py:_go_to_submenu()] - #### Go to submenu 
2025-09-02 19:34:10,052 [screen.py:_go_to_submenu()] - #### Menu __print
2025-09-02 19:34:10,064 [screen.py:_load_panel()] - Loading panel: menu
2025-09-02 19:34:10,123 [menu.py:evaluate_enable()] - moonraker connected True
2025-09-02 19:34:10,330 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2025-09-02 19:34:10,363 [menu.py:arrangeMenuItems()] - X > move
2025-09-02 19:34:10,374 [menu.py:arrangeMenuItems()] - X > power
2025-09-02 19:34:10,399 [menu.py:arrangeMenuItems()] - X > spoolman
2025-09-02 19:34:10,399 [menu.py:evaluate_enable()] - moonraker connected True
2025-09-02 19:34:10,407 [menu.py:arrangeMenuItems()] - X > pins
2025-09-02 19:34:10,426 [screen.py:_go_to_submenu()] - menu, {{ gettext('Print Control') }}, panel_name=, items=[{'notifications': {'name': "{{ gettext('Notifications') }}", 'icon': 'notifications', 'panel': 'notifications', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'temperature': {'name': "{{ gettext('Temperature') }}", 'icon': 'heat-up', 'panel': 'temperature', 'method': None, 'confirm': None, 'enable': '{{ (printer.temperature_devices.count > 0) or (printer.extruders.count > 0)}}', 'params': '{}', 'style': None}}, {'fan': {'name': "{{ gettext('Fan') }}", 'icon': 'fan', 'panel': 'fan', 'method': None, 'confirm': None, 'enable': '{{ printer.fans.count > 0 }}', 'params': '{}', 'style': None}}, {'move': {'name': "{{ gettext('Move') }}", 'icon': 'move', 'panel': 'move', 'method': None, 'confirm': None, 'enable': '{{ printer.pause_resume.is_paused }}', 'params': '{}', 'style': None}}, {'extrude': {'name': "{{ gettext('Extrude') }}", 'icon': 'extrude', 'panel': 'extrude', 'method': None, 'confirm': None, 'enable': '{{ printer.extruders.count > 0 }}', 'params': '{}', 'style': None}}, {'power': {'name': "{{ gettext('Power') }}", 'icon': 'shutdown', 'panel': 'power', 'method': None, 'confirm': None, 'enable': '{{ moonraker.power_devices.count > 0 }}', 'params': '{}', 'style': None}}, {'led': {'name': "{{ gettext('Leds') }}", 'icon': 'light', 'panel': 'led', 'method': None, 'confirm': None, 'enable': '{{ printer.leds.count > 0 }}', 'params': '{}', 'style': None}}, {'macros': {'name': "{{ gettext('Macros') }}", 'icon': 'custom-script', 'panel': 'gcode_macros', 'method': None, 'confirm': None, 'enable': '{{ printer.gcode_macros.count > 0 }}', 'params': '{}', 'style': None}}, {'camera': {'name': "{{ gettext('Camera') }}", 'icon': 'camera', 'panel': 'camera', 'method': None, 'confirm': None, 'enable': '{{ moonraker.cameras.count > 0 }}', 'params': '{}', 'style': None}}, {'console': {'name': "{{ gettext('Console') }}", 'icon': 'console', 'panel': 'console', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'limits': {'name': "{{ gettext('Limits') }}", 'icon': 'fine-tune', 'panel': 'limits', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'network': {'name': "{{ gettext('Network') }}", 'icon': 'network', 'panel': 'network', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'settings': {'name': 'KlipperScreen', 'icon': 'settings', 'panel': 'settings', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'spoolman': {'name': 'Spoolman', 'icon': 'spoolman', 'panel': 'spoolman', 'method': None, 'confirm': None, 'enable': '{{ moonraker.spoolman }}', 'params': '{}', 'style': None}}, {'system': {'name': "{{ gettext('System') }}", 'icon': 'info', 'panel': 'system', 'method': None, 'confirm': None, 'enable': '{{ moonraker_connected }}', 'params': '{}', 'style': None}}, {'pins': {'name': "{{ gettext('Pins') }}", 'icon': 'hashtag', 'panel': 'pins', 'method': None, 'confirm': None, 'enable': '{{ printer.output_pins.count > 0 or printer.pwm_tools.count > 0 }}', 'params': '{}', 'style': None}}]
2025-09-02 19:34:10,432 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:34:11,589 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:34:12,857 [screen.py:_load_panel()] - Loading panel: system
2025-09-02 19:34:12,863 [system.py:__init__()] - {'python': {'version': [3, 9, 2, 'final', 0], 'version_string': '3.9.2 (default, Feb 28 2021, 17:03:44)  [GCC 10.2.1 20210110]'}, 'cpu_info': {'cpu_count': 4, 'bits': '32bit', 'processor': 'aarch64', 'cpu_desc': 'ARMv8 Processor rev 4 (v8l)', 'serial_number': '', 'hardware_desc': 'T800', 'model': 'sonic_lcd', 'total_memory': 2030728, 'memory_units': 'kB'}, 'sd_info': {'manufacturer_id': '45', 'manufacturer': 'Unknown', 'oem_id': '0100', 'product_name': 'DG400', 'product_revision': '3.8', 'serial_number': '0127ea95', 'manufacturer_date': '9/2123', 'capacity': 'Unknown', 'total_bytes': 0}, 'distribution': {'name': 'Debian GNU/Linux 11 (bullseye)', 'id': 'debian', 'version': '11', 'version_parts': {'major': '11', 'minor': '', 'build_number': ''}, 'like': '', 'codename': 'bullseye', 'release_info': {}, 'kernel_version': '4.9.191'}, 'virtualization': {'virt_type': 'none', 'virt_identifier': 'none'}, 'network': {'wlan0': {'mac_address': 'fc:ee:92:11:14:05', 'ip_addresses': [{'family': 'ipv4', 'address': '192.168.1.14', 'is_link_local': False}, {'family': 'ipv6', 'address': 'fe80::767d:9ad7:3997:ec47', 'is_link_local': True}]}}, 'canbus': {}, 'provider': 'systemd_dbus', 'available_services': ['klipper', 'moonraker-obico', 'moonraker', 'KlipperScreen', 'octoeverywhere', 'crowsnest', 'octoapp'], 'service_state': {'klipper': {'active_state': 'active', 'sub_state': 'running'}, 'moonraker-obico': {'active_state': 'active', 'sub_state': 'running'}, 'moonraker': {'active_state': 'active', 'sub_state': 'running'}, 'KlipperScreen': {'active_state': 'active', 'sub_state': 'running'}, 'octoeverywhere': {'active_state': 'active', 'sub_state': 'running'}, 'crowsnest': {'active_state': 'active', 'sub_state': 'running'}, 'octoapp': {'active_state': 'active', 'sub_state': 'running'}}, 'instance_ids': {'moonraker': 'moonraker', 'klipper': 'klipper'}}
2025-09-02 19:34:12,905 [screen.py:attach_panel()] - Current panel hierarchy: job_status >  > system
2025-09-02 19:34:14,922 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:34:16,157 [screen.py:_menu_go_back()] - #### Menu go back
2025-09-02 19:34:16,194 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2025-09-02 19:34:16,224 [menu.py:arrangeMenuItems()] - X > move
2025-09-02 19:34:16,233 [menu.py:arrangeMenuItems()] - X > power
2025-09-02 19:34:16,259 [menu.py:arrangeMenuItems()] - X > spoolman
2025-09-02 19:34:16,260 [menu.py:evaluate_enable()] - moonraker connected True
2025-09-02 19:34:16,268 [menu.py:arrangeMenuItems()] - X > pins
2025-09-02 19:34:17,405 [screen.py:_load_panel()] - Loading panel: settings
2025-09-02 19:34:17,597 [screen.py:attach_panel()] - Current panel hierarchy: job_status >  > settings
2025-09-02 19:34:17,921 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:34:18,972 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:34:20,116 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:34:21,361 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:34:25,055 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:34:27,738 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:34:28,766 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:34:29,744 [screen.py:_menu_go_back()] - #### Menu go home
2025-09-02 19:34:29,782 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-02 19:34:29,924 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:34:31,163 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:34:34,867 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:34:37,550 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:34:38,592 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:34:39,801 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:34:40,987 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:34:44,663 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:34:47,355 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:34:48,424 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:34:49,621 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:34:50,861 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:34:54,503 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:34:57,183 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:34:58,253 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:34:59,415 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:35:00,674 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:35:04,307 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:35:07,040 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:35:08,084 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:35:09,268 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:35:13,289 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:35:16,190 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:35:17,265 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:35:18,420 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:35:19,668 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:35:23,310 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:35:26,040 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:35:27,109 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:35:28,291 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:35:29,547 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:35:30,164 [screensaver.py:show()] - Showing Screensaver
2025-09-02 19:35:33,147 [screensaver.py:close()] - Closing Screensaver
2025-09-02 19:35:33,159 [screen.py:wake_screen()] - Screen wake up
2025-09-02 19:35:33,212 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:35:35,880 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:35:36,935 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:35:38,101 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:35:39,342 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:35:42,987 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:35:45,686 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:35:51,541 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:36:34,137 [screensaver.py:show()] - Showing Screensaver
2025-09-02 19:36:40,000 [screensaver.py:close()] - Closing Screensaver
2025-09-02 19:36:40,008 [screen.py:wake_screen()] - Screen wake up
2025-09-02 19:36:40,059 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:36:41,207 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:37:05,005 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:37:28,533 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:37:40,136 [screensaver.py:show()] - Showing Screensaver
2025-09-02 19:37:51,997 [screensaver.py:close()] - Closing Screensaver
2025-09-02 19:37:52,005 [screen.py:wake_screen()] - Screen wake up
2025-09-02 19:37:52,062 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:38:15,074 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:38:21,819 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:38:29,088 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:38:52,136 [screensaver.py:show()] - Showing Screensaver
2025-09-02 19:39:15,506 [screensaver.py:close()] - Closing Screensaver
2025-09-02 19:39:15,511 [screen.py:wake_screen()] - Screen wake up
2025-09-02 19:39:15,563 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:39:39,643 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:40:03,519 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:40:16,136 [screensaver.py:show()] - Showing Screensaver
2025-09-02 19:40:26,872 [screensaver.py:close()] - Closing Screensaver
2025-09-02 19:40:26,880 [screen.py:wake_screen()] - Screen wake up
2025-09-02 19:40:26,932 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:40:31,213 [screen.py:show_popup_message()] - error: // Unknown command:"G17"
2025-09-02 19:41:03,828 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-09-02 19:41:03,829 [printer.py:change_state()] - Adding callback for state: ready
2025-09-02 19:41:03,850 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'complete'
2025-09-02 19:41:03,969 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 19:41:03,970 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 19:41:34,705 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-02 19:41:34,706 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-02 19:41:34,780 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 19:41:34,781 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 19:41:34,781 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-02 19:41:34,783 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-02 19:41:34,854 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-02 19:41:34,890 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-02 19:41:38,912 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-02 19:41:39,132 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-02 19:41:39,133 [printer.py:log_counts()] - # Extruders: 1
2025-09-02 19:41:39,133 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-02 19:41:39,133 [printer.py:log_counts()] - # Fans: 3
2025-09-02 19:41:39,134 [printer.py:log_counts()] - # Output pins: 0
2025-09-02 19:41:39,134 [printer.py:log_counts()] - # PWM tools: 0
2025-09-02 19:41:39,134 [printer.py:log_counts()] - # Leds: 1
2025-09-02 19:41:39,392 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-02 19:41:39,394 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-02 19:41:39,395 [screen.py:init_klipper()] - Printer initialized
2025-09-02 19:41:39,395 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-02 19:41:39,396 [printer.py:change_state()] - Adding callback for state: ready
2025-09-02 19:41:39,413 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-02 19:41:39,642 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-02 19:41:39,643 [printer.py:log_counts()] - # Extruders: 1
2025-09-02 19:41:39,643 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-02 19:41:39,643 [printer.py:log_counts()] - # Fans: 3
2025-09-02 19:41:39,643 [printer.py:log_counts()] - # Output pins: 0
2025-09-02 19:41:39,643 [printer.py:log_counts()] - # PWM tools: 0
2025-09-02 19:41:39,643 [printer.py:log_counts()] - # Leds: 1
2025-09-02 19:41:39,893 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-02 19:41:39,895 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-02 19:41:39,895 [screen.py:init_klipper()] - Printer initialized
2025-09-02 19:41:39,956 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 19:41:39,956 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 19:41:39,956 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-02 19:41:39,960 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-02 19:41:40,028 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-02 19:41:40,136 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-02 19:41:40,156 [main_menu.py:add_device()] - Adding device: extruder
2025-09-02 19:41:40,162 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-02 19:41:40,191 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-02 19:41:40,207 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-02 19:41:40,242 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-02 19:41:40,260 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-02 19:42:40,147 [screensaver.py:show()] - Showing Screensaver
2025-09-02 19:45:06,298 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-02 19:45:06,298 [printer.py:change_state()] - Adding callback for state: printing
2025-09-02 19:45:06,301 [screensaver.py:close()] - Closing Screensaver
2025-09-02 19:45:06,304 [screen.py:wake_screen()] - Screen wake up
2025-09-02 19:45:06,422 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 19:45:06,423 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 19:45:06,423 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-02 19:45:06,493 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-02 19:45:06,604 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-02 19:45:06,620 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-02 19:45:06,636 [job_status.py:update_filename()] - Updating filename to 3D+Print+Scrapper_0.2mm_PLA_Generic Klipper Printer_28m44s.gcode
2025-09-02 19:45:06,637 [job_status.py:_update_file_metadata()] - Update Metadata. File: 3D+Print+Scrapper_0.2mm_PLA_Generic Klipper Printer_28m44s.gcode Size: 994149
2025-09-02 19:46:07,136 [screensaver.py:show()] - Showing Screensaver
2025-09-02 20:14:59,269 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-09-02 20:14:59,270 [printer.py:change_state()] - Adding callback for state: ready
2025-09-02 20:14:59,283 [screensaver.py:close()] - Closing Screensaver
2025-09-02 20:14:59,289 [screen.py:wake_screen()] - Screen wake up
2025-09-02 20:14:59,339 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'complete'
2025-09-02 20:14:59,452 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 20:14:59,452 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 20:15:30,245 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-02 20:15:30,246 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-02 20:15:30,306 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 20:15:30,307 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 20:15:30,307 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-02 20:15:30,309 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-02 20:15:30,377 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-02 20:15:30,404 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-02 20:15:34,473 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 4, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-02 20:15:34,712 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-02 20:15:34,713 [printer.py:log_counts()] - # Extruders: 1
2025-09-02 20:15:34,713 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-02 20:15:34,713 [printer.py:log_counts()] - # Fans: 3
2025-09-02 20:15:34,713 [printer.py:log_counts()] - # Output pins: 0
2025-09-02 20:15:34,713 [printer.py:log_counts()] - # PWM tools: 0
2025-09-02 20:15:34,713 [printer.py:log_counts()] - # Leds: 1
2025-09-02 20:15:34,958 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-02 20:15:34,959 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-02 20:15:34,960 [screen.py:init_klipper()] - Printer initialized
2025-09-02 20:15:34,960 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-02 20:15:34,960 [printer.py:change_state()] - Adding callback for state: ready
2025-09-02 20:15:35,015 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 20:15:35,015 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 20:15:35,016 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-02 20:15:35,019 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-02 20:15:35,080 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-02 20:15:35,175 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-02 20:15:35,191 [main_menu.py:add_device()] - Adding device: extruder
2025-09-02 20:15:35,196 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-02 20:15:35,223 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-02 20:15:35,237 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-02 20:15:35,272 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-02 20:15:35,290 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-02 20:15:35,321 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 4, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-02 20:15:35,521 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-02 20:15:35,522 [printer.py:log_counts()] - # Extruders: 1
2025-09-02 20:15:35,522 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-02 20:15:35,522 [printer.py:log_counts()] - # Fans: 3
2025-09-02 20:15:35,522 [printer.py:log_counts()] - # Output pins: 0
2025-09-02 20:15:35,522 [printer.py:log_counts()] - # PWM tools: 0
2025-09-02 20:15:35,522 [printer.py:log_counts()] - # Leds: 1
2025-09-02 20:15:35,709 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-02 20:15:35,710 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-02 20:15:35,711 [screen.py:init_klipper()] - Printer initialized
2025-09-02 20:15:35,754 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-09-02 20:15:35,785 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-02 20:15:35,802 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-02 20:16:35,172 [screensaver.py:show()] - Showing Screensaver
2025-09-02 21:49:19,644 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-02 21:49:19,645 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-02 21:49:19,652 [screensaver.py:close()] - Closing Screensaver
2025-09-02 21:49:19,656 [screen.py:wake_screen()] - Screen wake up
2025-09-02 21:49:19,764 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 21:49:19,765 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 21:49:19,765 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-02 21:49:19,765 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-02 21:49:19,829 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-02 21:49:19,860 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-02 21:49:24,083 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-02 21:49:24,303 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-02 21:49:24,303 [printer.py:log_counts()] - # Extruders: 1
2025-09-02 21:49:24,304 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-02 21:49:24,304 [printer.py:log_counts()] - # Fans: 3
2025-09-02 21:49:24,304 [printer.py:log_counts()] - # Output pins: 0
2025-09-02 21:49:24,304 [printer.py:log_counts()] - # PWM tools: 0
2025-09-02 21:49:24,304 [printer.py:log_counts()] - # Leds: 1
2025-09-02 21:49:24,564 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-02 21:49:24,565 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-02 21:49:24,566 [screen.py:init_klipper()] - Printer initialized
2025-09-02 21:49:24,566 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-02 21:49:24,566 [printer.py:change_state()] - Adding callback for state: ready
2025-09-02 21:49:24,583 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-02 21:49:24,813 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-02 21:49:24,813 [printer.py:log_counts()] - # Extruders: 1
2025-09-02 21:49:24,813 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-02 21:49:24,813 [printer.py:log_counts()] - # Fans: 3
2025-09-02 21:49:24,813 [printer.py:log_counts()] - # Output pins: 0
2025-09-02 21:49:24,813 [printer.py:log_counts()] - # PWM tools: 0
2025-09-02 21:49:24,814 [printer.py:log_counts()] - # Leds: 1
2025-09-02 21:49:25,110 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-02 21:49:25,117 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-02 21:49:25,118 [screen.py:init_klipper()] - Printer initialized
2025-09-02 21:49:25,198 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 21:49:25,198 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 21:49:25,199 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-02 21:49:25,202 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-02 21:49:25,263 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-02 21:49:25,452 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-02 21:49:25,468 [main_menu.py:add_device()] - Adding device: extruder
2025-09-02 21:49:25,473 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-02 21:49:25,499 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-02 21:49:25,515 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-02 21:49:25,547 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-02 21:49:25,566 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-02 21:50:26,136 [screensaver.py:show()] - Showing Screensaver
2025-09-02 21:50:43,287 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-02 21:50:43,287 [printer.py:change_state()] - Adding callback for state: printing
2025-09-02 21:50:43,289 [screensaver.py:close()] - Closing Screensaver
2025-09-02 21:50:43,293 [screen.py:wake_screen()] - Screen wake up
2025-09-02 21:50:43,413 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 21:50:43,414 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 21:50:43,414 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-02 21:50:43,479 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-02 21:50:43,574 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-02 21:50:43,594 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-02 21:50:43,611 [job_status.py:update_filename()] - Updating filename to xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m28s.gcode
2025-09-02 21:50:43,612 [job_status.py:_update_file_metadata()] - Update Metadata. File: xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m28s.gcode Size: 636191
2025-09-02 21:51:02,070 [screen.py:show_popup_message()] - error: // Unknown command:"RESPOND"
2025-09-02 21:51:44,136 [screensaver.py:show()] - Showing Screensaver
                                                                                                                                                                                                                                                      2025-09-02 21:34:41,730 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-09-02 21:34:41,731 [functions.py:log_start()] - KlipperScreen Version: v0.4.6-11-g6b6f63b6
2025-09-02 21:34:41,731 [functions.py:log_start()] - Python version: 3.9
2025-09-02 21:34:41,917 [config.py:get_config_file_location()] - Passed config (-c): .
2025-09-02 21:34:41,918 [config.py:__init__()] - Config path location: /home/sonic/printer_data/config/KlipperScreen.conf
2025-09-02 21:34:41,923 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/main_menu.conf']
2025-09-02 21:34:41,939 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/splash_menu.conf']
2025-09-02 21:34:41,946 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/print_menu.conf']
2025-09-02 21:34:41,956 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/move_menu.conf']
2025-09-02 21:34:41,968 [config.py:log_config()] - ===== Config File =====

=======================
2025-09-02 21:34:41,971 [config.py:__init__()] - ====== Saved Def ======

[main]
screen_blanking = 60
screen_blanking_printing = 60
24htime = False
font_size = small
show_heater_power = True

[graph Printer]
heater_bed = False

=======================
2025-09-02 21:34:41,972 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_path": "",
      "moonraker_ssl": null,
      "moonraker_api_key": ""
    }
  }
]
2025-09-02 21:34:42,161 [config.py:create_translations()] - Selected lang: system_lang OS lang: en_US
2025-09-02 21:34:42,162 [config.py:install_language()] - Using lang en
2025-09-02 21:34:42,181 [screen.py:__init__()] - Display for xset: :0
2025-09-02 21:34:42,184 [screen.py:__init__()] - Screen 0: 1024x600
2025-09-02 21:34:42,184 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-09-02 21:34:42,185 [screen.py:__init__()] - Wayland: False Display name: :0
2025-09-02 21:34:42,189 [screen.py:__init__()] - Screen resolution: 1024x600
2025-09-02 21:34:42,498 [KlippyGtk.py:__init__()] - Font size: 20.2 (small)
2025-09-02 21:34:42,705 [base_panel.py:battery_percentage()] - Battery information not available.
2025-09-02 21:34:43,256 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 21:34:43,270 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 21:34:43,271 [screen.py:initial_connection()] - Default printer: None
2025-09-02 21:34:43,375 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-09-02 21:34:43,376 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-02 21:34:43,451 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-09-02 21:34:43,542 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-02 21:34:43,573 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-02 21:34:43,574 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-02 21:34:48,224 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-09-02 21:34:48,225 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-09-02 21:34:48,241 [_logging.py:info()] - Websocket connected
2025-09-02 21:34:48,242 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-09-02 21:34:48,244 [screen.py:websocket_connected()] - ### websocket_connected
2025-09-02 21:34:48,350 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-09-02 21:34:48,385 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-09-02 21:34:48,410 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-02 21:34:48,528 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-02 21:34:48,528 [printer.py:log_counts()] - # Extruders: 1
2025-09-02 21:34:48,529 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-02 21:34:48,529 [printer.py:log_counts()] - # Fans: 3
2025-09-02 21:34:48,529 [printer.py:log_counts()] - # Output pins: 0
2025-09-02 21:34:48,529 [printer.py:log_counts()] - # PWM tools: 0
2025-09-02 21:34:48,529 [printer.py:log_counts()] - # Leds: 1
2025-09-02 21:34:48,799 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-02 21:34:48,808 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-02 21:34:48,809 [screen.py:init_klipper()] - Printer initialized
2025-09-02 21:34:48,810 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-02 21:34:48,811 [printer.py:change_state()] - Adding callback for state: ready
2025-09-02 21:34:48,931 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 21:34:48,932 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 21:34:48,933 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-02 21:34:48,960 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-02 21:34:49,087 [screen.py:_load_panel()] - Loading panel: main_menu
2025-09-02 21:34:49,431 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-02 21:34:49,454 [main_menu.py:add_device()] - Adding device: extruder
2025-09-02 21:34:49,467 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-02 21:34:49,508 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-02 21:34:49,528 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-02 21:34:49,568 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-02 21:34:49,594 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-02 21:53:32,512 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-02 21:53:32,513 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-02 21:53:32,588 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 21:53:32,588 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 21:53:32,589 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-02 21:53:32,589 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-02 21:53:32,652 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-02 21:53:32,681 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-02 21:53:36,923 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-02 21:53:37,077 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-02 21:53:37,077 [printer.py:log_counts()] - # Extruders: 1
2025-09-02 21:53:37,077 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-02 21:53:37,078 [printer.py:log_counts()] - # Fans: 3
2025-09-02 21:53:37,078 [printer.py:log_counts()] - # Output pins: 0
2025-09-02 21:53:37,078 [printer.py:log_counts()] - # PWM tools: 0
2025-09-02 21:53:37,078 [printer.py:log_counts()] - # Leds: 1
2025-09-02 21:53:37,322 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-02 21:53:37,326 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-02 21:53:37,327 [screen.py:init_klipper()] - Printer initialized
2025-09-02 21:53:37,330 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-02 21:53:37,330 [printer.py:change_state()] - Adding callback for state: ready
2025-09-02 21:53:37,390 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 21:53:37,391 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 21:53:37,391 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-02 21:53:37,394 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-02 21:53:37,460 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-02 21:53:37,577 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-02 21:53:37,594 [main_menu.py:add_device()] - Adding device: extruder
2025-09-02 21:53:37,600 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-02 21:53:37,630 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-02 21:53:37,646 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-02 21:53:37,681 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-02 21:53:37,704 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-02 21:54:03,021 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-02 21:54:03,021 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-02 21:54:03,096 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 21:54:03,097 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 21:54:03,097 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-02 21:54:03,098 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-02 21:54:03,156 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-02 21:54:03,185 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-02 21:54:04,909 [base_panel.py:battery_percentage()] - Battery information not available.
2025-09-02 21:54:07,525 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-02 21:54:07,733 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-02 21:54:07,734 [printer.py:log_counts()] - # Extruders: 1
2025-09-02 21:54:07,734 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-02 21:54:07,734 [printer.py:log_counts()] - # Fans: 3
2025-09-02 21:54:07,734 [printer.py:log_counts()] - # Output pins: 0
2025-09-02 21:54:07,734 [printer.py:log_counts()] - # PWM tools: 0
2025-09-02 21:54:07,735 [printer.py:log_counts()] - # Leds: 1
2025-09-02 21:54:07,997 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-02 21:54:07,999 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-02 21:54:07,999 [screen.py:init_klipper()] - Printer initialized
2025-09-02 21:54:08,000 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-02 21:54:08,001 [printer.py:change_state()] - Adding callback for state: ready
2025-09-02 21:54:08,021 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-02 21:54:08,245 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-02 21:54:08,245 [printer.py:log_counts()] - # Extruders: 1
2025-09-02 21:54:08,245 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-02 21:54:08,245 [printer.py:log_counts()] - # Fans: 3
2025-09-02 21:54:08,245 [printer.py:log_counts()] - # Output pins: 0
2025-09-02 21:54:08,246 [printer.py:log_counts()] - # PWM tools: 0
2025-09-02 21:54:08,246 [printer.py:log_counts()] - # Leds: 1
2025-09-02 21:54:08,519 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-02 21:54:08,520 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-02 21:54:08,521 [screen.py:init_klipper()] - Printer initialized
2025-09-02 21:54:08,585 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 21:54:08,585 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 21:54:08,585 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-02 21:54:08,594 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-02 21:54:08,652 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-02 21:54:08,883 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-02 21:54:08,900 [main_menu.py:add_device()] - Adding device: extruder
2025-09-02 21:54:08,906 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-02 21:54:08,936 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-02 21:54:08,952 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-02 21:54:08,987 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-02 21:54:09,009 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-02 21:54:57,094 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-02 21:54:57,094 [printer.py:change_state()] - Adding callback for state: printing
2025-09-02 21:54:57,171 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 21:54:57,171 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 21:54:57,172 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-02 21:54:57,241 [screen.py:_load_panel()] - Loading panel: job_status
2025-09-02 21:54:57,467 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-02 21:54:57,480 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-02 21:54:57,511 [job_status.py:update_filename()] - Updating filename to xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m28s.gcode
2025-09-02 21:54:57,514 [job_status.py:_update_file_metadata()] - Update Metadata. File: xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m28s.gcode Size: 636191
2025-09-02 21:55:15,834 [screen.py:show_popup_message()] - error: // Unknown command:"M118 ["
2025-09-02 21:55:57,910 [screensaver.py:show()] - Showing Screensaver
2025-09-02 22:04:57,142 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2025-09-02 22:04:57,143 [printer.py:change_state()] - Adding callback for state: paused
2025-09-02 22:04:57,152 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'paused'
2025-09-02 22:04:57,160 [screensaver.py:close()] - Closing Screensaver
2025-09-02 22:04:57,168 [screen.py:wake_screen()] - Screen wake up
2025-09-02 22:04:57,264 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 22:04:57,265 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 22:04:57,265 [screen.py:show_panel()] - Panel is already is in view
2025-09-02 22:04:57,268 [screen.py:_load_panel()] - Loading panel: extrude
2025-09-02 22:04:57,343 [screen.py:attach_panel()] - Current panel hierarchy: job_status > extrude
2025-09-02 22:05:25,213 [printer.py:change_state()] - Changing state from 'paused' to 'ready'
2025-09-02 22:05:25,213 [printer.py:change_state()] - Adding callback for state: ready
2025-09-02 22:05:25,314 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 22:05:25,316 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 22:05:36,736 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-02 22:05:36,737 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-02 22:05:36,803 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 22:05:36,804 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 22:05:36,804 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-02 22:05:36,805 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-02 22:05:36,864 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-02 22:05:36,899 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-02 22:05:41,384 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-02 22:05:41,473 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-02 22:05:41,473 [printer.py:log_counts()] - # Extruders: 1
2025-09-02 22:05:41,473 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-02 22:05:41,473 [printer.py:log_counts()] - # Fans: 3
2025-09-02 22:05:41,473 [printer.py:log_counts()] - # Output pins: 0
2025-09-02 22:05:41,473 [printer.py:log_counts()] - # PWM tools: 0
2025-09-02 22:05:41,474 [printer.py:log_counts()] - # Leds: 1
2025-09-02 22:05:41,721 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-02 22:05:41,722 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-02 22:05:41,723 [screen.py:init_klipper()] - Printer initialized
2025-09-02 22:05:41,723 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-02 22:05:41,724 [printer.py:change_state()] - Adding callback for state: ready
2025-09-02 22:05:41,786 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 22:05:41,786 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 22:05:41,787 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-02 22:05:41,790 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-02 22:05:41,846 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-02 22:05:41,945 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-02 22:05:41,973 [main_menu.py:add_device()] - Adding device: extruder
2025-09-02 22:05:42,048 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-02 22:05:42,074 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-02 22:05:42,089 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-02 22:05:42,123 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-02 22:05:42,140 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-02 22:06:42,371 [screensaver.py:show()] - Showing Screensaver
2025-09-02 22:09:45,480 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-02 22:09:45,481 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-02 22:09:45,483 [screensaver.py:close()] - Closing Screensaver
2025-09-02 22:09:45,486 [screen.py:wake_screen()] - Screen wake up
2025-09-02 22:09:45,589 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 22:09:45,589 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 22:09:45,590 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-02 22:09:45,590 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-02 22:09:45,646 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-02 22:09:45,671 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-02 22:09:49,825 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-02 22:09:50,059 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-02 22:09:50,060 [printer.py:log_counts()] - # Extruders: 1
2025-09-02 22:09:50,061 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-02 22:09:50,061 [printer.py:log_counts()] - # Fans: 3
2025-09-02 22:09:50,061 [printer.py:log_counts()] - # Output pins: 0
2025-09-02 22:09:50,061 [printer.py:log_counts()] - # PWM tools: 0
2025-09-02 22:09:50,061 [printer.py:log_counts()] - # Leds: 1
2025-09-02 22:09:50,323 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-02 22:09:50,324 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-02 22:09:50,325 [screen.py:init_klipper()] - Printer initialized
2025-09-02 22:09:50,326 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-02 22:09:50,326 [printer.py:change_state()] - Adding callback for state: ready
2025-09-02 22:09:50,385 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 22:09:50,386 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 22:09:50,386 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-02 22:09:50,389 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-02 22:09:50,445 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-02 22:09:50,536 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-02 22:09:50,553 [main_menu.py:add_device()] - Adding device: extruder
2025-09-02 22:09:50,560 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-02 22:09:50,589 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-02 22:09:50,604 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-02 22:09:50,641 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-02 22:09:50,659 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-02 22:09:50,689 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-02 22:09:50,821 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-02 22:09:50,822 [printer.py:log_counts()] - # Extruders: 1
2025-09-02 22:09:50,822 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-02 22:09:50,822 [printer.py:log_counts()] - # Fans: 3
2025-09-02 22:09:50,822 [printer.py:log_counts()] - # Output pins: 0
2025-09-02 22:09:50,822 [printer.py:log_counts()] - # PWM tools: 0
2025-09-02 22:09:50,822 [printer.py:log_counts()] - # Leds: 1
2025-09-02 22:09:51,072 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-02 22:09:51,073 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-02 22:09:51,073 [screen.py:init_klipper()] - Printer initialized
2025-09-02 22:09:51,095 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-09-02 22:09:51,126 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-02 22:09:51,143 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-02 22:10:51,371 [screensaver.py:show()] - Showing Screensaver
2025-09-02 22:10:53,580 [screensaver.py:close()] - Closing Screensaver
2025-09-02 22:10:53,583 [screen.py:wake_screen()] - Screen wake up
2025-09-02 22:10:53,634 [screen.py:show_popup_message()] - error: // Unknown command:"EXCLUDE_OBJECT_DEFINE"
2025-09-02 22:10:53,720 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-02 22:10:53,721 [printer.py:change_state()] - Adding callback for state: printing
2025-09-02 22:10:53,790 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 22:10:53,791 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 22:10:53,791 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-02 22:10:53,854 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-02 22:10:53,937 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-02 22:10:53,948 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-02 22:10:53,962 [job_status.py:update_filename()] - Updating filename to xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m29s.gcode
2025-09-02 22:10:53,963 [job_status.py:_update_file_metadata()] - Update Metadata. File: xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m29s.gcode Size: 635209
2025-09-02 22:11:12,569 [screen.py:show_popup_message()] - error: Error evaluating 'gcode_macro ADAPTIVE_MESH:gcode': jinja2.exceptions.UndefinedError: 'extras.gcode_macro.GetStatusWrapper object' has no attribute 'exclude_object'
2025-09-02 22:11:12,769 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-09-02 22:11:12,770 [printer.py:change_state()] - Adding callback for state: ready
2025-09-02 22:11:12,788 [screen.py:show_popup_message()] - error: Error evaluating 'gcode_macro ADAPTIVE_MESH:gcode': jinja2.exceptions.UndefinedError: 'extras.gcode_macro.GetStatusWrapper object' has no attribute 'exclude_object'

2025-09-02 22:11:12,806 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'error'
2025-09-02 22:11:12,918 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 22:11:12,919 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 22:12:13,370 [screensaver.py:show()] - Showing Screensaver
2025-09-02 22:12:17,247 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-02 22:12:17,248 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-02 22:12:17,249 [screensaver.py:close()] - Closing Screensaver
2025-09-02 22:12:17,256 [screen.py:wake_screen()] - Screen wake up
2025-09-02 22:12:17,358 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 22:12:17,359 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 22:12:17,359 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-02 22:12:17,360 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-02 22:12:17,420 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-02 22:12:17,450 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-02 22:12:21,390 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-02 22:12:21,592 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-02 22:12:21,592 [printer.py:log_counts()] - # Extruders: 1
2025-09-02 22:12:21,592 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-02 22:12:21,592 [printer.py:log_counts()] - # Fans: 3
2025-09-02 22:12:21,593 [printer.py:log_counts()] - # Output pins: 0
2025-09-02 22:12:21,593 [printer.py:log_counts()] - # PWM tools: 0
2025-09-02 22:12:21,593 [printer.py:log_counts()] - # Leds: 1
2025-09-02 22:12:21,850 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-02 22:12:21,852 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-02 22:12:21,852 [screen.py:init_klipper()] - Printer initialized
2025-09-02 22:12:21,853 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-02 22:12:21,853 [printer.py:change_state()] - Adding callback for state: ready
2025-09-02 22:12:21,911 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 22:12:21,911 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 22:12:21,911 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-02 22:12:21,915 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-02 22:12:21,974 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-02 22:12:22,066 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-02 22:12:22,083 [main_menu.py:add_device()] - Adding device: extruder
2025-09-02 22:12:22,091 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-02 22:12:22,120 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-02 22:12:22,136 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-02 22:12:22,169 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-02 22:12:22,186 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-02 22:12:53,156 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-02 22:12:53,157 [printer.py:change_state()] - Adding callback for state: printing
2025-09-02 22:12:53,289 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 22:12:53,289 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 22:12:53,289 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-02 22:12:53,349 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-02 22:12:53,451 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-02 22:12:53,469 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-02 22:12:53,493 [job_status.py:update_filename()] - Updating filename to xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m29s.gcode
2025-09-02 22:12:53,494 [job_status.py:_update_file_metadata()] - Update Metadata. File: xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m29s.gcode Size: 635209
2025-09-02 22:13:43,279 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2025-09-02 22:13:43,280 [printer.py:change_state()] - Adding callback for state: paused
2025-09-02 22:13:43,295 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'paused'
2025-09-02 22:13:43,390 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 22:13:43,391 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 22:13:43,391 [screen.py:show_panel()] - Panel is already is in view
2025-09-02 22:13:43,395 [screen.py:show_panel()] - Reinitializing panel extrude
2025-09-02 22:13:43,449 [screen.py:attach_panel()] - Current panel hierarchy: job_status > extrude
2025-09-02 22:14:12,099 [printer.py:change_state()] - Changing state from 'paused' to 'ready'
2025-09-02 22:14:12,100 [printer.py:change_state()] - Adding callback for state: ready
2025-09-02 22:14:12,222 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 22:14:12,222 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 22:15:12,371 [screensaver.py:show()] - Showing Screensaver
2025-09-02 22:17:04,725 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-02 22:17:04,726 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-02 22:17:04,726 [screensaver.py:close()] - Closing Screensaver
2025-09-02 22:17:04,728 [screen.py:wake_screen()] - Screen wake up
2025-09-02 22:17:04,841 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 22:17:04,841 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 22:17:04,841 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-02 22:17:04,842 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-02 22:17:04,903 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-02 22:17:04,930 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-02 22:17:09,383 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-02 22:17:09,664 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-02 22:17:09,665 [printer.py:log_counts()] - # Extruders: 1
2025-09-02 22:17:09,665 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-02 22:17:09,665 [printer.py:log_counts()] - # Fans: 3
2025-09-02 22:17:09,665 [printer.py:log_counts()] - # Output pins: 0
2025-09-02 22:17:09,665 [printer.py:log_counts()] - # PWM tools: 0
2025-09-02 22:17:09,665 [printer.py:log_counts()] - # Leds: 1
2025-09-02 22:17:09,915 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-02 22:17:09,916 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-02 22:17:09,917 [screen.py:init_klipper()] - Printer initialized
2025-09-02 22:17:09,917 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-02 22:17:09,917 [printer.py:change_state()] - Adding callback for state: error
2025-09-02 22:17:09,969 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 22:17:09,969 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 22:17:09,970 [screen.py:show_panel()] - Panel is already is in view
2025-09-02 22:18:10,371 [screensaver.py:show()] - Showing Screensaver
2025-09-02 22:24:23,148 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-02 22:24:23,148 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-02 22:24:23,150 [screensaver.py:close()] - Closing Screensaver
2025-09-02 22:24:23,153 [screen.py:wake_screen()] - Screen wake up
2025-09-02 22:24:23,256 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 22:24:23,257 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 22:24:23,257 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-02 22:24:23,257 [screen.py:show_panel()] - Panel is already is in view
2025-09-02 22:24:27,383 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-02 22:24:27,542 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-02 22:24:27,542 [printer.py:log_counts()] - # Extruders: 1
2025-09-02 22:24:27,542 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-02 22:24:27,542 [printer.py:log_counts()] - # Fans: 3
2025-09-02 22:24:27,542 [printer.py:log_counts()] - # Output pins: 0
2025-09-02 22:24:27,543 [printer.py:log_counts()] - # PWM tools: 0
2025-09-02 22:24:27,543 [printer.py:log_counts()] - # Leds: 1
2025-09-02 22:24:27,793 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-02 22:24:27,795 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-02 22:24:27,795 [screen.py:init_klipper()] - Printer initialized
2025-09-02 22:24:27,796 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-02 22:24:27,796 [printer.py:change_state()] - Adding callback for state: error
2025-09-02 22:24:27,848 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 22:24:27,849 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 22:24:27,849 [screen.py:show_panel()] - Panel is already is in view
2025-09-02 22:25:28,371 [screensaver.py:show()] - Showing Screensaver
2025-09-02 22:26:44,983 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-02 22:26:44,983 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-02 22:26:44,987 [screensaver.py:close()] - Closing Screensaver
2025-09-02 22:26:44,990 [screen.py:wake_screen()] - Screen wake up
2025-09-02 22:26:45,092 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 22:26:45,092 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 22:26:45,093 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-02 22:26:45,093 [screen.py:show_panel()] - Panel is already is in view
2025-09-02 22:26:49,387 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-02 22:26:49,622 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-02 22:26:49,623 [printer.py:log_counts()] - # Extruders: 1
2025-09-02 22:26:49,623 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-02 22:26:49,624 [printer.py:log_counts()] - # Fans: 3
2025-09-02 22:26:49,624 [printer.py:log_counts()] - # Output pins: 0
2025-09-02 22:26:49,624 [printer.py:log_counts()] - # PWM tools: 0
2025-09-02 22:26:49,624 [printer.py:log_counts()] - # Leds: 1
2025-09-02 22:26:49,894 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-02 22:26:49,895 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-02 22:26:49,896 [screen.py:init_klipper()] - Printer initialized
2025-09-02 22:26:49,897 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-02 22:26:49,897 [printer.py:change_state()] - Adding callback for state: ready
2025-09-02 22:26:49,959 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 22:26:49,960 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 22:26:49,960 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-02 22:26:49,963 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-02 22:26:50,019 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-02 22:26:50,117 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-02 22:26:50,134 [main_menu.py:add_device()] - Adding device: extruder
2025-09-02 22:26:50,139 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-02 22:26:50,165 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-02 22:26:50,180 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-02 22:26:50,207 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-02 22:26:50,225 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-02 22:27:50,370 [screensaver.py:show()] - Showing Screensaver
2025-09-02 22:28:40,056 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-02 22:28:40,056 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-02 22:28:40,060 [screensaver.py:close()] - Closing Screensaver
2025-09-02 22:28:40,063 [screen.py:wake_screen()] - Screen wake up
2025-09-02 22:28:40,165 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 22:28:40,165 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 22:28:40,165 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-02 22:28:40,166 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-02 22:28:40,229 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-02 22:28:40,254 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-02 22:28:44,383 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-02 22:28:44,590 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-02 22:28:44,590 [printer.py:log_counts()] - # Extruders: 1
2025-09-02 22:28:44,590 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-02 22:28:44,590 [printer.py:log_counts()] - # Fans: 3
2025-09-02 22:28:44,590 [printer.py:log_counts()] - # Output pins: 0
2025-09-02 22:28:44,591 [printer.py:log_counts()] - # PWM tools: 0
2025-09-02 22:28:44,591 [printer.py:log_counts()] - # Leds: 1
2025-09-02 22:28:44,820 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-02 22:28:44,822 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-02 22:28:44,822 [screen.py:init_klipper()] - Printer initialized
2025-09-02 22:28:44,823 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-02 22:28:44,823 [printer.py:change_state()] - Adding callback for state: ready
2025-09-02 22:28:44,885 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 22:28:44,886 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 22:28:44,886 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-02 22:28:44,889 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-02 22:28:44,947 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-02 22:28:45,041 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-02 22:28:45,059 [main_menu.py:add_device()] - Adding device: extruder
2025-09-02 22:28:45,064 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-02 22:28:45,090 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-02 22:28:45,106 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-02 22:28:45,134 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-02 22:28:45,151 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-02 22:28:51,575 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-02 22:28:51,576 [printer.py:change_state()] - Adding callback for state: printing
2025-09-02 22:28:51,697 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 22:28:51,698 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 22:28:51,699 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-02 22:28:51,771 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-02 22:28:51,875 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-02 22:28:51,890 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-02 22:28:51,907 [job_status.py:update_filename()] - Updating filename to xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m28s.gcode
2025-09-02 22:28:51,908 [job_status.py:_update_file_metadata()] - Update Metadata. File: xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m28s.gcode Size: 635654
2025-09-02 22:29:52,370 [screensaver.py:show()] - Showing Screensaver
2025-09-02 22:49:00,601 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-09-02 22:49:00,602 [printer.py:change_state()] - Adding callback for state: ready
2025-09-02 22:49:00,615 [screensaver.py:close()] - Closing Screensaver
2025-09-02 22:49:00,624 [screen.py:wake_screen()] - Screen wake up
2025-09-02 22:49:00,679 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'complete'
2025-09-02 22:49:00,795 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 22:49:00,796 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 22:49:31,541 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-02 22:49:31,541 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-02 22:49:31,603 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 22:49:31,604 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 22:49:31,604 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-02 22:49:31,605 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-02 22:49:31,670 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-02 22:49:31,706 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-02 22:49:35,820 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-02 22:49:36,012 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-02 22:49:36,012 [printer.py:log_counts()] - # Extruders: 1
2025-09-02 22:49:36,013 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-02 22:49:36,013 [printer.py:log_counts()] - # Fans: 3
2025-09-02 22:49:36,013 [printer.py:log_counts()] - # Output pins: 0
2025-09-02 22:49:36,013 [printer.py:log_counts()] - # PWM tools: 0
2025-09-02 22:49:36,013 [printer.py:log_counts()] - # Leds: 1
2025-09-02 22:49:36,263 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-02 22:49:36,265 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-02 22:49:36,265 [screen.py:init_klipper()] - Printer initialized
2025-09-02 22:49:36,267 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-02 22:49:36,267 [printer.py:change_state()] - Adding callback for state: ready
2025-09-02 22:49:36,341 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-02 22:49:36,342 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-02 22:49:36,342 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-02 22:49:36,345 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-02 22:49:36,406 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-02 22:49:36,501 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-02 22:49:36,518 [main_menu.py:add_device()] - Adding device: extruder
2025-09-02 22:49:36,523 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-02 22:49:36,553 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-02 22:49:36,569 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-02 22:49:36,601 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-02 22:49:36,619 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-02 22:50:36,806 [screensaver.py:show()] - Showing Screensaver
2025-09-03 01:12:17,012 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-03 01:12:17,013 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-03 01:12:17,014 [screensaver.py:close()] - Closing Screensaver
2025-09-03 01:12:17,020 [screen.py:wake_screen()] - Screen wake up
2025-09-03 01:12:17,124 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 01:12:17,124 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 01:12:17,124 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-03 01:12:17,125 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 01:12:17,186 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-03 01:12:17,212 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-03 01:12:21,818 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 01:12:22,095 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-03 01:12:22,095 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 01:12:22,095 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 01:12:22,096 [printer.py:log_counts()] - # Fans: 3
2025-09-03 01:12:22,096 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 01:12:22,096 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 01:12:22,096 [printer.py:log_counts()] - # Leds: 1
2025-09-03 01:12:22,363 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 01:12:22,365 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 01:12:22,365 [screen.py:init_klipper()] - Printer initialized
2025-09-03 01:12:22,366 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-03 01:12:22,366 [printer.py:change_state()] - Adding callback for state: ready
2025-09-03 01:12:22,426 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 01:12:22,427 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 01:12:22,427 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-03 01:12:22,430 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 01:12:22,492 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-03 01:12:22,597 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-03 01:12:22,613 [main_menu.py:add_device()] - Adding device: extruder
2025-09-03 01:12:22,618 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-03 01:12:22,647 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-03 01:12:22,662 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-03 01:12:22,698 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-03 01:12:22,717 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-03 01:13:22,806 [screensaver.py:show()] - Showing Screensaver
2025-09-03 01:13:53,611 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=1024, height=600)
2025-09-03 01:20:49,920 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-09-03 01:20:49,961 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=1024, height=600)
2025-09-03 01:20:56,598 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-03 01:20:56,599 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-03 01:20:56,604 [screensaver.py:close()] - Closing Screensaver
2025-09-03 01:20:56,606 [screen.py:wake_screen()] - Screen wake up
2025-09-03 01:20:56,654 [screensaver.py:close()] - Restoring Dialog <Gtk.Dialog object at 0xe4970928 (GtkDialog at 0x22b4378)>
2025-09-03 01:20:56,721 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 01:20:56,721 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 01:20:56,721 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-03 01:20:56,722 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 01:20:56,782 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-09-03 01:20:56,783 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-03 01:20:56,811 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-03 01:21:00,819 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 01:21:01,122 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-03 01:21:01,122 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 01:21:01,122 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 01:21:01,122 [printer.py:log_counts()] - # Fans: 3
2025-09-03 01:21:01,123 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 01:21:01,123 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 01:21:01,123 [printer.py:log_counts()] - # Leds: 1
2025-09-03 01:21:01,374 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 01:21:01,375 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 01:21:01,376 [screen.py:init_klipper()] - Printer initialized
2025-09-03 01:21:01,376 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-03 01:21:01,377 [printer.py:change_state()] - Adding callback for state: ready
2025-09-03 01:21:01,451 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 01:21:01,452 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 01:21:01,452 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-03 01:21:01,455 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 01:21:01,516 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-03 01:21:01,610 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-03 01:21:01,627 [main_menu.py:add_device()] - Adding device: extruder
2025-09-03 01:21:01,632 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-03 01:21:01,661 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-03 01:21:01,676 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-03 01:21:01,707 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-03 01:21:01,725 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-03 01:22:01,835 [screensaver.py:show()] - Showing Screensaver
2025-09-03 01:22:19,597 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-03 01:22:19,598 [printer.py:change_state()] - Adding callback for state: printing
2025-09-03 01:22:19,603 [screensaver.py:close()] - Closing Screensaver
2025-09-03 01:22:19,605 [screen.py:wake_screen()] - Screen wake up
2025-09-03 01:22:19,726 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 01:22:19,726 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 01:22:19,727 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 01:22:19,788 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-03 01:22:19,892 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-03 01:22:19,908 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-03 01:22:19,923 [job_status.py:update_filename()] - Updating filename to xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m28s.gcode
2025-09-03 01:22:19,924 [job_status.py:_update_file_metadata()] - Update Metadata. File: xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m28s.gcode Size: 635654
2025-09-03 01:23:19,806 [screensaver.py:show()] - Showing Screensaver
2025-09-03 01:24:07,423 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2025-09-03 01:24:07,423 [printer.py:change_state()] - Adding callback for state: paused
2025-09-03 01:24:07,437 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'paused'
2025-09-03 01:24:07,445 [screensaver.py:close()] - Closing Screensaver
2025-09-03 01:24:07,453 [screen.py:wake_screen()] - Screen wake up
2025-09-03 01:24:07,557 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 01:24:07,558 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 01:24:07,558 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 01:24:07,562 [screen.py:show_panel()] - Reinitializing panel extrude
2025-09-03 01:24:07,623 [screen.py:attach_panel()] - Current panel hierarchy: job_status > extrude
2025-09-03 01:24:36,257 [printer.py:change_state()] - Changing state from 'paused' to 'ready'
2025-09-03 01:24:36,259 [printer.py:change_state()] - Adding callback for state: ready
2025-09-03 01:24:36,351 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 01:24:36,352 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 01:25:36,806 [screensaver.py:show()] - Showing Screensaver
2025-09-03 01:29:50,676 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-03 01:29:50,676 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-03 01:29:50,678 [screensaver.py:close()] - Closing Screensaver
2025-09-03 01:29:50,679 [screen.py:wake_screen()] - Screen wake up
2025-09-03 01:29:50,792 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 01:29:50,792 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 01:29:50,793 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-03 01:29:50,793 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 01:29:50,853 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-03 01:29:50,879 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-03 01:29:54,818 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 01:29:55,115 [printer.py:log_counts()] - Klipper version: v0.13.0-229-g3aadda6fb
2025-09-03 01:29:55,116 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 01:29:55,116 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 01:29:55,116 [printer.py:log_counts()] - # Fans: 3
2025-09-03 01:29:55,116 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 01:29:55,117 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 01:29:55,117 [printer.py:log_counts()] - # Leds: 1
2025-09-03 01:29:55,359 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 01:29:55,360 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 01:29:55,360 [screen.py:init_klipper()] - Printer initialized
2025-09-03 01:29:55,361 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-03 01:29:55,361 [printer.py:change_state()] - Adding callback for state: ready
2025-09-03 01:29:55,418 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 01:29:55,418 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 01:29:55,418 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-03 01:29:55,422 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 01:29:55,478 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-03 01:29:55,571 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-03 01:29:55,588 [main_menu.py:add_device()] - Adding device: extruder
2025-09-03 01:29:55,594 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-03 01:29:55,624 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-03 01:29:55,641 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-03 01:29:55,673 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-03 01:29:55,690 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-03 01:30:55,807 [screensaver.py:show()] - Showing Screensaver
2025-09-03 01:31:33,124 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-03 01:31:33,125 [printer.py:change_state()] - Adding callback for state: printing
2025-09-03 01:31:33,128 [screensaver.py:close()] - Closing Screensaver
2025-09-03 01:31:33,131 [screen.py:wake_screen()] - Screen wake up
2025-09-03 01:31:33,253 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 01:31:33,254 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 01:31:33,254 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 01:31:33,315 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-03 01:31:33,404 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-03 01:31:33,420 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-03 01:31:33,442 [job_status.py:update_filename()] - Updating filename to xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m28s.gcode
2025-09-03 01:31:33,443 [job_status.py:_update_file_metadata()] - Update Metadata. File: xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m28s.gcode Size: 629092
2025-09-03 01:32:33,815 [screensaver.py:show()] - Showing Screensaver
2025-09-03 01:33:18,663 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2025-09-03 01:33:18,664 [printer.py:change_state()] - Adding callback for state: paused
2025-09-03 01:33:18,676 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'paused'
2025-09-03 01:33:18,684 [screensaver.py:close()] - Closing Screensaver
2025-09-03 01:33:18,693 [screen.py:wake_screen()] - Screen wake up
2025-09-03 01:33:18,800 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 01:33:18,801 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 01:33:18,801 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 01:33:18,804 [screen.py:show_panel()] - Reinitializing panel extrude
2025-09-03 01:33:18,864 [screen.py:attach_panel()] - Current panel hierarchy: job_status > extrude
2025-09-03 01:33:49,747 [printer.py:change_state()] - Changing state from 'paused' to 'ready'
2025-09-03 01:33:49,748 [printer.py:change_state()] - Adding callback for state: ready
2025-09-03 01:33:49,850 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 01:33:49,851 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 01:34:50,807 [screensaver.py:show()] - Showing Screensaver
2025-09-03 01:37:02,007 [KlippyGtk.py:Dialog()] - Showing dialog Updating (width=1024, height=600)
2025-09-03 01:37:04,574 [base_panel.py:process_update()] - Update complete
2025-09-03 01:37:04,576 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-03 01:37:04,576 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-03 01:37:04,665 [screensaver.py:close()] - Closing Screensaver
2025-09-03 01:37:04,666 [screen.py:wake_screen()] - Screen wake up
2025-09-03 01:37:04,707 [screensaver.py:close()] - Restoring Dialog <Gtk.Dialog object at 0xe3cd3868 (GtkDialog at 0x22b4538)>
2025-09-03 01:37:04,793 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 01:37:04,794 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 01:37:04,794 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-03 01:37:04,795 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 01:37:04,865 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-03 01:37:04,905 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-03 01:37:08,827 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-102-gf20feff-dirty', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 01:37:08,909 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 01:37:08,909 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 01:37:08,910 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 01:37:08,910 [printer.py:log_counts()] - # Fans: 3
2025-09-03 01:37:08,910 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 01:37:08,910 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 01:37:08,910 [printer.py:log_counts()] - # Leds: 1
2025-09-03 01:37:09,166 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 01:37:09,168 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 01:37:09,168 [screen.py:init_klipper()] - Printer initialized
2025-09-03 01:37:09,169 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-03 01:37:09,169 [printer.py:change_state()] - Adding callback for state: ready
2025-09-03 01:37:09,225 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 01:37:09,226 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 01:37:09,226 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-03 01:37:09,230 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 01:37:09,295 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-03 01:37:09,417 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-03 01:37:09,438 [main_menu.py:add_device()] - Adding device: extruder
2025-09-03 01:37:09,444 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-03 01:37:09,474 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-03 01:37:09,493 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-03 01:37:09,528 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-03 01:37:09,549 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-03 01:38:09,806 [screensaver.py:show()] - Showing Screensaver
2025-09-03 01:38:09,806 [screensaver.py:show()] - Hiding dialog
2025-09-03 01:48:42,434 [base_panel.py:process_update()] - Update complete
2025-09-03 01:48:42,568 [KlippyWebsocket.py:on_close()] - 1001 Server Shutdown
2025-09-03 01:48:42,570 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2025-09-03 01:48:42,574 [screen.py:websocket_disconnected()] - ### websocket_disconnected
2025-09-03 01:48:42,575 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 01:48:42,584 [screensaver.py:close()] - Closing Screensaver
2025-09-03 01:48:42,588 [screen.py:wake_screen()] - Screen wake up
2025-09-03 01:48:42,629 [screensaver.py:close()] - Restoring Dialog <Gtk.Dialog object at 0xe3cd3868 (GtkDialog at 0x22b4538)>
2025-09-03 01:48:42,901 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-03 01:48:42,935 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-03 01:48:43,013 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-09-03 01:48:43,014 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 01:48:43,029 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-03 01:48:43,029 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-03 01:48:46,821 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-09-03 01:48:46,822 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-09-03 01:48:46,881 [_logging.py:info()] - Websocket connected
2025-09-03 01:48:46,882 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-09-03 01:48:46,883 [screen.py:websocket_connected()] - ### websocket_connected
2025-09-03 01:48:46,961 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-09-03 01:48:46,977 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-09-03 01:48:46,990 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 01:48:47,007 [KlippyRest.py:_do_request()] - 404 Client Error>>Not Found for url>>http://127.0.0.1:7125/printer/info
2025-09-03 01:48:47,722 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 01:48:47,959 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 01:48:47,959 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 01:48:47,960 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 01:48:47,960 [printer.py:log_counts()] - # Fans: 3
2025-09-03 01:48:47,960 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 01:48:47,960 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 01:48:47,960 [printer.py:log_counts()] - # Leds: 1
2025-09-03 01:48:48,210 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 01:48:48,212 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 01:48:48,212 [screen.py:init_klipper()] - Printer initialized
2025-09-03 01:48:48,213 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-03 01:48:48,213 [printer.py:change_state()] - Adding callback for state: ready
2025-09-03 01:48:48,267 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 01:48:48,268 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 01:48:48,268 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-03 01:48:48,271 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 01:48:48,328 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-03 01:48:48,438 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-03 01:48:48,455 [main_menu.py:add_device()] - Adding device: extruder
2025-09-03 01:48:48,461 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-03 01:48:48,489 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-03 01:48:48,505 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-03 01:48:48,537 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-03 01:48:48,557 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-03 01:48:50,818 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-102-gf20feff', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 01:48:50,969 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 01:48:50,970 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 01:48:50,970 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 01:48:50,970 [printer.py:log_counts()] - # Fans: 3
2025-09-03 01:48:50,970 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 01:48:50,970 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 01:48:50,970 [printer.py:log_counts()] - # Leds: 1
2025-09-03 01:48:51,221 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 01:48:51,223 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 01:48:51,223 [screen.py:init_klipper()] - Printer initialized
2025-09-03 01:48:51,230 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-09-03 01:48:51,260 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-03 01:48:51,277 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-03 01:48:57,528 [KlippyWebsocket.py:on_close()] - 1001 Server Shutdown
2025-09-03 01:48:57,530 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2025-09-03 01:48:57,542 [base_panel.py:process_update()] - Update complete
2025-09-03 01:48:57,544 [screen.py:websocket_disconnected()] - ### websocket_disconnected
2025-09-03 01:48:57,545 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 01:48:57,609 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-03 01:48:57,641 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-03 01:48:57,714 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-09-03 01:48:57,715 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 01:48:57,728 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-03 01:48:57,729 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-03 01:49:01,819 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-09-03 01:49:01,820 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-09-03 01:49:01,829 [_logging.py:info()] - Websocket connected
2025-09-03 01:49:01,829 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-09-03 01:49:01,830 [screen.py:websocket_connected()] - ### websocket_connected
2025-09-03 01:49:01,907 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-09-03 01:49:01,924 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-09-03 01:49:01,938 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 01:49:02,177 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 01:49:02,178 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 01:49:02,178 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 01:49:02,178 [printer.py:log_counts()] - # Fans: 3
2025-09-03 01:49:02,178 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 01:49:02,178 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 01:49:02,178 [printer.py:log_counts()] - # Leds: 1
2025-09-03 01:49:02,426 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 01:49:02,428 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 01:49:02,428 [screen.py:init_klipper()] - Printer initialized
2025-09-03 01:49:02,429 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-03 01:49:02,429 [printer.py:change_state()] - Adding callback for state: ready
2025-09-03 01:49:02,483 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 01:49:02,483 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 01:49:02,483 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-03 01:49:02,486 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 01:49:02,543 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-03 01:49:02,642 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-03 01:49:02,661 [main_menu.py:add_device()] - Adding device: extruder
2025-09-03 01:49:02,668 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-03 01:49:02,701 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-03 01:49:02,716 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-03 01:49:02,746 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-03 01:49:02,764 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-03 01:49:58,947 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-03 01:49:58,948 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-03 01:49:59,007 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 01:49:59,008 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 01:49:59,008 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-03 01:49:59,009 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 01:49:59,065 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-03 01:49:59,090 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-03 01:50:03,469 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 01:50:03,703 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 01:50:03,703 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 01:50:03,703 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 01:50:03,704 [printer.py:log_counts()] - # Fans: 3
2025-09-03 01:50:03,704 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 01:50:03,704 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 01:50:03,704 [printer.py:log_counts()] - # Leds: 1
2025-09-03 01:50:03,948 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 01:50:03,949 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 01:50:03,949 [screen.py:init_klipper()] - Printer initialized
2025-09-03 01:50:03,951 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-03 01:50:03,951 [printer.py:change_state()] - Adding callback for state: ready
2025-09-03 01:50:03,968 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 01:50:04,197 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 01:50:04,197 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 01:50:04,197 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 01:50:04,198 [printer.py:log_counts()] - # Fans: 3
2025-09-03 01:50:04,198 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 01:50:04,198 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 01:50:04,198 [printer.py:log_counts()] - # Leds: 1
2025-09-03 01:50:04,512 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 01:50:04,519 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 01:50:04,519 [screen.py:init_klipper()] - Printer initialized
2025-09-03 01:50:04,580 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 01:50:04,580 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 01:50:04,581 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-03 01:50:04,584 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 01:50:04,644 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-03 01:50:04,867 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-03 01:50:04,889 [main_menu.py:add_device()] - Adding device: extruder
2025-09-03 01:50:04,894 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-03 01:50:04,931 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-03 01:50:04,951 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-03 01:50:04,984 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-03 01:50:05,004 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-03 01:51:04,807 [screensaver.py:show()] - Showing Screensaver
2025-09-03 01:51:04,807 [screensaver.py:show()] - Hiding dialog
2025-09-03 01:51:46,261 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-03 01:51:46,262 [printer.py:change_state()] - Adding callback for state: printing
2025-09-03 01:51:46,276 [screensaver.py:close()] - Closing Screensaver
2025-09-03 01:51:46,278 [screen.py:wake_screen()] - Screen wake up
2025-09-03 01:51:46,321 [screensaver.py:close()] - Restoring Dialog <Gtk.Dialog object at 0xe3cd3868 (GtkDialog at 0x22b4538)>
2025-09-03 01:51:46,392 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 01:51:46,393 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 01:51:46,393 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 01:51:46,453 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-03 01:51:46,574 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-03 01:51:46,587 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-03 01:51:46,603 [job_status.py:update_filename()] - Updating filename to xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m28s.gcode
2025-09-03 01:51:46,604 [job_status.py:_update_file_metadata()] - Update Metadata. File: xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m28s.gcode Size: 635457
2025-09-03 01:52:46,806 [screensaver.py:show()] - Showing Screensaver
2025-09-03 01:52:46,806 [screensaver.py:show()] - Hiding dialog
2025-09-03 01:40:58,713 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-09-03 01:40:58,714 [functions.py:log_start()] - KlipperScreen Version: v0.4.6-11-g6b6f63b6
2025-09-03 01:40:58,714 [functions.py:log_start()] - Python version: 3.9
2025-09-03 01:40:58,905 [config.py:get_config_file_location()] - Passed config (-c): .
2025-09-03 01:40:58,905 [config.py:__init__()] - Config path location: /home/sonic/printer_data/config/KlipperScreen.conf
2025-09-03 01:40:58,908 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/main_menu.conf']
2025-09-03 01:40:58,925 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/splash_menu.conf']
2025-09-03 01:40:58,930 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/print_menu.conf']
2025-09-03 01:40:58,940 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/move_menu.conf']
2025-09-03 01:40:58,953 [config.py:log_config()] - ===== Config File =====

=======================
2025-09-03 01:40:58,956 [config.py:__init__()] - ====== Saved Def ======

[main]
screen_blanking = 60
screen_blanking_printing = 60
24htime = False
font_size = small
show_heater_power = True

[graph Printer]
heater_bed = False

=======================
2025-09-03 01:40:58,957 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_path": "",
      "moonraker_ssl": null,
      "moonraker_api_key": ""
    }
  }
]
2025-09-03 01:40:59,156 [config.py:create_translations()] - Selected lang: system_lang OS lang: en_US
2025-09-03 01:40:59,157 [config.py:install_language()] - Using lang en
2025-09-03 01:40:59,175 [screen.py:__init__()] - Display for xset: :0
2025-09-03 01:40:59,177 [screen.py:__init__()] - Screen 0: 1024x600
2025-09-03 01:40:59,178 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-09-03 01:40:59,178 [screen.py:__init__()] - Wayland: False Display name: :0
2025-09-03 01:40:59,181 [screen.py:__init__()] - Screen resolution: 1024x600
2025-09-03 01:40:59,500 [KlippyGtk.py:__init__()] - Font size: 20.2 (small)
2025-09-03 01:40:59,709 [base_panel.py:battery_percentage()] - Battery information not available.
2025-09-03 01:41:00,122 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 01:41:00,123 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 01:41:00,124 [screen.py:initial_connection()] - Default printer: None
2025-09-03 01:41:00,294 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-09-03 01:41:00,295 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 01:41:00,376 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-09-03 01:41:00,463 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-03 01:41:00,499 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-03 01:41:00,500 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-03 01:41:04,498 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-09-03 01:41:04,500 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-09-03 01:41:04,517 [_logging.py:info()] - Websocket connected
2025-09-03 01:41:04,518 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-09-03 01:41:04,522 [screen.py:websocket_connected()] - ### websocket_connected
2025-09-03 01:41:04,634 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-09-03 01:41:04,681 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-09-03 01:41:04,710 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 01:41:04,947 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 01:41:04,948 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 01:41:04,948 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 01:41:04,948 [printer.py:log_counts()] - # Fans: 3
2025-09-03 01:41:04,949 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 01:41:04,949 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 01:41:04,949 [printer.py:log_counts()] - # Leds: 1
2025-09-03 01:41:05,211 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 01:41:05,216 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 01:41:05,216 [screen.py:init_klipper()] - Printer initialized
2025-09-03 01:41:05,217 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-03 01:41:05,218 [printer.py:change_state()] - Adding callback for state: ready
2025-09-03 01:41:05,329 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 01:41:05,330 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 01:41:05,330 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-03 01:41:05,334 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 01:41:05,412 [screen.py:_load_panel()] - Loading panel: main_menu
2025-09-03 01:41:05,610 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-03 01:41:05,630 [main_menu.py:add_device()] - Adding device: extruder
2025-09-03 01:41:05,644 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-03 01:41:05,685 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-03 01:41:05,759 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-03 01:41:05,862 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-03 01:41:05,888 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-03 01:57:07,077 [base_panel.py:battery_percentage()] - Battery information not available.
2025-09-03 01:57:12,079 [screensaver.py:show()] - Showing Screensaver
2025-09-03 01:59:31,460 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-03 01:59:31,460 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-03 01:59:31,467 [screensaver.py:close()] - Closing Screensaver
2025-09-03 01:59:31,471 [screen.py:wake_screen()] - Screen wake up
2025-09-03 01:59:31,580 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 01:59:31,580 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 01:59:31,581 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-03 01:59:31,582 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 01:59:31,649 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-03 01:59:31,685 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-03 01:59:36,095 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 7, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 01:59:36,220 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 01:59:36,220 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 01:59:36,220 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 01:59:36,221 [printer.py:log_counts()] - # Fans: 3
2025-09-03 01:59:36,221 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 01:59:36,221 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 01:59:36,221 [printer.py:log_counts()] - # Leds: 1
2025-09-03 01:59:36,472 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 01:59:36,473 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 01:59:36,474 [screen.py:init_klipper()] - Printer initialized
2025-09-03 01:59:36,474 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-03 01:59:36,475 [printer.py:change_state()] - Adding callback for state: error
2025-09-03 01:59:36,533 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 01:59:36,533 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 01:59:36,533 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 02:00:37,080 [screensaver.py:show()] - Showing Screensaver
2025-09-03 02:02:07,070 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-03 02:02:07,071 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-03 02:02:07,073 [screensaver.py:close()] - Closing Screensaver
2025-09-03 02:02:07,075 [screen.py:wake_screen()] - Screen wake up
2025-09-03 02:02:07,179 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 02:02:07,180 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 02:02:07,180 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-03 02:02:07,181 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 02:02:11,097 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 7, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 02:02:11,322 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 02:02:11,322 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 02:02:11,323 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 02:02:11,323 [printer.py:log_counts()] - # Fans: 3
2025-09-03 02:02:11,323 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 02:02:11,323 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 02:02:11,323 [printer.py:log_counts()] - # Leds: 1
2025-09-03 02:02:11,578 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 02:02:11,580 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 02:02:11,580 [screen.py:init_klipper()] - Printer initialized
2025-09-03 02:02:11,581 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-03 02:02:11,582 [printer.py:change_state()] - Adding callback for state: ready
2025-09-03 02:02:11,637 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 02:02:11,638 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 02:02:11,638 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-03 02:02:11,642 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 02:02:11,702 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-03 02:02:11,801 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-03 02:02:11,814 [main_menu.py:add_device()] - Adding device: extruder
2025-09-03 02:02:11,821 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-03 02:02:11,850 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-03 02:02:11,861 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-03 02:02:11,894 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-03 02:02:11,919 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-03 02:03:12,079 [screensaver.py:show()] - Showing Screensaver
2025-09-03 02:03:38,563 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-03 02:03:38,563 [printer.py:change_state()] - Adding callback for state: printing
2025-09-03 02:03:38,566 [screensaver.py:close()] - Closing Screensaver
2025-09-03 02:03:38,568 [screen.py:wake_screen()] - Screen wake up
2025-09-03 02:03:38,678 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 02:03:38,678 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 02:03:38,679 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 02:03:38,746 [screen.py:_load_panel()] - Loading panel: job_status
2025-09-03 02:03:38,969 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-03 02:03:38,983 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-03 02:03:39,017 [job_status.py:update_filename()] - Updating filename to xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m28s.gcode
2025-09-03 02:03:39,018 [job_status.py:_update_file_metadata()] - Update Metadata. File: xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m28s.gcode Size: 635457
2025-09-03 02:03:57,458 [screen.py:show_popup_message()] - error: // Unknown command:"RESPOND"
2025-09-03 02:04:39,079 [screensaver.py:show()] - Showing Screensaver
2025-09-03 02:10:46,266 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2025-09-03 02:10:46,267 [printer.py:change_state()] - Adding callback for state: paused
2025-09-03 02:10:46,277 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'paused'
2025-09-03 02:10:46,285 [screensaver.py:close()] - Closing Screensaver
2025-09-03 02:10:46,294 [screen.py:wake_screen()] - Screen wake up
2025-09-03 02:10:46,403 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 02:10:46,404 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 02:10:46,404 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 02:10:46,408 [screen.py:_load_panel()] - Loading panel: extrude
2025-09-03 02:10:46,487 [screen.py:attach_panel()] - Current panel hierarchy: job_status > extrude
2025-09-03 02:11:14,347 [printer.py:change_state()] - Changing state from 'paused' to 'ready'
2025-09-03 02:11:14,347 [printer.py:change_state()] - Adding callback for state: ready
2025-09-03 02:11:14,455 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 02:11:14,456 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 02:12:15,079 [screensaver.py:show()] - Showing Screensaver
2025-09-03 02:15:01,590 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-03 02:15:01,590 [printer.py:change_state()] - Adding callback for state: printing
2025-09-03 02:15:01,593 [screensaver.py:close()] - Closing Screensaver
2025-09-03 02:15:01,595 [screen.py:wake_screen()] - Screen wake up
2025-09-03 02:15:01,719 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 02:15:01,720 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 02:15:01,720 [screen.py:_menu_go_back()] - #### Menu go home
2025-09-03 02:15:01,723 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 02:15:01,783 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-03 02:15:01,883 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-03 02:15:01,899 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-03 02:15:01,917 [job_status.py:update_filename()] - Updating filename to xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m28s.gcode
2025-09-03 02:15:01,924 [job_status.py:_update_file_metadata()] - Update Metadata. File: xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m28s.gcode Size: 635457
2025-09-03 02:15:01,944 [screen.py:attach_panel()] - Current panel hierarchy: job_status > job_status
2025-09-03 02:15:20,514 [screen.py:show_popup_message()] - error: // Unknown command:"RESPOND"
2025-09-03 02:16:02,079 [screensaver.py:show()] - Showing Screensaver
2025-09-03 02:18:00,890 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2025-09-03 02:18:00,891 [printer.py:change_state()] - Adding callback for state: paused
2025-09-03 02:18:00,904 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'paused'
2025-09-03 02:18:00,913 [screensaver.py:close()] - Closing Screensaver
2025-09-03 02:18:00,921 [screen.py:wake_screen()] - Screen wake up
2025-09-03 02:18:01,037 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 02:18:01,037 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 02:18:01,038 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 02:18:01,041 [screen.py:show_panel()] - Reinitializing panel extrude
2025-09-03 02:18:01,086 [screen.py:attach_panel()] - Current panel hierarchy: job_status > job_status > extrude
2025-09-03 02:18:29,223 [printer.py:change_state()] - Changing state from 'paused' to 'ready'
2025-09-03 02:18:29,223 [printer.py:change_state()] - Adding callback for state: ready
2025-09-03 02:18:29,342 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 02:18:29,342 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 02:19:30,080 [screensaver.py:show()] - Showing Screensaver
2025-09-03 02:23:34,798 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-03 02:23:34,799 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-03 02:23:34,803 [screensaver.py:close()] - Closing Screensaver
2025-09-03 02:23:34,806 [screen.py:wake_screen()] - Screen wake up
2025-09-03 02:23:34,927 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 02:23:34,928 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 02:23:34,928 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-03 02:23:34,929 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 02:23:34,987 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-03 02:23:35,019 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-03 02:23:39,095 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 7, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 02:23:39,279 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 02:23:39,280 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 02:23:39,280 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 02:23:39,280 [printer.py:log_counts()] - # Fans: 3
2025-09-03 02:23:39,280 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 02:23:39,281 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 02:23:39,281 [printer.py:log_counts()] - # Leds: 1
2025-09-03 02:23:39,531 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 02:23:39,533 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 02:23:39,534 [screen.py:init_klipper()] - Printer initialized
2025-09-03 02:23:39,534 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-03 02:23:39,535 [printer.py:change_state()] - Adding callback for state: error
2025-09-03 02:23:39,607 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 02:23:39,607 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 02:23:39,608 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 02:24:11,926 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-03 02:24:11,927 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-03 02:24:11,998 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 02:24:11,998 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 02:24:11,998 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-03 02:24:11,999 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 02:24:16,095 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 7, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 02:24:16,164 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 02:24:16,165 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 02:24:16,165 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 02:24:16,165 [printer.py:log_counts()] - # Fans: 3
2025-09-03 02:24:16,165 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 02:24:16,166 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 02:24:16,166 [printer.py:log_counts()] - # Leds: 1
2025-09-03 02:24:16,417 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 02:24:16,418 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 02:24:16,419 [screen.py:init_klipper()] - Printer initialized
2025-09-03 02:24:16,419 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-03 02:24:16,420 [printer.py:change_state()] - Adding callback for state: error
2025-09-03 02:24:16,481 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 02:24:16,482 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 02:24:16,482 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 02:24:42,122 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-03 02:24:42,124 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-03 02:24:42,196 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 02:24:42,196 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 02:24:42,197 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-03 02:24:42,197 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 02:24:46,095 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 7, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 02:24:46,165 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 02:24:46,166 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 02:24:46,166 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 02:24:46,166 [printer.py:log_counts()] - # Fans: 3
2025-09-03 02:24:46,166 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 02:24:46,166 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 02:24:46,166 [printer.py:log_counts()] - # Leds: 1
2025-09-03 02:24:46,418 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 02:24:46,420 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 02:24:46,420 [screen.py:init_klipper()] - Printer initialized
2025-09-03 02:24:46,421 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2025-09-03 02:24:46,421 [printer.py:change_state()] - Adding callback for state: startup
2025-09-03 02:24:46,478 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 02:24:46,479 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 02:24:47,667 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2025-09-03 02:24:47,668 [printer.py:change_state()] - Adding callback for state: ready
2025-09-03 02:24:47,737 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 02:24:47,738 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 02:24:47,738 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-03 02:24:47,741 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 02:24:47,801 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-03 02:24:47,894 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-03 02:24:47,906 [main_menu.py:add_device()] - Adding device: extruder
2025-09-03 02:24:47,911 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-03 02:24:47,948 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-03 02:24:47,958 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-03 02:24:47,990 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-03 02:24:48,016 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-03 02:25:36,378 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-03 02:25:36,378 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-03 02:25:36,453 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 02:25:36,453 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 02:25:36,454 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-03 02:25:36,454 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 02:25:36,513 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-03 02:25:36,542 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-03 02:25:40,438 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 7, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 02:25:40,670 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 02:25:40,670 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 02:25:40,670 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 02:25:40,670 [printer.py:log_counts()] - # Fans: 3
2025-09-03 02:25:40,670 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 02:25:40,671 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 02:25:40,671 [printer.py:log_counts()] - # Leds: 1
2025-09-03 02:25:40,919 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 02:25:40,921 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 02:25:40,921 [screen.py:init_klipper()] - Printer initialized
2025-09-03 02:25:40,922 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-03 02:25:40,922 [printer.py:change_state()] - Adding callback for state: ready
2025-09-03 02:25:40,981 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 02:25:40,981 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 02:25:40,981 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-03 02:25:40,984 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 02:25:41,043 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-03 02:25:41,137 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-03 02:25:41,149 [main_menu.py:add_device()] - Adding device: extruder
2025-09-03 02:25:41,156 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-03 02:25:41,190 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-03 02:25:41,201 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-03 02:25:41,238 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-03 02:25:41,260 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-03 02:25:41,296 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 7, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 02:25:41,422 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 02:25:41,423 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 02:25:41,423 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 02:25:41,423 [printer.py:log_counts()] - # Fans: 3
2025-09-03 02:25:41,423 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 02:25:41,424 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 02:25:41,424 [printer.py:log_counts()] - # Leds: 1
2025-09-03 02:25:41,673 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 02:25:41,674 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 02:25:41,675 [screen.py:init_klipper()] - Printer initialized
2025-09-03 02:25:41,703 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-09-03 02:25:41,736 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-03 02:25:41,784 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-03 02:26:41,078 [screensaver.py:show()] - Showing Screensaver
2025-09-03 02:26:56,895 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-03 02:26:56,898 [printer.py:change_state()] - Adding callback for state: printing
2025-09-03 02:26:56,901 [screensaver.py:close()] - Closing Screensaver
2025-09-03 02:26:56,903 [screen.py:wake_screen()] - Screen wake up
2025-09-03 02:26:57,021 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 02:26:57,022 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 02:26:57,023 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 02:26:57,086 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-03 02:26:57,194 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-03 02:26:57,219 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-03 02:26:57,236 [job_status.py:update_filename()] - Updating filename to xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m28s.gcode
2025-09-03 02:26:57,238 [job_status.py:_update_file_metadata()] - Update Metadata. File: xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m28s.gcode Size: 635457
2025-09-03 02:27:57,094 [screensaver.py:show()] - Showing Screensaver
2025-09-03 02:33:12,495 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2025-09-03 02:33:12,496 [printer.py:change_state()] - Adding callback for state: paused
2025-09-03 02:33:12,505 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'paused'
2025-09-03 02:33:12,512 [screensaver.py:close()] - Closing Screensaver
2025-09-03 02:33:12,521 [screen.py:wake_screen()] - Screen wake up
2025-09-03 02:33:12,628 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 02:33:12,628 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 02:33:12,629 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 02:33:12,632 [screen.py:show_panel()] - Reinitializing panel extrude
2025-09-03 02:33:12,685 [screen.py:attach_panel()] - Current panel hierarchy: job_status > extrude
2025-09-03 02:33:41,323 [printer.py:change_state()] - Changing state from 'paused' to 'ready'
2025-09-03 02:33:41,324 [printer.py:change_state()] - Adding callback for state: ready
2025-09-03 02:33:41,419 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 02:33:41,420 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 02:34:42,079 [screensaver.py:show()] - Showing Screensaver
2025-09-03 02:35:06,848 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-03 02:35:06,849 [printer.py:change_state()] - Adding callback for state: printing
2025-09-03 02:35:06,851 [screensaver.py:close()] - Closing Screensaver
2025-09-03 02:35:06,854 [screen.py:wake_screen()] - Screen wake up
2025-09-03 02:35:06,982 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 02:35:06,983 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 02:35:06,983 [screen.py:_menu_go_back()] - #### Menu go home
2025-09-03 02:35:06,988 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 02:35:07,055 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-03 02:35:07,169 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-03 02:35:07,186 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-03 02:35:07,207 [job_status.py:update_filename()] - Updating filename to xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m28s.gcode
2025-09-03 02:35:07,207 [job_status.py:_update_file_metadata()] - Update Metadata. File: xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m28s.gcode Size: 636042
2025-09-03 02:35:07,224 [screen.py:attach_panel()] - Current panel hierarchy: job_status > job_status
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              2025-09-03 02:30:12,946 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-09-03 02:30:12,947 [functions.py:log_start()] - KlipperScreen Version: v0.4.6-11-g6b6f63b6
2025-09-03 02:30:12,948 [functions.py:log_start()] - Python version: 3.9
2025-09-03 02:30:13,137 [config.py:get_config_file_location()] - Passed config (-c): .
2025-09-03 02:30:13,137 [config.py:__init__()] - Config path location: /home/sonic/printer_data/config/KlipperScreen.conf
2025-09-03 02:30:13,140 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/main_menu.conf']
2025-09-03 02:30:13,155 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/splash_menu.conf']
2025-09-03 02:30:13,161 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/print_menu.conf']
2025-09-03 02:30:13,170 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/move_menu.conf']
2025-09-03 02:30:13,183 [config.py:log_config()] - ===== Config File =====

=======================
2025-09-03 02:30:13,186 [config.py:__init__()] - ====== Saved Def ======

[main]
screen_blanking = 60
screen_blanking_printing = 60
24htime = False
font_size = small
show_heater_power = True

[graph Printer]
heater_bed = False

=======================
2025-09-03 02:30:13,187 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_path": "",
      "moonraker_ssl": null,
      "moonraker_api_key": ""
    }
  }
]
2025-09-03 02:30:13,379 [config.py:create_translations()] - Selected lang: system_lang OS lang: en_US
2025-09-03 02:30:13,380 [config.py:install_language()] - Using lang en
2025-09-03 02:30:13,398 [screen.py:__init__()] - Display for xset: :0
2025-09-03 02:30:13,401 [screen.py:__init__()] - Screen 0: 1024x600
2025-09-03 02:30:13,401 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-09-03 02:30:13,401 [screen.py:__init__()] - Wayland: False Display name: :0
2025-09-03 02:30:13,405 [screen.py:__init__()] - Screen resolution: 1024x600
2025-09-03 02:30:13,719 [KlippyGtk.py:__init__()] - Font size: 20.2 (small)
2025-09-03 02:30:13,938 [base_panel.py:battery_percentage()] - Battery information not available.
2025-09-03 02:30:14,186 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 02:30:14,188 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 02:30:14,188 [screen.py:initial_connection()] - Default printer: None
2025-09-03 02:30:14,258 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-09-03 02:30:14,258 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 02:30:14,317 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-09-03 02:30:14,387 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-03 02:30:14,416 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-03 02:30:14,417 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-03 02:30:18,738 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-03 02:30:18,738 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-03 02:30:22,778 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-09-03 02:30:22,779 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-09-03 02:30:22,797 [_logging.py:info()] - Websocket connected
2025-09-03 02:30:22,798 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-09-03 02:30:22,801 [screen.py:websocket_connected()] - ### websocket_connected
2025-09-03 02:30:22,913 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-09-03 02:30:22,945 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-09-03 02:30:22,966 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 02:30:23,105 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 02:30:23,105 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 02:30:23,106 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 02:30:23,106 [printer.py:log_counts()] - # Fans: 3
2025-09-03 02:30:23,106 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 02:30:23,106 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 02:30:23,106 [printer.py:log_counts()] - # Leds: 1
2025-09-03 02:30:23,388 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 02:30:23,393 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 02:30:23,393 [screen.py:init_klipper()] - Printer initialized
2025-09-03 02:30:23,394 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-03 02:30:23,394 [printer.py:change_state()] - Adding callback for state: ready
2025-09-03 02:30:23,488 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 02:30:23,490 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 02:30:23,490 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-03 02:30:23,495 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 02:30:23,587 [screen.py:_load_panel()] - Loading panel: main_menu
2025-09-03 02:30:23,764 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-03 02:30:23,777 [main_menu.py:add_device()] - Adding device: extruder
2025-09-03 02:30:23,789 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-03 02:30:23,833 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-03 02:30:23,847 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-03 02:30:23,911 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-03 02:30:23,981 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-03 02:37:31,801 [base_panel.py:battery_percentage()] - Battery information not available.
2025-09-03 02:37:39,358 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-03 02:37:39,358 [printer.py:change_state()] - Adding callback for state: printing
2025-09-03 02:37:39,446 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 02:37:39,446 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 02:37:39,446 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 02:37:39,511 [screen.py:_load_panel()] - Loading panel: job_status
2025-09-03 02:37:39,716 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-03 02:37:39,738 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-03 02:37:39,779 [job_status.py:update_filename()] - Updating filename to xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m29s.gcode
2025-09-03 02:37:39,781 [job_status.py:_update_file_metadata()] - Update Metadata. File: xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m29s.gcode Size: 635310
2025-09-03 02:38:39,804 [screensaver.py:show()] - Showing Screensaver
2025-09-03 02:43:09,557 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2025-09-03 02:43:09,558 [printer.py:change_state()] - Adding callback for state: paused
2025-09-03 02:43:09,571 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'paused'
2025-09-03 02:43:09,581 [screensaver.py:close()] - Closing Screensaver
2025-09-03 02:43:09,589 [screen.py:wake_screen()] - Screen wake up
2025-09-03 02:43:09,690 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 02:43:09,691 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 02:43:09,691 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 02:43:09,694 [screen.py:_load_panel()] - Loading panel: extrude
2025-09-03 02:43:09,772 [screen.py:attach_panel()] - Current panel hierarchy: job_status > extrude
2025-09-03 02:43:37,379 [printer.py:change_state()] - Changing state from 'paused' to 'ready'
2025-09-03 02:43:37,379 [printer.py:change_state()] - Adding callback for state: ready
2025-09-03 02:43:37,468 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 02:43:37,469 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 02:44:32,590 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-03 02:44:32,590 [printer.py:change_state()] - Adding callback for state: printing
2025-09-03 02:44:32,673 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 02:44:32,674 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 02:44:32,674 [screen.py:_menu_go_back()] - #### Menu go home
2025-09-03 02:44:32,683 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 02:44:32,762 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-03 02:44:32,862 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-03 02:44:32,877 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-03 02:44:32,898 [job_status.py:update_filename()] - Updating filename to xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m28s.gcode
2025-09-03 02:44:32,899 [job_status.py:_update_file_metadata()] - Update Metadata. File: xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m28s.gcode Size: 633492
2025-09-03 02:44:32,941 [screen.py:attach_panel()] - Current panel hierarchy: job_status > job_status
2025-09-03 02:45:32,803 [screensaver.py:show()] - Showing Screensaver
2025-09-03 03:01:10,119 [screensaver.py:close()] - Closing Screensaver
2025-09-03 03:01:10,126 [screen.py:wake_screen()] - Screen wake up
2025-09-03 03:01:13,695 [KlippyGtk.py:Dialog()] - Showing dialog Cancel (width=1024, height=600)
2025-09-03 03:01:15,347 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-09-03 03:01:15,347 [job_status.py:cancel_confirm()] - Canceling print
2025-09-03 03:01:15,353 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'cancelling'
2025-09-03 03:01:15,359 [KlippyWebsocket.py:print_cancel()] - Sending printer.print.cancel
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    2025-09-03 02:59:58,984 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-09-03 02:59:58,986 [functions.py:log_start()] - KlipperScreen Version: v0.4.6-11-g6b6f63b6
2025-09-03 02:59:58,986 [functions.py:log_start()] - Python version: 3.9
2025-09-03 02:59:59,173 [config.py:get_config_file_location()] - Passed config (-c): .
2025-09-03 02:59:59,174 [config.py:__init__()] - Config path location: /home/sonic/printer_data/config/KlipperScreen.conf
2025-09-03 02:59:59,177 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/main_menu.conf']
2025-09-03 02:59:59,194 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/splash_menu.conf']
2025-09-03 02:59:59,200 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/print_menu.conf']
2025-09-03 02:59:59,210 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/move_menu.conf']
2025-09-03 02:59:59,224 [config.py:log_config()] - ===== Config File =====

=======================
2025-09-03 02:59:59,228 [config.py:__init__()] - ====== Saved Def ======

[main]
screen_blanking = 60
screen_blanking_printing = 60
24htime = False
font_size = small
show_heater_power = True

[graph Printer]
heater_bed = False

=======================
2025-09-03 02:59:59,229 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_path": "",
      "moonraker_ssl": null,
      "moonraker_api_key": ""
    }
  }
]
2025-09-03 02:59:59,420 [config.py:create_translations()] - Selected lang: system_lang OS lang: en_US
2025-09-03 02:59:59,420 [config.py:install_language()] - Using lang en
2025-09-03 02:59:59,439 [screen.py:__init__()] - Display for xset: :0
2025-09-03 02:59:59,441 [screen.py:__init__()] - Screen 0: 1024x600
2025-09-03 02:59:59,441 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-09-03 02:59:59,442 [screen.py:__init__()] - Wayland: False Display name: :0
2025-09-03 02:59:59,445 [screen.py:__init__()] - Screen resolution: 1024x600
2025-09-03 02:59:59,756 [KlippyGtk.py:__init__()] - Font size: 20.2 (small)
2025-09-03 02:59:59,966 [base_panel.py:battery_percentage()] - Battery information not available.
2025-09-03 03:00:00,231 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 03:00:00,231 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 03:00:00,232 [screen.py:initial_connection()] - Default printer: None
2025-09-03 03:00:00,298 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-09-03 03:00:00,299 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 03:00:00,358 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-09-03 03:00:00,436 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-03 03:00:00,462 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-03 03:00:00,463 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-03 03:00:04,592 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-03 03:00:04,593 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-03 03:00:08,608 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-09-03 03:00:08,609 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-09-03 03:00:08,622 [_logging.py:info()] - Websocket connected
2025-09-03 03:00:08,623 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-09-03 03:00:08,624 [screen.py:websocket_connected()] - ### websocket_connected
2025-09-03 03:00:08,737 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-09-03 03:00:08,772 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-09-03 03:00:08,805 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 03:00:08,973 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 03:00:08,974 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 03:00:08,974 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 03:00:08,974 [printer.py:log_counts()] - # Fans: 3
2025-09-03 03:00:08,974 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 03:00:08,974 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 03:00:08,974 [printer.py:log_counts()] - # Leds: 1
2025-09-03 03:00:09,221 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 03:00:09,223 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 03:00:09,224 [screen.py:init_klipper()] - Printer initialized
2025-09-03 03:00:09,224 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-03 03:00:09,225 [printer.py:change_state()] - Adding callback for state: ready
2025-09-03 03:00:09,287 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 03:00:09,287 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 03:00:09,288 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-03 03:00:09,314 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 03:00:09,397 [screen.py:_load_panel()] - Loading panel: main_menu
2025-09-03 03:00:09,657 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-03 03:00:09,670 [main_menu.py:add_device()] - Adding device: extruder
2025-09-03 03:00:09,682 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-03 03:00:09,724 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-03 03:00:09,739 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-03 03:00:09,773 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-03 03:00:09,799 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-03 12:20:35,000 [base_panel.py:battery_percentage()] - Battery information not available.
2025-09-03 12:20:44,003 [screensaver.py:show()] - Showing Screensaver
2025-09-03 12:27:02,431 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-03 12:27:02,433 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-03 12:27:02,435 [screensaver.py:close()] - Closing Screensaver
2025-09-03 12:27:02,437 [screen.py:wake_screen()] - Screen wake up
2025-09-03 12:27:02,539 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 12:27:02,540 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 12:27:02,541 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-03 12:27:02,542 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 12:27:02,601 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-03 12:27:02,630 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-03 12:27:06,858 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 12:27:07,070 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 12:27:07,070 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 12:27:07,070 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 12:27:07,071 [printer.py:log_counts()] - # Fans: 3
2025-09-03 12:27:07,071 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 12:27:07,071 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 12:27:07,071 [printer.py:log_counts()] - # Leds: 1
2025-09-03 12:27:07,335 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 12:27:07,336 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 12:27:07,337 [screen.py:init_klipper()] - Printer initialized
2025-09-03 12:27:07,337 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-03 12:27:07,338 [printer.py:change_state()] - Adding callback for state: ready
2025-09-03 12:27:07,363 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 12:27:07,584 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 12:27:07,584 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 12:27:07,584 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 12:27:07,585 [printer.py:log_counts()] - # Fans: 3
2025-09-03 12:27:07,585 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 12:27:07,585 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 12:27:07,585 [printer.py:log_counts()] - # Leds: 1
2025-09-03 12:27:07,832 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 12:27:07,833 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 12:27:07,834 [screen.py:init_klipper()] - Printer initialized
2025-09-03 12:27:07,892 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 12:27:07,893 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 12:27:07,893 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-03 12:27:07,898 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 12:27:07,955 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-03 12:27:08,048 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-03 12:27:08,060 [main_menu.py:add_device()] - Adding device: extruder
2025-09-03 12:27:08,065 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-03 12:27:08,097 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-03 12:27:08,174 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-03 12:27:08,215 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-03 12:27:08,237 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-03 12:28:08,002 [screensaver.py:show()] - Showing Screensaver
2025-09-03 12:28:17,841 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-03 12:28:17,842 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-03 12:28:17,844 [screensaver.py:close()] - Closing Screensaver
2025-09-03 12:28:17,849 [screen.py:wake_screen()] - Screen wake up
2025-09-03 12:28:17,973 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 12:28:17,973 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 12:28:17,973 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-03 12:28:17,974 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 12:28:18,033 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-03 12:28:18,067 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-03 12:28:22,016 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 12:28:22,224 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 12:28:22,224 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 12:28:22,225 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 12:28:22,225 [printer.py:log_counts()] - # Fans: 3
2025-09-03 12:28:22,225 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 12:28:22,225 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 12:28:22,225 [printer.py:log_counts()] - # Leds: 1
2025-09-03 12:28:22,476 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 12:28:22,478 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 12:28:22,479 [screen.py:init_klipper()] - Printer initialized
2025-09-03 12:28:22,480 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-03 12:28:22,480 [printer.py:change_state()] - Adding callback for state: ready
2025-09-03 12:28:22,538 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 12:28:22,538 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 12:28:22,539 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-03 12:28:22,541 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 12:28:22,596 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-03 12:28:22,690 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-03 12:28:22,703 [main_menu.py:add_device()] - Adding device: extruder
2025-09-03 12:28:22,708 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-03 12:28:22,741 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-03 12:28:22,751 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-03 12:28:22,787 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-03 12:28:22,807 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-03 12:29:23,003 [screensaver.py:show()] - Showing Screensaver
2025-09-03 12:29:37,441 [screensaver.py:close()] - Closing Screensaver
2025-09-03 12:29:37,444 [screen.py:wake_screen()] - Screen wake up
2025-09-03 12:29:37,515 [screen.py:show_popup_message()] - error: // Unknown command:"# PREP"
2025-09-03 12:29:37,525 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-03 12:29:37,526 [printer.py:change_state()] - Adding callback for state: printing
2025-09-03 12:29:37,667 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 12:29:37,667 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 12:29:37,668 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 12:29:37,742 [screen.py:_load_panel()] - Loading panel: job_status
2025-09-03 12:29:37,940 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-03 12:29:37,953 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-03 12:29:37,987 [job_status.py:update_filename()] - Updating filename to xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m29s.gcode
2025-09-03 12:29:37,988 [job_status.py:_update_file_metadata()] - Update Metadata. File: xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m29s.gcode Size: 636324
2025-09-03 12:29:56,406 [screen.py:show_popup_message()] - error: // Unknown command:"# ADAPTIVE"
2025-09-03 12:30:38,002 [screensaver.py:show()] - Showing Screensaver
2025-09-03 12:32:08,205 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2025-09-03 12:32:08,205 [printer.py:change_state()] - Adding callback for state: paused
2025-09-03 12:32:08,217 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'paused'
2025-09-03 12:32:08,230 [screensaver.py:close()] - Closing Screensaver
2025-09-03 12:32:08,239 [screen.py:wake_screen()] - Screen wake up
2025-09-03 12:32:08,350 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 12:32:08,351 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 12:32:08,352 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 12:32:08,356 [screen.py:_load_panel()] - Loading panel: extrude
2025-09-03 12:32:08,432 [screen.py:attach_panel()] - Current panel hierarchy: job_status > extrude
2025-09-03 12:32:36,281 [printer.py:change_state()] - Changing state from 'paused' to 'ready'
2025-09-03 12:32:36,283 [printer.py:change_state()] - Adding callback for state: ready
2025-09-03 12:32:36,385 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 12:32:36,385 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 12:33:37,002 [screensaver.py:show()] - Showing Screensaver
2025-09-03 12:34:16,119 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-03 12:34:16,119 [printer.py:change_state()] - Adding callback for state: printing
2025-09-03 12:34:16,123 [screensaver.py:close()] - Closing Screensaver
2025-09-03 12:34:16,126 [screen.py:wake_screen()] - Screen wake up
2025-09-03 12:34:16,265 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 12:34:16,266 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 12:34:16,266 [screen.py:_menu_go_back()] - #### Menu go home
2025-09-03 12:34:16,269 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 12:34:16,327 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-03 12:34:16,439 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-03 12:34:16,455 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-03 12:34:16,472 [job_status.py:update_filename()] - Updating filename to xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m29s.gcode
2025-09-03 12:34:16,473 [job_status.py:_update_file_metadata()] - Update Metadata. File: xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_13m29s.gcode Size: 630089
2025-09-03 12:34:16,493 [screen.py:attach_panel()] - Current panel hierarchy: job_status > job_status
2025-09-03 12:35:17,003 [screensaver.py:show()] - Showing Screensaver
2025-09-03 12:40:37,304 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2025-09-03 12:40:37,305 [printer.py:change_state()] - Adding callback for state: paused
2025-09-03 12:40:37,316 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'paused'
2025-09-03 12:40:37,324 [screensaver.py:close()] - Closing Screensaver
2025-09-03 12:40:37,332 [screen.py:wake_screen()] - Screen wake up
2025-09-03 12:40:37,438 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 12:40:37,439 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 12:40:37,439 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 12:40:37,443 [screen.py:show_panel()] - Reinitializing panel extrude
2025-09-03 12:40:37,495 [screen.py:attach_panel()] - Current panel hierarchy: job_status > job_status > extrude
2025-09-03 12:41:05,641 [printer.py:change_state()] - Changing state from 'paused' to 'ready'
2025-09-03 12:41:05,641 [printer.py:change_state()] - Adding callback for state: ready
2025-09-03 12:41:05,750 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 12:41:05,751 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 12:42:06,003 [screensaver.py:show()] - Showing Screensaver
2025-09-03 12:42:58,172 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-03 12:42:58,173 [printer.py:change_state()] - Adding callback for state: printing
2025-09-03 12:42:58,174 [screensaver.py:close()] - Closing Screensaver
2025-09-03 12:42:58,175 [screen.py:wake_screen()] - Screen wake up
2025-09-03 12:42:58,298 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 12:42:58,299 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 12:42:58,300 [screen.py:_menu_go_back()] - #### Menu go home
2025-09-03 12:42:58,304 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 12:42:58,375 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-03 12:42:58,496 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-03 12:42:58,512 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-03 12:42:58,533 [job_status.py:update_filename()] - Updating filename to small hook_0.2mm_PLA_Generic Klipper Printer_1h34m.gcode
2025-09-03 12:42:58,534 [job_status.py:_update_file_metadata()] - Update Metadata. File: small hook_0.2mm_PLA_Generic Klipper Printer_1h34m.gcode Size: 6909639
2025-09-03 12:42:58,569 [screen.py:attach_panel()] - Current panel hierarchy: job_status > job_status
2025-09-03 12:43:59,003 [screensaver.py:show()] - Showing Screensaver
2025-09-03 12:51:18,488 [screensaver.py:close()] - Closing Screensaver
2025-09-03 12:51:18,494 [screen.py:wake_screen()] - Screen wake up
2025-09-03 12:51:19,861 [screen.py:_load_panel()] - Loading panel: fine_tune
2025-09-03 12:51:19,950 [screen.py:attach_panel()] - Current panel hierarchy: job_status > job_status > fine_tune
2025-09-03 12:51:21,659 [fine_tune.py:change_percent_delta()] - ### Delta 1
2025-09-03 12:51:22,754 [screen.py:_send_action()] - printer.gcode.script: {'script': 'M221 S99'}
2025-09-03 12:51:28,204 [screen.py:_send_action()] - printer.gcode.script: {'script': 'M221 S98'}
2025-09-03 12:52:29,003 [screensaver.py:show()] - Showing Screensaver
2025-09-03 14:22:25,555 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-09-03 14:22:25,556 [printer.py:change_state()] - Adding callback for state: ready
2025-09-03 14:22:25,561 [screensaver.py:close()] - Closing Screensaver
2025-09-03 14:22:25,567 [screen.py:wake_screen()] - Screen wake up
2025-09-03 14:22:25,688 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 14:22:25,688 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 14:23:26,002 [screensaver.py:show()] - Showing Screensaver
2025-09-03 14:44:17,127 [screensaver.py:close()] - Closing Screensaver
2025-09-03 14:44:17,128 [screen.py:wake_screen()] - Screen wake up
2025-09-03 14:44:18,899 [fine_tune.py:change_percent_delta()] - ### Delta 2
2025-09-03 14:44:51,385 [screen.py:show_popup_message()] - error: // Unknown command:"SHAPER_CALIBRATE"
2025-09-03 14:45:12,218 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-03 14:45:12,218 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-03 14:45:12,296 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 14:45:12,297 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 14:45:12,297 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-03 14:45:12,298 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 14:45:12,359 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-03 14:45:12,385 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-03 14:45:16,474 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 14:45:16,690 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 14:45:16,691 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 14:45:16,691 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 14:45:16,691 [printer.py:log_counts()] - # Fans: 3
2025-09-03 14:45:16,691 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 14:45:16,691 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 14:45:16,691 [printer.py:log_counts()] - # Leds: 1
2025-09-03 14:45:16,951 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 14:45:16,955 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 14:45:16,955 [screen.py:init_klipper()] - Printer initialized
2025-09-03 14:45:16,956 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-03 14:45:16,956 [printer.py:change_state()] - Adding callback for state: ready
2025-09-03 14:45:17,016 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 14:45:17,017 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 14:45:17,017 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-03 14:45:17,020 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 14:45:17,080 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-03 14:45:17,178 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-03 14:45:17,193 [main_menu.py:add_device()] - Adding device: extruder
2025-09-03 14:45:17,198 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-03 14:45:17,228 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-03 14:45:17,238 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-03 14:45:17,274 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-03 14:45:17,297 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-03 14:45:17,333 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 14:45:17,454 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 14:45:17,455 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 14:45:17,455 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 14:45:17,455 [printer.py:log_counts()] - # Fans: 3
2025-09-03 14:45:17,456 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 14:45:17,456 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 14:45:17,456 [printer.py:log_counts()] - # Leds: 1
2025-09-03 14:45:17,703 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 14:45:17,704 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 14:45:17,705 [screen.py:init_klipper()] - Printer initialized
2025-09-03 14:45:17,740 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-09-03 14:45:17,780 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-03 14:45:17,799 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-03 14:46:18,002 [screensaver.py:show()] - Showing Screensaver
2025-09-03 14:46:31,831 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-03 14:46:31,832 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-03 14:46:31,833 [screensaver.py:close()] - Closing Screensaver
2025-09-03 14:46:31,836 [screen.py:wake_screen()] - Screen wake up
2025-09-03 14:46:31,958 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 14:46:31,959 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 14:46:31,959 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-03 14:46:31,960 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 14:46:32,019 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-03 14:46:32,046 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-03 14:46:36,015 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 14:46:36,232 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 14:46:36,232 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 14:46:36,233 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 14:46:36,233 [printer.py:log_counts()] - # Fans: 3
2025-09-03 14:46:36,233 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 14:46:36,233 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 14:46:36,233 [printer.py:log_counts()] - # Leds: 1
2025-09-03 14:46:36,485 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 14:46:36,486 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 14:46:36,487 [screen.py:init_klipper()] - Printer initialized
2025-09-03 14:46:36,488 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-03 14:46:36,488 [printer.py:change_state()] - Adding callback for state: error
2025-09-03 14:46:36,551 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 14:46:36,552 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 14:46:36,552 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 14:47:37,001 [screensaver.py:show()] - Showing Screensaver
2025-09-03 14:48:11,794 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-03 14:48:11,797 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-03 14:48:11,798 [screensaver.py:close()] - Closing Screensaver
2025-09-03 14:48:11,801 [screen.py:wake_screen()] - Screen wake up
2025-09-03 14:48:11,910 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 14:48:11,911 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 14:48:11,911 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-03 14:48:11,911 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 14:48:16,018 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 14:48:16,155 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 14:48:16,155 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 14:48:16,155 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 14:48:16,155 [printer.py:log_counts()] - # Fans: 3
2025-09-03 14:48:16,155 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 14:48:16,155 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 14:48:16,156 [printer.py:log_counts()] - # Leds: 1
2025-09-03 14:48:16,411 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 14:48:16,414 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 14:48:16,414 [screen.py:init_klipper()] - Printer initialized
2025-09-03 14:48:16,415 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-03 14:48:16,415 [printer.py:change_state()] - Adding callback for state: error
2025-09-03 14:48:16,472 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 14:48:16,472 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 14:48:16,473 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 14:48:40,778 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-03 14:48:40,778 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-03 14:48:40,849 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 14:48:40,850 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 14:48:40,850 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-03 14:48:40,850 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 14:48:45,018 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 14:48:45,162 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 14:48:45,162 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 14:48:45,163 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 14:48:45,163 [printer.py:log_counts()] - # Fans: 3
2025-09-03 14:48:45,163 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 14:48:45,163 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 14:48:45,163 [printer.py:log_counts()] - # Leds: 1
2025-09-03 14:48:45,414 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 14:48:45,416 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 14:48:45,416 [screen.py:init_klipper()] - Printer initialized
2025-09-03 14:48:45,417 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-03 14:48:45,417 [printer.py:change_state()] - Adding callback for state: error
2025-09-03 14:48:45,476 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 14:48:45,476 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 14:48:45,477 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 14:49:46,002 [screensaver.py:show()] - Showing Screensaver
2025-09-03 14:52:21,885 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-03 14:52:21,886 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-03 14:52:21,886 [screensaver.py:close()] - Closing Screensaver
2025-09-03 14:52:21,893 [screen.py:wake_screen()] - Screen wake up
2025-09-03 14:52:22,003 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 14:52:22,004 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 14:52:22,004 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-03 14:52:22,004 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 14:52:26,020 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 14:52:26,066 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 14:52:26,067 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 14:52:26,067 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 14:52:26,067 [printer.py:log_counts()] - # Fans: 3
2025-09-03 14:52:26,068 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 14:52:26,068 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 14:52:26,068 [printer.py:log_counts()] - # Leds: 1
2025-09-03 14:52:26,319 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 14:52:26,322 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 14:52:26,323 [screen.py:init_klipper()] - Printer initialized
2025-09-03 14:52:26,325 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2025-09-03 14:52:26,325 [printer.py:change_state()] - Adding callback for state: startup
2025-09-03 14:52:26,381 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 14:52:26,382 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 14:53:23,965 [printer.py:change_state()] - Changing state from 'startup' to 'disconnected'
2025-09-03 14:53:23,966 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-03 14:53:24,046 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 14:53:24,047 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 14:53:24,047 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-03 14:53:24,048 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 14:53:28,018 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 14:53:28,140 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 14:53:28,140 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 14:53:28,140 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 14:53:28,141 [printer.py:log_counts()] - # Fans: 3
2025-09-03 14:53:28,141 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 14:53:28,141 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 14:53:28,141 [printer.py:log_counts()] - # Leds: 1
2025-09-03 14:53:28,390 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 14:53:28,391 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 14:53:28,392 [screen.py:init_klipper()] - Printer initialized
2025-09-03 14:53:28,392 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-03 14:53:28,392 [printer.py:change_state()] - Adding callback for state: error
2025-09-03 14:53:28,449 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 14:53:28,450 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 14:53:28,451 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 14:53:37,069 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-03 14:53:37,070 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-03 14:53:37,143 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 14:53:37,144 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 14:53:37,144 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-03 14:53:37,144 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 14:53:41,019 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 14:53:41,290 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 14:53:41,290 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 14:53:41,290 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 14:53:41,290 [printer.py:log_counts()] - # Fans: 3
2025-09-03 14:53:41,291 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 14:53:41,291 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 14:53:41,291 [printer.py:log_counts()] - # Leds: 1
2025-09-03 14:53:41,547 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 14:53:41,548 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 14:53:41,549 [screen.py:init_klipper()] - Printer initialized
2025-09-03 14:53:41,549 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-03 14:53:41,549 [printer.py:change_state()] - Adding callback for state: ready
2025-09-03 14:53:41,602 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 14:53:41,603 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 14:53:41,603 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-03 14:53:41,606 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 14:53:41,664 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-03 14:53:41,762 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-03 14:53:41,775 [main_menu.py:add_device()] - Adding device: extruder
2025-09-03 14:53:41,780 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-03 14:53:41,813 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-03 14:53:41,824 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-03 14:53:41,853 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-03 14:53:41,872 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-03 14:54:42,020 [screensaver.py:show()] - Showing Screensaver
2025-09-03 14:54:57,244 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-03 14:54:57,245 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-03 14:54:57,251 [screensaver.py:close()] - Closing Screensaver
2025-09-03 14:54:57,254 [screen.py:wake_screen()] - Screen wake up
2025-09-03 14:54:57,366 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 14:54:57,366 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 14:54:57,366 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-03 14:54:57,368 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 14:54:57,439 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-03 14:54:57,484 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-03 14:55:02,016 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 14:55:02,187 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 14:55:02,187 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 14:55:02,187 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 14:55:02,188 [printer.py:log_counts()] - # Fans: 3
2025-09-03 14:55:02,188 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 14:55:02,188 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 14:55:02,188 [printer.py:log_counts()] - # Leds: 1
2025-09-03 14:55:02,444 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 14:55:02,446 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 14:55:02,446 [screen.py:init_klipper()] - Printer initialized
2025-09-03 14:55:02,447 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2025-09-03 14:55:02,447 [printer.py:change_state()] - Adding callback for state: startup
2025-09-03 14:55:02,508 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 14:55:02,508 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 14:56:03,003 [screensaver.py:show()] - Showing Screensaver
2025-09-03 14:56:29,931 [printer.py:change_state()] - Changing state from 'startup' to 'error'
2025-09-03 14:56:29,932 [printer.py:change_state()] - Adding callback for state: error
2025-09-03 14:56:29,933 [screensaver.py:close()] - Closing Screensaver
2025-09-03 14:56:29,936 [screen.py:wake_screen()] - Screen wake up
2025-09-03 14:56:30,039 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 14:56:30,040 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 14:56:30,040 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 14:57:31,005 [screensaver.py:show()] - Showing Screensaver
2025-09-03 14:57:53,663 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-03 14:57:53,663 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-03 14:57:53,664 [screensaver.py:close()] - Closing Screensaver
2025-09-03 14:57:53,666 [screen.py:wake_screen()] - Screen wake up
2025-09-03 14:57:53,784 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 14:57:53,785 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 14:57:53,785 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-03 14:57:53,785 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 14:57:58,015 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 14:57:58,078 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 14:57:58,079 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 14:57:58,079 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 14:57:58,079 [printer.py:log_counts()] - # Fans: 3
2025-09-03 14:57:58,080 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 14:57:58,080 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 14:57:58,080 [printer.py:log_counts()] - # Leds: 1
2025-09-03 14:57:58,329 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 14:57:58,331 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 14:57:58,331 [screen.py:init_klipper()] - Printer initialized
2025-09-03 14:57:58,332 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-03 14:57:58,332 [printer.py:change_state()] - Adding callback for state: ready
2025-09-03 14:57:58,392 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 14:57:58,392 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 14:57:58,393 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-03 14:57:58,396 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 14:57:58,454 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-03 14:57:58,554 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-03 14:57:58,566 [main_menu.py:add_device()] - Adding device: extruder
2025-09-03 14:57:58,572 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-03 14:57:58,602 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-03 14:57:58,612 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-03 14:57:58,644 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-03 14:57:58,663 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-03 14:58:26,025 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-03 14:58:26,026 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-03 14:58:26,109 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 14:58:26,109 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 14:58:26,110 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-03 14:58:26,111 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 14:58:26,171 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-03 14:58:26,199 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-03 14:58:30,021 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 14:58:30,080 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 14:58:30,080 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 14:58:30,081 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 14:58:30,081 [printer.py:log_counts()] - # Fans: 3
2025-09-03 14:58:30,081 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 14:58:30,081 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 14:58:30,081 [printer.py:log_counts()] - # Leds: 1
2025-09-03 14:58:30,336 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 14:58:30,337 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 14:58:30,338 [screen.py:init_klipper()] - Printer initialized
2025-09-03 14:58:30,339 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2025-09-03 14:58:30,339 [printer.py:change_state()] - Adding callback for state: startup
2025-09-03 14:58:30,412 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 14:58:30,412 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 14:59:31,003 [screensaver.py:show()] - Showing Screensaver
2025-09-03 14:59:58,833 [printer.py:change_state()] - Changing state from 'startup' to 'error'
2025-09-03 14:59:58,834 [printer.py:change_state()] - Adding callback for state: error
2025-09-03 14:59:58,835 [screensaver.py:close()] - Closing Screensaver
2025-09-03 14:59:58,837 [screen.py:wake_screen()] - Screen wake up
2025-09-03 14:59:58,946 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 14:59:58,947 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 14:59:58,947 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 15:00:59,002 [screensaver.py:show()] - Showing Screensaver
2025-09-03 15:08:18,538 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-03 15:08:18,538 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-03 15:08:18,542 [screensaver.py:close()] - Closing Screensaver
2025-09-03 15:08:18,544 [screen.py:wake_screen()] - Screen wake up
2025-09-03 15:08:18,655 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 15:08:18,656 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 15:08:18,656 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-03 15:08:18,656 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 15:08:23,017 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'shutdown', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 15:08:23,238 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 15:08:23,238 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 15:08:23,238 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 15:08:23,239 [printer.py:log_counts()] - # Fans: 3
2025-09-03 15:08:23,239 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 15:08:23,239 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 15:08:23,239 [printer.py:log_counts()] - # Leds: 1
2025-09-03 15:08:23,493 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 15:08:23,495 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 15:08:23,496 [screen.py:init_klipper()] - Printer initialized
2025-09-03 15:08:23,497 [printer.py:change_state()] - Changing state from 'disconnected' to 'shutdown'
2025-09-03 15:08:23,498 [printer.py:change_state()] - Adding callback for state: shutdown
2025-09-03 15:08:23,556 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 15:08:23,557 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 15:08:23,557 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 15:09:24,002 [screensaver.py:show()] - Showing Screensaver
2025-09-03 15:10:59,250 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2025-09-03 15:10:59,251 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-03 15:10:59,252 [screensaver.py:close()] - Closing Screensaver
2025-09-03 15:10:59,259 [screen.py:wake_screen()] - Screen wake up
2025-09-03 15:10:59,386 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 15:10:59,387 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 15:10:59,387 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-03 15:10:59,387 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 15:11:04,023 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 15:11:04,293 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 15:11:04,293 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 15:11:04,293 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 15:11:04,293 [printer.py:log_counts()] - # Fans: 3
2025-09-03 15:11:04,294 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 15:11:04,294 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 15:11:04,294 [printer.py:log_counts()] - # Leds: 1
2025-09-03 15:11:04,561 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 15:11:04,562 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 15:11:04,563 [screen.py:init_klipper()] - Printer initialized
2025-09-03 15:11:04,564 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-03 15:11:04,564 [printer.py:change_state()] - Adding callback for state: ready
2025-09-03 15:11:04,623 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 15:11:04,623 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 15:11:04,624 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-03 15:11:04,627 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 15:11:04,684 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-03 15:11:04,778 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-03 15:11:04,791 [main_menu.py:add_device()] - Adding device: extruder
2025-09-03 15:11:04,798 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-03 15:11:04,828 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-03 15:11:04,839 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-03 15:11:04,872 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-03 15:11:04,893 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-03 15:11:22,641 [screen.py:show_popup_message()] - error: Invalid adxl345 id (got 0 vs e5).
2025-09-03 15:12:05,008 [screensaver.py:show()] - Showing Screensaver
2025-09-03 15:15:38,902 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-03 15:15:38,903 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-03 15:15:38,905 [screensaver.py:close()] - Closing Screensaver
2025-09-03 15:15:38,908 [screen.py:wake_screen()] - Screen wake up
2025-09-03 15:15:39,018 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 15:15:39,019 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 15:15:39,019 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-03 15:15:39,020 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 15:15:39,081 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-03 15:15:39,112 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-03 15:15:43,016 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 15:15:43,058 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 15:15:43,058 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 15:15:43,058 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 15:15:43,059 [printer.py:log_counts()] - # Fans: 3
2025-09-03 15:15:43,059 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 15:15:43,059 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 15:15:43,059 [printer.py:log_counts()] - # Leds: 1
2025-09-03 15:15:43,309 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 15:15:43,310 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 15:15:43,311 [screen.py:init_klipper()] - Printer initialized
2025-09-03 15:15:43,311 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-03 15:15:43,312 [printer.py:change_state()] - Adding callback for state: error
2025-09-03 15:15:43,370 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 15:15:43,371 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 15:15:43,371 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 15:16:44,003 [screensaver.py:show()] - Showing Screensaver
2025-09-03 15:17:17,963 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-03 15:17:17,964 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-03 15:17:17,965 [screensaver.py:close()] - Closing Screensaver
2025-09-03 15:17:17,973 [screen.py:wake_screen()] - Screen wake up
2025-09-03 15:17:18,085 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 15:17:18,086 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 15:17:18,086 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-03 15:17:18,086 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 15:17:22,018 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 15:17:22,128 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 15:17:22,128 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 15:17:22,129 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 15:17:22,129 [printer.py:log_counts()] - # Fans: 3
2025-09-03 15:17:22,129 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 15:17:22,129 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 15:17:22,129 [printer.py:log_counts()] - # Leds: 1
2025-09-03 15:17:22,382 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 15:17:22,383 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 15:17:22,384 [screen.py:init_klipper()] - Printer initialized
2025-09-03 15:17:22,384 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-03 15:17:22,384 [printer.py:change_state()] - Adding callback for state: error
2025-09-03 15:17:22,439 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 15:17:22,440 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 15:17:22,440 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 15:18:23,002 [screensaver.py:show()] - Showing Screensaver
2025-09-03 15:18:56,681 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-03 15:18:56,683 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-03 15:18:56,686 [screensaver.py:close()] - Closing Screensaver
2025-09-03 15:18:56,688 [screen.py:wake_screen()] - Screen wake up
2025-09-03 15:18:56,816 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 15:18:56,816 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 15:18:56,817 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-03 15:18:56,817 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 15:19:01,019 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 15:19:01,113 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 15:19:01,113 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 15:19:01,113 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 15:19:01,113 [printer.py:log_counts()] - # Fans: 3
2025-09-03 15:19:01,113 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 15:19:01,114 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 15:19:01,114 [printer.py:log_counts()] - # Leds: 1
2025-09-03 15:19:01,366 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 15:19:01,368 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 15:19:01,369 [screen.py:init_klipper()] - Printer initialized
2025-09-03 15:19:01,369 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-03 15:19:01,370 [printer.py:change_state()] - Adding callback for state: error
2025-09-03 15:19:01,428 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 15:19:01,429 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 15:19:01,429 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 15:19:36,727 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-03 15:19:36,727 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-03 15:19:36,798 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 15:19:36,798 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 15:19:36,799 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-03 15:19:36,799 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 15:19:41,018 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 15:19:41,264 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 15:19:41,264 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 15:19:41,265 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 15:19:41,265 [printer.py:log_counts()] - # Fans: 3
2025-09-03 15:19:41,265 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 15:19:41,266 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 15:19:41,266 [printer.py:log_counts()] - # Leds: 1
2025-09-03 15:19:41,511 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 15:19:41,513 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 15:19:41,513 [screen.py:init_klipper()] - Printer initialized
2025-09-03 15:19:41,514 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-03 15:19:41,514 [printer.py:change_state()] - Adding callback for state: error
2025-09-03 15:19:41,568 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 15:19:41,569 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 15:19:41,570 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 15:20:03,324 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-03 15:20:03,324 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-03 15:20:03,392 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 15:20:03,393 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 15:20:03,393 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-03 15:20:03,393 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 15:20:08,017 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'shutdown', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 15:20:08,094 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 15:20:08,095 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 15:20:08,095 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 15:20:08,095 [printer.py:log_counts()] - # Fans: 3
2025-09-03 15:20:08,095 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 15:20:08,095 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 15:20:08,096 [printer.py:log_counts()] - # Leds: 1
2025-09-03 15:20:08,346 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 15:20:08,348 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 15:20:08,349 [screen.py:init_klipper()] - Printer initialized
2025-09-03 15:20:08,350 [printer.py:change_state()] - Changing state from 'disconnected' to 'shutdown'
2025-09-03 15:20:08,350 [printer.py:change_state()] - Adding callback for state: shutdown
2025-09-03 15:20:08,410 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 15:20:08,411 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 15:20:08,411 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 15:20:17,928 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2025-09-03 15:20:17,928 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-03 15:20:18,006 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 15:20:18,006 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 15:20:18,007 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-03 15:20:18,007 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 15:20:22,016 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 15:20:22,180 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 15:20:22,180 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 15:20:22,180 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 15:20:22,181 [printer.py:log_counts()] - # Fans: 3
2025-09-03 15:20:22,181 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 15:20:22,181 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 15:20:22,181 [printer.py:log_counts()] - # Leds: 1
2025-09-03 15:20:22,424 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 15:20:22,425 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 15:20:22,426 [screen.py:init_klipper()] - Printer initialized
2025-09-03 15:20:22,427 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-03 15:20:22,427 [printer.py:change_state()] - Adding callback for state: ready
2025-09-03 15:20:22,482 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 15:20:22,483 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 15:20:22,483 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-03 15:20:22,486 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 15:20:22,547 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-03 15:20:22,639 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-03 15:20:22,652 [main_menu.py:add_device()] - Adding device: extruder
2025-09-03 15:20:22,658 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-03 15:20:22,698 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-03 15:20:22,711 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-03 15:20:22,745 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-03 15:20:22,768 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-03 15:21:23,002 [screensaver.py:show()] - Showing Screensaver
2025-09-03 15:22:15,829 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-03 15:22:15,830 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-03 15:22:15,831 [screensaver.py:close()] - Closing Screensaver
2025-09-03 15:22:15,835 [screen.py:wake_screen()] - Screen wake up
2025-09-03 15:22:15,942 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 15:22:15,943 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 15:22:15,943 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-03 15:22:15,944 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 15:22:16,000 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-03 15:22:16,026 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-03 15:22:20,023 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-03 15:22:20,263 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-03 15:22:20,264 [printer.py:log_counts()] - # Extruders: 1
2025-09-03 15:22:20,264 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-03 15:22:20,264 [printer.py:log_counts()] - # Fans: 3
2025-09-03 15:22:20,264 [printer.py:log_counts()] - # Output pins: 0
2025-09-03 15:22:20,264 [printer.py:log_counts()] - # PWM tools: 0
2025-09-03 15:22:20,264 [printer.py:log_counts()] - # Leds: 1
2025-09-03 15:22:20,510 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-03 15:22:20,512 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-03 15:22:20,512 [screen.py:init_klipper()] - Printer initialized
2025-09-03 15:22:20,513 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-03 15:22:20,513 [printer.py:change_state()] - Adding callback for state: ready
2025-09-03 15:22:20,567 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 15:22:20,567 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 15:22:20,568 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-03 15:22:20,571 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 15:22:20,630 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-03 15:22:20,720 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-03 15:22:20,730 [main_menu.py:add_device()] - Adding device: extruder
2025-09-03 15:22:20,736 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-03 15:22:20,768 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-03 15:22:20,778 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-03 15:22:20,819 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-03 15:22:20,837 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-03 15:23:21,002 [screensaver.py:show()] - Showing Screensaver
2025-09-03 15:23:27,254 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-03 15:23:27,254 [printer.py:change_state()] - Adding callback for state: printing
2025-09-03 15:23:27,262 [screensaver.py:close()] - Closing Screensaver
2025-09-03 15:23:27,268 [screen.py:wake_screen()] - Screen wake up
2025-09-03 15:23:27,384 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 15:23:27,385 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 15:23:27,385 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 15:23:27,453 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-03 15:23:27,566 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-03 15:23:27,580 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-03 15:23:27,595 [job_status.py:update_filename()] - Updating filename to flowrate_0_0.2mm_PLA_Generic Klipper Printer_35m53s.gcode
2025-09-03 15:23:27,596 [job_status.py:_update_file_metadata()] - Update Metadata. File: flowrate_0_0.2mm_PLA_Generic Klipper Printer_35m53s.gcode Size: 830555
2025-09-03 15:24:28,002 [screensaver.py:show()] - Showing Screensaver
2025-09-03 16:04:57,944 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-09-03 16:04:57,944 [printer.py:change_state()] - Adding callback for state: ready
2025-09-03 16:04:57,958 [screensaver.py:close()] - Closing Screensaver
2025-09-03 16:04:57,962 [screen.py:wake_screen()] - Screen wake up
2025-09-03 16:04:58,015 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'complete'
2025-09-03 16:04:58,140 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 16:04:58,141 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 16:05:59,002 [screensaver.py:show()] - Showing Screensaver
2025-09-03 17:11:34,952 [job_status.py:set_state()] - Changing job_status state from 'complete' to 'standby'
2025-09-03 17:13:25,080 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-03 17:13:25,081 [printer.py:change_state()] - Adding callback for state: printing
2025-09-03 17:13:25,093 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-03 17:13:25,119 [job_status.py:update_filename()] - Updating filename to VFA_0.2mm_PLA_Generic Klipper Printer_41m7s.gcode
2025-09-03 17:13:25,122 [job_status.py:_update_file_metadata()] - Update Metadata. File: VFA_0.2mm_PLA_Generic Klipper Printer_41m7s.gcode Size: 2456014
2025-09-03 17:13:25,150 [screensaver.py:close()] - Closing Screensaver
2025-09-03 17:13:25,164 [screen.py:wake_screen()] - Screen wake up
2025-09-03 17:13:25,319 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 17:13:25,320 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 17:13:25,320 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 17:14:26,008 [screensaver.py:show()] - Showing Screensaver
2025-09-03 17:55:58,458 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2025-09-03 17:55:58,458 [printer.py:change_state()] - Adding callback for state: paused
2025-09-03 17:55:58,473 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'paused'
2025-09-03 17:55:58,485 [screensaver.py:close()] - Closing Screensaver
2025-09-03 17:55:58,499 [screen.py:wake_screen()] - Screen wake up
2025-09-03 17:55:58,608 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 17:55:58,609 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 17:55:58,609 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 17:55:58,613 [screen.py:show_panel()] - Reinitializing panel extrude
2025-09-03 17:55:58,674 [screen.py:attach_panel()] - Current panel hierarchy: job_status > extrude
2025-09-03 17:56:25,793 [printer.py:change_state()] - Changing state from 'paused' to 'ready'
2025-09-03 17:56:25,793 [printer.py:change_state()] - Adding callback for state: ready
2025-09-03 17:56:25,900 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 17:56:25,901 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 17:57:26,011 [screensaver.py:show()] - Showing Screensaver
2025-09-03 17:58:17,415 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-03 17:58:17,416 [printer.py:change_state()] - Adding callback for state: printing
2025-09-03 17:58:17,417 [screensaver.py:close()] - Closing Screensaver
2025-09-03 17:58:17,419 [screen.py:wake_screen()] - Screen wake up
2025-09-03 17:58:17,534 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 17:58:17,534 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 17:58:17,534 [screen.py:_menu_go_back()] - #### Menu go home
2025-09-03 17:58:17,537 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 17:58:17,596 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-03 17:58:17,728 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-03 17:58:17,746 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-03 17:58:17,761 [job_status.py:update_filename()] - Updating filename to OrcaToleranceTest_0.2mm_PLA_Generic Klipper Printer_24m57s.gcode
2025-09-03 17:58:17,761 [job_status.py:_update_file_metadata()] - Update Metadata. File: OrcaToleranceTest_0.2mm_PLA_Generic Klipper Printer_24m57s.gcode Size: 1266203
2025-09-03 17:58:17,793 [screen.py:attach_panel()] - Current panel hierarchy: job_status > job_status
2025-09-03 17:59:18,002 [screensaver.py:show()] - Showing Screensaver
2025-09-03 18:16:57,499 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2025-09-03 18:16:57,500 [printer.py:change_state()] - Adding callback for state: paused
2025-09-03 18:16:57,510 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'paused'
2025-09-03 18:16:57,516 [screensaver.py:close()] - Closing Screensaver
2025-09-03 18:16:57,524 [screen.py:wake_screen()] - Screen wake up
2025-09-03 18:16:57,626 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 18:16:57,627 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 18:16:57,627 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 18:16:57,631 [screen.py:show_panel()] - Reinitializing panel extrude
2025-09-03 18:16:57,687 [screen.py:attach_panel()] - Current panel hierarchy: job_status > job_status > extrude
2025-09-03 18:17:24,578 [printer.py:change_state()] - Changing state from 'paused' to 'ready'
2025-09-03 18:17:24,578 [printer.py:change_state()] - Adding callback for state: ready
2025-09-03 18:17:24,673 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 18:17:24,673 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 18:18:25,003 [screensaver.py:show()] - Showing Screensaver
2025-09-03 18:20:08,108 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-03 18:20:08,108 [printer.py:change_state()] - Adding callback for state: printing
2025-09-03 18:20:08,110 [screensaver.py:close()] - Closing Screensaver
2025-09-03 18:20:08,115 [screen.py:wake_screen()] - Screen wake up
2025-09-03 18:20:08,259 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 18:20:08,259 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 18:20:08,260 [screen.py:_menu_go_back()] - #### Menu go home
2025-09-03 18:20:08,264 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 18:20:08,323 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-03 18:20:08,428 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-03 18:20:08,442 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-03 18:20:08,458 [job_status.py:update_filename()] - Updating filename to OrcaToleranceTest_0.2mm_PLA_Generic Klipper Printer_24m31s.gcode
2025-09-03 18:20:08,459 [job_status.py:_update_file_metadata()] - Update Metadata. File: OrcaToleranceTest_0.2mm_PLA_Generic Klipper Printer_24m31s.gcode Size: 1317865
2025-09-03 18:20:08,490 [screen.py:attach_panel()] - Current panel hierarchy: job_status > job_status
2025-09-03 18:21:09,002 [screensaver.py:show()] - Showing Screensaver
2025-09-03 18:42:35,916 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2025-09-03 18:42:35,916 [printer.py:change_state()] - Adding callback for state: paused
2025-09-03 18:42:35,931 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'paused'
2025-09-03 18:42:35,940 [screensaver.py:close()] - Closing Screensaver
2025-09-03 18:42:35,948 [screen.py:wake_screen()] - Screen wake up
2025-09-03 18:42:36,053 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 18:42:36,053 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 18:42:36,054 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 18:42:36,057 [screen.py:show_panel()] - Reinitializing panel extrude
2025-09-03 18:42:36,109 [screen.py:attach_panel()] - Current panel hierarchy: job_status > job_status > extrude
2025-09-03 18:43:03,245 [printer.py:change_state()] - Changing state from 'paused' to 'ready'
2025-09-03 18:43:03,246 [printer.py:change_state()] - Adding callback for state: ready
2025-09-03 18:43:03,352 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 18:43:03,352 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 18:44:04,012 [screensaver.py:show()] - Showing Screensaver
2025-09-03 18:47:35,420 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-03 18:47:35,421 [printer.py:change_state()] - Adding callback for state: printing
2025-09-03 18:47:35,424 [screensaver.py:close()] - Closing Screensaver
2025-09-03 18:47:35,428 [screen.py:wake_screen()] - Screen wake up
2025-09-03 18:47:35,554 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 18:47:35,554 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 18:47:35,555 [screen.py:_menu_go_back()] - #### Menu go home
2025-09-03 18:47:35,558 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-03 18:47:35,621 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-03 18:47:35,744 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-03 18:47:35,758 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-03 18:47:35,774 [job_status.py:update_filename()] - Updating filename to retraction_tower_0.2mm_PLA_Generic Klipper Printer_12m51s.gcode
2025-09-03 18:47:35,775 [job_status.py:_update_file_metadata()] - Update Metadata. File: retraction_tower_0.2mm_PLA_Generic Klipper Printer_12m51s.gcode Size: 911189
2025-09-03 18:47:35,808 [screen.py:attach_panel()] - Current panel hierarchy: job_status > job_status
2025-09-03 18:48:36,002 [screensaver.py:show()] - Showing Screensaver
2025-09-03 19:03:37,151 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-09-03 19:03:37,152 [printer.py:change_state()] - Adding callback for state: ready
2025-09-03 19:03:37,164 [screensaver.py:close()] - Closing Screensaver
2025-09-03 19:03:37,170 [screen.py:wake_screen()] - Screen wake up
2025-09-03 19:03:37,237 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'complete'
2025-09-03 19:03:37,342 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 19:03:37,342 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 19:04:12,526 [job_status.py:set_state()] - Changing job_status state from 'complete' to 'standby'
2025-09-03 19:04:38,002 [screensaver.py:show()] - Showing Screensaver
2025-09-03 19:11:49,282 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-03 19:11:49,282 [printer.py:change_state()] - Adding callback for state: printing
2025-09-03 19:11:49,298 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-03 19:11:49,321 [job_status.py:update_filename()] - Updating filename to Handle-guided_0.2mm_PLA_Generic Klipper Printer_56m39s.gcode
2025-09-03 19:11:49,322 [job_status.py:_update_file_metadata()] - Update Metadata. File: Handle-guided_0.2mm_PLA_Generic Klipper Printer_56m39s.gcode Size: 2836238
2025-09-03 19:11:49,345 [screensaver.py:close()] - Closing Screensaver
2025-09-03 19:11:49,358 [screen.py:wake_screen()] - Screen wake up
2025-09-03 19:11:49,517 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 19:11:49,522 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 19:11:49,523 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 19:12:50,002 [screensaver.py:show()] - Showing Screensaver
2025-09-03 19:17:01,667 [screensaver.py:close()] - Closing Screensaver
2025-09-03 19:17:01,673 [screen.py:wake_screen()] - Screen wake up
2025-09-03 19:17:04,247 [KlippyWebsocket.py:print_pause()] - Sending printer.print.pause
2025-09-03 19:17:04,707 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2025-09-03 19:17:04,708 [printer.py:change_state()] - Adding callback for state: paused
2025-09-03 19:17:04,716 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'paused'
2025-09-03 19:17:05,012 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 19:17:05,013 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 19:17:05,013 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 19:17:05,017 [screen.py:show_panel()] - Reinitializing panel extrude
2025-09-03 19:17:05,076 [screen.py:attach_panel()] - Current panel hierarchy: job_status > job_status > extrude
2025-09-03 19:17:27,488 [screen.py:_menu_go_back()] - #### Menu go back
2025-09-03 19:17:27,512 [screen.py:attach_panel()] - Current panel hierarchy: job_status > job_status
2025-09-03 19:17:28,476 [KlippyWebsocket.py:print_resume()] - Sending printer.print.resume
2025-09-03 19:17:30,788 [printer.py:change_state()] - Changing state from 'paused' to 'printing'
2025-09-03 19:17:30,789 [printer.py:change_state()] - Adding callback for state: printing
2025-09-03 19:17:30,798 [job_status.py:set_state()] - Changing job_status state from 'paused' to 'printing'
2025-09-03 19:17:31,119 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 19:17:31,120 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 19:17:31,120 [screen.py:show_panel()] - Panel is already is in view
2025-09-03 19:18:32,002 [screensaver.py:show()] - Showing Screensaver
2025-09-03 20:16:21,950 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-09-03 20:16:21,950 [printer.py:change_state()] - Adding callback for state: ready
2025-09-03 20:16:21,965 [screensaver.py:close()] - Closing Screensaver
2025-09-03 20:16:21,967 [screen.py:wake_screen()] - Screen wake up
2025-09-03 20:16:22,020 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'complete'
2025-09-03 20:16:22,116 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-03 20:16:22,117 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-03 20:17:23,002 [screensaver.py:show()] - Showing Screensaver
2025-09-04 05:57:48,259 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-09-04 05:57:48,260 [functions.py:log_start()] - KlipperScreen Version: v0.4.6-11-g6b6f63b6
2025-09-04 05:57:48,260 [functions.py:log_start()] - Python version: 3.9
2025-09-04 05:57:48,459 [config.py:get_config_file_location()] - Passed config (-c): .
2025-09-04 05:57:48,460 [config.py:__init__()] - Config path location: /home/sonic/printer_data/config/KlipperScreen.conf
2025-09-04 05:57:48,464 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/main_menu.conf']
2025-09-04 05:57:48,483 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/splash_menu.conf']
2025-09-04 05:57:48,489 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/print_menu.conf']
2025-09-04 05:57:48,499 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/move_menu.conf']
2025-09-04 05:57:48,512 [config.py:log_config()] - ===== Config File =====

=======================
2025-09-04 05:57:48,515 [config.py:__init__()] - ====== Saved Def ======

[main]
screen_blanking = 60
screen_blanking_printing = 60
24htime = False
font_size = small
show_heater_power = True

[graph Printer]
heater_bed = False

=======================
2025-09-04 05:57:48,516 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_path": "",
      "moonraker_ssl": null,
      "moonraker_api_key": ""
    }
  }
]
2025-09-04 05:57:48,706 [config.py:create_translations()] - Selected lang: system_lang OS lang: en_US
2025-09-04 05:57:48,707 [config.py:install_language()] - Using lang en
2025-09-04 05:57:48,726 [screen.py:__init__()] - Display for xset: :0
2025-09-04 05:57:48,728 [screen.py:__init__()] - Screen 0: 1024x600
2025-09-04 05:57:48,728 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-09-04 05:57:48,729 [screen.py:__init__()] - Wayland: False Display name: :0
2025-09-04 05:57:48,732 [screen.py:__init__()] - Screen resolution: 1024x600
2025-09-04 05:57:49,045 [KlippyGtk.py:__init__()] - Font size: 20.2 (small)
2025-09-04 05:57:49,254 [base_panel.py:battery_percentage()] - Battery information not available.
2025-09-04 05:57:49,501 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 05:57:49,503 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 05:57:49,503 [screen.py:initial_connection()] - Default printer: None
2025-09-04 05:57:49,574 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-09-04 05:57:49,575 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-04 05:57:49,629 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-09-04 05:57:49,701 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-04 05:57:49,730 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-04 05:57:49,731 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-04 05:57:53,856 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-04 05:57:53,857 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-04 05:57:57,861 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-09-04 05:57:57,861 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-09-04 05:57:57,871 [_logging.py:info()] - Websocket connected
2025-09-04 05:57:57,871 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-09-04 05:57:57,872 [screen.py:websocket_connected()] - ### websocket_connected
2025-09-04 05:57:57,953 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-09-04 05:57:57,973 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-09-04 05:57:57,987 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-04 05:57:58,034 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-04 05:57:58,035 [printer.py:log_counts()] - # Extruders: 1
2025-09-04 05:57:58,035 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-04 05:57:58,035 [printer.py:log_counts()] - # Fans: 3
2025-09-04 05:57:58,035 [printer.py:log_counts()] - # Output pins: 0
2025-09-04 05:57:58,035 [printer.py:log_counts()] - # PWM tools: 0
2025-09-04 05:57:58,036 [printer.py:log_counts()] - # Leds: 1
2025-09-04 05:57:58,296 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-04 05:57:58,297 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-04 05:57:58,298 [screen.py:init_klipper()] - Printer initialized
2025-09-04 05:57:58,299 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-04 05:57:58,299 [printer.py:change_state()] - Adding callback for state: ready
2025-09-04 05:57:58,360 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 05:57:58,360 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 05:57:58,361 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-04 05:57:58,364 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-04 05:57:58,423 [screen.py:_load_panel()] - Loading panel: main_menu
2025-09-04 05:57:58,647 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-04 05:57:58,659 [main_menu.py:add_device()] - Adding device: extruder
2025-09-04 05:57:58,669 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-04 05:57:58,703 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-04 05:57:58,714 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-04 05:57:58,747 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-04 05:57:58,768 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-04 14:41:21,081 [base_panel.py:battery_percentage()] - Battery information not available.
2025-09-04 14:41:30,083 [screensaver.py:show()] - Showing Screensaver
2025-09-04 14:52:28,827 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-04 14:52:28,828 [printer.py:change_state()] - Adding callback for state: printing
2025-09-04 14:52:28,830 [screensaver.py:close()] - Closing Screensaver
2025-09-04 14:52:28,839 [screen.py:wake_screen()] - Screen wake up
2025-09-04 14:52:28,966 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 14:52:28,966 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 14:52:28,967 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-04 14:52:29,038 [screen.py:_load_panel()] - Loading panel: job_status
2025-09-04 14:52:29,214 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-04 14:52:29,229 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-04 14:52:29,267 [job_status.py:update_filename()] - Updating filename to 3DBenchy_0.2mm_PLA_Generic Klipper Printer_52m58s.gcode
2025-09-04 14:52:29,268 [job_status.py:_update_file_metadata()] - Update Metadata. File: 3DBenchy_0.2mm_PLA_Generic Klipper Printer_52m58s.gcode Size: 4455217
2025-09-04 14:53:29,083 [screensaver.py:show()] - Showing Screensaver
2025-09-04 14:57:10,734 [screensaver.py:close()] - Closing Screensaver
2025-09-04 14:57:10,739 [screen.py:wake_screen()] - Screen wake up
2025-09-04 14:58:11,085 [screensaver.py:show()] - Showing Screensaver
2025-09-04 15:13:21,560 [screensaver.py:close()] - Closing Screensaver
2025-09-04 15:13:21,565 [screen.py:wake_screen()] - Screen wake up
2025-09-04 15:13:23,699 [KlippyGtk.py:Dialog()] - Showing dialog 3DBenchy_0.2mm_PLA_Generic Klipper Printer_52m58s.gcode (width=1024, height=600)
2025-09-04 15:13:24,531 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-09-04 15:13:25,422 [KlippyGtk.py:Dialog()] - Showing dialog Cancel (width=1024, height=600)
2025-09-04 15:13:26,395 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-09-04 15:13:26,395 [job_status.py:cancel_confirm()] - Canceling print
2025-09-04 15:13:26,400 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'cancelling'
2025-09-04 15:13:26,401 [KlippyGtk.py:remove_dialog()] - Cannot remove dialog <Gtk.Dialog object at 0xe4511b28 (GtkDialog at 0x1ee41b8)>
2025-09-04 15:13:26,405 [KlippyWebsocket.py:print_cancel()] - Sending printer.print.cancel
2025-09-04 15:13:45,412 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-09-04 15:13:45,413 [printer.py:change_state()] - Adding callback for state: ready
2025-09-04 15:13:45,426 [job_status.py:set_state()] - Changing job_status state from 'cancelling' to 'cancelled'
2025-09-04 15:13:45,517 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 15:13:45,518 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 15:14:46,083 [screensaver.py:show()] - Showing Screensaver
2025-09-04 15:15:09,181 [screensaver.py:close()] - Closing Screensaver
2025-09-04 15:15:09,187 [screen.py:wake_screen()] - Screen wake up
2025-09-04 15:15:09,233 [job_status.py:set_state()] - Changing job_status state from 'cancelled' to 'standby'
2025-09-04 15:15:30,427 [job_status.py:close_panel()] - Closing job_status panel
2025-09-04 15:15:30,427 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-04 15:15:30,431 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-04 15:15:30,500 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-04 15:15:30,606 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-04 15:15:30,617 [main_menu.py:add_device()] - Adding device: extruder
2025-09-04 15:15:30,622 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-04 15:15:30,653 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-04 15:15:30,666 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-04 15:16:23,673 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-04 15:16:23,673 [printer.py:change_state()] - Adding callback for state: printing
2025-09-04 15:16:23,755 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 15:16:23,757 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 15:16:23,758 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-04 15:16:23,825 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-04 15:16:23,906 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-04 15:16:23,919 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-04 15:16:23,936 [job_status.py:update_filename()] - Updating filename to Ironing Test Complete_0.2mm_PLA_Generic Klipper Printer_1h9m.gcode
2025-09-04 15:16:23,939 [job_status.py:_update_file_metadata()] - Update Metadata. File: Ironing Test Complete_0.2mm_PLA_Generic Klipper Printer_1h9m.gcode Size: 1325872
2025-09-04 15:17:24,083 [screensaver.py:show()] - Showing Screensaver
2025-09-04 16:29:08,451 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-09-04 16:29:08,451 [printer.py:change_state()] - Adding callback for state: ready
2025-09-04 16:29:08,480 [screensaver.py:close()] - Closing Screensaver
2025-09-04 16:29:08,488 [screen.py:wake_screen()] - Screen wake up
2025-09-04 16:29:08,546 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'complete'
2025-09-04 16:29:08,638 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 16:29:08,639 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 16:30:09,083 [screensaver.py:show()] - Showing Screensaver
2025-09-04 17:23:51,123 [job_status.py:set_state()] - Changing job_status state from 'complete' to 'standby'
2025-09-04 17:25:53,075 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-04 17:25:53,075 [printer.py:change_state()] - Adding callback for state: printing
2025-09-04 17:25:53,085 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-04 17:25:53,099 [job_status.py:update_filename()] - Updating filename to Ironing100_0.2mm_PLA_Generic Klipper Printer_1h41m.gcode
2025-09-04 17:25:53,105 [job_status.py:_update_file_metadata()] - Update Metadata. File: Ironing100_0.2mm_PLA_Generic Klipper Printer_1h41m.gcode Size: 3936329
2025-09-04 17:25:53,138 [screensaver.py:close()] - Closing Screensaver
2025-09-04 17:25:53,148 [screen.py:wake_screen()] - Screen wake up
2025-09-04 17:25:53,278 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 17:25:53,278 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 17:25:53,279 [screen.py:show_panel()] - Panel is already is in view
2025-09-04 17:26:54,083 [screensaver.py:show()] - Showing Screensaver
2025-09-04 19:03:17,603 [screensaver.py:close()] - Closing Screensaver
2025-09-04 19:03:17,608 [screen.py:wake_screen()] - Screen wake up
2025-09-04 19:03:19,055 [KlippyGtk.py:Dialog()] - Showing dialog Cancel (width=1024, height=600)
2025-09-04 19:03:20,293 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-09-04 19:03:20,293 [job_status.py:cancel_confirm()] - Canceling print
2025-09-04 19:03:20,299 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'cancelling'
2025-09-04 19:03:20,304 [KlippyWebsocket.py:print_cancel()] - Sending printer.print.cancel
2025-09-04 19:03:39,599 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-09-04 19:03:39,599 [printer.py:change_state()] - Adding callback for state: ready
2025-09-04 19:03:39,613 [job_status.py:set_state()] - Changing job_status state from 'cancelling' to 'cancelled'
2025-09-04 19:03:39,705 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 19:03:39,706 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 19:04:40,083 [screensaver.py:show()] - Showing Screensaver
2025-09-04 19:06:35,467 [screensaver.py:close()] - Closing Screensaver
2025-09-04 19:06:35,471 [screen.py:wake_screen()] - Screen wake up
2025-09-04 19:06:35,523 [job_status.py:set_state()] - Changing job_status state from 'cancelled' to 'standby'
2025-09-04 19:07:07,455 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-04 19:07:07,456 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-04 19:07:07,516 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 19:07:07,517 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 19:07:07,517 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-04 19:07:07,518 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-04 19:07:07,583 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-04 19:07:07,610 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-04 19:07:12,037 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 10, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-04 19:07:12,255 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-04 19:07:12,255 [printer.py:log_counts()] - # Extruders: 1
2025-09-04 19:07:12,256 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-04 19:07:12,256 [printer.py:log_counts()] - # Fans: 3
2025-09-04 19:07:12,256 [printer.py:log_counts()] - # Output pins: 0
2025-09-04 19:07:12,256 [printer.py:log_counts()] - # PWM tools: 0
2025-09-04 19:07:12,256 [printer.py:log_counts()] - # Leds: 1
2025-09-04 19:07:12,525 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-04 19:07:12,526 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-04 19:07:12,526 [screen.py:init_klipper()] - Printer initialized
2025-09-04 19:07:12,527 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-04 19:07:12,527 [printer.py:change_state()] - Adding callback for state: ready
2025-09-04 19:07:12,543 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 10, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-04 19:07:12,767 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-04 19:07:12,768 [printer.py:log_counts()] - # Extruders: 1
2025-09-04 19:07:12,768 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-04 19:07:12,768 [printer.py:log_counts()] - # Fans: 3
2025-09-04 19:07:12,768 [printer.py:log_counts()] - # Output pins: 0
2025-09-04 19:07:12,768 [printer.py:log_counts()] - # PWM tools: 0
2025-09-04 19:07:12,769 [printer.py:log_counts()] - # Leds: 1
2025-09-04 19:07:13,018 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-04 19:07:13,019 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-04 19:07:13,020 [screen.py:init_klipper()] - Printer initialized
2025-09-04 19:07:13,084 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 19:07:13,085 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 19:07:13,085 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-04 19:07:13,088 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-04 19:07:13,151 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-04 19:07:13,253 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-04 19:07:13,267 [main_menu.py:add_device()] - Adding device: extruder
2025-09-04 19:07:13,272 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-04 19:07:13,300 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-04 19:07:13,311 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-04 19:07:13,347 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-04 19:07:13,366 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-04 19:08:11,921 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-04 19:08:11,922 [printer.py:change_state()] - Adding callback for state: printing
2025-09-04 19:08:11,995 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 19:08:11,996 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 19:08:11,996 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-04 19:08:12,055 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-04 19:08:12,133 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-04 19:08:12,144 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-04 19:08:12,157 [job_status.py:update_filename()] - Updating filename to tower_with_seam_0.2mm_PLA_Generic Klipper Printer_16m18s.gcode
2025-09-04 19:08:12,158 [job_status.py:_update_file_metadata()] - Update Metadata. File: tower_with_seam_0.2mm_PLA_Generic Klipper Printer_16m18s.gcode Size: 322483
2025-09-04 19:09:12,084 [screensaver.py:show()] - Showing Screensaver
2025-09-04 19:16:24,399 [screensaver.py:close()] - Closing Screensaver
2025-09-04 19:16:24,405 [screen.py:wake_screen()] - Screen wake up
2025-09-04 19:16:27,070 [KlippyGtk.py:Dialog()] - Showing dialog Cancel (width=1024, height=600)
2025-09-04 19:16:28,603 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-09-04 19:16:28,603 [job_status.py:cancel_confirm()] - Canceling print
2025-09-04 19:16:28,607 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'cancelling'
2025-09-04 19:16:28,614 [KlippyWebsocket.py:print_cancel()] - Sending printer.print.cancel
2025-09-04 19:16:47,232 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-09-04 19:16:47,232 [printer.py:change_state()] - Adding callback for state: ready
2025-09-04 19:16:47,239 [job_status.py:set_state()] - Changing job_status state from 'cancelling' to 'cancelled'
2025-09-04 19:16:47,334 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 19:16:47,335 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 19:17:04,735 [job_status.py:close_panel()] - Closing job_status panel
2025-09-04 19:17:04,735 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-04 19:17:04,738 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-04 19:17:04,801 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-04 19:17:04,897 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-04 19:17:04,908 [main_menu.py:add_device()] - Adding device: extruder
2025-09-04 19:17:04,913 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-04 19:17:04,942 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-04 19:17:04,952 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-04 19:18:05,084 [screensaver.py:show()] - Showing Screensaver
2025-09-04 19:19:34,728 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-04 19:19:34,728 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-04 19:19:34,732 [screensaver.py:close()] - Closing Screensaver
2025-09-04 19:19:34,734 [screen.py:wake_screen()] - Screen wake up
2025-09-04 19:19:34,853 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 19:19:34,853 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 19:19:34,854 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-04 19:19:34,854 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-04 19:19:34,922 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-04 19:19:34,958 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-04 19:19:39,003 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-04 19:19:39,221 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-04 19:19:39,221 [printer.py:log_counts()] - # Extruders: 1
2025-09-04 19:19:39,221 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-04 19:19:39,221 [printer.py:log_counts()] - # Fans: 3
2025-09-04 19:19:39,221 [printer.py:log_counts()] - # Output pins: 0
2025-09-04 19:19:39,221 [printer.py:log_counts()] - # PWM tools: 0
2025-09-04 19:19:39,222 [printer.py:log_counts()] - # Leds: 1
2025-09-04 19:19:39,477 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-04 19:19:39,478 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-04 19:19:39,479 [screen.py:init_klipper()] - Printer initialized
2025-09-04 19:19:39,479 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-04 19:19:39,480 [printer.py:change_state()] - Adding callback for state: ready
2025-09-04 19:19:39,498 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-04 19:19:39,726 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-04 19:19:39,727 [printer.py:log_counts()] - # Extruders: 1
2025-09-04 19:19:39,727 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-04 19:19:39,727 [printer.py:log_counts()] - # Fans: 3
2025-09-04 19:19:39,727 [printer.py:log_counts()] - # Output pins: 0
2025-09-04 19:19:39,727 [printer.py:log_counts()] - # PWM tools: 0
2025-09-04 19:19:39,728 [printer.py:log_counts()] - # Leds: 1
2025-09-04 19:19:39,984 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-04 19:19:39,985 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-04 19:19:39,986 [screen.py:init_klipper()] - Printer initialized
2025-09-04 19:19:40,048 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 19:19:40,049 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 19:19:40,049 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-04 19:19:40,052 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-04 19:19:40,123 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-04 19:19:40,222 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-04 19:19:40,236 [main_menu.py:add_device()] - Adding device: extruder
2025-09-04 19:19:40,244 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-04 19:19:40,275 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-04 19:19:40,292 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-04 19:19:40,329 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-04 19:19:40,350 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-04 19:20:22,368 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-04 19:20:22,368 [printer.py:change_state()] - Adding callback for state: printing
2025-09-04 19:20:22,445 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 19:20:22,446 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 19:20:22,446 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-04 19:20:22,506 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-04 19:20:22,577 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-04 19:20:22,587 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-04 19:20:22,602 [job_status.py:update_filename()] - Updating filename to Pocket Container Lid_0.2mm_PLA_Generic Klipper Printer_23m59s.gcode
2025-09-04 19:20:22,603 [job_status.py:_update_file_metadata()] - Update Metadata. File: Pocket Container Lid_0.2mm_PLA_Generic Klipper Printer_23m59s.gcode Size: 817029
2025-09-04 19:21:23,083 [screensaver.py:show()] - Showing Screensaver
2025-09-04 19:48:10,446 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-09-04 19:48:10,448 [printer.py:change_state()] - Adding callback for state: ready
2025-09-04 19:48:10,464 [screensaver.py:close()] - Closing Screensaver
2025-09-04 19:48:10,469 [screen.py:wake_screen()] - Screen wake up
2025-09-04 19:48:10,523 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'complete'
2025-09-04 19:48:10,616 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 19:48:10,617 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 19:49:11,083 [screensaver.py:show()] - Showing Screensaver
2025-09-04 19:50:39,909 [job_status.py:set_state()] - Changing job_status state from 'complete' to 'standby'
2025-09-04 19:52:01,649 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-04 19:52:01,649 [printer.py:change_state()] - Adding callback for state: printing
2025-09-04 19:52:01,664 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-04 19:52:01,671 [job_status.py:update_filename()] - Updating filename to Handle_0.2mm_PLA_Generic Klipper Printer_1h8m.gcode
2025-09-04 19:52:01,672 [job_status.py:_update_file_metadata()] - Update Metadata. File: Handle_0.2mm_PLA_Generic Klipper Printer_1h8m.gcode Size: 3532711
2025-09-04 19:52:01,716 [screensaver.py:close()] - Closing Screensaver
2025-09-04 19:52:01,726 [screen.py:wake_screen()] - Screen wake up
2025-09-04 19:52:01,908 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 19:52:01,909 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 19:52:01,909 [screen.py:show_panel()] - Panel is already is in view
2025-09-04 19:53:02,083 [screensaver.py:show()] - Showing Screensaver
2025-09-04 19:56:46,990 [screensaver.py:close()] - Closing Screensaver
2025-09-04 19:56:46,995 [screen.py:wake_screen()] - Screen wake up
2025-09-04 19:56:49,711 [KlippyWebsocket.py:print_pause()] - Sending printer.print.pause
2025-09-04 19:56:50,215 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2025-09-04 19:56:50,216 [printer.py:change_state()] - Adding callback for state: paused
2025-09-04 19:56:50,231 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'paused'
2025-09-04 19:56:50,326 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 19:56:50,326 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 19:56:50,326 [screen.py:show_panel()] - Panel is already is in view
2025-09-04 19:56:50,330 [screen.py:_load_panel()] - Loading panel: extrude
2025-09-04 19:56:50,399 [screen.py:attach_panel()] - Current panel hierarchy: job_status > extrude
2025-09-04 19:56:59,380 [screen.py:_menu_go_back()] - #### Menu go back
2025-09-04 19:56:59,405 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-04 19:57:00,217 [KlippyWebsocket.py:print_resume()] - Sending printer.print.resume
2025-09-04 19:57:00,251 [printer.py:change_state()] - Changing state from 'paused' to 'printing'
2025-09-04 19:57:00,252 [printer.py:change_state()] - Adding callback for state: printing
2025-09-04 19:57:00,263 [job_status.py:set_state()] - Changing job_status state from 'paused' to 'printing'
2025-09-04 19:57:00,362 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 19:57:00,363 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 19:57:00,363 [screen.py:show_panel()] - Panel is already is in view
2025-09-04 19:58:01,083 [screensaver.py:show()] - Showing Screensaver
2025-09-04 20:27:33,505 [screensaver.py:close()] - Closing Screensaver
2025-09-04 20:27:33,511 [screen.py:wake_screen()] - Screen wake up
2025-09-04 20:27:34,711 [KlippyGtk.py:Dialog()] - Showing dialog Cancel (width=1024, height=600)
2025-09-04 20:27:35,484 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-09-04 20:27:35,485 [job_status.py:cancel_confirm()] - Canceling print
2025-09-04 20:27:35,489 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'cancelling'
2025-09-04 20:27:35,493 [KlippyWebsocket.py:print_cancel()] - Sending printer.print.cancel
2025-09-04 20:27:57,009 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-09-04 20:27:57,009 [printer.py:change_state()] - Adding callback for state: ready
2025-09-04 20:27:57,024 [job_status.py:set_state()] - Changing job_status state from 'cancelling' to 'cancelled'
2025-09-04 20:27:57,107 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 20:27:57,107 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 20:28:04,110 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-04 20:28:04,111 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-04 20:28:04,175 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 20:28:04,176 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 20:28:04,176 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-04 20:28:04,177 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-04 20:28:04,237 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-04 20:28:04,266 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-04 20:28:08,099 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-04 20:28:08,368 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-04 20:28:08,369 [printer.py:log_counts()] - # Extruders: 1
2025-09-04 20:28:08,369 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-04 20:28:08,369 [printer.py:log_counts()] - # Fans: 3
2025-09-04 20:28:08,369 [printer.py:log_counts()] - # Output pins: 0
2025-09-04 20:28:08,369 [printer.py:log_counts()] - # PWM tools: 0
2025-09-04 20:28:08,369 [printer.py:log_counts()] - # Leds: 1
2025-09-04 20:28:08,622 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-04 20:28:08,624 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-04 20:28:08,624 [screen.py:init_klipper()] - Printer initialized
2025-09-04 20:28:08,625 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-04 20:28:08,625 [printer.py:change_state()] - Adding callback for state: ready
2025-09-04 20:28:08,677 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 20:28:08,678 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 20:28:08,678 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-04 20:28:08,681 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-04 20:28:08,741 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-04 20:28:08,830 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-04 20:28:08,840 [main_menu.py:add_device()] - Adding device: extruder
2025-09-04 20:28:08,845 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-04 20:28:08,875 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-04 20:28:08,885 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-04 20:28:08,919 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-04 20:28:08,939 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-04 20:29:09,083 [screensaver.py:show()] - Showing Screensaver
2025-09-04 20:31:00,894 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-04 20:31:00,895 [printer.py:change_state()] - Adding callback for state: printing
2025-09-04 20:31:00,900 [screensaver.py:close()] - Closing Screensaver
2025-09-04 20:31:00,902 [screen.py:wake_screen()] - Screen wake up
2025-09-04 20:31:01,018 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 20:31:01,019 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 20:31:01,019 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-04 20:31:01,079 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-04 20:31:01,177 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-04 20:31:01,197 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-04 20:31:01,214 [job_status.py:update_filename()] - Updating filename to TESTBED_Z-Disc_0.2mm_PLA_Generic Klipper Printer_6m11s.gcode
2025-09-04 20:31:01,216 [job_status.py:_update_file_metadata()] - Update Metadata. File: TESTBED_Z-Disc_0.2mm_PLA_Generic Klipper Printer_6m11s.gcode Size: 120017
2025-09-04 20:32:01,083 [screensaver.py:show()] - Showing Screensaver
2025-09-04 20:34:26,635 [screensaver.py:close()] - Closing Screensaver
2025-09-04 20:34:26,640 [screen.py:wake_screen()] - Screen wake up
2025-09-04 20:34:28,281 [KlippyWebsocket.py:print_pause()] - Sending printer.print.pause
2025-09-04 20:34:28,473 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2025-09-04 20:34:28,473 [printer.py:change_state()] - Adding callback for state: paused
2025-09-04 20:34:28,485 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'paused'
2025-09-04 20:34:28,579 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 20:34:28,581 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 20:34:28,581 [screen.py:show_panel()] - Panel is already is in view
2025-09-04 20:34:28,586 [screen.py:show_panel()] - Reinitializing panel extrude
2025-09-04 20:34:28,635 [screen.py:attach_panel()] - Current panel hierarchy: job_status > extrude
2025-09-04 20:34:46,108 [screen.py:_menu_go_back()] - #### Menu go back
2025-09-04 20:34:46,134 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-04 20:34:47,309 [KlippyWebsocket.py:print_resume()] - Sending printer.print.resume
2025-09-04 20:34:47,535 [printer.py:change_state()] - Changing state from 'paused' to 'printing'
2025-09-04 20:34:47,535 [printer.py:change_state()] - Adding callback for state: printing
2025-09-04 20:34:47,545 [job_status.py:set_state()] - Changing job_status state from 'paused' to 'printing'
2025-09-04 20:34:47,646 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 20:34:47,646 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 20:34:47,647 [screen.py:show_panel()] - Panel is already is in view
2025-09-04 20:35:48,083 [screensaver.py:show()] - Showing Screensaver
2025-09-04 20:40:46,642 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-09-04 20:40:46,642 [printer.py:change_state()] - Adding callback for state: ready
2025-09-04 20:40:46,654 [screensaver.py:close()] - Closing Screensaver
2025-09-04 20:40:46,659 [screen.py:wake_screen()] - Screen wake up
2025-09-04 20:40:46,716 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'complete'
2025-09-04 20:40:46,811 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 20:40:46,812 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 20:41:47,083 [screensaver.py:show()] - Showing Screensaver
2025-09-04 20:43:08,361 [job_status.py:set_state()] - Changing job_status state from 'complete' to 'standby'
2025-09-04 20:43:45,729 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-04 20:43:45,729 [printer.py:change_state()] - Adding callback for state: printing
2025-09-04 20:43:45,745 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-04 20:43:45,751 [job_status.py:update_filename()] - Updating filename to obj_2_magik skul_0.2mm_PLA_Generic Klipper Printer_1h20m.gcode
2025-09-04 20:43:45,752 [job_status.py:_update_file_metadata()] - Update Metadata. File: obj_2_magik skul_0.2mm_PLA_Generic Klipper Printer_1h20m.gcode Size: 8718514
2025-09-04 20:43:45,775 [screensaver.py:close()] - Closing Screensaver
2025-09-04 20:43:45,784 [screen.py:wake_screen()] - Screen wake up
2025-09-04 20:43:45,922 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 20:43:45,922 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 20:43:45,923 [screen.py:show_panel()] - Panel is already is in view
2025-09-04 20:44:46,084 [screensaver.py:show()] - Showing Screensaver
2025-09-04 20:47:19,290 [screensaver.py:close()] - Closing Screensaver
2025-09-04 20:47:19,295 [screen.py:wake_screen()] - Screen wake up
2025-09-04 20:47:19,958 [KlippyWebsocket.py:print_pause()] - Sending printer.print.pause
2025-09-04 20:47:20,587 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2025-09-04 20:47:20,587 [printer.py:change_state()] - Adding callback for state: paused
2025-09-04 20:47:20,600 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'paused'
2025-09-04 20:47:20,705 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 20:47:20,705 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 20:47:20,705 [screen.py:show_panel()] - Panel is already is in view
2025-09-04 20:47:20,731 [screen.py:attach_panel()] - Current panel hierarchy: job_status > extrude
2025-09-04 20:47:32,832 [screen.py:_menu_go_back()] - #### Menu go back
2025-09-04 20:47:32,863 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-04 20:47:33,615 [KlippyWebsocket.py:print_resume()] - Sending printer.print.resume
2025-09-04 20:47:33,886 [printer.py:change_state()] - Changing state from 'paused' to 'printing'
2025-09-04 20:47:33,886 [printer.py:change_state()] - Adding callback for state: printing
2025-09-04 20:47:33,899 [job_status.py:set_state()] - Changing job_status state from 'paused' to 'printing'
2025-09-04 20:47:34,000 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 20:47:34,000 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 20:47:34,001 [screen.py:show_panel()] - Panel is already is in view
2025-09-04 20:48:34,083 [screensaver.py:show()] - Showing Screensaver
2025-09-04 21:58:03,270 [screensaver.py:close()] - Closing Screensaver
2025-09-04 21:58:03,275 [screen.py:wake_screen()] - Screen wake up
2025-09-04 21:59:04,082 [screensaver.py:show()] - Showing Screensaver
2025-09-04 22:00:54,972 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-09-04 22:00:54,972 [printer.py:change_state()] - Adding callback for state: ready
2025-09-04 22:00:54,987 [screensaver.py:close()] - Closing Screensaver
2025-09-04 22:00:54,995 [screen.py:wake_screen()] - Screen wake up
2025-09-04 22:00:55,054 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'complete'
2025-09-04 22:00:55,155 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 22:00:55,156 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 22:01:56,083 [screensaver.py:show()] - Showing Screensaver
2025-09-04 22:03:42,304 [job_status.py:set_state()] - Changing job_status state from 'complete' to 'standby'
2025-09-04 22:08:29,453 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-04 22:08:29,454 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-04 22:08:29,456 [screensaver.py:close()] - Closing Screensaver
2025-09-04 22:08:29,475 [screen.py:wake_screen()] - Screen wake up
2025-09-04 22:08:29,582 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 22:08:29,582 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 22:08:29,582 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-04 22:08:29,583 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-04 22:08:29,641 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-04 22:08:29,671 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-04 22:08:33,757 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-04 22:08:33,978 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-04 22:08:33,978 [printer.py:log_counts()] - # Extruders: 1
2025-09-04 22:08:33,978 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-04 22:08:33,978 [printer.py:log_counts()] - # Fans: 3
2025-09-04 22:08:33,978 [printer.py:log_counts()] - # Output pins: 0
2025-09-04 22:08:33,979 [printer.py:log_counts()] - # PWM tools: 0
2025-09-04 22:08:33,979 [printer.py:log_counts()] - # Leds: 1
2025-09-04 22:08:34,234 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-04 22:08:34,235 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-04 22:08:34,235 [screen.py:init_klipper()] - Printer initialized
2025-09-04 22:08:34,236 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-04 22:08:34,236 [printer.py:change_state()] - Adding callback for state: ready
2025-09-04 22:08:34,255 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-04 22:08:34,485 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-04 22:08:34,486 [printer.py:log_counts()] - # Extruders: 1
2025-09-04 22:08:34,486 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-04 22:08:34,486 [printer.py:log_counts()] - # Fans: 3
2025-09-04 22:08:34,486 [printer.py:log_counts()] - # Output pins: 0
2025-09-04 22:08:34,486 [printer.py:log_counts()] - # PWM tools: 0
2025-09-04 22:08:34,487 [printer.py:log_counts()] - # Leds: 1
2025-09-04 22:08:34,735 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-04 22:08:34,737 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-04 22:08:34,737 [screen.py:init_klipper()] - Printer initialized
2025-09-04 22:08:34,794 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 22:08:34,794 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 22:08:34,795 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-04 22:08:34,798 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-04 22:08:34,866 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-04 22:08:34,981 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-04 22:08:34,995 [main_menu.py:add_device()] - Adding device: extruder
2025-09-04 22:08:35,001 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-04 22:08:35,034 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-04 22:08:35,047 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-04 22:08:35,083 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-04 22:08:35,104 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-04 22:09:16,345 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-04 22:09:16,345 [printer.py:change_state()] - Adding callback for state: printing
2025-09-04 22:09:16,430 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 22:09:16,430 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 22:09:16,430 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-04 22:09:16,504 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-04 22:09:16,603 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-04 22:09:16,616 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-04 22:09:16,637 [job_status.py:update_filename()] - Updating filename to 53mm-joint-cone1_0.2mm_PLA_Generic Klipper Printer_1h10m.gcode
2025-09-04 22:09:16,638 [job_status.py:_update_file_metadata()] - Update Metadata. File: 53mm-joint-cone1_0.2mm_PLA_Generic Klipper Printer_1h10m.gcode Size: 6695135
2025-09-04 22:10:17,083 [screensaver.py:show()] - Showing Screensaver
2025-09-04 22:12:00,720 [screensaver.py:close()] - Closing Screensaver
2025-09-04 22:12:00,729 [screen.py:wake_screen()] - Screen wake up
2025-09-04 22:12:00,779 [screen.py:show_popup_message()] - error: Probe samples exceed samples_tolerance
2025-09-04 22:12:00,837 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-09-04 22:12:00,838 [printer.py:change_state()] - Adding callback for state: ready
2025-09-04 22:12:00,887 [screen.py:show_popup_message()] - error: Probe samples exceed samples_tolerance
2025-09-04 22:12:00,893 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'error'
2025-09-04 22:12:01,002 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 22:12:01,003 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 22:12:10,099 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-04 22:12:10,100 [printer.py:change_state()] - Adding callback for state: printing
2025-09-04 22:12:10,115 [job_status.py:set_state()] - Changing job_status state from 'error' to 'printing'
2025-09-04 22:12:10,244 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 22:12:10,244 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 22:12:10,244 [screen.py:show_panel()] - Panel is already is in view
2025-09-04 22:12:31,153 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2025-09-04 22:12:31,153 [printer.py:change_state()] - Adding callback for state: paused
2025-09-04 22:12:31,168 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'paused'
2025-09-04 22:12:31,283 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 22:12:31,283 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 22:12:31,283 [screen.py:show_panel()] - Panel is already is in view
2025-09-04 22:12:31,287 [screen.py:show_panel()] - Reinitializing panel extrude
2025-09-04 22:12:31,344 [screen.py:attach_panel()] - Current panel hierarchy: job_status > extrude
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       2025-09-04 21:55:50,508 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-09-04 21:55:50,509 [functions.py:log_start()] - KlipperScreen Version: v0.4.6-11-g6b6f63b6
2025-09-04 21:55:50,510 [functions.py:log_start()] - Python version: 3.9
2025-09-04 21:55:50,701 [config.py:get_config_file_location()] - Passed config (-c): .
2025-09-04 21:55:50,701 [config.py:__init__()] - Config path location: /home/sonic/printer_data/config/KlipperScreen.conf
2025-09-04 21:55:50,705 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/main_menu.conf']
2025-09-04 21:55:50,719 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/splash_menu.conf']
2025-09-04 21:55:50,725 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/print_menu.conf']
2025-09-04 21:55:50,734 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/move_menu.conf']
2025-09-04 21:55:50,747 [config.py:log_config()] - ===== Config File =====

=======================
2025-09-04 21:55:50,750 [config.py:__init__()] - ====== Saved Def ======

[main]
screen_blanking = 60
screen_blanking_printing = 60
24htime = False
font_size = small
show_heater_power = True

[graph Printer]
heater_bed = False

=======================
2025-09-04 21:55:50,751 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_path": "",
      "moonraker_ssl": null,
      "moonraker_api_key": ""
    }
  }
]
2025-09-04 21:55:50,945 [config.py:create_translations()] - Selected lang: system_lang OS lang: en_US
2025-09-04 21:55:50,946 [config.py:install_language()] - Using lang en
2025-09-04 21:55:50,964 [screen.py:__init__()] - Display for xset: :0
2025-09-04 21:55:50,967 [screen.py:__init__()] - Screen 0: 1024x600
2025-09-04 21:55:50,967 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-09-04 21:55:50,968 [screen.py:__init__()] - Wayland: False Display name: :0
2025-09-04 21:55:50,970 [screen.py:__init__()] - Screen resolution: 1024x600
2025-09-04 21:55:51,285 [KlippyGtk.py:__init__()] - Font size: 20.2 (small)
2025-09-04 21:55:51,495 [base_panel.py:battery_percentage()] - Battery information not available.
2025-09-04 21:55:52,125 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 21:55:52,127 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 21:55:52,128 [screen.py:initial_connection()] - Default printer: None
2025-09-04 21:55:52,267 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-09-04 21:55:52,268 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-04 21:55:52,364 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-09-04 21:55:52,485 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-04 21:55:52,525 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-04 21:55:52,525 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-04 21:55:57,172 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-09-04 21:55:57,173 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-09-04 21:55:57,185 [_logging.py:info()] - Websocket connected
2025-09-04 21:55:57,186 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-09-04 21:55:57,188 [screen.py:websocket_connected()] - ### websocket_connected
2025-09-04 21:55:57,305 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-09-04 21:55:57,323 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-09-04 21:55:57,349 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-04 21:55:57,605 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-04 21:55:57,606 [printer.py:log_counts()] - # Extruders: 1
2025-09-04 21:55:57,606 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-04 21:55:57,606 [printer.py:log_counts()] - # Fans: 3
2025-09-04 21:55:57,607 [printer.py:log_counts()] - # Output pins: 0
2025-09-04 21:55:57,607 [printer.py:log_counts()] - # PWM tools: 0
2025-09-04 21:55:57,607 [printer.py:log_counts()] - # Leds: 1
2025-09-04 21:55:57,861 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-04 21:55:57,863 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-04 21:55:57,863 [screen.py:init_klipper()] - Printer initialized
2025-09-04 21:55:57,864 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-04 21:55:57,864 [printer.py:change_state()] - Adding callback for state: ready
2025-09-04 21:55:57,921 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-04 21:55:57,922 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-04 21:55:57,923 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-04 21:55:57,929 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-04 21:55:57,987 [screen.py:_load_panel()] - Loading panel: main_menu
2025-09-04 21:55:58,213 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-04 21:55:58,225 [main_menu.py:add_device()] - Adding device: extruder
2025-09-04 21:55:58,234 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-04 21:55:58,268 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-04 21:55:58,279 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-04 21:55:58,312 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-04 21:55:58,331 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-05 21:48:56,119 [base_panel.py:battery_percentage()] - Battery information not available.
2025-09-05 21:49:02,122 [screensaver.py:show()] - Showing Screensaver
2025-09-05 21:49:29,496 [screensaver.py:close()] - Closing Screensaver
2025-09-05 21:49:29,498 [screen.py:wake_screen()] - Screen wake up
2025-09-05 21:49:31,150 [main_menu.py:toggle_visibility()] - Graph show True: heater_bed
2025-09-05 21:49:31,909 [screen.py:_load_panel()] - Loading panel: move
2025-09-05 21:49:32,007 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-09-05 21:49:33,011 [screen.py:_load_panel()] - Loading panel: menu
2025-09-05 21:49:33,134 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move > menu
2025-09-05 21:49:33,151 [menu.py:arrangeMenuItems()] - X > homing quad_gantry_level
2025-09-05 21:49:33,155 [menu.py:arrangeMenuItems()] - X > homing Z-Tilt
2025-09-05 21:49:33,914 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G28'}
2025-09-05 21:50:05,434 [screen.py:_menu_go_back()] - #### Menu go home
2025-09-05 21:50:05,456 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-05 21:50:08,252 [screen.py:_go_to_submenu()] - #### Go to submenu more
2025-09-05 21:50:08,252 [screen.py:_go_to_submenu()] - #### Menu __main
2025-09-05 21:50:08,261 [screen.py:_load_panel()] - Loading panel: menu
2025-09-05 21:50:08,323 [menu.py:evaluate_enable()] - moonraker connected True
2025-09-05 21:50:08,555 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2025-09-05 21:50:08,593 [menu.py:arrangeMenuItems()] - X > more pins
2025-09-05 21:50:08,599 [menu.py:arrangeMenuItems()] - X > more power
2025-09-05 21:50:08,630 [menu.py:arrangeMenuItems()] - X > more spoolman
2025-09-05 21:50:08,630 [menu.py:evaluate_enable()] - moonraker connected True
2025-09-05 21:50:08,656 [screen.py:_go_to_submenu()] - menu, {{ gettext('More') }}, panel_name=more, items=[{'more bedlevel': {'name': "{{ gettext('Bed Level') }}", 'icon': 'bed-level', 'panel': 'bed_level', 'method': None, 'confirm': None, 'enable': "{{ 'bed_screws' in printer.config_sections or 'screws_tilt_adjust' in printer.config_sections }}", 'params': '{}', 'style': None}}, {'more bedmesh': {'name': "{{ gettext('Bed Mesh') }}", 'icon': 'bed-mesh', 'panel': 'bed_mesh', 'method': None, 'confirm': None, 'enable': "{{ 'bed_mesh' in printer.config_sections }}", 'params': '{}', 'style': None}}, {'more zoffset': {'name': "{{ gettext('Z Calibrate') }}", 'icon': 'z-farther', 'panel': 'zcalibrate', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more limits': {'name': "{{ gettext('Limits') }}", 'icon': 'fine-tune', 'panel': 'limits', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more fan': {'name': "{{ gettext('Fan') }}", 'icon': 'fan', 'panel': 'fan', 'method': None, 'confirm': None, 'enable': '{{ printer.fans.count > 0 }}', 'params': '{}', 'style': None}}, {'more led': {'name': "{{ gettext('Leds') }}", 'icon': 'light', 'panel': 'led', 'method': None, 'confirm': None, 'enable': '{{ printer.leds.count > 0 }}', 'params': '{}', 'style': None}}, {'more macros': {'name': "{{ gettext('Macros') }}", 'icon': 'custom-script', 'panel': 'gcode_macros', 'method': None, 'confirm': None, 'enable': '{{ printer.gcode_macros.count > 0 }}', 'params': '{}', 'style': None}}, {'more pins': {'name': "{{ gettext('Pins') }}", 'icon': 'hashtag', 'panel': 'pins', 'method': None, 'confirm': None, 'enable': '{{ printer.output_pins.count > 0 or printer.pwm_tools.count > 0 }}', 'params': '{}', 'style': None}}, {'more power': {'name': "{{ gettext('Power') }}", 'icon': 'shutdown', 'panel': 'power', 'method': None, 'confirm': None, 'enable': '{{ moonraker.power_devices.count > 0 }}', 'params': '{}', 'style': None}}, {'more camera': {'name': "{{ gettext('Camera') }}", 'icon': 'camera', 'panel': 'camera', 'method': None, 'confirm': None, 'enable': '{{ moonraker.cameras.count > 0 }}', 'params': '{}', 'style': None}}, {'more console': {'name': "{{ gettext('Console') }}", 'icon': 'console', 'panel': 'console', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more updater': {'name': "{{ gettext('Update') }}", 'icon': 'refresh', 'panel': 'updater', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more input_shaper': {'name': "{{ gettext('Input Shaper') }}", 'icon': 'move', 'panel': 'input_shaper', 'method': None, 'confirm': None, 'enable': "{{ 'input_shaper' in printer.config_sections }}", 'params': '{}', 'style': None}}, {'more save': {'name': "{{ gettext('Save Config') }}", 'icon': 'complete', 'panel': None, 'method': 'ks_confirm_save', 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more settings': {'name': 'KlipperScreen', 'icon': 'settings', 'panel': 'settings', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more network': {'name': "{{ gettext('Network') }}", 'icon': 'network', 'panel': 'network', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more notifications': {'name': "{{ gettext('Notifications') }}", 'icon': 'notifications', 'panel': 'notifications', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more spoolman': {'name': 'Spoolman', 'icon': 'spoolman', 'panel': 'spoolman', 'method': None, 'confirm': None, 'enable': '{{ moonraker.spoolman }}', 'params': '{}', 'style': None}}, {'more system': {'name': "{{ gettext('System') }}", 'icon': 'info', 'panel': 'system', 'method': None, 'confirm': None, 'enable': '{{ moonraker_connected }}', 'params': '{}', 'style': None}}, {'more fine_tune': {'name': "{{ gettext('Fine Tuning') }}", 'icon': 'fine-tune', 'panel': 'fine_tune', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}]
2025-09-05 21:50:12,953 [screen.py:_load_panel()] - Loading panel: camera
2025-09-05 21:50:14,823 [camera.py:__init__()] - {'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}
2025-09-05 21:50:14,859 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > camera
2025-09-05 21:50:14,859 [camera.py:play()] - camera URL is relative
2025-09-05 21:50:14,860 [camera.py:play()] - video filters: []
2025-09-05 21:50:14,908 [camera.py:play()] - Camera URL: http://127.0.0.1/webcam/?action=stream
2025-09-05 21:50:14,931 [camera.py:log()] - [warn] ffmpeg: http: HTTP error 502 Bad Gateway
2025-09-05 21:50:14,933 [screen.py:show_popup_message()] - error: Failed to open http://127.0.0.1/webcam/?action=stream.
2025-09-05 21:50:14,941 [camera.py:log()] - [error] stream: Failed to open http://127.0.0.1/webcam/?action=stream.
2025-09-05 21:50:20,844 [camera.py:log()] - [info] cplayer: 
2025-09-05 21:50:20,856 [screen.py:_menu_go_back()] - #### Menu go back
2025-09-05 21:50:20,884 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2025-09-05 21:50:20,921 [menu.py:arrangeMenuItems()] - X > more pins
2025-09-05 21:50:20,926 [menu.py:arrangeMenuItems()] - X > more power
2025-09-05 21:50:20,950 [menu.py:arrangeMenuItems()] - X > more spoolman
2025-09-05 21:50:20,950 [menu.py:evaluate_enable()] - moonraker connected True
2025-09-05 21:50:23,893 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > camera
2025-09-05 21:50:23,893 [camera.py:play()] - camera URL is relative
2025-09-05 21:50:23,893 [camera.py:play()] - video filters: []
2025-09-05 21:50:23,922 [camera.py:play()] - Camera URL: http://127.0.0.1/webcam/?action=stream
2025-09-05 21:50:23,950 [camera.py:log()] - [warn] ffmpeg: http: HTTP error 502 Bad Gateway
2025-09-05 21:50:23,953 [screen.py:show_popup_message()] - error: Failed to open http://127.0.0.1/webcam/?action=stream.
2025-09-05 21:50:23,960 [camera.py:log()] - [error] stream: Failed to open http://127.0.0.1/webcam/?action=stream.
2025-09-05 21:50:29,199 [camera.py:log()] - [info] cplayer: 
2025-09-05 21:50:29,212 [screen.py:_menu_go_back()] - #### Menu go back
2025-09-05 21:50:29,241 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2025-09-05 21:50:29,277 [menu.py:arrangeMenuItems()] - X > more pins
2025-09-05 21:50:29,281 [menu.py:arrangeMenuItems()] - X > more power
2025-09-05 21:50:29,304 [menu.py:arrangeMenuItems()] - X > more spoolman
2025-09-05 21:50:29,304 [menu.py:evaluate_enable()] - moonraker connected True
2025-09-05 21:50:34,936 [screen.py:_load_panel()] - Loading panel: input_shaper
2025-09-05 21:50:34,979 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > input_shaper
2025-09-05 21:50:34,980 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: SET_INPUT_SHAPER
2025-09-05 21:50:34,981 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: ACCELEROMETER_QUERY
2025-09-05 21:50:34,982 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: MEASURE_AXES_NOISE
2025-09-05 21:51:03,087 [screen.py:_menu_go_back()] - #### Menu go back
2025-09-05 21:51:03,115 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2025-09-05 21:51:03,151 [menu.py:arrangeMenuItems()] - X > more pins
2025-09-05 21:51:03,155 [menu.py:arrangeMenuItems()] - X > more power
2025-09-05 21:51:03,177 [menu.py:arrangeMenuItems()] - X > more spoolman
2025-09-05 21:51:03,178 [menu.py:evaluate_enable()] - moonraker connected True
2025-09-05 21:52:07,121 [screensaver.py:show()] - Showing Screensaver
2025-09-05 21:52:08,189 [screensaver.py:close()] - Closing Screensaver
2025-09-05 21:52:08,191 [screen.py:wake_screen()] - Screen wake up
2025-09-05 21:52:08,990 [screen.py:_load_panel()] - Loading panel: updater
2025-09-05 21:52:09,024 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > updater
2025-09-05 21:52:09,058 [updater.py:get_updates()] - {'jsonrpc': '2.0', 'result': {'github_rate_limit': None, 'github_requests_remaining': None, 'github_limit_reset_time': None, 'version_info': {'system': {'name': 'system', 'configured_type': 'system', 'package_count': 0, 'package_list': []}, 'moonraker': {'channel': 'dev', 'debug_enabled': False, 'channel_invalid': False, 'is_valid': True, 'configured_type': 'git_repo', 'info_tags': [], 'detected_type': 'git_repo', 'remote_alias': 'origin', 'branch': 'master', 'owner': 'Arksine', 'repo_name': 'moonraker', 'remote_url': 'https://github.com/Arksine/moonraker.git', 'recovery_url': 'https://github.com/Arksine/moonraker.git', 'version': 'v0.9.3-104', 'remote_version': 'v0.9.3-104', 'rollback_version': 'v0.9.3-102', 'current_hash': '52e315868bd8c75f08d5994e3b959fbb53b100be', 'remote_hash': '52e315868bd8c75f08d5994e3b959fbb53b100be', 'is_dirty': False, 'detached': False, 'commits_behind': [], 'commits_behind_count': 0, 'git_messages': [], 'full_version_string': 'v0.9.3-104-g52e31586', 'pristine': True, 'corrupt': False, 'warnings': [], 'anomalies': [], 'name': 'moonraker'}, 'klipper': {'channel': 'dev', 'debug_enabled': False, 'channel_invalid': False, 'is_valid': True, 'configured_type': 'git_repo', 'info_tags': [], 'detected_type': 'git_repo', 'remote_alias': 'origin', 'branch': 'master', 'owner': 'Klipper3d', 'repo_name': 'klipper', 'remote_url': 'https://github.com/Klipper3d/klipper.git', 'recovery_url': 'https://github.com/Klipper3d/klipper.git', 'version': 'v0.13.0-233', 'remote_version': 'v0.13.0-233', 'rollback_version': 'v0.13.0-229', 'current_hash': '20d9c84a9f78f418da3b098147002a8edff02dda', 'remote_hash': '20d9c84a9f78f418da3b098147002a8edff02dda', 'is_dirty': False, 'detached': False, 'commits_behind': [], 'commits_behind_count': 0, 'git_messages': [], 'full_version_string': 'v0.13.0-233-g20d9c84a', 'pristine': True, 'corrupt': False, 'warnings': [], 'anomalies': [], 'name': 'klipper'}, 'KlipperScreen': {'channel': 'dev', 'debug_enabled': False, 'channel_invalid': False, 'is_valid': True, 'configured_type': 'git_repo', 'info_tags': [], 'detected_type': 'git_repo', 'remote_alias': 'origin', 'branch': 'master', 'owner': 'jordanruthe', 'repo_name': 'KlipperScreen', 'remote_url': 'https://github.com/jordanruthe/KlipperScreen.git', 'recovery_url': 'https://github.com/jordanruthe/KlipperScreen.git', 'version': 'v0.4.6-11', 'remote_version': 'v0.4.6-11', 'rollback_version': 'v0.3.9-11', 'current_hash': '6b6f63b6639e5b85a2b3f4b0b0cd7677ac9cda3d', 'remote_hash': '6b6f63b6639e5b85a2b3f4b0b0cd7677ac9cda3d', 'is_dirty': False, 'detached': False, 'commits_behind': [], 'commits_behind_count': 0, 'git_messages': [], 'full_version_string': 'v0.4.6-11-g6b6f63b6', 'pristine': True, 'corrupt': False, 'warnings': [], 'anomalies': [], 'name': 'KlipperScreen'}, 'mainsail-config': {'channel': 'dev', 'debug_enabled': False, 'channel_invalid': False, 'is_valid': True, 'configured_type': 'git_repo', 'info_tags': [], 'detected_type': 'git_repo', 'remote_alias': 'origin', 'branch': 'master', 'owner': 'mainsail-crew', 'repo_name': 'mainsail-config', 'remote_url': 'https://github.com/mainsail-crew/mainsail-config.git', 'recovery_url': 'https://github.com/mainsail-crew/mainsail-config.git', 'version': 'v1.2.1-1', 'remote_version': 'v1.2.1-1', 'rollback_version': 'v1.2.1-1', 'current_hash': 'ff3869a621db17ce3ef660adbbd3fa321995ac42', 'remote_hash': 'ff3869a621db17ce3ef660adbbd3fa321995ac42', 'is_dirty': False, 'detached': False, 'commits_behind': [], 'commits_behind_count': 0, 'git_messages': [], 'full_version_string': 'v1.2.1-1-gff3869a6', 'pristine': True, 'corrupt': False, 'warnings': [], 'anomalies': [], 'name': 'mainsail-config'}, 'mainsail': {'channel': 'stable', 'debug_enabled': False, 'channel_invalid': False, 'is_valid': True, 'configured_type': 'web', 'info_tags': [], 'name': 'mainsail', 'repo_name': 'mainsail', 'owner': 'mainsail-crew', 'version': 'v2.14.0', 'remote_version': 'v2.14.0', 'rollback_version': 'v2.14.0', 'last_error': '', 'warnings': [], 'anomalies': []}, 'octoeverywhere': {'channel': 'beta', 'debug_enabled': False, 'channel_invalid': False, 'is_valid': True, 'configured_type': 'git_repo', 'info_tags': [], 'detected_type': 'git_repo', 'remote_alias': 'origin', 'branch': 'master', 'owner': 'QuinnDamerell', 'repo_name': 'OctoPrint-OctoEverywhere', 'remote_url': 'https://github.com/QuinnDamerell/OctoPrint-OctoEverywhere.git', 'recovery_url': 'https://github.com/QuinnDamerell/OctoPrint-OctoEverywhere.git', 'version': '4.3.13-0', 'remote_version': '4.3.13-0', 'rollback_version': '4.3.13-0', 'current_hash': '258bb01f3bb49574c5dac650b3d780e4f79de5a5', 'remote_hash': '258bb01f3bb49574c5dac650b3d780e4f79de5a5', 'is_dirty': False, 'detached': False, 'commits_behind': [], 'commits_behind_count': 0, 'git_messages': [], 'full_version_string': '4.3.13-0-g258bb01f', 'pristine': True, 'corrupt': False, 'warnings': [], 'anomalies': [], 'name': 'octoeverywhere'}, 'octoapp': {'channel': 'beta', 'debug_enabled': False, 'channel_invalid': False, 'is_valid': True, 'configured_type': 'git_repo', 'info_tags': [], 'detected_type': 'git_repo', 'remote_alias': 'origin', 'branch': 'release', 'owner': 'crysxd', 'repo_name': 'OctoApp-Plugin', 'remote_url': 'https://github.com/crysxd/OctoApp-Plugin.git', 'recovery_url': 'https://github.com/crysxd/OctoApp-Plugin.git', 'version': '3.0.1-0', 'remote_version': '3.0.1-0', 'rollback_version': '3.0.1-0', 'current_hash': '98c8f4bc0414428d160c9c4b08786dbc3384c21a', 'remote_hash': '98c8f4bc0414428d160c9c4b08786dbc3384c21a', 'is_dirty': False, 'detached': False, 'commits_behind': [], 'commits_behind_count': 0, 'git_messages': [], 'full_version_string': '3.0.1-0-g98c8f4bc', 'pristine': True, 'corrupt': False, 'warnings': [], 'anomalies': [], 'name': 'octoapp'}, 'moonraker-obico': {'channel': 'dev', 'debug_enabled': False, 'channel_invalid': False, 'is_valid': True, 'configured_type': 'git_repo', 'info_tags': [], 'detected_type': 'git_repo', 'remote_alias': 'origin', 'branch': 'master', 'owner': 'TheSpaghettiDetective', 'repo_name': 'moonraker-obico', 'remote_url': 'https://github.com/TheSpaghettiDetective/moonraker-obico.git', 'recovery_url': 'https://github.com/TheSpaghettiDetective/moonraker-obico.git', 'version': 'v2.1.0-1', 'remote_version': 'v2.1.0-1', 'rollback_version': 'v2.1.0-1', 'current_hash': '1d0649506724be8d63888d7aa63b9f6b342907b3', 'remote_hash': '1d0649506724be8d63888d7aa63b9f6b342907b3', 'is_dirty': False, 'detached': False, 'commits_behind': [], 'commits_behind_count': 0, 'git_messages': [], 'full_version_string': 'v2.1.0-1-g1d064950', 'pristine': True, 'corrupt': False, 'warnings': [], 'anomalies': [], 'name': 'moonraker-obico'}, 'crowsnest': {'channel': 'dev', 'debug_enabled': False, 'channel_invalid': False, 'is_valid': True, 'configured_type': 'git_repo', 'info_tags': [], 'detected_type': 'git_repo', 'remote_alias': 'origin', 'branch': 'master', 'owner': 'mainsail-crew', 'repo_name': 'crowsnest', 'remote_url': 'https://github.com/mainsail-crew/crowsnest.git', 'recovery_url': 'https://github.com/mainsail-crew/crowsnest.git', 'version': 'v4.1.16-1', 'remote_version': 'v4.1.16-1', 'rollback_version': 'v4.1.16-1', 'current_hash': '059fa8775f60503f7aca4bb4812795997b35b142', 'remote_hash': '059fa8775f60503f7aca4bb4812795997b35b142', 'is_dirty': False, 'detached': False, 'commits_behind': [], 'commits_behind_count': 0, 'git_messages': [], 'full_version_string': 'v4.1.16-1-g059fa877', 'pristine': True, 'corrupt': False, 'warnings': [], 'anomalies': [], 'name': 'crowsnest'}}, 'busy': False}, 'id': 14}
2025-09-05 21:52:15,693 [KlippyGtk.py:Dialog()] - Showing dialog Update (width=1024, height=600)
2025-09-05 21:52:18,445 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-09-05 21:52:18,446 [updater.py:update_confirm()] - Updating full
2025-09-05 21:52:18,484 [KlippyGtk.py:Dialog()] - Showing dialog Updating (width=1024, height=600)
2025-09-05 21:52:18,486 [updater.py:update_program()] - Sending machine.update.full
2025-09-05 21:52:18,520 [base_panel.py:process_update()] - Update complete
2025-09-05 21:52:23,000 [base_panel.py:finish_updating()] - Finishing update
2025-09-05 21:52:23,006 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-09-05 21:52:23,007 [screen.py:_menu_go_back()] - #### Menu go home
2025-09-05 21:52:23,031 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-05 21:52:25,278 [screen.py:_go_to_submenu()] - #### Go to submenu more
2025-09-05 21:52:25,278 [screen.py:_go_to_submenu()] - #### Menu __main
2025-09-05 21:52:25,318 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2025-09-05 21:52:25,361 [menu.py:arrangeMenuItems()] - X > more pins
2025-09-05 21:52:25,365 [menu.py:arrangeMenuItems()] - X > more power
2025-09-05 21:52:25,389 [menu.py:arrangeMenuItems()] - X > more spoolman
2025-09-05 21:52:25,389 [menu.py:evaluate_enable()] - moonraker connected True
2025-09-05 21:52:25,411 [screen.py:_go_to_submenu()] - menu, {{ gettext('More') }}, panel_name=more, items=[{'more bedlevel': {'name': "{{ gettext('Bed Level') }}", 'icon': 'bed-level', 'panel': 'bed_level', 'method': None, 'confirm': None, 'enable': "{{ 'bed_screws' in printer.config_sections or 'screws_tilt_adjust' in printer.config_sections }}", 'params': '{}', 'style': None}}, {'more bedmesh': {'name': "{{ gettext('Bed Mesh') }}", 'icon': 'bed-mesh', 'panel': 'bed_mesh', 'method': None, 'confirm': None, 'enable': "{{ 'bed_mesh' in printer.config_sections }}", 'params': '{}', 'style': None}}, {'more zoffset': {'name': "{{ gettext('Z Calibrate') }}", 'icon': 'z-farther', 'panel': 'zcalibrate', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more limits': {'name': "{{ gettext('Limits') }}", 'icon': 'fine-tune', 'panel': 'limits', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more fan': {'name': "{{ gettext('Fan') }}", 'icon': 'fan', 'panel': 'fan', 'method': None, 'confirm': None, 'enable': '{{ printer.fans.count > 0 }}', 'params': '{}', 'style': None}}, {'more led': {'name': "{{ gettext('Leds') }}", 'icon': 'light', 'panel': 'led', 'method': None, 'confirm': None, 'enable': '{{ printer.leds.count > 0 }}', 'params': '{}', 'style': None}}, {'more macros': {'name': "{{ gettext('Macros') }}", 'icon': 'custom-script', 'panel': 'gcode_macros', 'method': None, 'confirm': None, 'enable': '{{ printer.gcode_macros.count > 0 }}', 'params': '{}', 'style': None}}, {'more pins': {'name': "{{ gettext('Pins') }}", 'icon': 'hashtag', 'panel': 'pins', 'method': None, 'confirm': None, 'enable': '{{ printer.output_pins.count > 0 or printer.pwm_tools.count > 0 }}', 'params': '{}', 'style': None}}, {'more power': {'name': "{{ gettext('Power') }}", 'icon': 'shutdown', 'panel': 'power', 'method': None, 'confirm': None, 'enable': '{{ moonraker.power_devices.count > 0 }}', 'params': '{}', 'style': None}}, {'more camera': {'name': "{{ gettext('Camera') }}", 'icon': 'camera', 'panel': 'camera', 'method': None, 'confirm': None, 'enable': '{{ moonraker.cameras.count > 0 }}', 'params': '{}', 'style': None}}, {'more console': {'name': "{{ gettext('Console') }}", 'icon': 'console', 'panel': 'console', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more updater': {'name': "{{ gettext('Update') }}", 'icon': 'refresh', 'panel': 'updater', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more input_shaper': {'name': "{{ gettext('Input Shaper') }}", 'icon': 'move', 'panel': 'input_shaper', 'method': None, 'confirm': None, 'enable': "{{ 'input_shaper' in printer.config_sections }}", 'params': '{}', 'style': None}}, {'more save': {'name': "{{ gettext('Save Config') }}", 'icon': 'complete', 'panel': None, 'method': 'ks_confirm_save', 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more settings': {'name': 'KlipperScreen', 'icon': 'settings', 'panel': 'settings', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more network': {'name': "{{ gettext('Network') }}", 'icon': 'network', 'panel': 'network', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more notifications': {'name': "{{ gettext('Notifications') }}", 'icon': 'notifications', 'panel': 'notifications', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more spoolman': {'name': 'Spoolman', 'icon': 'spoolman', 'panel': 'spoolman', 'method': None, 'confirm': None, 'enable': '{{ moonraker.spoolman }}', 'params': '{}', 'style': None}}, {'more system': {'name': "{{ gettext('System') }}", 'icon': 'info', 'panel': 'system', 'method': None, 'confirm': None, 'enable': '{{ moonraker_connected }}', 'params': '{}', 'style': None}}, {'more fine_tune': {'name': "{{ gettext('Fine Tuning') }}", 'icon': 'fine-tune', 'panel': 'fine_tune', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}]
2025-09-05 21:52:26,862 [screen.py:_load_panel()] - Loading panel: gcode_macros
2025-09-05 21:52:26,899 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > gcode_macros
2025-09-05 21:52:37,148 [screen.py:_menu_go_back()] - #### Menu go back
2025-09-05 21:52:37,187 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2025-09-05 21:52:37,227 [menu.py:arrangeMenuItems()] - X > more pins
2025-09-05 21:52:37,232 [menu.py:arrangeMenuItems()] - X > more power
2025-09-05 21:52:37,253 [menu.py:arrangeMenuItems()] - X > more spoolman
2025-09-05 21:52:37,253 [menu.py:evaluate_enable()] - moonraker connected True
2025-09-05 21:52:41,514 [screen.py:_load_panel()] - Loading panel: led
2025-09-05 21:52:41,522 [led.py:color_selector()] - neopixel my_neopixel
2025-09-05 21:52:41,526 [led.py:set_color()] - color: [1, 0, 0, 0]
2025-09-05 21:52:41,530 [led.py:set_color()] - color: [0, 1, 0, 0]
2025-09-05 21:52:41,534 [led.py:set_color()] - color: [0, 0, 1, 0]
2025-09-05 21:52:41,552 [KlippyRest.py:_do_request()] - 404 Client Error>>Key miscellaneous in namespace mainsail not found for url>>http://127.0.0.1:7125/server/database/item?namespace=mainsail&key=miscellaneous.entries
2025-09-05 21:52:41,554 [led.py:color_selector()] - Adding preset: off
2025-09-05 21:52:41,554 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-09-05 21:52:41,556 [led.py:color_selector()] - Adding preset: on
2025-09-05 21:52:41,557 [led.py:set_color()] - color: [1, 1, 1, 0]
2025-09-05 21:52:41,584 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > led
2025-09-05 21:52:41,585 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-09-05 21:52:41,590 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-09-05 21:52:41,824 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-09-05 21:52:42,076 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-09-05 21:52:42,325 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-09-05 21:52:42,576 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-09-05 21:52:42,826 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-09-05 21:52:43,079 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-09-05 21:52:43,213 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-09-05 21:52:43,213 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=0.0 GREEN=0.0 BLUE=0.0 WHITE=0.0 SYNC=0 TRANSMIT=1'}
2025-09-05 21:52:43,328 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-09-05 21:52:43,579 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-09-05 21:52:43,853 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-09-05 21:52:44,057 [led.py:set_color()] - color: [0.0, 1.0, 0.0, 0.0]
2025-09-05 21:52:44,058 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=0.0 GREEN=1.0 BLUE=0.0 WHITE=0.0 SYNC=0 TRANSMIT=1'}
2025-09-05 21:52:44,081 [led.py:set_color()] - color: [0.0, 1.0, 0.0, 0.0]
2025-09-05 21:52:44,331 [led.py:set_color()] - color: [0.0, 1.0, 0.0, 0.0]
2025-09-05 21:52:44,581 [led.py:set_color()] - color: [0.0, 1.0, 0.0, 0.0]
2025-09-05 21:52:44,832 [led.py:set_color()] - color: [0.0, 1.0, 0.0, 0.0]
2025-09-05 21:52:45,084 [led.py:set_color()] - color: [0.0, 1.0, 0.0, 0.0]
2025-09-05 21:52:45,334 [led.py:set_color()] - color: [0.0, 1.0, 0.0, 0.0]
2025-09-05 21:52:45,605 [led.py:set_color()] - color: [0.0, 1.0, 0.0, 0.0]
2025-09-05 21:52:45,683 [led.py:set_color()] - color: [0.0, 1.0, 1.0, 0.0]
2025-09-05 21:52:45,684 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=0.0 GREEN=1.0 BLUE=1.0 WHITE=0.0 SYNC=0 TRANSMIT=1'}
2025-09-05 21:52:45,836 [led.py:set_color()] - color: [0.0, 1.0, 1.0, 0.0]
2025-09-05 21:52:46,087 [led.py:set_color()] - color: [0.0, 1.0, 1.0, 0.0]
2025-09-05 21:52:46,338 [led.py:set_color()] - color: [0.0, 1.0, 1.0, 0.0]
2025-09-05 21:52:46,590 [led.py:set_color()] - color: [0.0, 1.0, 1.0, 0.0]
2025-09-05 21:52:46,852 [led.py:set_color()] - color: [0.0, 1.0, 1.0, 0.0]
2025-09-05 21:52:46,978 [led.py:set_color()] - color: [0.0, 0.0, 1.0, 0.0]
2025-09-05 21:52:46,979 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=0.0 GREEN=0.0 BLUE=1.0 WHITE=0.0 SYNC=0 TRANSMIT=1'}
2025-09-05 21:52:47,090 [led.py:set_color()] - color: [0.0, 0.0, 1.0, 0.0]
2025-09-05 21:52:47,340 [led.py:set_color()] - color: [0.0, 0.0, 1.0, 0.0]
2025-09-05 21:52:47,591 [led.py:set_color()] - color: [0.0, 0.0, 1.0, 0.0]
2025-09-05 21:52:47,843 [led.py:set_color()] - color: [0.0, 0.0, 1.0, 0.0]
2025-09-05 21:52:47,898 [led.py:set_color()] - color: [1.0, 0.0, 1.0, 0.0]
2025-09-05 21:52:47,899 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=1.0 GREEN=0.0 BLUE=1.0 WHITE=0.0 SYNC=0 TRANSMIT=1'}
2025-09-05 21:52:48,096 [led.py:set_color()] - color: [1.0, 0.0, 1.0, 0.0]
2025-09-05 21:52:48,344 [led.py:set_color()] - color: [1.0, 0.0, 1.0, 0.0]
2025-09-05 21:52:48,594 [led.py:set_color()] - color: [1.0, 0.0, 1.0, 0.0]
2025-09-05 21:52:48,845 [led.py:set_color()] - color: [1.0, 0.0, 1.0, 0.0]
2025-09-05 21:52:49,096 [led.py:set_color()] - color: [1.0, 0.0, 1.0, 0.0]
2025-09-05 21:52:49,347 [led.py:set_color()] - color: [1.0, 0.0, 1.0, 0.0]
2025-09-05 21:52:49,597 [led.py:set_color()] - color: [1.0, 0.0, 1.0, 0.0]
2025-09-05 21:52:49,848 [led.py:set_color()] - color: [1.0, 0.0, 1.0, 0.0]
2025-09-05 21:52:50,098 [led.py:set_color()] - color: [1.0, 0.0, 1.0, 0.0]
2025-09-05 21:52:50,349 [led.py:set_color()] - color: [1.0, 0.0, 1.0, 0.0]
2025-09-05 21:52:50,600 [led.py:set_color()] - color: [1.0, 0.0, 1.0, 0.0]
2025-09-05 21:52:50,850 [led.py:set_color()] - color: [1.0, 0.0, 1.0, 0.0]
2025-09-05 21:52:51,100 [led.py:set_color()] - color: [1.0, 0.0, 1.0, 0.0]
2025-09-05 21:52:51,352 [led.py:set_color()] - color: [1.0, 0.0, 1.0, 0.0]
2025-09-05 21:52:51,602 [led.py:set_color()] - color: [1.0, 0.0, 1.0, 0.0]
2025-09-05 21:52:51,852 [led.py:set_color()] - color: [1.0, 0.0, 1.0, 0.0]
2025-09-05 21:52:52,111 [led.py:set_color()] - color: [1.0, 0.0, 1.0, 0.0]
2025-09-05 21:52:52,159 [led.py:set_color()] - color: [1.0, 0.6431372549019608, 1.0, 0.0]
2025-09-05 21:52:52,160 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=1.0 GREEN=0.6431372549019608 BLUE=1.0 WHITE=0.0 SYNC=0 TRANSMIT=1'}
2025-09-05 21:52:52,356 [led.py:set_color()] - color: [1.0, 0.6431372549019608, 1.0, 0.0]
2025-09-05 21:52:52,605 [led.py:set_color()] - color: [1.0, 0.6431372549019608, 1.0, 0.0]
2025-09-05 21:52:52,876 [led.py:set_color()] - color: [1.0, 0.6431372549019608, 1.0, 0.0]
2025-09-05 21:52:53,079 [led.py:set_color()] - color: [1.0, 0.00784313725490196, 1.0, 0.0]
2025-09-05 21:52:53,080 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=1.0 GREEN=0.00784313725490196 BLUE=1.0 WHITE=0.0 SYNC=0 TRANSMIT=1'}
2025-09-05 21:52:53,109 [led.py:set_color()] - color: [1.0, 0.00784313725490196, 1.0, 0.0]
2025-09-05 21:52:53,358 [led.py:set_color()] - color: [1.0, 0.00784313725490196, 1.0, 0.0]
2025-09-05 21:52:53,608 [led.py:set_color()] - color: [1.0, 0.00784313725490196, 1.0, 0.0]
2025-09-05 21:52:53,878 [led.py:set_color()] - color: [1.0, 0.00784313725490196, 1.0, 0.0]
2025-09-05 21:52:53,902 [led.py:set_color()] - color: [0.09411764705882353, 0.00784313725490196, 1.0, 0.0]
2025-09-05 21:52:53,903 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=0.09411764705882353 GREEN=0.00784313725490196 BLUE=1.0 WHITE=0.0 SYNC=0 TRANSMIT=1'}
2025-09-05 21:52:54,111 [led.py:set_color()] - color: [0.09411764705882353, 0.00784313725490196, 1.0, 0.0]
2025-09-05 21:52:54,361 [led.py:set_color()] - color: [0.09411764705882353, 0.00784313725490196, 1.0, 0.0]
2025-09-05 21:52:54,617 [led.py:set_color()] - color: [0.09411764705882353, 0.00784313725490196, 1.0, 0.0]
2025-09-05 21:52:54,801 [led.py:set_color()] - color: [0.09411764705882353, 0.00784313725490196, 0.08235294117647059, 0.0]
2025-09-05 21:52:54,802 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=0.09411764705882353 GREEN=0.00784313725490196 BLUE=0.08235294117647059 WHITE=0.0 SYNC=0 TRANSMIT=1'}
2025-09-05 21:52:54,862 [led.py:set_color()] - color: [0.09411764705882353, 0.00784313725490196, 0.08235294117647059, 0.0]
2025-09-05 21:52:55,114 [led.py:set_color()] - color: [0.09411764705882353, 0.00784313725490196, 0.08235294117647059, 0.0]
2025-09-05 21:52:55,364 [led.py:set_color()] - color: [0.09411764705882353, 0.00784313725490196, 0.08235294117647059, 0.0]
2025-09-05 21:52:55,617 [led.py:set_color()] - color: [0.09411764705882353, 0.00784313725490196, 0.08235294117647059, 0.0]
2025-09-05 21:52:55,764 [led.py:set_color()] - color: [0.09411764705882353, 0.00784313725490196, 1.0, 0.0]
2025-09-05 21:52:55,765 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=0.09411764705882353 GREEN=0.00784313725490196 BLUE=1.0 WHITE=0.0 SYNC=0 TRANSMIT=1'}
2025-09-05 21:52:55,869 [led.py:set_color()] - color: [0.09411764705882353, 0.00784313725490196, 1.0, 0.0]
2025-09-05 21:52:56,131 [led.py:set_color()] - color: [0.09411764705882353, 0.00784313725490196, 1.0, 0.0]
2025-09-05 21:52:56,212 [led.py:set_color()] - color: [0.09411764705882353, 1.0, 1.0, 0.0]
2025-09-05 21:52:56,213 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=0.09411764705882353 GREEN=1.0 BLUE=1.0 WHITE=0.0 SYNC=0 TRANSMIT=1'}
2025-09-05 21:52:56,367 [led.py:set_color()] - color: [0.09411764705882353, 1.0, 1.0, 0.0]
2025-09-05 21:52:56,617 [led.py:set_color()] - color: [0.09411764705882353, 1.0, 1.0, 0.0]
2025-09-05 21:52:56,644 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-09-05 21:52:56,644 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=1.0 GREEN=1.0 BLUE=1.0 WHITE=0.0 SYNC=0 TRANSMIT=1'}
2025-09-05 21:52:56,868 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-09-05 21:52:57,119 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-09-05 21:52:57,369 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-09-05 21:52:57,619 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-09-05 21:52:57,869 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-09-05 21:52:58,123 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-09-05 21:52:58,371 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-09-05 21:52:58,609 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-09-05 21:52:58,610 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=0.0 GREEN=0.0 BLUE=0.0 WHITE=0.0 SYNC=0 TRANSMIT=1'}
2025-09-05 21:52:58,640 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-09-05 21:52:58,872 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-09-05 21:52:59,127 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-09-05 21:52:59,337 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0]
2025-09-05 21:52:59,337 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=1.0 GREEN=1.0 BLUE=1.0 WHITE=0 SYNC=0 TRANSMIT=1'}
2025-09-05 21:52:59,373 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-09-05 21:52:59,623 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-09-05 21:52:59,874 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-09-05 21:53:00,142 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-09-05 21:53:00,289 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-09-05 21:53:00,290 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=0.0 GREEN=0.0 BLUE=0.0 WHITE=0.0 SYNC=0 TRANSMIT=1'}
2025-09-05 21:53:00,376 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-09-05 21:53:00,626 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-09-05 21:53:00,685 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0]
2025-09-05 21:53:00,686 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=1.0 GREEN=1.0 BLUE=1.0 WHITE=0 SYNC=0 TRANSMIT=1'}
2025-09-05 21:53:00,879 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-09-05 21:53:01,128 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-09-05 21:53:01,378 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-09-05 21:53:01,650 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-09-05 21:53:01,723 [led.py:set_color()] - color: [1.0, 0.0, 1.0, 0.0]
2025-09-05 21:53:01,724 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=1.0 GREEN=0.0 BLUE=1.0 WHITE=0.0 SYNC=0 TRANSMIT=1'}
2025-09-05 21:53:01,880 [led.py:set_color()] - color: [1.0, 0.0, 1.0, 0.0]
2025-09-05 21:53:02,150 [led.py:set_color()] - color: [1.0, 0.0, 1.0, 0.0]
2025-09-05 21:53:02,322 [led.py:set_color()] - color: [1.0, 0.0, 0.0, 0.0]
2025-09-05 21:53:02,323 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=1.0 GREEN=0.0 BLUE=0.0 WHITE=0.0 SYNC=0 TRANSMIT=1'}
2025-09-05 21:53:02,381 [led.py:set_color()] - color: [1.0, 0.0, 0.0, 0.0]
2025-09-05 21:53:02,631 [led.py:set_color()] - color: [1.0, 0.0, 0.0, 0.0]
2025-09-05 21:53:02,882 [led.py:set_color()] - color: [1.0, 0.0, 0.0, 0.0]
2025-09-05 21:53:03,132 [led.py:set_color()] - color: [1.0, 0.0, 0.0, 0.0]
2025-09-05 21:53:03,382 [led.py:set_color()] - color: [1.0, 0.0, 0.0, 0.0]
2025-09-05 21:53:03,633 [led.py:set_color()] - color: [1.0, 0.0, 0.0, 0.0]
2025-09-05 21:53:03,884 [led.py:set_color()] - color: [1.0, 0.0, 0.0, 0.0]
2025-09-05 21:53:04,088 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-09-05 21:53:04,088 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=0.0 GREEN=0.0 BLUE=0.0 WHITE=0.0 SYNC=0 TRANSMIT=1'}
2025-09-05 21:53:04,135 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-09-05 21:53:04,385 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-09-05 21:53:04,484 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0]
2025-09-05 21:53:04,485 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=1.0 GREEN=1.0 BLUE=1.0 WHITE=0 SYNC=0 TRANSMIT=1'}
2025-09-05 21:53:04,636 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-09-05 21:53:04,886 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-09-05 21:53:05,137 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-09-05 21:53:05,387 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-09-05 21:53:05,543 [screen.py:_menu_go_back()] - #### Menu go back
2025-09-05 21:53:05,572 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2025-09-05 21:53:05,608 [menu.py:arrangeMenuItems()] - X > more pins
2025-09-05 21:53:05,612 [menu.py:arrangeMenuItems()] - X > more power
2025-09-05 21:53:05,634 [menu.py:arrangeMenuItems()] - X > more spoolman
2025-09-05 21:53:05,634 [menu.py:evaluate_enable()] - moonraker connected True
2025-09-05 21:53:06,890 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > led
2025-09-05 21:53:06,893 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-09-05 21:53:06,897 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-09-05 21:53:07,142 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-09-05 21:53:07,393 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-09-05 21:53:07,644 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-09-05 21:53:07,678 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-09-05 21:53:07,679 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=0.0 GREEN=0.0 BLUE=0.0 WHITE=0.0 SYNC=0 TRANSMIT=1'}
2025-09-05 21:53:07,898 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-09-05 21:53:08,145 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-09-05 21:53:08,396 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-09-05 21:53:08,418 [screen.py:_menu_go_back()] - #### Menu go back
2025-09-05 21:53:08,446 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2025-09-05 21:53:08,482 [menu.py:arrangeMenuItems()] - X > more pins
2025-09-05 21:53:08,486 [menu.py:arrangeMenuItems()] - X > more power
2025-09-05 21:53:08,509 [menu.py:arrangeMenuItems()] - X > more spoolman
2025-09-05 21:53:08,509 [menu.py:evaluate_enable()] - moonraker connected True
2025-09-05 21:53:10,499 [screen.py:_load_panel()] - Loading panel: fan
2025-09-05 21:53:10,504 [fan.py:add_fan()] - Adding fan: fan
2025-09-05 21:53:10,523 [fan.py:add_fan()] - Adding fan: controller_fan stepper_fan
2025-09-05 21:53:10,531 [fan.py:add_fan()] - Adding fan: heater_fan hotend_fan
2025-09-05 21:53:10,552 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > fan
2025-09-05 21:53:11,963 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: M106 S255
2025-09-05 21:53:15,388 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: M106 S0
2025-09-05 21:53:16,062 [screen.py:_menu_go_back()] - #### Menu go back
2025-09-05 21:53:16,090 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2025-09-05 21:53:16,127 [menu.py:arrangeMenuItems()] - X > more pins
2025-09-05 21:53:16,132 [menu.py:arrangeMenuItems()] - X > more power
2025-09-05 21:53:16,153 [menu.py:arrangeMenuItems()] - X > more spoolman
2025-09-05 21:53:16,154 [menu.py:evaluate_enable()] - moonraker connected True
2025-09-05 21:53:18,761 [screen.py:_load_panel()] - Loading panel: system
2025-09-05 21:53:18,766 [system.py:__init__()] - {'python': {'version': [3, 9, 2, 'final', 0], 'version_string': '3.9.2 (default, Feb 28 2021, 17:03:44)  [GCC 10.2.1 20210110]'}, 'cpu_info': {'cpu_count': 4, 'bits': '32bit', 'processor': 'aarch64', 'cpu_desc': 'ARMv8 Processor rev 4 (v8l)', 'serial_number': '', 'hardware_desc': 'T800', 'model': 'sonic_lcd', 'total_memory': 2030728, 'memory_units': 'kB'}, 'sd_info': {'manufacturer_id': '45', 'manufacturer': 'Unknown', 'oem_id': '0100', 'product_name': 'DG400', 'product_revision': '3.8', 'serial_number': '0127ea95', 'manufacturer_date': '9/2123', 'capacity': 'Unknown', 'total_bytes': 0}, 'distribution': {'name': 'Debian GNU/Linux 11 (bullseye)', 'id': 'debian', 'version': '11', 'version_parts': {'major': '11', 'minor': '', 'build_number': ''}, 'like': '', 'codename': 'bullseye', 'release_info': {}, 'kernel_version': '4.9.191'}, 'virtualization': {'virt_type': 'none', 'virt_identifier': 'none'}, 'network': {}, 'canbus': {}, 'provider': 'systemd_dbus', 'available_services': ['octoeverywhere', 'moonraker-obico', 'KlipperScreen', 'octoapp', 'klipper', 'moonraker', 'crowsnest'], 'service_state': {'octoeverywhere': {'active_state': 'active', 'sub_state': 'running'}, 'moonraker-obico': {'active_state': 'active', 'sub_state': 'running'}, 'KlipperScreen': {'active_state': 'active', 'sub_state': 'running'}, 'octoapp': {'active_state': 'active', 'sub_state': 'running'}, 'klipper': {'active_state': 'active', 'sub_state': 'running'}, 'moonraker': {'active_state': 'active', 'sub_state': 'running'}, 'crowsnest': {'active_state': 'active', 'sub_state': 'running'}}, 'instance_ids': {'moonraker': 'moonraker', 'klipper': 'klipper'}}
2025-09-05 21:53:18,790 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > system
2025-09-05 21:53:23,460 [screen.py:_menu_go_back()] - #### Menu go back
2025-09-05 21:53:23,491 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2025-09-05 21:53:23,530 [menu.py:arrangeMenuItems()] - X > more pins
2025-09-05 21:53:23,535 [menu.py:arrangeMenuItems()] - X > more power
2025-09-05 21:53:23,559 [menu.py:arrangeMenuItems()] - X > more spoolman
2025-09-05 21:53:23,559 [menu.py:evaluate_enable()] - moonraker connected True
2025-09-05 21:53:27,871 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=1024, height=600)
2025-09-05 21:53:29,668 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-09-05 21:53:29,668 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: SAVE_CONFIG
2025-09-05 21:53:30,729 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-05 21:53:30,730 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-05 21:53:30,821 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-05 21:53:30,822 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-05 21:53:30,822 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-05 21:53:30,823 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-05 21:53:30,892 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-05 21:53:30,921 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-05 21:53:35,021 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 4, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-05 21:53:35,255 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-05 21:53:35,255 [printer.py:log_counts()] - # Extruders: 1
2025-09-05 21:53:35,256 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-05 21:53:35,256 [printer.py:log_counts()] - # Fans: 3
2025-09-05 21:53:35,256 [printer.py:log_counts()] - # Output pins: 0
2025-09-05 21:53:35,256 [printer.py:log_counts()] - # PWM tools: 0
2025-09-05 21:53:35,256 [printer.py:log_counts()] - # Leds: 1
2025-09-05 21:53:35,506 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-05 21:53:35,507 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-05 21:53:35,508 [screen.py:init_klipper()] - Printer initialized
2025-09-05 21:53:35,508 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-05 21:53:35,508 [printer.py:change_state()] - Adding callback for state: ready
2025-09-05 21:53:35,525 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 4, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-05 21:53:35,751 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-05 21:53:35,751 [printer.py:log_counts()] - # Extruders: 1
2025-09-05 21:53:35,752 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-05 21:53:35,752 [printer.py:log_counts()] - # Fans: 3
2025-09-05 21:53:35,752 [printer.py:log_counts()] - # Output pins: 0
2025-09-05 21:53:35,752 [printer.py:log_counts()] - # PWM tools: 0
2025-09-05 21:53:35,752 [printer.py:log_counts()] - # Leds: 1
2025-09-05 21:53:36,039 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-05 21:53:36,045 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-05 21:53:36,045 [screen.py:init_klipper()] - Printer initialized
2025-09-05 21:53:36,150 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-05 21:53:36,151 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-05 21:53:36,151 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-05 21:53:36,154 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-05 21:53:36,220 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-05 21:53:36,379 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-05 21:53:36,389 [main_menu.py:add_device()] - Adding device: extruder
2025-09-05 21:53:36,394 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-05 21:53:36,423 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-05 21:53:36,433 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-05 21:53:36,467 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-05 21:53:36,484 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-05 21:54:37,121 [screensaver.py:show()] - Showing Screensaver
2025-09-06 02:55:05,462 [screensaver.py:close()] - Closing Screensaver
2025-09-06 02:55:05,464 [screen.py:wake_screen()] - Screen wake up
2025-09-06 02:55:07,064 [screen.py:show_panel()] - Reinitializing panel move
2025-09-06 02:55:07,122 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-09-06 02:55:08,937 [move.py:change_distance()] - ### Distance 50
2025-09-06 02:55:09,583 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 z+50 F600'}
2025-09-06 02:55:09,587 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-09-06 02:55:09,617 [screen.py:show_popup_message()] - error: Must home axis first: 0.000 0.000 50.000 [0.000]
2025-09-06 02:55:12,090 [screen.py:show_panel()] - Reinitializing panel menu
2025-09-06 02:55:12,192 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move > menu
2025-09-06 02:55:12,208 [menu.py:arrangeMenuItems()] - X > homing quad_gantry_level
2025-09-06 02:55:12,212 [menu.py:arrangeMenuItems()] - X > homing Z-Tilt
2025-09-06 02:55:12,954 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G28'}
2025-09-06 02:55:54,681 [screen.py:_menu_go_back()] - #### Menu go back
2025-09-06 02:55:54,703 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-09-06 02:55:55,923 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 z+50 F600'}
2025-09-06 02:55:55,928 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-09-06 02:56:05,066 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 z+50 F600'}
2025-09-06 02:56:05,070 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-09-06 02:56:15,713 [screen.py:_menu_go_back()] - #### Menu go back
2025-09-06 02:56:15,736 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-06 02:57:16,125 [screensaver.py:show()] - Showing Screensaver
2025-09-06 02:58:05,370 [screensaver.py:close()] - Closing Screensaver
2025-09-06 02:58:05,372 [screen.py:wake_screen()] - Screen wake up
2025-09-06 02:58:06,895 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-09-06 02:58:08,232 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 z-50 F600'}
2025-09-06 02:58:08,237 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-09-06 02:58:09,677 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 z-50 F600'}
2025-09-06 02:58:09,681 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-09-06 02:59:10,122 [screensaver.py:show()] - Showing Screensaver
2025-09-06 03:48:38,123 [KlippyWebsocket.py:on_close()] - 1001 Server Shutdown
2025-09-06 03:48:38,124 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2025-09-06 03:48:38,127 [screen.py:websocket_disconnected()] - ### websocket_disconnected
2025-09-06 03:48:38,145 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 03:48:38,154 [screensaver.py:close()] - Closing Screensaver
2025-09-06 03:48:38,158 [screen.py:wake_screen()] - Screen wake up
2025-09-06 03:48:38,309 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-06 03:48:38,342 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-06 03:48:38,418 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-09-06 03:48:38,419 [screen.py:show_panel()] - Panel is already is in view
2025-09-06 03:48:38,434 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-06 03:48:38,435 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-06 03:48:43,140 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-09-06 03:48:43,140 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-09-06 03:48:43,154 [_logging.py:info()] - Websocket connected
2025-09-06 03:48:43,154 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-09-06 03:48:43,155 [screen.py:websocket_connected()] - ### websocket_connected
2025-09-06 03:48:43,289 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-09-06 03:48:43,294 [screen.py:show_popup_message()] - warning: 
Moonraker warnings:
[update_manager]:
 Failed to load extension timelapse:
 Invalid path for option `path` in section [update_manager timelapse]:
 Path `/home/sonic/moonraker-timelapse` does not exist
Unparsed config option 'origin:
 https:
//github.com/mainsail-crew/moonraker-timelapse.git' detected in section [update_manager timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.
Unparsed config option 'managed_services:
 moonraker' detected in section [update_manager timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.

2025-09-06 03:48:43,321 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': 'http://192.168.1.14:8081/?action=stream', 'snapshot_url': 'http://192.168.1.14:8081/snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-09-06 03:48:43,338 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': ['[update_manager]: Failed to load extension timelapse: Invalid path for option `path` in section [update_manager timelapse]: Path `/home/sonic/moonraker-timelapse` does not exist', "Unparsed config option 'origin: https://github.com/mainsail-crew/moonraker-timelapse.git' detected in section [update_manager timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.", "Unparsed config option 'managed_services: moonraker' detected in section [update_manager timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error."], 'websocket_count': 4, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-06 03:48:43,432 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-06 03:48:43,433 [printer.py:log_counts()] - # Extruders: 1
2025-09-06 03:48:43,433 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-06 03:48:43,433 [printer.py:log_counts()] - # Fans: 3
2025-09-06 03:48:43,433 [printer.py:log_counts()] - # Output pins: 0
2025-09-06 03:48:43,433 [printer.py:log_counts()] - # PWM tools: 0
2025-09-06 03:48:43,433 [printer.py:log_counts()] - # Leds: 1
2025-09-06 03:48:43,685 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-06 03:48:43,686 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-06 03:48:43,687 [screen.py:init_klipper()] - Printer initialized
2025-09-06 03:48:43,688 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-06 03:48:43,688 [printer.py:change_state()] - Adding callback for state: ready
2025-09-06 03:48:43,891 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-06 03:48:43,891 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-06 03:48:43,891 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-06 03:48:43,895 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 03:48:43,965 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-06 03:48:44,156 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-06 03:48:44,169 [main_menu.py:add_device()] - Adding device: extruder
2025-09-06 03:48:44,177 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-06 03:48:44,209 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-06 03:48:44,221 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-06 03:48:44,260 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-06 03:48:44,280 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-06 03:48:51,519 [KlippyWebsocket.py:on_close()] - 1001 Server Shutdown
2025-09-06 03:48:51,525 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2025-09-06 03:48:51,567 [screen.py:websocket_disconnected()] - ### websocket_disconnected
2025-09-06 03:48:51,568 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 03:48:51,644 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-06 03:48:51,682 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-06 03:48:51,772 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-09-06 03:48:51,773 [screen.py:show_panel()] - Panel is already is in view
2025-09-06 03:48:51,789 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-06 03:48:51,790 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-06 03:48:56,138 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-09-06 03:48:56,139 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-09-06 03:48:56,153 [_logging.py:info()] - Websocket connected
2025-09-06 03:48:56,153 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-09-06 03:48:56,157 [screen.py:websocket_connected()] - ### websocket_connected
2025-09-06 03:48:56,283 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-09-06 03:48:56,293 [screen.py:show_popup_message()] - warning: 
Moonraker warnings:
[update_manager]:
 Failed to load extension timelapse:
 Invalid path for option `path` in section [update_manager timelapse]:
 Path `/home/sonic/moonraker-timelapse` does not exist
Unparsed config option 'origin:
 https:
//github.com/mainsail-crew/moonraker-timelapse.git' detected in section [update_manager timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.
Unparsed config option 'managed_services:
 moonraker' detected in section [update_manager timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.

2025-09-06 03:48:56,328 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': 'http://192.168.1.14:8081/?action=stream', 'snapshot_url': 'http://192.168.1.14:8081/snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-09-06 03:48:56,350 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': ['[update_manager]: Failed to load extension timelapse: Invalid path for option `path` in section [update_manager timelapse]: Path `/home/sonic/moonraker-timelapse` does not exist', "Unparsed config option 'origin: https://github.com/mainsail-crew/moonraker-timelapse.git' detected in section [update_manager timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.", "Unparsed config option 'managed_services: moonraker' detected in section [update_manager timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error."], 'websocket_count': 3, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-06 03:48:56,555 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-06 03:48:56,555 [printer.py:log_counts()] - # Extruders: 1
2025-09-06 03:48:56,555 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-06 03:48:56,555 [printer.py:log_counts()] - # Fans: 3
2025-09-06 03:48:56,556 [printer.py:log_counts()] - # Output pins: 0
2025-09-06 03:48:56,556 [printer.py:log_counts()] - # PWM tools: 0
2025-09-06 03:48:56,557 [printer.py:log_counts()] - # Leds: 1
2025-09-06 03:48:56,813 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-06 03:48:56,821 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-06 03:48:56,821 [screen.py:init_klipper()] - Printer initialized
2025-09-06 03:48:56,822 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-06 03:48:56,823 [printer.py:change_state()] - Adding callback for state: ready
2025-09-06 03:48:57,061 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-06 03:48:57,061 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-06 03:48:57,062 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-06 03:48:57,065 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 03:48:57,143 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-06 03:48:57,256 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-06 03:48:57,268 [main_menu.py:add_device()] - Adding device: extruder
2025-09-06 03:48:57,274 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-06 03:48:57,306 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-06 03:48:57,394 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-06 03:48:57,427 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-06 03:48:57,448 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-06 03:49:15,734 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-06 03:49:15,734 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-06 03:49:15,840 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-06 03:49:15,841 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-06 03:49:15,841 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-06 03:49:15,842 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 03:49:15,910 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-06 03:49:15,942 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-06 03:49:20,063 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': ['[update_manager]: Failed to load extension timelapse: Invalid path for option `path` in section [update_manager timelapse]: Path `/home/sonic/moonraker-timelapse` does not exist', "Unparsed config option 'origin: https://github.com/mainsail-crew/moonraker-timelapse.git' detected in section [update_manager timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.", "Unparsed config option 'managed_services: moonraker' detected in section [update_manager timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error."], 'websocket_count': 5, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-06 03:49:20,286 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-06 03:49:20,286 [printer.py:log_counts()] - # Extruders: 1
2025-09-06 03:49:20,287 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-06 03:49:20,287 [printer.py:log_counts()] - # Fans: 3
2025-09-06 03:49:20,287 [printer.py:log_counts()] - # Output pins: 0
2025-09-06 03:49:20,287 [printer.py:log_counts()] - # PWM tools: 0
2025-09-06 03:49:20,287 [printer.py:log_counts()] - # Leds: 1
2025-09-06 03:49:20,538 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-06 03:49:20,540 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-06 03:49:20,540 [screen.py:init_klipper()] - Printer initialized
2025-09-06 03:49:20,541 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-06 03:49:20,541 [printer.py:change_state()] - Adding callback for state: ready
2025-09-06 03:49:20,565 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': ['[update_manager]: Failed to load extension timelapse: Invalid path for option `path` in section [update_manager timelapse]: Path `/home/sonic/moonraker-timelapse` does not exist', "Unparsed config option 'origin: https://github.com/mainsail-crew/moonraker-timelapse.git' detected in section [update_manager timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.", "Unparsed config option 'managed_services: moonraker' detected in section [update_manager timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error."], 'websocket_count': 5, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-06 03:49:20,792 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-06 03:49:20,793 [printer.py:log_counts()] - # Extruders: 1
2025-09-06 03:49:20,793 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-06 03:49:20,793 [printer.py:log_counts()] - # Fans: 3
2025-09-06 03:49:20,793 [printer.py:log_counts()] - # Output pins: 0
2025-09-06 03:49:20,793 [printer.py:log_counts()] - # PWM tools: 0
2025-09-06 03:49:20,793 [printer.py:log_counts()] - # Leds: 1
2025-09-06 03:49:21,040 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-06 03:49:21,041 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-06 03:49:21,042 [screen.py:init_klipper()] - Printer initialized
2025-09-06 03:49:21,136 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-06 03:49:21,137 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-06 03:49:21,138 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-06 03:49:21,143 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 03:49:21,220 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-06 03:49:21,360 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-06 03:49:21,378 [main_menu.py:add_device()] - Adding device: extruder
2025-09-06 03:49:21,386 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-06 03:49:21,429 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-06 03:49:21,441 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-06 03:49:21,480 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-06 03:49:21,506 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-06 03:49:50,538 [KlippyWebsocket.py:on_close()] - 1001 Server Shutdown
2025-09-06 03:49:50,545 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2025-09-06 03:49:50,546 [screen.py:websocket_disconnected()] - ### websocket_disconnected
2025-09-06 03:49:50,547 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 03:49:50,642 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-06 03:49:50,687 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-06 03:49:50,776 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-09-06 03:49:50,778 [screen.py:show_panel()] - Panel is already is in view
2025-09-06 03:49:50,796 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-06 03:49:50,796 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-06 03:49:55,140 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-09-06 03:49:55,140 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-09-06 03:49:55,153 [_logging.py:info()] - Websocket connected
2025-09-06 03:49:55,154 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-09-06 03:49:55,157 [screen.py:websocket_connected()] - ### websocket_connected
2025-09-06 03:49:55,270 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-09-06 03:49:55,279 [screen.py:show_popup_message()] - warning: 
Moonraker warnings:
[update_manager]:
 Failed to load extension timelapse:
 Invalid path for option `path` in section [update_manager timelapse]:
 Path `/home/sonic/moonraker-timelapse` does not exist
Unparsed config option 'origin:
 https:
//github.com/mainsail-crew/moonraker-timelapse.git' detected in section [update_manager timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.
Unparsed config option 'managed_services:
 moonraker' detected in section [update_manager timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.
Unparsed config section [timelapse] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.

Moonraker failed components:
[timelapse]

2025-09-06 03:49:55,303 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': 'http://192.168.1.14:8081/?action=stream', 'snapshot_url': 'http://192.168.1.14:8081/snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-09-06 03:49:55,323 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': ['timelapse'], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': ['[update_manager]: Failed to load extension timelapse: Invalid path for option `path` in section [update_manager timelapse]: Path `/home/sonic/moonraker-timelapse` does not exist', "Unparsed config option 'origin: https://github.com/mainsail-crew/moonraker-timelapse.git' detected in section [update_manager timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.", "Unparsed config option 'managed_services: moonraker' detected in section [update_manager timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.", 'Unparsed config section [timelapse] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.'], 'websocket_count': 5, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-06 03:49:55,432 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-06 03:49:55,433 [printer.py:log_counts()] - # Extruders: 1
2025-09-06 03:49:55,433 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-06 03:49:55,433 [printer.py:log_counts()] - # Fans: 3
2025-09-06 03:49:55,433 [printer.py:log_counts()] - # Output pins: 0
2025-09-06 03:49:55,433 [printer.py:log_counts()] - # PWM tools: 0
2025-09-06 03:49:55,433 [printer.py:log_counts()] - # Leds: 1
2025-09-06 03:49:55,684 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-06 03:49:55,686 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-06 03:49:55,686 [screen.py:init_klipper()] - Printer initialized
2025-09-06 03:49:55,687 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-06 03:49:55,687 [printer.py:change_state()] - Adding callback for state: ready
2025-09-06 03:49:55,966 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-06 03:49:55,966 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-06 03:49:55,967 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-06 03:49:55,976 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 03:49:56,055 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-06 03:49:56,190 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-06 03:49:56,202 [main_menu.py:add_device()] - Adding device: extruder
2025-09-06 03:49:56,208 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-06 03:49:56,239 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-06 03:49:56,251 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-06 03:49:56,287 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-06 03:49:56,311 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-06 03:50:05,651 [KlippyWebsocket.py:on_close()] - 1001 Server Shutdown
2025-09-06 03:50:05,654 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2025-09-06 03:50:05,655 [screen.py:websocket_disconnected()] - ### websocket_disconnected
2025-09-06 03:50:05,655 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 03:50:05,750 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-06 03:50:05,787 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-06 03:50:05,873 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-09-06 03:50:05,874 [screen.py:show_panel()] - Panel is already is in view
2025-09-06 03:50:05,889 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-06 03:50:05,890 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-06 03:50:10,165 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-09-06 03:50:10,166 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-09-06 03:50:10,179 [_logging.py:info()] - Websocket connected
2025-09-06 03:50:10,180 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-09-06 03:50:10,183 [screen.py:websocket_connected()] - ### websocket_connected
2025-09-06 03:50:10,294 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-09-06 03:50:10,300 [screen.py:show_popup_message()] - warning: 
Moonraker warnings:
[update_manager]:
 Failed to load extension timelapse:
 Invalid path for option `path` in section [update_manager timelapse]:
 Path `/home/sonic/moonraker-timelapse` does not exist
Unparsed config option 'origin:
 https:
//github.com/mainsail-crew/moonraker-timelapse.git' detected in section [update_manager timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.
Unparsed config option 'managed_services:
 moonraker' detected in section [update_manager timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.
Unparsed config section [timelapse] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.

Moonraker failed components:
[timelapse]

2025-09-06 03:50:10,323 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': 'http://192.168.1.14:8081/?action=stream', 'snapshot_url': 'http://192.168.1.14:8081/snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-09-06 03:50:10,339 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': ['timelapse'], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': ['[update_manager]: Failed to load extension timelapse: Invalid path for option `path` in section [update_manager timelapse]: Path `/home/sonic/moonraker-timelapse` does not exist', "Unparsed config option 'origin: https://github.com/mainsail-crew/moonraker-timelapse.git' detected in section [update_manager timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.", "Unparsed config option 'managed_services: moonraker' detected in section [update_manager timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.", 'Unparsed config section [timelapse] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.'], 'websocket_count': 3, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-06 03:50:10,416 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-06 03:50:10,416 [printer.py:log_counts()] - # Extruders: 1
2025-09-06 03:50:10,417 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-06 03:50:10,417 [printer.py:log_counts()] - # Fans: 3
2025-09-06 03:50:10,417 [printer.py:log_counts()] - # Output pins: 0
2025-09-06 03:50:10,417 [printer.py:log_counts()] - # PWM tools: 0
2025-09-06 03:50:10,417 [printer.py:log_counts()] - # Leds: 1
2025-09-06 03:50:10,677 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-06 03:50:10,679 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-06 03:50:10,681 [screen.py:init_klipper()] - Printer initialized
2025-09-06 03:50:10,682 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-06 03:50:10,683 [printer.py:change_state()] - Adding callback for state: ready
2025-09-06 03:50:10,950 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-06 03:50:10,950 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-06 03:50:10,951 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-06 03:50:10,960 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 03:50:11,050 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-06 03:50:11,215 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-06 03:50:11,232 [main_menu.py:add_device()] - Adding device: extruder
2025-09-06 03:50:11,240 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-06 03:50:11,274 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-06 03:50:11,289 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-06 03:50:11,342 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-06 03:50:11,373 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-06 03:51:11,211 [screensaver.py:show()] - Showing Screensaver
2025-09-06 03:58:57,170 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-06 03:58:57,171 [printer.py:change_state()] - Adding callback for state: printing
2025-09-06 03:58:57,172 [screensaver.py:close()] - Closing Screensaver
2025-09-06 03:58:57,176 [screen.py:wake_screen()] - Screen wake up
2025-09-06 03:58:57,498 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 60
2025-09-06 03:58:57,499 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 60 DPMS:True
2025-09-06 03:58:57,500 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 03:58:57,625 [screen.py:_load_panel()] - Loading panel: job_status
2025-09-06 03:58:57,898 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-06 03:58:57,925 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-06 03:58:58,006 [job_status.py:update_filename()] - Updating filename to obj_1_Mini_Spider_0.2mm_PLA_Generic Klipper Printer_2h16m.gcode
2025-09-06 03:58:58,009 [job_status.py:_update_file_metadata()] - Update Metadata. File: obj_1_Mini_Spider_0.2mm_PLA_Generic Klipper Printer_2h16m.gcode Size: 18029636
2025-09-06 03:59:58,145 [screensaver.py:show()] - Showing Screensaver
2025-09-06 04:02:09,944 [screensaver.py:close()] - Closing Screensaver
2025-09-06 04:02:09,949 [screen.py:wake_screen()] - Screen wake up
2025-09-06 04:02:12,490 [screen.py:_go_to_submenu()] - #### Go to submenu 
2025-09-06 04:02:12,490 [screen.py:_go_to_submenu()] - #### Menu __print
2025-09-06 04:02:12,498 [screen.py:_load_panel()] - Loading panel: menu
2025-09-06 04:02:12,562 [menu.py:evaluate_enable()] - moonraker connected True
2025-09-06 04:02:12,741 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2025-09-06 04:02:12,764 [menu.py:arrangeMenuItems()] - X > move
2025-09-06 04:02:12,774 [menu.py:arrangeMenuItems()] - X > power
2025-09-06 04:02:12,804 [menu.py:arrangeMenuItems()] - X > spoolman
2025-09-06 04:02:12,805 [menu.py:evaluate_enable()] - moonraker connected True
2025-09-06 04:02:12,815 [menu.py:arrangeMenuItems()] - X > pins
2025-09-06 04:02:12,839 [screen.py:_go_to_submenu()] - menu, {{ gettext('Print Control') }}, panel_name=, items=[{'notifications': {'name': "{{ gettext('Notifications') }}", 'icon': 'notifications', 'panel': 'notifications', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'temperature': {'name': "{{ gettext('Temperature') }}", 'icon': 'heat-up', 'panel': 'temperature', 'method': None, 'confirm': None, 'enable': '{{ (printer.temperature_devices.count > 0) or (printer.extruders.count > 0)}}', 'params': '{}', 'style': None}}, {'fan': {'name': "{{ gettext('Fan') }}", 'icon': 'fan', 'panel': 'fan', 'method': None, 'confirm': None, 'enable': '{{ printer.fans.count > 0 }}', 'params': '{}', 'style': None}}, {'move': {'name': "{{ gettext('Move') }}", 'icon': 'move', 'panel': 'move', 'method': None, 'confirm': None, 'enable': '{{ printer.pause_resume.is_paused }}', 'params': '{}', 'style': None}}, {'extrude': {'name': "{{ gettext('Extrude') }}", 'icon': 'extrude', 'panel': 'extrude', 'method': None, 'confirm': None, 'enable': '{{ printer.extruders.count > 0 }}', 'params': '{}', 'style': None}}, {'power': {'name': "{{ gettext('Power') }}", 'icon': 'shutdown', 'panel': 'power', 'method': None, 'confirm': None, 'enable': '{{ moonraker.power_devices.count > 0 }}', 'params': '{}', 'style': None}}, {'led': {'name': "{{ gettext('Leds') }}", 'icon': 'light', 'panel': 'led', 'method': None, 'confirm': None, 'enable': '{{ printer.leds.count > 0 }}', 'params': '{}', 'style': None}}, {'macros': {'name': "{{ gettext('Macros') }}", 'icon': 'custom-script', 'panel': 'gcode_macros', 'method': None, 'confirm': None, 'enable': '{{ printer.gcode_macros.count > 0 }}', 'params': '{}', 'style': None}}, {'camera': {'name': "{{ gettext('Camera') }}", 'icon': 'camera', 'panel': 'camera', 'method': None, 'confirm': None, 'enable': '{{ moonraker.cameras.count > 0 }}', 'params': '{}', 'style': None}}, {'console': {'name': "{{ gettext('Console') }}", 'icon': 'console', 'panel': 'console', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'limits': {'name': "{{ gettext('Limits') }}", 'icon': 'fine-tune', 'panel': 'limits', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'network': {'name': "{{ gettext('Network') }}", 'icon': 'network', 'panel': 'network', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'settings': {'name': 'KlipperScreen', 'icon': 'settings', 'panel': 'settings', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'spoolman': {'name': 'Spoolman', 'icon': 'spoolman', 'panel': 'spoolman', 'method': None, 'confirm': None, 'enable': '{{ moonraker.spoolman }}', 'params': '{}', 'style': None}}, {'system': {'name': "{{ gettext('System') }}", 'icon': 'info', 'panel': 'system', 'method': None, 'confirm': None, 'enable': '{{ moonraker_connected }}', 'params': '{}', 'style': None}}, {'pins': {'name': "{{ gettext('Pins') }}", 'icon': 'hashtag', 'panel': 'pins', 'method': None, 'confirm': None, 'enable': '{{ printer.output_pins.count > 0 or printer.pwm_tools.count > 0 }}', 'params': '{}', 'style': None}}]
2025-09-06 04:02:13,642 [screen.py:_load_panel()] - Loading panel: settings
2025-09-06 04:02:13,840 [screen.py:attach_panel()] - Current panel hierarchy: job_status >  > settings
2025-09-06 04:02:18,645 [screen_panel.py:on_dropdown_change()] - [main] screen_blanking changed to 300
2025-09-06 04:02:18,752 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-06 04:02:18,753 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-06 04:02:20,104 [screen_panel.py:on_dropdown_change()] - [main] screen_blanking_printing changed to 120
2025-09-06 04:02:20,206 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 120
2025-09-06 04:02:20,207 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 120 DPMS:True
2025-09-06 04:02:22,388 [screen_panel.py:on_dropdown_change()] - [main] screen_blanking_printing changed to 300
2025-09-06 04:02:22,490 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-06 04:02:22,491 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-06 04:02:24,789 [screen.py:_menu_go_back()] - #### Menu go back
2025-09-06 04:02:24,824 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2025-09-06 04:02:24,850 [menu.py:arrangeMenuItems()] - X > move
2025-09-06 04:02:24,862 [menu.py:arrangeMenuItems()] - X > power
2025-09-06 04:02:24,894 [menu.py:arrangeMenuItems()] - X > spoolman
2025-09-06 04:02:24,894 [menu.py:evaluate_enable()] - moonraker connected True
2025-09-06 04:02:24,902 [menu.py:arrangeMenuItems()] - X > pins
2025-09-06 04:02:25,636 [screen.py:_menu_go_back()] - #### Menu go home
2025-09-06 04:02:25,665 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-06 04:03:16,385 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_START"
2025-09-06 04:03:22,789 [screen.py:_load_panel()] - Loading panel: fine_tune
2025-09-06 04:03:22,869 [screen.py:attach_panel()] - Current panel hierarchy: job_status > fine_tune
2025-09-06 04:06:57,953 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:08:23,121 [screensaver.py:show()] - Showing Screensaver
2025-09-06 04:09:17,879 [screensaver.py:close()] - Closing Screensaver
2025-09-06 04:09:17,883 [screen.py:wake_screen()] - Screen wake up
2025-09-06 04:09:17,983 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:11:24,056 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:13:27,911 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:14:18,122 [screensaver.py:show()] - Showing Screensaver
2025-09-06 04:15:28,901 [screensaver.py:close()] - Closing Screensaver
2025-09-06 04:15:28,904 [screen.py:wake_screen()] - Screen wake up
2025-09-06 04:15:29,026 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:16:31,411 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:17:33,112 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:18:32,582 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:19:31,577 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:20:29,122 [screensaver.py:show()] - Showing Screensaver
2025-09-06 04:20:30,948 [screensaver.py:close()] - Closing Screensaver
2025-09-06 04:20:30,951 [screen.py:wake_screen()] - Screen wake up
2025-09-06 04:20:31,056 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:21:28,323 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:22:24,799 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:23:20,508 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:24:23,252 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:25:21,369 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:25:31,121 [screensaver.py:show()] - Showing Screensaver
2025-09-06 04:26:16,344 [screensaver.py:close()] - Closing Screensaver
2025-09-06 04:26:16,347 [screen.py:wake_screen()] - Screen wake up
2025-09-06 04:26:16,460 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:27:17,207 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:28:16,273 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:29:13,161 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:30:11,094 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:30:40,857 [screen.py:_menu_go_back()] - #### Menu go home
2025-09-06 04:30:40,908 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-06 04:31:05,076 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:31:54,178 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:32:42,543 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:33:31,409 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:34:18,372 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:35:05,193 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:35:41,123 [screensaver.py:show()] - Showing Screensaver
2025-09-06 04:35:50,991 [screensaver.py:close()] - Closing Screensaver
2025-09-06 04:35:50,998 [screen.py:wake_screen()] - Screen wake up
2025-09-06 04:35:51,095 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:36:35,599 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:37:20,037 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:38:02,315 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:38:44,588 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:39:26,230 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:40:06,384 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:40:46,935 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:40:51,124 [screensaver.py:show()] - Showing Screensaver
2025-09-06 04:41:26,944 [screensaver.py:close()] - Closing Screensaver
2025-09-06 04:41:26,953 [screen.py:wake_screen()] - Screen wake up
2025-09-06 04:41:27,042 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:42:07,233 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:42:47,763 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:43:27,255 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:44:07,984 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:44:47,240 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:45:26,288 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:46:06,653 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:46:27,123 [screensaver.py:show()] - Showing Screensaver
2025-09-06 04:46:45,526 [screensaver.py:close()] - Closing Screensaver
2025-09-06 04:46:45,532 [screen.py:wake_screen()] - Screen wake up
2025-09-06 04:46:45,634 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:47:25,204 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:48:05,687 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:48:45,241 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:49:24,131 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:50:03,108 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:50:41,900 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:51:21,304 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:51:46,121 [screensaver.py:show()] - Showing Screensaver
2025-09-06 04:52:04,689 [screensaver.py:close()] - Closing Screensaver
2025-09-06 04:52:04,697 [screen.py:wake_screen()] - Screen wake up
2025-09-06 04:52:04,787 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:52:45,485 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:53:28,911 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:54:09,037 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:54:50,494 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:55:31,147 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:56:14,977 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:56:56,302 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:57:05,126 [screensaver.py:show()] - Showing Screensaver
2025-09-06 04:57:41,221 [screensaver.py:close()] - Closing Screensaver
2025-09-06 04:57:41,232 [screen.py:wake_screen()] - Screen wake up
2025-09-06 04:57:41,350 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:58:22,041 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:59:04,863 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 04:59:48,192 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:00:33,877 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:01:19,794 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:02:06,554 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:02:42,122 [screensaver.py:show()] - Showing Screensaver
2025-09-06 05:02:53,698 [screensaver.py:close()] - Closing Screensaver
2025-09-06 05:02:53,719 [screen.py:wake_screen()] - Screen wake up
2025-09-06 05:02:53,841 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:03:41,156 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:04:29,244 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:05:18,544 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:06:08,420 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:06:59,079 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:07:50,293 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:07:54,122 [screensaver.py:show()] - Showing Screensaver
2025-09-06 05:08:44,526 [screensaver.py:close()] - Closing Screensaver
2025-09-06 05:08:44,534 [screen.py:wake_screen()] - Screen wake up
2025-09-06 05:08:44,629 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:09:37,355 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:10:31,067 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:11:22,347 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:12:07,220 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:12:58,428 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:13:45,135 [screensaver.py:show()] - Showing Screensaver
2025-09-06 05:13:53,772 [screensaver.py:close()] - Closing Screensaver
2025-09-06 05:13:53,780 [screen.py:wake_screen()] - Screen wake up
2025-09-06 05:13:53,874 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:14:45,196 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:15:36,837 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:16:29,735 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:17:19,486 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:18:09,756 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:18:54,137 [screensaver.py:show()] - Showing Screensaver
2025-09-06 05:18:59,263 [screensaver.py:close()] - Closing Screensaver
2025-09-06 05:18:59,275 [screen.py:wake_screen()] - Screen wake up
2025-09-06 05:18:59,397 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:19:47,397 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:20:37,012 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:21:25,722 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:22:11,584 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:22:55,710 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:23:43,020 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:24:00,126 [screensaver.py:show()] - Showing Screensaver
2025-09-06 05:24:29,636 [screensaver.py:close()] - Closing Screensaver
2025-09-06 05:24:29,646 [screen.py:wake_screen()] - Screen wake up
2025-09-06 05:24:29,732 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:25:14,126 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:25:57,842 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:26:41,553 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:27:27,444 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:28:07,847 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:28:43,971 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:29:13,089 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:29:30,121 [screensaver.py:show()] - Showing Screensaver
2025-09-06 05:29:36,002 [screensaver.py:close()] - Closing Screensaver
2025-09-06 05:29:36,009 [screen.py:wake_screen()] - Screen wake up
2025-09-06 05:29:36,092 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:29:59,309 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:30:20,949 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:30:42,820 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:31:03,653 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:31:25,250 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:31:45,803 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:32:05,215 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:32:25,890 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:32:46,452 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:33:06,790 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:33:26,920 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:33:47,343 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:34:07,443 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:34:28,019 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:34:36,122 [screensaver.py:show()] - Showing Screensaver
2025-09-06 05:34:48,172 [screensaver.py:close()] - Closing Screensaver
2025-09-06 05:34:48,178 [screen.py:wake_screen()] - Screen wake up
2025-09-06 05:34:48,264 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:35:07,785 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:35:27,770 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:35:47,034 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:36:06,846 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:36:27,391 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:36:47,569 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:37:07,220 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:37:27,304 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:37:46,993 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:38:07,120 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:38:26,993 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:38:47,482 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:39:08,817 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:39:30,000 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:39:49,122 [screensaver.py:show()] - Showing Screensaver
2025-09-06 05:39:51,127 [screensaver.py:close()] - Closing Screensaver
2025-09-06 05:39:51,133 [screen.py:wake_screen()] - Screen wake up
2025-09-06 05:39:51,227 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:40:12,398 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:40:33,171 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:40:53,649 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:41:13,760 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:41:34,505 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:41:53,818 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:42:13,183 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:42:32,938 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:42:51,892 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:43:10,521 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:43:30,550 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:43:50,181 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:44:09,480 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:44:29,173 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:44:48,108 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:44:52,122 [screensaver.py:show()] - Showing Screensaver
2025-09-06 05:45:07,038 [screensaver.py:close()] - Closing Screensaver
2025-09-06 05:45:07,045 [screen.py:wake_screen()] - Screen wake up
2025-09-06 05:45:07,137 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:45:25,919 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:45:44,395 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:46:02,873 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:46:20,963 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:46:40,161 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:46:58,951 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:47:17,177 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:47:35,585 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:47:53,958 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:48:12,052 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:48:30,928 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:48:49,594 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:49:08,637 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:49:27,607 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:49:47,591 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:50:07,122 [screensaver.py:show()] - Showing Screensaver
2025-09-06 05:50:07,237 [screensaver.py:close()] - Closing Screensaver
2025-09-06 05:50:07,242 [screen.py:wake_screen()] - Screen wake up
2025-09-06 05:50:07,324 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:50:27,456 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:50:47,905 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:51:08,593 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:51:28,543 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:51:48,327 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:52:07,558 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:52:27,319 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:52:46,015 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:53:02,890 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:53:19,947 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:53:36,157 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:53:51,868 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:54:07,843 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:54:23,136 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:54:38,367 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:54:53,456 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:55:08,019 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:55:08,133 [screensaver.py:show()] - Showing Screensaver
2025-09-06 05:55:23,328 [screensaver.py:close()] - Closing Screensaver
2025-09-06 05:55:23,341 [screen.py:wake_screen()] - Screen wake up
2025-09-06 05:55:23,430 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:55:38,467 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:55:53,615 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:56:08,191 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:56:23,295 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:56:38,318 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:56:54,636 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:57:07,736 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:57:20,180 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:57:36,438 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:57:48,749 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:57:59,487 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:58:07,977 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:58:15,913 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:58:24,921 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:58:33,489 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:58:42,233 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:58:50,605 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:58:58,742 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:59:06,971 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:59:15,359 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:59:23,553 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:59:32,350 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:59:40,760 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:59:49,370 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 05:59:57,543 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 06:00:06,352 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 06:00:14,764 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 06:00:24,141 [screensaver.py:show()] - Showing Screensaver
2025-09-06 06:00:27,828 [screensaver.py:close()] - Closing Screensaver
2025-09-06 06:00:27,843 [screen.py:wake_screen()] - Screen wake up
2025-09-06 06:00:27,933 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 06:00:36,296 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 06:00:45,673 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 06:00:56,640 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 06:01:04,774 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 06:01:12,505 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_TAKE_FRAME"
2025-09-06 06:01:22,243 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_RENDER"
2025-09-06 06:01:24,270 [screen.py:show_popup_message()] - error: Must home axis first: 50.000 310.000 72.800 [15631.423]
2025-09-06 06:01:24,404 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-09-06 06:01:24,404 [printer.py:change_state()] - Adding callback for state: ready
2025-09-06 06:01:24,423 [screen.py:show_popup_message()] - error: Must home axis first: 50.000 310.000 72.800 [15631.423]
2025-09-06 06:01:24,438 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'error'
2025-09-06 06:01:24,666 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-06 06:01:24,666 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-06 06:06:25,122 [screensaver.py:show()] - Showing Screensaver
2025-09-06 06:20:02,369 [screensaver.py:close()] - Closing Screensaver
2025-09-06 06:20:02,374 [screen.py:wake_screen()] - Screen wake up
2025-09-06 06:25:03,122 [screensaver.py:show()] - Showing Screensaver
2025-09-06 16:44:16,838 [KlippyWebsocket.py:on_close()] - 1001 Server Shutdown
2025-09-06 16:44:16,839 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2025-09-06 16:44:16,841 [screen.py:websocket_disconnected()] - ### websocket_disconnected
2025-09-06 16:44:16,842 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 16:44:16,858 [screensaver.py:close()] - Closing Screensaver
2025-09-06 16:44:16,860 [screen.py:wake_screen()] - Screen wake up
2025-09-06 16:44:17,038 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-06 16:44:17,074 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-06 16:44:17,154 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-09-06 16:44:17,155 [screen.py:show_panel()] - Panel is already is in view
2025-09-06 16:44:17,172 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-06 16:44:17,172 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-06 16:44:21,136 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-09-06 16:44:21,137 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-09-06 16:44:21,148 [_logging.py:info()] - Websocket connected
2025-09-06 16:44:21,149 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-09-06 16:44:21,151 [screen.py:websocket_connected()] - ### websocket_connected
2025-09-06 16:44:21,261 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-09-06 16:44:21,270 [screen.py:show_popup_message()] - warning: 
Moonraker warnings:
[update_manager]:
 Failed to load extension timelapse:
 Invalid path for option `path` in section [update_manager timelapse]:
 Path `/home/sonic/moonraker-timelapse` does not exist
Unparsed config option 'primary_branch:
 main' detected in section [update_manager timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.
Unparsed config option 'origin:
 https:
//github.com/mainsail-crew/moonraker-timelapse.git' detected in section [update_manager timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.
Unparsed config option 'managed_services:
 moonraker' detected in section [update_manager timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.
Unparsed config section [timelapse] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.

Moonraker failed components:
[timelapse]

2025-09-06 16:44:21,304 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': 'http://192.168.1.14:8081/?action=stream', 'snapshot_url': 'http://192.168.1.14:8081/snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-09-06 16:44:21,329 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': ['timelapse'], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': ['[update_manager]: Failed to load extension timelapse: Invalid path for option `path` in section [update_manager timelapse]: Path `/home/sonic/moonraker-timelapse` does not exist', "Unparsed config option 'primary_branch: main' detected in section [update_manager timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.", "Unparsed config option 'origin: https://github.com/mainsail-crew/moonraker-timelapse.git' detected in section [update_manager timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.", "Unparsed config option 'managed_services: moonraker' detected in section [update_manager timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.", 'Unparsed config section [timelapse] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.'], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-06 16:44:21,574 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-06 16:44:21,574 [printer.py:log_counts()] - # Extruders: 1
2025-09-06 16:44:21,574 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-06 16:44:21,574 [printer.py:log_counts()] - # Fans: 3
2025-09-06 16:44:21,574 [printer.py:log_counts()] - # Output pins: 0
2025-09-06 16:44:21,575 [printer.py:log_counts()] - # PWM tools: 0
2025-09-06 16:44:21,575 [printer.py:log_counts()] - # Leds: 1
2025-09-06 16:44:21,833 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-06 16:44:21,835 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-06 16:44:21,836 [screen.py:init_klipper()] - Printer initialized
2025-09-06 16:44:21,836 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-06 16:44:21,837 [printer.py:change_state()] - Adding callback for state: ready
2025-09-06 16:44:22,111 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-06 16:44:22,112 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-06 16:44:22,112 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-06 16:44:22,115 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 16:44:22,199 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-06 16:44:22,352 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-06 16:44:22,366 [main_menu.py:add_device()] - Adding device: extruder
2025-09-06 16:44:22,376 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-06 16:44:22,408 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-06 16:44:22,420 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-06 16:44:22,456 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-06 16:44:22,477 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-06 16:44:37,923 [KlippyWebsocket.py:on_close()] - 1001 Server Shutdown
2025-09-06 16:44:37,928 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2025-09-06 16:44:37,982 [screen.py:websocket_disconnected()] - ### websocket_disconnected
2025-09-06 16:44:37,983 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 16:44:38,086 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-06 16:44:38,147 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-06 16:44:38,267 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-09-06 16:44:38,268 [screen.py:show_panel()] - Panel is already is in view
2025-09-06 16:44:38,296 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-06 16:44:38,298 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-06 16:44:42,138 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-09-06 16:44:42,139 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-09-06 16:44:42,152 [_logging.py:info()] - Websocket connected
2025-09-06 16:44:42,153 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-09-06 16:44:42,156 [screen.py:websocket_connected()] - ### websocket_connected
2025-09-06 16:44:42,293 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-09-06 16:44:42,308 [screen.py:show_popup_message()] - warning: 
Moonraker warnings:
Unparsed config section [timelapse] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.

Moonraker failed components:
[timelapse]

2025-09-06 16:44:42,350 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': 'http://192.168.1.14:8081/?action=stream', 'snapshot_url': 'http://192.168.1.14:8081/snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-09-06 16:44:42,369 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': ['timelapse'], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': ['Unparsed config section [timelapse] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.'], 'websocket_count': 3, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-06 16:44:42,546 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-06 16:44:42,546 [printer.py:log_counts()] - # Extruders: 1
2025-09-06 16:44:42,547 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-06 16:44:42,547 [printer.py:log_counts()] - # Fans: 3
2025-09-06 16:44:42,547 [printer.py:log_counts()] - # Output pins: 0
2025-09-06 16:44:42,547 [printer.py:log_counts()] - # PWM tools: 0
2025-09-06 16:44:42,547 [printer.py:log_counts()] - # Leds: 1
2025-09-06 16:44:42,814 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-06 16:44:42,816 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-06 16:44:42,816 [screen.py:init_klipper()] - Printer initialized
2025-09-06 16:44:42,817 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-06 16:44:42,817 [printer.py:change_state()] - Adding callback for state: ready
2025-09-06 16:44:42,999 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-06 16:44:42,999 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-06 16:44:43,000 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-06 16:44:43,006 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 16:44:43,083 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-06 16:44:43,300 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-06 16:44:43,313 [main_menu.py:add_device()] - Adding device: extruder
2025-09-06 16:44:43,319 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-06 16:44:43,367 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-06 16:44:43,379 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-06 16:44:43,416 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-06 16:44:43,437 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-06 16:45:01,635 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-06 16:45:01,636 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-06 16:45:01,733 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-06 16:45:01,734 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-06 16:45:01,734 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-06 16:45:01,735 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 16:45:01,804 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-06 16:45:01,837 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-06 16:45:06,008 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': ['timelapse'], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': ['Unparsed config section [timelapse] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.'], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-06 16:45:06,254 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-06 16:45:06,254 [printer.py:log_counts()] - # Extruders: 1
2025-09-06 16:45:06,255 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-06 16:45:06,255 [printer.py:log_counts()] - # Fans: 3
2025-09-06 16:45:06,255 [printer.py:log_counts()] - # Output pins: 0
2025-09-06 16:45:06,255 [printer.py:log_counts()] - # PWM tools: 0
2025-09-06 16:45:06,255 [printer.py:log_counts()] - # Leds: 1
2025-09-06 16:45:06,506 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-06 16:45:06,508 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-06 16:45:06,509 [screen.py:init_klipper()] - Printer initialized
2025-09-06 16:45:06,510 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-06 16:45:06,511 [printer.py:change_state()] - Adding callback for state: ready
2025-09-06 16:45:06,533 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': ['timelapse'], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': ['Unparsed config section [timelapse] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.'], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-06 16:45:06,745 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-06 16:45:06,746 [printer.py:log_counts()] - # Extruders: 1
2025-09-06 16:45:06,746 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-06 16:45:06,747 [printer.py:log_counts()] - # Fans: 3
2025-09-06 16:45:06,747 [printer.py:log_counts()] - # Output pins: 0
2025-09-06 16:45:06,747 [printer.py:log_counts()] - # PWM tools: 0
2025-09-06 16:45:06,747 [printer.py:log_counts()] - # Leds: 1
2025-09-06 16:45:06,996 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-06 16:45:06,999 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-06 16:45:06,999 [screen.py:init_klipper()] - Printer initialized
2025-09-06 16:45:07,087 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-06 16:45:07,088 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-06 16:45:07,088 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-06 16:45:07,093 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 16:45:07,165 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-06 16:45:07,365 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-06 16:45:07,383 [main_menu.py:add_device()] - Adding device: extruder
2025-09-06 16:45:07,391 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-06 16:45:07,439 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-06 16:45:07,454 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-06 16:45:07,491 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-06 16:45:07,585 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-06 16:49:08,261 [KlippyWebsocket.py:on_close()] - 1001 Server Shutdown
2025-09-06 16:49:08,261 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2025-09-06 16:49:08,315 [screen.py:websocket_disconnected()] - ### websocket_disconnected
2025-09-06 16:49:08,315 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 16:49:08,395 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-06 16:49:08,433 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-06 16:49:08,525 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-09-06 16:49:08,526 [screen.py:show_panel()] - Panel is already is in view
2025-09-06 16:49:08,542 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-06 16:49:08,543 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-06 16:49:13,140 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-09-06 16:49:13,141 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-09-06 16:49:13,156 [_logging.py:info()] - Websocket connected
2025-09-06 16:49:13,156 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-09-06 16:49:13,158 [screen.py:websocket_connected()] - ### websocket_connected
2025-09-06 16:49:13,269 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-09-06 16:49:13,283 [screen.py:show_popup_message()] - warning: 
Moonraker warnings:
Unparsed config section [timelapse] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.

Moonraker failed components:
[timelapse]

2025-09-06 16:49:13,315 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': 'http://192.168.1.14:8081/?action=stream', 'snapshot_url': 'http://192.168.1.14:8081/snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-09-06 16:49:13,330 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager'], 'failed_components': ['timelapse'], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': ['Unparsed config section [timelapse] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.'], 'websocket_count': 3, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-06 16:49:13,410 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-06 16:49:13,410 [printer.py:log_counts()] - # Extruders: 1
2025-09-06 16:49:13,411 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-06 16:49:13,411 [printer.py:log_counts()] - # Fans: 3
2025-09-06 16:49:13,411 [printer.py:log_counts()] - # Output pins: 0
2025-09-06 16:49:13,411 [printer.py:log_counts()] - # PWM tools: 0
2025-09-06 16:49:13,411 [printer.py:log_counts()] - # Leds: 1
2025-09-06 16:49:13,659 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-06 16:49:13,661 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-06 16:49:13,661 [screen.py:init_klipper()] - Printer initialized
2025-09-06 16:49:13,662 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-06 16:49:13,663 [printer.py:change_state()] - Adding callback for state: ready
2025-09-06 16:49:13,818 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-06 16:49:13,819 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-06 16:49:13,819 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-06 16:49:13,826 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 16:49:13,899 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-06 16:49:14,103 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-06 16:49:14,122 [main_menu.py:add_device()] - Adding device: extruder
2025-09-06 16:49:14,129 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-06 16:49:14,168 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-06 16:49:14,186 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-06 16:49:14,230 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-06 16:49:14,255 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-06 16:52:23,733 [KlippyWebsocket.py:on_close()] - 1001 Server Shutdown
2025-09-06 16:52:23,733 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2025-09-06 16:52:23,753 [screen.py:websocket_disconnected()] - ### websocket_disconnected
2025-09-06 16:52:23,754 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 16:52:23,847 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-06 16:52:23,892 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-06 16:52:23,985 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-09-06 16:52:23,986 [screen.py:show_panel()] - Panel is already is in view
2025-09-06 16:52:24,007 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-06 16:52:24,008 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-06 16:52:28,129 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-06 16:52:28,130 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-06 16:52:32,129 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-06 16:52:32,130 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-06 16:52:36,145 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-09-06 16:52:36,146 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-09-06 16:52:36,157 [_logging.py:info()] - Websocket connected
2025-09-06 16:52:36,158 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-09-06 16:52:36,159 [screen.py:websocket_connected()] - ### websocket_connected
2025-09-06 16:52:36,274 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-09-06 16:52:36,289 [screen.py:show_popup_message()] - warning: 
Moonraker warnings:
Unparsed config section [gcode_macro GET_TIMELAPSE_SETUP] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.
Unparsed config section [gcode_macro _SET_TIMELAPSE_SETUP] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.
Unparsed config section [gcode_macro TIMELAPSE_TAKE_FRAME] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.
Unparsed config section [gcode_macro _TIMELAPSE_NEW_FRAME] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.
Unparsed config section [delayed_gcode _WAIT_TIMELAPSE_TAKE_FRAME] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.
Unparsed config section [gcode_macro HYPERLAPSE] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.
Unparsed config section [delayed_gcode _HYPERLAPSE_LOOP] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.
Unparsed config section [gcode_macro TIMELAPSE_RENDER] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.
Unparsed config section [delayed_gcode _WAIT_TIMELAPSE_RENDER] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.
Unparsed config section [gcode_macro TEST_STREAM_DELAY] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.

Moonraker failed components:
[delayed_gcode]
[gcode_macro]

2025-09-06 16:52:36,329 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': 'http://192.168.1.14:8081/?action=stream', 'snapshot_url': 'http://192.168.1.14:8081/snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-09-06 16:52:36,353 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': ['delayed_gcode', 'gcode_macro'], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': ['Unparsed config section [gcode_macro GET_TIMELAPSE_SETUP] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.', 'Unparsed config section [gcode_macro _SET_TIMELAPSE_SETUP] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.', 'Unparsed config section [gcode_macro TIMELAPSE_TAKE_FRAME] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.', 'Unparsed config section [gcode_macro _TIMELAPSE_NEW_FRAME] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.', 'Unparsed config section [delayed_gcode _WAIT_TIMELAPSE_TAKE_FRAME] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.', 'Unparsed config section [gcode_macro HYPERLAPSE] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.', 'Unparsed config section [delayed_gcode _HYPERLAPSE_LOOP] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.', 'Unparsed config section [gcode_macro TIMELAPSE_RENDER] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.', 'Unparsed config section [delayed_gcode _WAIT_TIMELAPSE_RENDER] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.', 'Unparsed config section [gcode_macro TEST_STREAM_DELAY] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.'], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-06 16:52:36,670 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-06 16:52:36,670 [printer.py:log_counts()] - # Extruders: 1
2025-09-06 16:52:36,671 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-06 16:52:36,671 [printer.py:log_counts()] - # Fans: 3
2025-09-06 16:52:36,671 [printer.py:log_counts()] - # Output pins: 0
2025-09-06 16:52:36,672 [printer.py:log_counts()] - # PWM tools: 0
2025-09-06 16:52:36,672 [printer.py:log_counts()] - # Leds: 1
2025-09-06 16:52:36,921 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-06 16:52:36,923 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-06 16:52:36,923 [screen.py:init_klipper()] - Printer initialized
2025-09-06 16:52:36,924 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-06 16:52:36,924 [printer.py:change_state()] - Adding callback for state: error
2025-09-06 16:52:37,346 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-06 16:52:37,348 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-06 16:52:37,349 [screen.py:show_panel()] - Panel is already is in view
2025-09-06 16:55:05,686 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-06 16:55:05,686 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-06 16:55:05,854 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-06 16:55:05,855 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-06 16:55:05,855 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-06 16:55:05,856 [screen.py:show_panel()] - Panel is already is in view
2025-09-06 16:55:10,152 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat'], 'failed_components': ['delayed_gcode', 'gcode_macro'], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': ['Unparsed config section [gcode_macro GET_TIMELAPSE_SETUP] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.', 'Unparsed config section [gcode_macro _SET_TIMELAPSE_SETUP] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.', 'Unparsed config section [gcode_macro TIMELAPSE_TAKE_FRAME] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.', 'Unparsed config section [gcode_macro _TIMELAPSE_NEW_FRAME] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.', 'Unparsed config section [delayed_gcode _WAIT_TIMELAPSE_TAKE_FRAME] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.', 'Unparsed config section [gcode_macro HYPERLAPSE] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.', 'Unparsed config section [delayed_gcode _HYPERLAPSE_LOOP] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.', 'Unparsed config section [gcode_macro TIMELAPSE_RENDER] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.', 'Unparsed config section [delayed_gcode _WAIT_TIMELAPSE_RENDER] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.', 'Unparsed config section [gcode_macro TEST_STREAM_DELAY] detected.  This may be the result of a component that failed to load.  In the future this will result in a startup error.'], 'websocket_count': 9, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-06 16:55:10,447 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-06 16:55:10,448 [printer.py:log_counts()] - # Extruders: 1
2025-09-06 16:55:10,448 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-06 16:55:10,448 [printer.py:log_counts()] - # Fans: 3
2025-09-06 16:55:10,448 [printer.py:log_counts()] - # Output pins: 0
2025-09-06 16:55:10,448 [printer.py:log_counts()] - # PWM tools: 0
2025-09-06 16:55:10,448 [printer.py:log_counts()] - # Leds: 1
2025-09-06 16:55:10,702 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-06 16:55:10,704 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-06 16:55:10,705 [screen.py:init_klipper()] - Printer initialized
2025-09-06 16:55:10,706 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-06 16:55:10,706 [printer.py:change_state()] - Adding callback for state: error
2025-09-06 16:55:10,836 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-06 16:55:10,836 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-06 16:55:10,837 [screen.py:show_panel()] - Panel is already is in view
2025-09-06 16:59:13,301 [KlippyWebsocket.py:on_close()] - 1001 Server Shutdown
2025-09-06 16:59:13,302 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2025-09-06 16:59:13,305 [screen.py:websocket_disconnected()] - ### websocket_disconnected
2025-09-06 16:59:13,305 [screen.py:show_panel()] - Panel is already is in view
2025-09-06 16:59:13,437 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-09-06 16:59:13,438 [screen.py:show_panel()] - Panel is already is in view
2025-09-06 16:59:13,464 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-06 16:59:13,464 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-06 16:59:18,153 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-09-06 16:59:18,155 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-09-06 16:59:18,175 [_logging.py:info()] - Websocket connected
2025-09-06 16:59:18,175 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-09-06 16:59:18,179 [screen.py:websocket_connected()] - ### websocket_connected
2025-09-06 16:59:18,304 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-09-06 16:59:18,314 [screen.py:show_popup_message()] - warning: 
Moonraker warnings:
Unparsed config option 'snapshot_url:
 http:
//127.0.0.1:
8081/snapshot' detected in section [timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.
Unparsed config option 'camera_stream_url:
 http:
//127.0.0.1:
8081/?action=stream' detected in section [timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.
Unparsed config option 'target_fps:
 30' detected in section [timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.
Unparsed config option 'cleanup:
 true' detected in section [timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.
Unparsed config option 'render_on_processing:
 true' detected in section [timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.

2025-09-06 16:59:18,348 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': 'http://192.168.1.14:8081/?action=stream', 'snapshot_url': 'http://192.168.1.14:8081/snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-09-06 16:59:18,383 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'timelapse'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': ["Unparsed config option 'snapshot_url: http://127.0.0.1:8081/snapshot' detected in section [timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.", "Unparsed config option 'camera_stream_url: http://127.0.0.1:8081/?action=stream' detected in section [timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.", "Unparsed config option 'target_fps: 30' detected in section [timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.", "Unparsed config option 'cleanup: true' detected in section [timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.", "Unparsed config option 'render_on_processing: true' detected in section [timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error."], 'websocket_count': 2, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-06 16:59:18,639 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-06 16:59:18,639 [printer.py:log_counts()] - # Extruders: 1
2025-09-06 16:59:18,640 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-06 16:59:18,640 [printer.py:log_counts()] - # Fans: 3
2025-09-06 16:59:18,640 [printer.py:log_counts()] - # Output pins: 0
2025-09-06 16:59:18,640 [printer.py:log_counts()] - # PWM tools: 0
2025-09-06 16:59:18,640 [printer.py:log_counts()] - # Leds: 1
2025-09-06 16:59:18,883 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-06 16:59:18,885 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-06 16:59:18,886 [screen.py:init_klipper()] - Printer initialized
2025-09-06 16:59:18,887 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-06 16:59:18,887 [printer.py:change_state()] - Adding callback for state: error
2025-09-06 16:59:19,286 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-06 16:59:19,287 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-06 16:59:19,287 [screen.py:show_panel()] - Panel is already is in view
2025-09-06 17:01:39,575 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-06 17:01:39,575 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-06 17:01:39,697 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-06 17:01:39,697 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-06 17:01:39,698 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-06 17:01:39,698 [screen.py:show_panel()] - Panel is already is in view
2025-09-06 17:01:44,144 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'timelapse'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': ["Unparsed config option 'snapshot_url: http://127.0.0.1:8081/snapshot' detected in section [timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.", "Unparsed config option 'camera_stream_url: http://127.0.0.1:8081/?action=stream' detected in section [timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.", "Unparsed config option 'target_fps: 30' detected in section [timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.", "Unparsed config option 'cleanup: true' detected in section [timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.", "Unparsed config option 'render_on_processing: true' detected in section [timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error."], 'websocket_count': 7, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-06 17:01:44,201 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-06 17:01:44,202 [printer.py:log_counts()] - # Extruders: 1
2025-09-06 17:01:44,202 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-06 17:01:44,202 [printer.py:log_counts()] - # Fans: 3
2025-09-06 17:01:44,202 [printer.py:log_counts()] - # Output pins: 0
2025-09-06 17:01:44,202 [printer.py:log_counts()] - # PWM tools: 0
2025-09-06 17:01:44,202 [printer.py:log_counts()] - # Leds: 1
2025-09-06 17:01:44,451 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-06 17:01:44,453 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-06 17:01:44,454 [screen.py:init_klipper()] - Printer initialized
2025-09-06 17:01:44,455 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2025-09-06 17:01:44,455 [printer.py:change_state()] - Adding callback for state: startup
2025-09-06 17:01:44,579 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-06 17:01:44,580 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-06 17:01:45,505 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2025-09-06 17:01:45,506 [printer.py:change_state()] - Adding callback for state: ready
2025-09-06 17:01:45,632 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-06 17:01:45,633 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-06 17:01:45,633 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-06 17:01:45,640 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 17:01:45,756 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-06 17:01:45,918 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-06 17:01:45,939 [main_menu.py:add_device()] - Adding device: extruder
2025-09-06 17:01:45,949 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-06 17:01:45,993 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-06 17:01:46,016 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-06 17:01:46,044 [screen.py:init_tempstore()] - Tempstore not ready: {} Retrying in 5 seconds
2025-09-06 17:01:46,116 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-09-06 17:01:46,145 [screen.py:init_tempstore()] - Tempstore not ready: {} Retrying in 5 seconds
2025-09-06 17:01:46,289 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-09-06 17:01:46,321 [screen.py:init_tempstore()] - Tempstore not ready: {} Retrying in 5 seconds
2025-09-06 17:01:46,515 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-09-06 17:01:46,554 [screen.py:init_tempstore()] - Tempstore not ready: {} Retrying in 5 seconds
2025-09-06 17:01:46,655 [screen.py:show_popup_message()] - error: // Unknown command:"_SET_TIMELAPSE_SETUP"
2025-09-06 17:01:46,702 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-09-06 17:01:46,722 [screen.py:init_tempstore()] - Tempstore not ready: {} Retrying in 5 seconds
2025-09-06 17:01:46,793 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-09-06 17:01:46,823 [screen.py:init_tempstore()] - Tempstore not ready: {} Retrying in 5 seconds
2025-09-06 17:01:46,883 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-09-06 17:01:46,915 [screen.py:init_tempstore()] - Tempstore not ready: {} Retrying in 5 seconds
2025-09-06 17:01:46,965 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-09-06 17:01:46,986 [screen.py:init_tempstore()] - Tempstore not ready: {} Retrying in 5 seconds
2025-09-06 17:01:47,041 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-09-06 17:01:47,076 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-06 17:01:47,101 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-06 17:03:49,558 [KlippyWebsocket.py:on_close()] - 1001 Server Shutdown
2025-09-06 17:03:49,559 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2025-09-06 17:03:49,602 [screen.py:websocket_disconnected()] - ### websocket_disconnected
2025-09-06 17:03:49,602 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 17:03:49,693 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-06 17:03:49,737 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-06 17:03:49,835 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-09-06 17:03:49,836 [screen.py:show_panel()] - Panel is already is in view
2025-09-06 17:03:49,855 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-06 17:03:49,855 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-06 17:03:54,136 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-06 17:03:54,136 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-06 17:03:58,147 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-09-06 17:03:58,149 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-09-06 17:03:58,168 [_logging.py:info()] - Websocket connected
2025-09-06 17:03:58,169 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-09-06 17:03:58,171 [screen.py:websocket_connected()] - ### websocket_connected
2025-09-06 17:03:58,353 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-09-06 17:03:58,369 [screen.py:show_popup_message()] - warning: 
Moonraker warnings:
Unparsed config option 'snapshot_url:
 http:
//127.0.0.1:
8081/snapshot' detected in section [timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.
Unparsed config option 'camera_stream_url:
 http:
//127.0.0.1:
8081/?action=stream' detected in section [timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.
Unparsed config option 'target_fps:
 30' detected in section [timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.
Unparsed config option 'cleanup:
 true' detected in section [timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.
Unparsed config option 'render_on_processing:
 true' detected in section [timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.

2025-09-06 17:03:58,426 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': 'http://192.168.1.14:8081/?action=stream', 'snapshot_url': 'http://192.168.1.14:8081/snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-09-06 17:03:58,446 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': ["Unparsed config option 'snapshot_url: http://127.0.0.1:8081/snapshot' detected in section [timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.", "Unparsed config option 'camera_stream_url: http://127.0.0.1:8081/?action=stream' detected in section [timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.", "Unparsed config option 'target_fps: 30' detected in section [timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.", "Unparsed config option 'cleanup: true' detected in section [timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.", "Unparsed config option 'render_on_processing: true' detected in section [timelapse].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error."], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-06 17:03:58,691 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-06 17:03:58,693 [printer.py:log_counts()] - # Extruders: 1
2025-09-06 17:03:58,693 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-06 17:03:58,693 [printer.py:log_counts()] - # Fans: 3
2025-09-06 17:03:58,693 [printer.py:log_counts()] - # Output pins: 0
2025-09-06 17:03:58,694 [printer.py:log_counts()] - # PWM tools: 0
2025-09-06 17:03:58,694 [printer.py:log_counts()] - # Leds: 1
2025-09-06 17:03:58,968 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-06 17:03:58,974 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-06 17:03:58,976 [screen.py:init_klipper()] - Printer initialized
2025-09-06 17:03:58,977 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-06 17:03:58,979 [printer.py:change_state()] - Adding callback for state: ready
2025-09-06 17:03:59,462 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-06 17:03:59,463 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-06 17:03:59,465 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-06 17:03:59,471 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 17:03:59,579 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-06 17:03:59,713 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-06 17:03:59,731 [main_menu.py:add_device()] - Adding device: extruder
2025-09-06 17:03:59,741 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-06 17:03:59,801 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-06 17:03:59,823 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-06 17:03:59,905 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-06 17:03:59,941 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-06 17:04:42,166 [KlippyWebsocket.py:on_close()] - 1001 Server Shutdown
2025-09-06 17:04:42,169 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2025-09-06 17:04:42,245 [screen.py:websocket_disconnected()] - ### websocket_disconnected
2025-09-06 17:04:42,246 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 17:04:42,332 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-06 17:04:42,372 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-06 17:04:42,471 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-09-06 17:04:42,472 [screen.py:show_panel()] - Panel is already is in view
2025-09-06 17:04:42,491 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-06 17:04:42,491 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-06 17:04:47,154 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-09-06 17:04:47,157 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-09-06 17:04:47,178 [_logging.py:info()] - Websocket connected
2025-09-06 17:04:47,178 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-09-06 17:04:47,180 [screen.py:websocket_connected()] - ### websocket_connected
2025-09-06 17:04:47,314 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-09-06 17:04:47,358 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': 'http://192.168.1.14:8081/?action=stream', 'snapshot_url': 'http://192.168.1.14:8081/snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-09-06 17:04:47,393 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'timelapse', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-06 17:04:47,681 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-06 17:04:47,684 [printer.py:log_counts()] - # Extruders: 1
2025-09-06 17:04:47,685 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-06 17:04:47,685 [printer.py:log_counts()] - # Fans: 3
2025-09-06 17:04:47,685 [printer.py:log_counts()] - # Output pins: 0
2025-09-06 17:04:47,685 [printer.py:log_counts()] - # PWM tools: 0
2025-09-06 17:04:47,685 [printer.py:log_counts()] - # Leds: 1
2025-09-06 17:04:47,878 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-06 17:04:47,880 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-06 17:04:47,881 [screen.py:init_klipper()] - Printer initialized
2025-09-06 17:04:47,882 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-06 17:04:47,884 [printer.py:change_state()] - Adding callback for state: ready
2025-09-06 17:04:47,903 [screen.py:show_popup_message()] - error: // Unknown command:"_SET_TIMELAPSE_SETUP"
2025-09-06 17:04:48,131 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-06 17:04:48,131 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-06 17:04:48,132 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-06 17:04:48,136 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 17:04:48,257 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-06 17:04:48,465 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-06 17:04:48,486 [main_menu.py:add_device()] - Adding device: extruder
2025-09-06 17:04:48,499 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-06 17:04:48,552 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-06 17:04:48,574 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-06 17:04:48,626 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-06 17:04:48,659 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-06 17:08:40,111 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-06 17:08:40,113 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-06 17:08:40,260 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-06 17:08:40,261 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-06 17:08:40,261 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-06 17:08:40,262 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 17:08:40,365 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-06 17:08:40,415 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-06 17:08:45,142 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'timelapse', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-06 17:08:45,364 [printer.py:log_counts()] - Klipper version: v0.13.0-233-g20d9c84a9
2025-09-06 17:08:45,367 [printer.py:log_counts()] - # Extruders: 1
2025-09-06 17:08:45,368 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-06 17:08:45,368 [printer.py:log_counts()] - # Fans: 3
2025-09-06 17:08:45,368 [printer.py:log_counts()] - # Output pins: 0
2025-09-06 17:08:45,368 [printer.py:log_counts()] - # PWM tools: 0
2025-09-06 17:08:45,370 [printer.py:log_counts()] - # Leds: 1
2025-09-06 17:08:45,638 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-06 17:08:45,642 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-06 17:08:45,644 [screen.py:init_klipper()] - Printer initialized
2025-09-06 17:08:45,645 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-06 17:08:45,654 [printer.py:change_state()] - Adding callback for state: ready
2025-09-06 17:08:45,785 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-06 17:08:45,786 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-06 17:08:45,787 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-06 17:08:45,790 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 17:08:45,881 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-06 17:08:46,001 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-06 17:08:46,017 [main_menu.py:add_device()] - Adding device: extruder
2025-09-06 17:08:46,025 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-06 17:08:46,061 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-06 17:08:46,075 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-06 17:08:46,126 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-06 17:08:46,157 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-06 17:10:14,151 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-06 17:10:14,152 [printer.py:change_state()] - Adding callback for state: printing
2025-09-06 17:10:14,549 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-06 17:10:14,550 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-06 17:10:14,551 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 17:10:14,695 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-06 17:10:14,881 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-06 17:10:14,904 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-06 17:10:14,940 [job_status.py:update_filename()] - Updating filename to xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_11m30s.gcode
2025-09-06 17:10:14,941 [job_status.py:_update_file_metadata()] - Update Metadata. File: xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_11m30s.gcode Size: 592631
2025-09-06 17:13:56,601 [screen.py:show_popup_message()] - error: // Unknown command:"TIMELAPSE_START"
2025-09-06 17:15:15,124 [screensaver.py:show()] - Showing Screensaver
2025-09-06 17:22:45,868 [functions.py:logging_exception_handler()] - Uncaught exception <class 'KeyError'>: 'sed3qNnVH'
  File "/home/sonic/KlipperScreen/screen.py", line 846, in _websocket_callback
    self.files.process_update(data)

  File "/home/sonic/KlipperScreen/ks_includes/files.py", line 99, in process_update
    self.files[data['item']['path']] = self.files.pop(data['source_item']['path'])
NoneType: None
2025-09-06 17:22:47,320 [functions.py:logging_exception_handler()] - Uncaught exception <class 'KeyError'>: 'sedMy2OXL'
  File "/home/sonic/KlipperScreen/screen.py", line 846, in _websocket_callback
    self.files.process_update(data)

  File "/home/sonic/KlipperScreen/ks_includes/files.py", line 99, in process_update
    self.files[data['item']['path']] = self.files.pop(data['source_item']['path'])
NoneType: None
2025-09-06 17:25:25,515 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2025-09-06 17:25:25,516 [printer.py:change_state()] - Adding callback for state: paused
2025-09-06 17:25:25,530 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'paused'
2025-09-06 17:25:25,592 [screensaver.py:close()] - Closing Screensaver
2025-09-06 17:25:25,614 [screen.py:wake_screen()] - Screen wake up
2025-09-06 17:25:26,044 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-06 17:25:26,045 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-06 17:25:26,045 [screen.py:show_panel()] - Panel is already is in view
2025-09-06 17:25:26,062 [screen.py:_load_panel()] - Loading panel: extrude
2025-09-06 17:25:26,195 [screen.py:attach_panel()] - Current panel hierarchy: job_status > extrude
2025-09-06 17:26:21,222 [printer.py:change_state()] - Changing state from 'paused' to 'printing'
2025-09-06 17:26:21,222 [printer.py:change_state()] - Adding callback for state: printing
2025-09-06 17:26:21,373 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-06 17:26:21,374 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-06 17:26:21,374 [screen.py:_menu_go_back()] - #### Menu go home
2025-09-06 17:26:21,384 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 17:26:21,463 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-06 17:26:21,572 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-06 17:26:21,586 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-06 17:26:21,602 [job_status.py:update_filename()] - Updating filename to xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_11m30s.gcode
2025-09-06 17:26:21,603 [job_status.py:_update_file_metadata()] - Update Metadata. File: xyzCalibration_cube_0.2mm_PLA_Generic Klipper Printer_11m30s.gcode Size: 592631
2025-09-06 17:26:21,628 [screen.py:attach_panel()] - Current panel hierarchy: job_status > job_status
2025-09-06 17:26:25,986 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-09-06 17:26:25,987 [printer.py:change_state()] - Adding callback for state: ready
2025-09-06 17:26:26,026 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'complete'
2025-09-06 17:26:26,528 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-06 17:26:26,529 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-06 17:26:33,310 [job_status.py:set_state()] - Changing job_status state from 'complete' to 'standby'
2025-09-06 17:29:37,496 [functions.py:logging_exception_handler()] - Uncaught exception <class 'KeyError'>: 'sedPblfCi'
  File "/home/sonic/KlipperScreen/screen.py", line 846, in _websocket_callback
    self.files.process_update(data)

  File "/home/sonic/KlipperScreen/ks_includes/files.py", line 99, in process_update
    self.files[data['item']['path']] = self.files.pop(data['source_item']['path'])
NoneType: None
2025-09-06 17:29:38,519 [functions.py:logging_exception_handler()] - Uncaught exception <class 'KeyError'>: 'sed8H2aOj'
  File "/home/sonic/KlipperScreen/screen.py", line 846, in _websocket_callback
    self.files.process_update(data)

  File "/home/sonic/KlipperScreen/ks_includes/files.py", line 99, in process_update
    self.files[data['item']['path']] = self.files.pop(data['source_item']['path'])
NoneType: None
2025-09-06 17:29:39,449 [functions.py:logging_exception_handler()] - Uncaught exception <class 'KeyError'>: 'sedXHu3Ni'
  File "/home/sonic/KlipperScreen/screen.py", line 846, in _websocket_callback
    self.files.process_update(data)

  File "/home/sonic/KlipperScreen/ks_includes/files.py", line 99, in process_update
    self.files[data['item']['path']] = self.files.pop(data['source_item']['path'])
NoneType: None
2025-09-06 17:31:27,134 [screensaver.py:show()] - Showing Screensaver
2025-09-06 17:31:34,457 [KlippyWebsocket.py:on_close()] - 1001 Server Shutdown
2025-09-06 17:31:34,460 [screen.py:websocket_disconnected()] - ### websocket_disconnected
2025-09-06 17:31:34,461 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 17:31:34,468 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2025-09-06 17:31:34,494 [screensaver.py:close()] - Closing Screensaver
2025-09-06 17:31:34,511 [screen.py:wake_screen()] - Screen wake up
2025-09-06 17:31:34,728 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-06 17:31:34,776 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-06 17:31:34,882 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-09-06 17:31:34,883 [screen.py:show_panel()] - Panel is already is in view
2025-09-06 17:31:34,905 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-06 17:31:34,906 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-06 17:31:39,130 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-06 17:31:39,130 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-06 17:31:43,129 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-06 17:31:43,129 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-06 17:31:47,136 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-06 17:31:47,136 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-06 17:31:51,128 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-06 17:31:51,129 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-06 17:31:55,122 [screen.py:connect_to_moonraker()] - Stopping Retries
2025-09-06 17:36:35,019 [screensaver.py:show()] - Showing Screensaver
2025-09-06 23:17:52,581 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-09-06 23:17:52,582 [functions.py:log_start()] - KlipperScreen Version: v0.4.6-11-g6b6f63b6
2025-09-06 23:17:52,582 [functions.py:log_start()] - Python version: 3.9
2025-09-06 23:17:52,790 [config.py:get_config_file_location()] - Passed config (-c): .
2025-09-06 23:17:52,791 [config.py:__init__()] - Config path location: /home/sonic/printer_data/config/KlipperScreen.conf
2025-09-06 23:17:52,795 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/main_menu.conf']
2025-09-06 23:17:52,811 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/splash_menu.conf']
2025-09-06 23:17:52,818 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/print_menu.conf']
2025-09-06 23:17:52,828 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/move_menu.conf']
2025-09-06 23:17:52,847 [config.py:log_config()] - ===== Config File =====

=======================
2025-09-06 23:17:52,850 [config.py:__init__()] - ====== Saved Def ======

[main]
screen_blanking = 300
screen_blanking_printing = 300
24htime = False
font_size = small
show_heater_power = True

=======================
2025-09-06 23:17:52,851 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_path": "",
      "moonraker_ssl": null,
      "moonraker_api_key": ""
    }
  }
]
2025-09-06 23:17:53,073 [config.py:create_translations()] - Selected lang: system_lang OS lang: en_US
2025-09-06 23:17:53,073 [config.py:install_language()] - Using lang en
2025-09-06 23:17:53,104 [screen.py:__init__()] - Display for xset: :0
2025-09-06 23:17:53,107 [screen.py:__init__()] - Screen 0: 1024x600
2025-09-06 23:17:53,107 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-09-06 23:17:53,110 [screen.py:__init__()] - Wayland: False Display name: :0
2025-09-06 23:17:53,115 [screen.py:__init__()] - Screen resolution: 1024x600
2025-09-06 23:17:53,441 [KlippyGtk.py:__init__()] - Font size: 20.2 (small)
2025-09-06 23:17:53,691 [base_panel.py:battery_percentage()] - Battery information not available.
2025-09-06 23:17:54,036 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-06 23:17:54,039 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-06 23:17:54,040 [screen.py:initial_connection()] - Default printer: None
2025-09-06 23:17:54,110 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-09-06 23:17:54,111 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 23:17:54,168 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-09-06 23:17:54,233 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-06 23:17:54,276 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-09-06 23:17:54,277 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-09-06 23:17:54,303 [_logging.py:info()] - Websocket connected
2025-09-06 23:17:54,304 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-09-06 23:17:54,342 [screen.py:websocket_connected()] - ### websocket_connected
2025-09-06 23:17:54,423 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-09-06 23:17:54,469 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': 'http://192.168.1.14:8081/?action=stream', 'snapshot_url': 'http://192.168.1.14:8081/snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-09-06 23:17:54,495 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'timelapse'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-06 23:17:54,545 [KlippyRest.py:_do_request()] - 404 Client Error>>Not Found for url>>http://127.0.0.1:7125/printer/info
2025-09-06 23:17:55,345 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'timelapse'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-06 23:17:55,573 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-06 23:17:55,576 [printer.py:log_counts()] - # Extruders: 1
2025-09-06 23:17:55,577 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-06 23:17:55,577 [printer.py:log_counts()] - # Fans: 3
2025-09-06 23:17:55,577 [printer.py:log_counts()] - # Output pins: 0
2025-09-06 23:17:55,577 [printer.py:log_counts()] - # PWM tools: 0
2025-09-06 23:17:55,577 [printer.py:log_counts()] - # Leds: 1
2025-09-06 23:17:55,831 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-06 23:17:55,838 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-06 23:17:55,839 [screen.py:init_klipper()] - Printer initialized
2025-09-06 23:17:55,840 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-06 23:17:55,840 [printer.py:change_state()] - Adding callback for state: ready
2025-09-06 23:17:55,933 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-06 23:17:55,934 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-06 23:17:55,934 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-06 23:17:55,943 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 23:17:56,016 [screen.py:_load_panel()] - Loading panel: main_menu
2025-09-06 23:17:56,214 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-06 23:17:56,243 [main_menu.py:add_device()] - Adding device: extruder
2025-09-06 23:17:56,256 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-06 23:17:56,297 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-06 23:17:56,310 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-06 23:17:56,434 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-06 23:17:56,492 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-06 23:17:59,064 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'timelapse'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-06 23:17:59,338 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-06 23:17:59,338 [printer.py:log_counts()] - # Extruders: 1
2025-09-06 23:17:59,339 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-06 23:17:59,339 [printer.py:log_counts()] - # Fans: 3
2025-09-06 23:17:59,339 [printer.py:log_counts()] - # Output pins: 0
2025-09-06 23:17:59,339 [printer.py:log_counts()] - # PWM tools: 0
2025-09-06 23:17:59,339 [printer.py:log_counts()] - # Leds: 1
2025-09-06 23:17:59,597 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-06 23:17:59,599 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-06 23:17:59,599 [screen.py:init_klipper()] - Printer initialized
2025-09-06 23:18:02,050 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-09-06 23:18:02,081 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-06 23:18:02,101 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-06 23:23:21,288 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-06 23:23:21,288 [printer.py:change_state()] - Adding callback for state: printing
2025-09-06 23:23:21,437 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-06 23:23:21,437 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-06 23:23:21,437 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 23:23:21,572 [screen.py:_load_panel()] - Loading panel: job_status
2025-09-06 23:23:21,764 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-06 23:23:21,778 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-06 23:23:21,812 [job_status.py:update_filename()] - Updating filename to result - 2025-07-25T081619.603_0.2mm_PLA_Generic Klipper Printer_4h59m.gcode
2025-09-06 23:23:21,813 [job_status.py:_update_file_metadata()] - Update Metadata. File: result - 2025-07-25T081619.603_0.2mm_PLA_Generic Klipper Printer_4h59m.gcode Size: 43665234
2025-09-06 23:23:24,072 [base_panel.py:battery_percentage()] - Battery information not available.
2025-09-06 23:28:22,076 [screensaver.py:show()] - Showing Screensaver
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           2025-09-06 23:26:38,020 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-09-06 23:26:38,022 [functions.py:log_start()] - KlipperScreen Version: v0.4.6-11-g6b6f63b6
2025-09-06 23:26:38,022 [functions.py:log_start()] - Python version: 3.9
2025-09-06 23:26:38,310 [config.py:get_config_file_location()] - Passed config (-c): .
2025-09-06 23:26:38,311 [config.py:__init__()] - Config path location: /home/sonic/printer_data/config/KlipperScreen.conf
2025-09-06 23:26:38,318 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/main_menu.conf']
2025-09-06 23:26:38,335 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/splash_menu.conf']
2025-09-06 23:26:38,342 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/print_menu.conf']
2025-09-06 23:26:38,352 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/move_menu.conf']
2025-09-06 23:26:38,366 [config.py:log_config()] - ===== Config File =====

=======================
2025-09-06 23:26:38,369 [config.py:__init__()] - ====== Saved Def ======

[main]
screen_blanking = 300
screen_blanking_printing = 300
24htime = False
font_size = small
show_heater_power = True

=======================
2025-09-06 23:26:38,370 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_path": "",
      "moonraker_ssl": null,
      "moonraker_api_key": ""
    }
  }
]
2025-09-06 23:26:38,592 [config.py:create_translations()] - Selected lang: system_lang OS lang: en_US
2025-09-06 23:26:38,592 [config.py:install_language()] - Using lang en
2025-09-06 23:26:38,616 [screen.py:__init__()] - Display for xset: :0
2025-09-06 23:26:38,619 [screen.py:__init__()] - Screen 0: 1024x600
2025-09-06 23:26:38,619 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-09-06 23:26:38,620 [screen.py:__init__()] - Wayland: False Display name: :0
2025-09-06 23:26:38,624 [screen.py:__init__()] - Screen resolution: 1024x600
2025-09-06 23:26:38,959 [KlippyGtk.py:__init__()] - Font size: 20.2 (small)
2025-09-06 23:26:39,234 [base_panel.py:battery_percentage()] - Battery information not available.
2025-09-06 23:26:39,528 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-06 23:26:39,529 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-06 23:26:39,530 [screen.py:initial_connection()] - Default printer: None
2025-09-06 23:26:39,599 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-09-06 23:26:39,600 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 23:26:39,660 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-09-06 23:26:39,732 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-06 23:26:39,771 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-09-06 23:26:39,771 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-09-06 23:26:39,787 [_logging.py:info()] - Websocket connected
2025-09-06 23:26:39,787 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-09-06 23:26:39,793 [screen.py:websocket_connected()] - ### websocket_connected
2025-09-06 23:26:39,872 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-09-06 23:26:39,889 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': 'http://192.168.1.14:8081/?action=stream', 'snapshot_url': 'http://192.168.1.14:8081/snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-09-06 23:26:39,904 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-06 23:26:40,115 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-06 23:26:40,115 [printer.py:log_counts()] - # Extruders: 1
2025-09-06 23:26:40,115 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-06 23:26:40,116 [printer.py:log_counts()] - # Fans: 3
2025-09-06 23:26:40,116 [printer.py:log_counts()] - # Output pins: 0
2025-09-06 23:26:40,116 [printer.py:log_counts()] - # PWM tools: 0
2025-09-06 23:26:40,116 [printer.py:log_counts()] - # Leds: 1
2025-09-06 23:26:40,395 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-06 23:26:40,397 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-06 23:26:40,398 [screen.py:init_klipper()] - Printer initialized
2025-09-06 23:26:40,399 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-06 23:26:40,399 [printer.py:change_state()] - Adding callback for state: ready
2025-09-06 23:26:40,630 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-06 23:26:40,631 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-06 23:26:40,631 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-06 23:26:40,640 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 23:26:40,734 [screen.py:_load_panel()] - Loading panel: main_menu
2025-09-06 23:26:41,102 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-06 23:26:41,124 [main_menu.py:add_device()] - Adding device: extruder
2025-09-06 23:26:41,147 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-06 23:26:41,204 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-06 23:26:41,222 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-06 23:26:41,280 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-06 23:26:41,311 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-06 23:34:42,249 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-06 23:34:42,249 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-06 23:34:42,340 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-06 23:34:42,340 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-06 23:34:42,342 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-06 23:34:42,343 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 23:34:42,428 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-06 23:34:42,478 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-06 23:34:46,563 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-06 23:34:46,628 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-06 23:34:46,630 [printer.py:log_counts()] - # Extruders: 1
2025-09-06 23:34:46,630 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-06 23:34:46,630 [printer.py:log_counts()] - # Fans: 3
2025-09-06 23:34:46,630 [printer.py:log_counts()] - # Output pins: 0
2025-09-06 23:34:46,630 [printer.py:log_counts()] - # PWM tools: 0
2025-09-06 23:34:46,630 [printer.py:log_counts()] - # Leds: 1
2025-09-06 23:34:46,881 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-06 23:34:46,882 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-06 23:34:46,883 [screen.py:init_klipper()] - Printer initialized
2025-09-06 23:34:46,884 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2025-09-06 23:34:46,884 [printer.py:change_state()] - Adding callback for state: startup
2025-09-06 23:34:46,952 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-06 23:34:46,952 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-06 23:34:47,372 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2025-09-06 23:34:47,372 [printer.py:change_state()] - Adding callback for state: ready
2025-09-06 23:34:47,433 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-06 23:34:47,433 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-06 23:34:47,433 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-06 23:34:47,436 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 23:34:47,512 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-06 23:34:47,605 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-06 23:34:47,618 [main_menu.py:add_device()] - Adding device: extruder
2025-09-06 23:34:47,624 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-06 23:34:47,655 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-06 23:34:47,667 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-06 23:34:47,698 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-06 23:34:47,718 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-06 23:35:15,547 [base_panel.py:battery_percentage()] - Battery information not available.
2025-09-06 23:36:37,220 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-06 23:36:37,221 [printer.py:change_state()] - Adding callback for state: printing
2025-09-06 23:36:37,322 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-06 23:36:37,323 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-06 23:36:37,323 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 23:36:37,397 [screen.py:_load_panel()] - Loading panel: job_status
2025-09-06 23:36:37,653 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-06 23:36:37,666 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-06 23:36:37,697 [job_status.py:update_filename()] - Updating filename to result - 2025-07-25T081619.603_0.2mm_PLA_Generic Klipper Printer_4h59m.gcode
2025-09-06 23:36:37,698 [job_status.py:_update_file_metadata()] - Update Metadata. File: result - 2025-07-25T081619.603_0.2mm_PLA_Generic Klipper Printer_4h59m.gcode Size: 43665101
2025-09-06 23:40:12,112 [screen.py:show_popup_message()] - error: // Unknown command:"HEAT_WAIT"
2025-09-06 23:40:18,746 [screen.py:_load_panel()] - Loading panel: temperature
2025-09-06 23:40:18,765 [temperature.py:add_device()] - Adding device: extruder
2025-09-06 23:40:18,773 [temperature.py:add_device()] - Adding device: heater_bed
2025-09-06 23:40:18,839 [screen.py:attach_panel()] - Current panel hierarchy: job_status > temperature
2025-09-06 23:40:18,841 [temperature.py:select_heater()] - Selecting extruder
2025-09-06 23:40:18,857 [screen.py:show_popup_message()] - error: Temperature too low to extrude
2025-09-06 23:40:18,865 [screen.py:show_popup_message()] - error: Temperature too low to extrude
2025-09-06 23:40:36,469 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-09-06 23:40:36,470 [printer.py:change_state()] - Adding callback for state: ready
2025-09-06 23:40:36,651 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-06 23:40:36,651 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-06 23:41:09,987 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-06 23:41:09,987 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-06 23:41:10,064 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-06 23:41:10,064 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-06 23:41:10,064 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-06 23:41:10,065 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 23:41:10,130 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-06 23:41:10,157 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-06 23:41:14,565 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-06 23:41:14,800 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-06 23:41:14,800 [printer.py:log_counts()] - # Extruders: 1
2025-09-06 23:41:14,800 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-06 23:41:14,801 [printer.py:log_counts()] - # Fans: 3
2025-09-06 23:41:14,801 [printer.py:log_counts()] - # Output pins: 0
2025-09-06 23:41:14,801 [printer.py:log_counts()] - # PWM tools: 0
2025-09-06 23:41:14,801 [printer.py:log_counts()] - # Leds: 1
2025-09-06 23:41:15,043 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-06 23:41:15,045 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-06 23:41:15,046 [screen.py:init_klipper()] - Printer initialized
2025-09-06 23:41:15,046 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-06 23:41:15,047 [printer.py:change_state()] - Adding callback for state: ready
2025-09-06 23:41:15,112 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-06 23:41:15,113 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-06 23:41:15,114 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-06 23:41:15,119 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 23:41:15,196 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-06 23:41:15,488 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-06 23:41:15,502 [main_menu.py:add_device()] - Adding device: extruder
2025-09-06 23:41:15,506 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-06 23:41:15,536 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-06 23:41:15,550 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-06 23:41:15,583 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-06 23:41:15,603 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-06 23:41:19,316 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-06 23:41:19,317 [printer.py:change_state()] - Adding callback for state: printing
2025-09-06 23:41:19,465 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-06 23:41:19,467 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-06 23:41:19,467 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-06 23:41:19,542 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-06 23:41:19,660 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-06 23:41:19,672 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-06 23:41:19,687 [job_status.py:update_filename()] - Updating filename to result - 2025-07-25T081619.603_0.2mm_PLA_Generic Klipper Printer_4h59m.gcode
2025-09-06 23:41:19,688 [job_status.py:_update_file_metadata()] - Update Metadata. File: result - 2025-07-25T081619.603_0.2mm_PLA_Generic Klipper Printer_4h59m.gcode Size: 43665101
2025-09-06 23:46:19,549 [screensaver.py:show()] - Showing Screensaver
2025-09-07 03:54:32,206 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2025-09-07 03:54:32,207 [printer.py:change_state()] - Adding callback for state: paused
2025-09-07 03:54:32,216 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'paused'
2025-09-07 03:54:32,225 [screensaver.py:close()] - Closing Screensaver
2025-09-07 03:54:32,233 [screen.py:wake_screen()] - Screen wake up
2025-09-07 03:54:32,384 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-07 03:54:32,385 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-07 03:54:32,385 [screen.py:show_panel()] - Panel is already is in view
2025-09-07 03:54:32,390 [screen.py:_load_panel()] - Loading panel: extrude
2025-09-07 03:54:32,497 [screen.py:attach_panel()] - Current panel hierarchy: job_status > extrude
2025-09-07 03:58:46,553 [printer.py:change_state()] - Changing state from 'paused' to 'ready'
2025-09-07 03:58:46,553 [printer.py:change_state()] - Adding callback for state: ready
2025-09-07 03:58:46,649 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-07 03:58:46,650 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-07 04:03:47,562 [screensaver.py:show()] - Showing Screensaver
2025-09-07 04:21:06,374 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-07 04:21:06,374 [printer.py:change_state()] - Adding callback for state: printing
2025-09-07 04:21:06,377 [screensaver.py:close()] - Closing Screensaver
2025-09-07 04:21:06,379 [screen.py:wake_screen()] - Screen wake up
2025-09-07 04:21:06,531 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-07 04:21:06,532 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-07 04:21:06,533 [screen.py:_menu_go_back()] - #### Menu go home
2025-09-07 04:21:06,539 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-07 04:21:06,638 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-07 04:21:06,747 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-07 04:21:06,763 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-07 04:21:06,777 [job_status.py:update_filename()] - Updating filename to result - 2025-07-25T081619.603_0.2mm_PLA_Generic Klipper Printer_2h40m.gcode
2025-09-07 04:21:06,778 [job_status.py:_update_file_metadata()] - Update Metadata. File: result - 2025-07-25T081619.603_0.2mm_PLA_Generic Klipper Printer_2h40m.gcode Size: 17062670
2025-09-07 04:21:06,814 [screen.py:attach_panel()] - Current panel hierarchy: job_status > job_status
2025-09-07 04:26:06,556 [screensaver.py:show()] - Showing Screensaver
2025-09-07 04:49:32,613 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-09-07 04:49:32,613 [printer.py:change_state()] - Adding callback for state: ready
2025-09-07 04:49:32,630 [screensaver.py:close()] - Closing Screensaver
2025-09-07 04:49:32,635 [screen.py:wake_screen()] - Screen wake up
2025-09-07 04:49:32,699 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'cancelled'
2025-09-07 04:49:32,820 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-07 04:49:32,821 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-07 04:51:07,465 [job_status.py:set_state()] - Changing job_status state from 'cancelled' to 'standby'
2025-09-07 04:51:58,788 [job_status.py:close_panel()] - Closing job_status panel
2025-09-07 04:51:58,789 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-07 04:51:58,792 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-07 04:51:58,872 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-07 04:51:58,997 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-07 04:51:59,013 [main_menu.py:add_device()] - Adding device: extruder
2025-09-07 04:51:59,019 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-07 04:51:59,052 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-07 04:51:59,069 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-07 04:52:17,402 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-07 04:52:17,403 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-07 04:52:17,467 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-07 04:52:17,468 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-07 04:52:17,468 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-07 04:52:17,469 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-07 04:52:17,533 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-07 04:52:17,566 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-07 04:52:21,567 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-07 04:52:21,767 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-07 04:52:21,767 [printer.py:log_counts()] - # Extruders: 1
2025-09-07 04:52:21,767 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-07 04:52:21,767 [printer.py:log_counts()] - # Fans: 3
2025-09-07 04:52:21,768 [printer.py:log_counts()] - # Output pins: 0
2025-09-07 04:52:21,768 [printer.py:log_counts()] - # PWM tools: 0
2025-09-07 04:52:21,768 [printer.py:log_counts()] - # Leds: 1
2025-09-07 04:52:22,032 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-07 04:52:22,033 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-07 04:52:22,034 [screen.py:init_klipper()] - Printer initialized
2025-09-07 04:52:22,035 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-07 04:52:22,035 [printer.py:change_state()] - Adding callback for state: ready
2025-09-07 04:52:22,094 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-07 04:52:22,095 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-07 04:52:22,096 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-07 04:52:22,099 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-07 04:52:22,162 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-07 04:52:22,272 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-07 04:52:22,327 [main_menu.py:add_device()] - Adding device: extruder
2025-09-07 04:52:22,427 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-07 04:52:22,453 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-07 04:52:22,466 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-07 04:52:22,508 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-07 04:52:22,536 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-07 04:53:12,973 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-07 04:53:12,973 [printer.py:change_state()] - Adding callback for state: printing
2025-09-07 04:53:13,199 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-07 04:53:13,200 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-07 04:53:13,200 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-07 04:53:13,323 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-07 04:53:13,540 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-07 04:53:13,559 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-07 04:53:13,573 [job_status.py:update_filename()] - Updating filename to result - 2025-07-25T081619.603_0.2mm_PLA_Generic Klipper Printer_2h39m.gcode
2025-09-07 04:53:13,574 [job_status.py:_update_file_metadata()] - Update Metadata. File: result - 2025-07-25T081619.603_0.2mm_PLA_Generic Klipper Printer_2h39m.gcode Size: 17061979
2025-09-07 04:58:13,549 [screensaver.py:show()] - Showing Screensaver
2025-09-07 05:54:46,090 [KlippyWebsocket.py:on_close()] - 1001 Server Shutdown
2025-09-07 05:54:46,091 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2025-09-07 05:54:46,092 [screen.py:websocket_disconnected()] - ### websocket_disconnected
2025-09-07 05:54:46,093 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-07 05:54:46,104 [screensaver.py:close()] - Closing Screensaver
2025-09-07 05:54:46,107 [screen.py:wake_screen()] - Screen wake up
2025-09-07 05:54:46,244 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-07 05:54:46,280 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-07 05:54:46,359 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-09-07 05:54:46,360 [screen.py:show_panel()] - Panel is already is in view
2025-09-07 05:54:46,375 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-07 05:54:46,375 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-07 05:54:50,557 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-07 05:54:50,557 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-07 05:54:54,563 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-09-07 05:54:54,563 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-09-07 05:54:54,573 [_logging.py:info()] - Websocket connected
2025-09-07 05:54:54,574 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-09-07 05:54:54,575 [screen.py:websocket_connected()] - ### websocket_connected
2025-09-07 05:54:54,652 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-09-07 05:54:54,668 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': 'http://192.168.1.14:8081/?action=stream', 'snapshot_url': 'http://192.168.1.14:8081/snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-09-07 05:54:54,681 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 4, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-07 05:54:54,758 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-07 05:54:54,759 [printer.py:log_counts()] - # Extruders: 1
2025-09-07 05:54:54,759 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-07 05:54:54,759 [printer.py:log_counts()] - # Fans: 3
2025-09-07 05:54:54,759 [printer.py:log_counts()] - # Output pins: 0
2025-09-07 05:54:54,759 [printer.py:log_counts()] - # PWM tools: 0
2025-09-07 05:54:54,759 [printer.py:log_counts()] - # Leds: 1
2025-09-07 05:54:55,031 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-07 05:54:55,032 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-07 05:54:55,033 [screen.py:init_klipper()] - Printer initialized
2025-09-07 05:54:55,033 [printer.py:change_state()] - Changing state from 'disconnected' to 'printing'
2025-09-07 05:54:55,034 [printer.py:change_state()] - Adding callback for state: printing
2025-09-07 05:54:55,089 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-07 05:54:55,090 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-07 05:54:55,090 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-07 05:54:55,147 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-07 05:54:55,217 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-07 05:54:55,226 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-07 05:54:55,238 [job_status.py:update_filename()] - Updating filename to result - 2025-07-25T081619.603_0.2mm_PLA_Generic Klipper Printer_2h39m.gcode
2025-09-07 05:54:55,239 [job_status.py:get_file_metadata()] - Cannot find file metadata. Listening for updated metadata
2025-09-07 05:54:55,241 [job_status.py:show_file_thumbnail()] - no pixbuf
2025-09-07 05:54:55,318 [job_status.py:_update_file_metadata()] - Update Metadata. File: result - 2025-07-25T081619.603_0.2mm_PLA_Generic Klipper Printer_2h39m.gcode Size: 17061979
2025-09-07 05:59:55,549 [screensaver.py:show()] - Showing Screensaver
2025-09-07 06:50:14,991 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-09-07 06:50:14,992 [printer.py:change_state()] - Adding callback for state: ready
2025-09-07 06:50:15,007 [screensaver.py:close()] - Closing Screensaver
2025-09-07 06:50:15,012 [screen.py:wake_screen()] - Screen wake up
2025-09-07 06:50:15,065 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'cancelled'
2025-09-07 06:50:15,173 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-07 06:50:15,173 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-07 06:52:06,625 [job_status.py:set_state()] - Changing job_status state from 'cancelled' to 'standby'
2025-09-07 06:53:23,178 [screen.py:show_popup_message()] - error: Extrude only move too long (102.000mm vs 100.000mm)
2025-09-07 06:53:29,688 [screen.py:show_popup_message()] - error: Extrude only move too long (102.000mm vs 100.000mm)
2025-09-07 06:55:07,967 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-07 06:55:07,967 [printer.py:change_state()] - Adding callback for state: printing
2025-09-07 06:55:07,986 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-07 06:55:07,994 [job_status.py:update_filename()] - Updating filename to Overhang+Angle+Test+30-85_0.2mm_PLA_Generic Klipper Printer_27m30s.gcode
2025-09-07 06:55:07,994 [job_status.py:get_file_metadata()] - Cannot find file metadata. Listening for updated metadata
2025-09-07 06:55:07,997 [job_status.py:show_file_thumbnail()] - no pixbuf
2025-09-07 06:55:08,023 [job_status.py:_update_file_metadata()] - Update Metadata. File: Overhang+Angle+Test+30-85_0.2mm_PLA_Generic Klipper Printer_27m30s.gcode Size: 1834555
2025-09-07 06:55:08,199 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-07 06:55:08,199 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-07 06:55:08,200 [screen.py:show_panel()] - Panel is already is in view
2025-09-07 07:00:08,549 [screensaver.py:show()] - Showing Screensaver
2025-09-07 07:17:23,463 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-09-07 07:17:23,464 [printer.py:change_state()] - Adding callback for state: ready
2025-09-07 07:17:23,481 [screensaver.py:close()] - Closing Screensaver
2025-09-07 07:17:23,486 [screen.py:wake_screen()] - Screen wake up
2025-09-07 07:17:23,556 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'cancelled'
2025-09-07 07:17:23,669 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-07 07:17:23,669 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-07 07:22:24,549 [screensaver.py:show()] - Showing Screensaver
2025-09-07 09:32:05,932 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-07 09:32:05,933 [printer.py:change_state()] - Adding callback for state: printing
2025-09-07 09:32:05,945 [job_status.py:set_state()] - Changing job_status state from 'cancelled' to 'printing'
2025-09-07 09:32:05,955 [screensaver.py:close()] - Closing Screensaver
2025-09-07 09:32:05,964 [screen.py:wake_screen()] - Screen wake up
2025-09-07 09:32:06,103 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-07 09:32:06,103 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-07 09:32:06,104 [screen.py:show_panel()] - Panel is already is in view
2025-09-07 09:37:06,555 [screensaver.py:show()] - Showing Screensaver
2025-09-07 09:55:27,725 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2025-09-07 09:55:27,725 [printer.py:change_state()] - Adding callback for state: ready
2025-09-07 09:55:27,733 [screensaver.py:close()] - Closing Screensaver
2025-09-07 09:55:27,738 [screen.py:wake_screen()] - Screen wake up
2025-09-07 09:55:27,806 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'cancelled'
2025-09-07 09:55:27,943 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-07 09:55:27,944 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-07 09:57:05,561 [job_status.py:set_state()] - Changing job_status state from 'cancelled' to 'standby'
2025-09-07 09:57:18,143 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-07 09:57:18,143 [printer.py:change_state()] - Adding callback for state: printing
2025-09-07 09:57:18,179 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-07 09:57:18,187 [job_status.py:update_filename()] - Updating filename to result - 2025-07-25T081619.603_0.2mm_PLA_Generic Klipper Printer_3h38m.gcode
2025-09-07 09:57:18,188 [job_status.py:_update_file_metadata()] - Update Metadata. File: result - 2025-07-25T081619.603_0.2mm_PLA_Generic Klipper Printer_3h38m.gcode Size: 25677364
2025-09-07 09:57:18,329 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-07 09:57:18,330 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-07 09:57:18,330 [screen.py:show_panel()] - Panel is already is in view
2025-09-07 10:02:18,549 [screensaver.py:show()] - Showing Screensaver
2025-09-07 13:19:55,584 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2025-09-07 13:19:55,584 [printer.py:change_state()] - Adding callback for state: paused
2025-09-07 13:19:55,595 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'paused'
2025-09-07 13:19:55,607 [screensaver.py:close()] - Closing Screensaver
2025-09-07 13:19:55,617 [screen.py:wake_screen()] - Screen wake up
2025-09-07 13:19:55,727 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-07 13:19:55,728 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-07 13:19:55,729 [screen.py:show_panel()] - Panel is already is in view
2025-09-07 13:19:55,732 [screen.py:show_panel()] - Reinitializing panel extrude
2025-09-07 13:19:55,825 [screen.py:attach_panel()] - Current panel hierarchy: job_status > extrude
2025-09-07 13:22:43,651 [printer.py:change_state()] - Changing state from 'paused' to 'ready'
2025-09-07 13:22:43,651 [printer.py:change_state()] - Adding callback for state: ready
2025-09-07 13:22:43,739 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-07 13:22:43,739 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-07 13:27:44,549 [screensaver.py:show()] - Showing Screensaver
2025-09-08 03:30:19,627 [screensaver.py:close()] - Closing Screensaver
2025-09-08 03:30:19,628 [screen.py:wake_screen()] - Screen wake up
2025-09-08 03:30:22,679 [screen.py:_menu_go_back()] - #### Menu go home
2025-09-08 03:30:22,713 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-08 03:30:22,724 [job_status.py:set_state()] - Changing job_status state from 'paused' to 'standby'
2025-09-08 03:30:24,166 [job_status.py:close_panel()] - Closing job_status panel
2025-09-08 03:30:24,167 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-08 03:30:24,170 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-08 03:30:24,232 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-08 03:30:24,320 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-08 03:30:24,333 [main_menu.py:add_device()] - Adding device: extruder
2025-09-08 03:30:24,337 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-08 03:30:24,365 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-08 03:30:24,379 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-08 03:30:24,413 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-08 03:30:24,432 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-08 03:30:26,746 [screen.py:_go_to_submenu()] - #### Go to submenu more
2025-09-08 03:30:26,746 [screen.py:_go_to_submenu()] - #### Menu __main
2025-09-08 03:30:26,754 [screen.py:_load_panel()] - Loading panel: menu
2025-09-08 03:30:26,815 [menu.py:evaluate_enable()] - moonraker connected True
2025-09-08 03:30:27,043 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2025-09-08 03:30:27,080 [menu.py:arrangeMenuItems()] - X > more pins
2025-09-08 03:30:27,084 [menu.py:arrangeMenuItems()] - X > more power
2025-09-08 03:30:27,106 [menu.py:arrangeMenuItems()] - X > more spoolman
2025-09-08 03:30:27,107 [menu.py:evaluate_enable()] - moonraker connected True
2025-09-08 03:30:27,131 [screen.py:_go_to_submenu()] - menu, {{ gettext('More') }}, panel_name=more, items=[{'more bedlevel': {'name': "{{ gettext('Bed Level') }}", 'icon': 'bed-level', 'panel': 'bed_level', 'method': None, 'confirm': None, 'enable': "{{ 'bed_screws' in printer.config_sections or 'screws_tilt_adjust' in printer.config_sections }}", 'params': '{}', 'style': None}}, {'more bedmesh': {'name': "{{ gettext('Bed Mesh') }}", 'icon': 'bed-mesh', 'panel': 'bed_mesh', 'method': None, 'confirm': None, 'enable': "{{ 'bed_mesh' in printer.config_sections }}", 'params': '{}', 'style': None}}, {'more zoffset': {'name': "{{ gettext('Z Calibrate') }}", 'icon': 'z-farther', 'panel': 'zcalibrate', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more limits': {'name': "{{ gettext('Limits') }}", 'icon': 'fine-tune', 'panel': 'limits', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more fan': {'name': "{{ gettext('Fan') }}", 'icon': 'fan', 'panel': 'fan', 'method': None, 'confirm': None, 'enable': '{{ printer.fans.count > 0 }}', 'params': '{}', 'style': None}}, {'more led': {'name': "{{ gettext('Leds') }}", 'icon': 'light', 'panel': 'led', 'method': None, 'confirm': None, 'enable': '{{ printer.leds.count > 0 }}', 'params': '{}', 'style': None}}, {'more macros': {'name': "{{ gettext('Macros') }}", 'icon': 'custom-script', 'panel': 'gcode_macros', 'method': None, 'confirm': None, 'enable': '{{ printer.gcode_macros.count > 0 }}', 'params': '{}', 'style': None}}, {'more pins': {'name': "{{ gettext('Pins') }}", 'icon': 'hashtag', 'panel': 'pins', 'method': None, 'confirm': None, 'enable': '{{ printer.output_pins.count > 0 or printer.pwm_tools.count > 0 }}', 'params': '{}', 'style': None}}, {'more power': {'name': "{{ gettext('Power') }}", 'icon': 'shutdown', 'panel': 'power', 'method': None, 'confirm': None, 'enable': '{{ moonraker.power_devices.count > 0 }}', 'params': '{}', 'style': None}}, {'more camera': {'name': "{{ gettext('Camera') }}", 'icon': 'camera', 'panel': 'camera', 'method': None, 'confirm': None, 'enable': '{{ moonraker.cameras.count > 0 }}', 'params': '{}', 'style': None}}, {'more console': {'name': "{{ gettext('Console') }}", 'icon': 'console', 'panel': 'console', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more updater': {'name': "{{ gettext('Update') }}", 'icon': 'refresh', 'panel': 'updater', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more input_shaper': {'name': "{{ gettext('Input Shaper') }}", 'icon': 'move', 'panel': 'input_shaper', 'method': None, 'confirm': None, 'enable': "{{ 'input_shaper' in printer.config_sections }}", 'params': '{}', 'style': None}}, {'more save': {'name': "{{ gettext('Save Config') }}", 'icon': 'complete', 'panel': None, 'method': 'ks_confirm_save', 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more settings': {'name': 'KlipperScreen', 'icon': 'settings', 'panel': 'settings', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more network': {'name': "{{ gettext('Network') }}", 'icon': 'network', 'panel': 'network', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more notifications': {'name': "{{ gettext('Notifications') }}", 'icon': 'notifications', 'panel': 'notifications', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more spoolman': {'name': 'Spoolman', 'icon': 'spoolman', 'panel': 'spoolman', 'method': None, 'confirm': None, 'enable': '{{ moonraker.spoolman }}', 'params': '{}', 'style': None}}, {'more system': {'name': "{{ gettext('System') }}", 'icon': 'info', 'panel': 'system', 'method': None, 'confirm': None, 'enable': '{{ moonraker_connected }}', 'params': '{}', 'style': None}}, {'more fine_tune': {'name': "{{ gettext('Fine Tuning') }}", 'icon': 'fine-tune', 'panel': 'fine_tune', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}]
2025-09-08 03:30:28,602 [screen.py:_load_panel()] - Loading panel: led
2025-09-08 03:30:28,610 [led.py:color_selector()] - neopixel my_neopixel
2025-09-08 03:30:28,614 [led.py:set_color()] - color: [1, 0, 0, 0]
2025-09-08 03:30:28,621 [led.py:set_color()] - color: [0, 1, 0, 0]
2025-09-08 03:30:28,625 [led.py:set_color()] - color: [0, 0, 1, 0]
2025-09-08 03:30:28,651 [KlippyRest.py:_do_request()] - 404 Client Error>>Key miscellaneous in namespace mainsail not found for url>>http://127.0.0.1:7125/server/database/item?namespace=mainsail&key=miscellaneous.entries
2025-09-08 03:30:28,652 [led.py:color_selector()] - Adding preset: off
2025-09-08 03:30:28,653 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-09-08 03:30:28,655 [led.py:color_selector()] - Adding preset: on
2025-09-08 03:30:28,656 [led.py:set_color()] - color: [1, 1, 1, 0]
2025-09-08 03:30:28,692 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > led
2025-09-08 03:30:28,695 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-09-08 03:30:28,702 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-09-08 03:30:28,875 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-09-08 03:30:29,125 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-09-08 03:30:29,376 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-09-08 03:30:29,626 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-09-08 03:30:29,878 [led.py:set_color()] - color: [1.0, 1.0, 1.0, 0.0]
2025-09-08 03:30:30,015 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-09-08 03:30:30,016 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_LED LED="my_neopixel" RED=0.0 GREEN=0.0 BLUE=0.0 WHITE=0.0 SYNC=0 TRANSMIT=1'}
2025-09-08 03:30:30,127 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-09-08 03:30:30,378 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-09-08 03:30:30,628 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-09-08 03:30:30,879 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-09-08 03:30:31,131 [led.py:set_color()] - color: [0.0, 0.0, 0.0, 0.0]
2025-09-08 03:30:31,180 [screen.py:_menu_go_back()] - #### Menu go home
2025-09-08 03:30:31,204 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-08 03:35:31,550 [screensaver.py:show()] - Showing Screensaver
2025-09-08 14:19:56,871 [screensaver.py:close()] - Closing Screensaver
2025-09-08 14:19:56,872 [screen.py:wake_screen()] - Screen wake up
2025-09-08 14:20:02,835 [screen.py:show_panel()] - Reinitializing panel temperature
2025-09-08 14:20:02,846 [warnings.py:_showwarnmsg()] - /home/sonic/KlipperScreen/panels/temperature.py:25: Warning: ../../../gobject/gsignal.c:2732: instance '0xff0b38' has no handler with id '18437'
  self.long_press = {}

2025-09-08 14:20:02,847 [warnings.py:_showwarnmsg()] - /home/sonic/KlipperScreen/panels/temperature.py:25: Warning: ../../../gobject/gsignal.c:2732: instance '0xff0bb0' has no handler with id '18463'
  self.long_press = {}

2025-09-08 14:20:02,858 [temperature.py:add_device()] - Adding device: extruder
2025-09-08 14:20:02,863 [temperature.py:add_device()] - Adding device: heater_bed
2025-09-08 14:20:02,895 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > temperature
2025-09-08 14:20:02,896 [temperature.py:select_heater()] - Selecting extruder
2025-09-08 14:20:02,897 [temperature.py:select_heater()] - Selecting heater_bed
2025-09-08 14:20:06,463 [temperature.py:select_heater()] - Deselecting extruder
2025-09-08 14:20:11,289 [temperature.py:verify_max_temp()] - 220/400
2025-09-08 14:20:11,290 [KlippyWebsocket.py:set_tool_temp()] - Sending set_tool_temp: M104 T0 S220
2025-09-08 14:23:46,874 [screen.py:_menu_go_back()] - #### Menu go back
2025-09-08 14:23:46,899 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-08 14:23:49,586 [screen.py:show_panel()] - Reinitializing panel extrude
2025-09-08 14:23:49,631 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > extrude
2025-09-08 14:23:51,979 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: M83
2025-09-08 14:23:51,981 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G1 E-10 F120'}
2025-09-08 14:23:56,646 [extrude.py:change_speed()] - ### Speed 25
2025-09-08 14:23:57,450 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: M83
2025-09-08 14:23:57,451 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G1 E+10 F1500'}
2025-09-08 14:24:05,277 [extrude.py:change_speed()] - ### Speed 5
2025-09-08 14:24:06,102 [extrude.py:change_distance()] - ### Distance 25
2025-09-08 14:24:07,571 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: M83
2025-09-08 14:24:07,573 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G1 E+25 F300'}
2025-09-08 14:24:16,702 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: M83
2025-09-08 14:24:16,703 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G1 E+25 F300'}
2025-09-08 14:24:24,719 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: M83
2025-09-08 14:24:24,721 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G1 E+25 F300'}
2025-09-08 14:25:24,976 [screen.py:_menu_go_back()] - #### Menu go home
2025-09-08 14:25:25,000 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-08 14:25:33,071 [screen.py:_load_panel()] - Loading panel: move
2025-09-08 14:25:33,159 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-09-08 14:25:34,295 [screen.py:_load_panel()] - Loading panel: menu
2025-09-08 14:25:34,415 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move > menu
2025-09-08 14:25:34,434 [menu.py:arrangeMenuItems()] - X > homing quad_gantry_level
2025-09-08 14:25:34,438 [menu.py:arrangeMenuItems()] - X > homing Z-Tilt
2025-09-08 14:25:35,448 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G28'}
2025-09-08 14:28:52,959 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-08 14:28:52,959 [printer.py:change_state()] - Adding callback for state: printing
2025-09-08 14:28:53,052 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 14:28:53,052 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 14:28:53,052 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-08 14:28:53,161 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-08 14:28:53,255 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-08 14:28:53,267 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-08 14:28:53,281 [job_status.py:update_filename()] - Updating filename to flowrate_0_0.2mm_PLA_Generic Klipper Printer_32m42s.gcode
2025-09-08 14:28:53,282 [job_status.py:_update_file_metadata()] - Update Metadata. File: flowrate_0_0.2mm_PLA_Generic Klipper Printer_32m42s.gcode Size: 829109
2025-09-08 14:33:53,548 [screensaver.py:show()] - Showing Screensaver
2025-09-08 15:05:26,351 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2025-09-08 15:05:26,352 [printer.py:change_state()] - Adding callback for state: paused
2025-09-08 15:05:26,361 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'paused'
2025-09-08 15:05:26,374 [screensaver.py:close()] - Closing Screensaver
2025-09-08 15:05:26,387 [screen.py:wake_screen()] - Screen wake up
2025-09-08 15:05:26,564 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 15:05:26,564 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 15:05:26,565 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 15:05:26,568 [screen.py:show_panel()] - Reinitializing panel extrude
2025-09-08 15:05:26,643 [screen.py:attach_panel()] - Current panel hierarchy: job_status > extrude
2025-09-08 15:05:35,379 [printer.py:change_state()] - Changing state from 'paused' to 'ready'
2025-09-08 15:05:35,379 [printer.py:change_state()] - Adding callback for state: ready
2025-09-08 15:05:35,477 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 15:05:35,478 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 15:06:48,711 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-08 15:06:48,712 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 15:06:48,801 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 15:06:48,802 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 15:06:48,802 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 15:06:48,806 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-08 15:06:48,884 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-08 15:06:48,964 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-08 15:06:53,563 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 15:06:53,731 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 15:06:53,731 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 15:06:53,732 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 15:06:53,732 [printer.py:log_counts()] - # Fans: 3
2025-09-08 15:06:53,732 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 15:06:53,732 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 15:06:53,732 [printer.py:log_counts()] - # Leds: 1
2025-09-08 15:06:53,989 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 15:06:53,990 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 15:06:53,991 [screen.py:init_klipper()] - Printer initialized
2025-09-08 15:06:53,991 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-08 15:06:53,992 [printer.py:change_state()] - Adding callback for state: error
2025-09-08 15:06:54,062 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 15:06:54,063 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 15:06:54,063 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 15:08:46,790 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-08 15:08:46,791 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 15:08:46,875 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 15:08:46,876 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 15:08:46,876 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 15:08:46,876 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 15:08:51,563 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 15:08:51,755 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 15:08:51,755 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 15:08:51,756 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 15:08:51,756 [printer.py:log_counts()] - # Fans: 3
2025-09-08 15:08:51,756 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 15:08:51,756 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 15:08:51,756 [printer.py:log_counts()] - # Leds: 1
2025-09-08 15:08:52,009 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 15:08:52,010 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 15:08:52,011 [screen.py:init_klipper()] - Printer initialized
2025-09-08 15:08:52,011 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-08 15:08:52,011 [printer.py:change_state()] - Adding callback for state: error
2025-09-08 15:08:52,068 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 15:08:52,068 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 15:08:52,068 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 15:09:03,672 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-08 15:09:03,673 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 15:09:03,748 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 15:09:03,749 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 15:09:03,749 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 15:09:03,750 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 15:09:07,592 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 15:09:07,703 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 15:09:07,704 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 15:09:07,704 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 15:09:07,704 [printer.py:log_counts()] - # Fans: 3
2025-09-08 15:09:07,704 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 15:09:07,705 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 15:09:07,705 [printer.py:log_counts()] - # Leds: 1
2025-09-08 15:09:07,956 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 15:09:07,957 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 15:09:07,957 [screen.py:init_klipper()] - Printer initialized
2025-09-08 15:09:07,958 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-08 15:09:07,958 [printer.py:change_state()] - Adding callback for state: error
2025-09-08 15:09:08,021 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 15:09:08,022 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 15:09:08,022 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 15:09:10,246 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-08 15:09:10,246 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 15:09:10,321 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 15:09:10,322 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 15:09:10,322 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 15:09:10,322 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 15:09:14,564 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 15:09:14,849 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 15:09:14,849 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 15:09:14,850 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 15:09:14,850 [printer.py:log_counts()] - # Fans: 3
2025-09-08 15:09:14,850 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 15:09:14,850 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 15:09:14,850 [printer.py:log_counts()] - # Leds: 1
2025-09-08 15:09:15,100 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 15:09:15,101 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 15:09:15,102 [screen.py:init_klipper()] - Printer initialized
2025-09-08 15:09:15,103 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-08 15:09:15,103 [printer.py:change_state()] - Adding callback for state: error
2025-09-08 15:09:15,159 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 15:09:15,159 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 15:09:15,159 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 15:09:18,255 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-08 15:09:18,256 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 15:09:18,329 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 15:09:18,329 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 15:09:18,330 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 15:09:18,331 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 15:09:22,564 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 15:09:22,617 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 15:09:22,618 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 15:09:22,618 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 15:09:22,618 [printer.py:log_counts()] - # Fans: 3
2025-09-08 15:09:22,618 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 15:09:22,618 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 15:09:22,618 [printer.py:log_counts()] - # Leds: 1
2025-09-08 15:09:22,870 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 15:09:22,873 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 15:09:22,873 [screen.py:init_klipper()] - Printer initialized
2025-09-08 15:09:22,874 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-08 15:09:22,874 [printer.py:change_state()] - Adding callback for state: error
2025-09-08 15:09:22,940 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 15:09:22,940 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 15:09:22,940 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 15:11:31,309 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-08 15:11:31,309 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 15:11:31,400 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 15:11:31,401 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 15:11:31,401 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 15:11:31,402 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 15:11:35,564 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 15:11:35,730 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 15:11:35,730 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 15:11:35,731 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 15:11:35,731 [printer.py:log_counts()] - # Fans: 3
2025-09-08 15:11:35,731 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 15:11:35,731 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 15:11:35,731 [printer.py:log_counts()] - # Leds: 1
2025-09-08 15:11:35,992 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 15:11:35,994 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 15:11:35,996 [screen.py:init_klipper()] - Printer initialized
2025-09-08 15:11:35,999 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2025-09-08 15:11:35,999 [printer.py:change_state()] - Adding callback for state: startup
2025-09-08 15:11:36,060 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 15:11:36,061 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 15:11:42,514 [printer.py:change_state()] - Changing state from 'startup' to 'disconnected'
2025-09-08 15:11:42,514 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 15:11:42,597 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 15:11:42,599 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 15:11:42,600 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 15:11:42,600 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 15:11:46,567 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 15:11:46,684 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 15:11:46,685 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 15:11:46,685 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 15:11:46,685 [printer.py:log_counts()] - # Fans: 3
2025-09-08 15:11:46,685 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 15:11:46,686 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 15:11:46,686 [printer.py:log_counts()] - # Leds: 1
2025-09-08 15:11:46,943 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 15:11:46,945 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 15:11:46,946 [screen.py:init_klipper()] - Printer initialized
2025-09-08 15:11:46,947 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2025-09-08 15:11:46,947 [printer.py:change_state()] - Adding callback for state: startup
2025-09-08 15:11:47,014 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 15:11:47,015 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 15:13:16,189 [printer.py:change_state()] - Changing state from 'startup' to 'error'
2025-09-08 15:13:16,189 [printer.py:change_state()] - Adding callback for state: error
2025-09-08 15:13:16,246 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 15:13:16,246 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 15:13:16,247 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 15:18:16,549 [screensaver.py:show()] - Showing Screensaver
2025-09-08 15:21:51,861 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-08 15:21:51,861 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 15:21:51,862 [screensaver.py:close()] - Closing Screensaver
2025-09-08 15:21:51,865 [screen.py:wake_screen()] - Screen wake up
2025-09-08 15:21:52,018 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 15:21:52,019 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 15:21:52,019 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 15:21:52,020 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 15:21:56,566 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 15:21:56,808 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 15:21:56,809 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 15:21:56,809 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 15:21:56,809 [printer.py:log_counts()] - # Fans: 3
2025-09-08 15:21:56,809 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 15:21:56,809 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 15:21:56,809 [printer.py:log_counts()] - # Leds: 1
2025-09-08 15:21:57,064 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 15:21:57,065 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 15:21:57,065 [screen.py:init_klipper()] - Printer initialized
2025-09-08 15:21:57,066 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-08 15:21:57,067 [printer.py:change_state()] - Adding callback for state: ready
2025-09-08 15:21:57,122 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 15:21:57,123 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 15:21:57,123 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-08 15:21:57,127 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-08 15:21:57,199 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-08 15:21:57,300 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-08 15:21:57,316 [main_menu.py:add_device()] - Adding device: extruder
2025-09-08 15:21:57,322 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-08 15:21:57,360 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-08 15:21:57,507 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-08 15:21:57,545 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-08 15:21:57,573 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-08 15:26:57,643 [screensaver.py:show()] - Showing Screensaver
2025-09-08 15:47:08,670 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-08 15:47:08,670 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 15:47:08,671 [screensaver.py:close()] - Closing Screensaver
2025-09-08 15:47:08,680 [screen.py:wake_screen()] - Screen wake up
2025-09-08 15:47:08,854 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 15:47:08,855 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 15:47:08,855 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 15:47:08,856 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-08 15:47:08,931 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-08 15:47:08,965 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-08 15:47:13,563 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 15:47:13,632 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 15:47:13,632 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 15:47:13,632 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 15:47:13,632 [printer.py:log_counts()] - # Fans: 3
2025-09-08 15:47:13,632 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 15:47:13,633 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 15:47:13,633 [printer.py:log_counts()] - # Leds: 1
2025-09-08 15:47:13,890 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 15:47:13,891 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 15:47:13,891 [screen.py:init_klipper()] - Printer initialized
2025-09-08 15:47:13,892 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-08 15:47:13,892 [printer.py:change_state()] - Adding callback for state: ready
2025-09-08 15:47:13,949 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 15:47:13,950 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 15:47:13,950 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-08 15:47:13,953 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-08 15:47:14,017 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-08 15:47:14,115 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-08 15:47:14,135 [main_menu.py:add_device()] - Adding device: extruder
2025-09-08 15:47:14,271 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-08 15:47:14,298 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-08 15:47:14,311 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-08 15:47:14,349 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-08 15:47:14,376 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-08 15:49:00,490 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-08 15:49:00,490 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 15:49:00,570 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 15:49:00,571 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 15:49:00,571 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 15:49:00,572 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-08 15:49:00,643 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-08 15:49:00,684 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-08 15:49:04,562 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 15:49:04,653 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 15:49:04,654 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 15:49:04,654 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 15:49:04,654 [printer.py:log_counts()] - # Fans: 3
2025-09-08 15:49:04,654 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 15:49:04,654 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 15:49:04,654 [printer.py:log_counts()] - # Leds: 1
2025-09-08 15:49:04,904 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 15:49:04,905 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 15:49:04,905 [screen.py:init_klipper()] - Printer initialized
2025-09-08 15:49:04,906 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-08 15:49:04,906 [printer.py:change_state()] - Adding callback for state: error
2025-09-08 15:49:04,963 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 15:49:04,964 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 15:49:04,964 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 15:49:24,278 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-08 15:49:24,279 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 15:49:24,351 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 15:49:24,352 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 15:49:24,352 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 15:49:24,353 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 15:49:28,565 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 15:49:28,863 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 15:49:28,864 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 15:49:28,864 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 15:49:28,865 [printer.py:log_counts()] - # Fans: 3
2025-09-08 15:49:28,865 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 15:49:28,865 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 15:49:28,865 [printer.py:log_counts()] - # Leds: 1
2025-09-08 15:49:29,114 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 15:49:29,116 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 15:49:29,117 [screen.py:init_klipper()] - Printer initialized
2025-09-08 15:49:29,117 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-08 15:49:29,118 [printer.py:change_state()] - Adding callback for state: error
2025-09-08 15:49:29,183 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 15:49:29,184 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 15:49:29,184 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 15:50:06,366 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-08 15:50:06,367 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 15:50:06,453 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 15:50:06,454 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 15:50:06,454 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 15:50:06,455 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 15:50:10,563 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 15:50:10,703 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 15:50:10,703 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 15:50:10,703 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 15:50:10,704 [printer.py:log_counts()] - # Fans: 3
2025-09-08 15:50:10,704 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 15:50:10,704 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 15:50:10,704 [printer.py:log_counts()] - # Leds: 1
2025-09-08 15:50:10,959 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 15:50:10,961 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 15:50:10,962 [screen.py:init_klipper()] - Printer initialized
2025-09-08 15:50:10,962 [printer.py:change_state()] - Changing state from 'disconnected' to 'shutdown'
2025-09-08 15:50:10,963 [printer.py:change_state()] - Adding callback for state: shutdown
2025-09-08 15:50:11,034 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 15:50:11,035 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 15:50:11,035 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 15:51:34,459 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2025-09-08 15:51:34,463 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 15:51:34,540 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 15:51:34,540 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 15:51:34,540 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 15:51:34,541 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 15:51:38,564 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 15:51:38,664 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 15:51:38,664 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 15:51:38,664 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 15:51:38,664 [printer.py:log_counts()] - # Fans: 3
2025-09-08 15:51:38,664 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 15:51:38,664 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 15:51:38,665 [printer.py:log_counts()] - # Leds: 1
2025-09-08 15:51:38,914 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 15:51:38,915 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 15:51:38,916 [screen.py:init_klipper()] - Printer initialized
2025-09-08 15:51:38,917 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2025-09-08 15:51:38,917 [printer.py:change_state()] - Adding callback for state: startup
2025-09-08 15:51:38,973 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 15:51:38,974 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 15:51:39,401 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2025-09-08 15:51:39,402 [printer.py:change_state()] - Adding callback for state: ready
2025-09-08 15:51:39,457 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 15:51:39,458 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 15:51:39,458 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-08 15:51:39,462 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-08 15:51:39,523 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-08 15:51:39,619 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-08 15:51:39,632 [main_menu.py:add_device()] - Adding device: extruder
2025-09-08 15:51:39,637 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-08 15:51:39,669 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-08 15:51:39,684 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-08 15:51:39,717 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-08 15:51:39,736 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-08 15:51:52,081 [screen.py:show_popup_message()] - error: Invalid adxl345 id (got 0 vs e5).
2025-09-08 15:55:14,179 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-08 15:55:14,179 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 15:55:14,255 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 15:55:14,255 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 15:55:14,256 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 15:55:14,257 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-08 15:55:14,329 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-08 15:55:14,364 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-08 15:55:18,568 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 15:55:18,616 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 15:55:18,616 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 15:55:18,616 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 15:55:18,617 [printer.py:log_counts()] - # Fans: 3
2025-09-08 15:55:18,617 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 15:55:18,617 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 15:55:18,617 [printer.py:log_counts()] - # Leds: 1
2025-09-08 15:55:18,869 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 15:55:18,870 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 15:55:18,870 [screen.py:init_klipper()] - Printer initialized
2025-09-08 15:55:18,873 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-08 15:55:18,873 [printer.py:change_state()] - Adding callback for state: error
2025-09-08 15:55:18,937 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 15:55:18,938 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 15:55:18,939 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 16:00:19,551 [screensaver.py:show()] - Showing Screensaver
2025-09-08 16:05:38,825 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-08 16:05:38,825 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 16:05:38,828 [screensaver.py:close()] - Closing Screensaver
2025-09-08 16:05:38,832 [screen.py:wake_screen()] - Screen wake up
2025-09-08 16:05:38,960 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 16:05:38,961 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 16:05:38,961 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 16:05:38,961 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 16:05:43,563 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 16:05:43,719 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 16:05:43,720 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 16:05:43,720 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 16:05:43,720 [printer.py:log_counts()] - # Fans: 3
2025-09-08 16:05:43,720 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 16:05:43,720 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 16:05:43,720 [printer.py:log_counts()] - # Leds: 1
2025-09-08 16:05:43,971 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 16:05:43,972 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 16:05:43,973 [screen.py:init_klipper()] - Printer initialized
2025-09-08 16:05:43,973 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-08 16:05:43,973 [printer.py:change_state()] - Adding callback for state: error
2025-09-08 16:05:44,028 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 16:05:44,028 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 16:05:44,028 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 16:05:53,670 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-08 16:05:53,671 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 16:05:53,757 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 16:05:53,758 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 16:05:53,759 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 16:05:53,759 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 16:05:57,566 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 16:05:57,824 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 16:05:57,824 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 16:05:57,824 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 16:05:57,825 [printer.py:log_counts()] - # Fans: 3
2025-09-08 16:05:57,825 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 16:05:57,826 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 16:05:57,826 [printer.py:log_counts()] - # Leds: 1
2025-09-08 16:05:58,063 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 16:05:58,065 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 16:05:58,066 [screen.py:init_klipper()] - Printer initialized
2025-09-08 16:05:58,067 [printer.py:change_state()] - Changing state from 'disconnected' to 'shutdown'
2025-09-08 16:05:58,067 [printer.py:change_state()] - Adding callback for state: shutdown
2025-09-08 16:05:58,121 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 16:05:58,122 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 16:05:58,122 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 16:06:11,768 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2025-09-08 16:06:11,768 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 16:06:11,871 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 16:06:11,871 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 16:06:11,872 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 16:06:11,872 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 16:06:16,568 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 16:06:16,675 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 16:06:16,676 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 16:06:16,676 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 16:06:16,676 [printer.py:log_counts()] - # Fans: 3
2025-09-08 16:06:16,676 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 16:06:16,676 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 16:06:16,676 [printer.py:log_counts()] - # Leds: 1
2025-09-08 16:06:16,926 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 16:06:16,928 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 16:06:16,928 [screen.py:init_klipper()] - Printer initialized
2025-09-08 16:06:16,929 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-08 16:06:16,929 [printer.py:change_state()] - Adding callback for state: error
2025-09-08 16:06:16,990 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 16:06:16,991 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 16:06:16,991 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 16:06:41,096 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-08 16:06:41,097 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 16:06:41,191 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 16:06:41,191 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 16:06:41,191 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 16:06:41,192 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 16:06:45,564 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 16:06:45,853 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 16:06:45,854 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 16:06:45,854 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 16:06:45,854 [printer.py:log_counts()] - # Fans: 3
2025-09-08 16:06:45,854 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 16:06:45,854 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 16:06:45,855 [printer.py:log_counts()] - # Leds: 1
2025-09-08 16:06:46,106 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 16:06:46,107 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 16:06:46,107 [screen.py:init_klipper()] - Printer initialized
2025-09-08 16:06:46,108 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-08 16:06:46,108 [printer.py:change_state()] - Adding callback for state: error
2025-09-08 16:06:46,163 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 16:06:46,163 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 16:06:46,163 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 16:07:03,442 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-08 16:07:03,443 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 16:07:03,541 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 16:07:03,542 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 16:07:03,542 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 16:07:03,543 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 16:07:07,565 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 16:07:07,845 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 16:07:07,845 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 16:07:07,846 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 16:07:07,846 [printer.py:log_counts()] - # Fans: 3
2025-09-08 16:07:07,846 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 16:07:07,847 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 16:07:07,847 [printer.py:log_counts()] - # Leds: 1
2025-09-08 16:07:08,090 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 16:07:08,091 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 16:07:08,092 [screen.py:init_klipper()] - Printer initialized
2025-09-08 16:07:08,093 [printer.py:change_state()] - Changing state from 'disconnected' to 'shutdown'
2025-09-08 16:07:08,093 [printer.py:change_state()] - Adding callback for state: shutdown
2025-09-08 16:07:08,154 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 16:07:08,154 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 16:07:08,155 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 16:07:29,475 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2025-09-08 16:07:29,475 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 16:07:29,556 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 16:07:29,556 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 16:07:29,557 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 16:07:29,557 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 16:07:33,564 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 16:07:33,616 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 16:07:33,616 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 16:07:33,616 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 16:07:33,617 [printer.py:log_counts()] - # Fans: 3
2025-09-08 16:07:33,617 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 16:07:33,617 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 16:07:33,617 [printer.py:log_counts()] - # Leds: 1
2025-09-08 16:07:33,871 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 16:07:33,873 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 16:07:33,873 [screen.py:init_klipper()] - Printer initialized
2025-09-08 16:07:33,873 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-08 16:07:33,874 [printer.py:change_state()] - Adding callback for state: error
2025-09-08 16:07:33,933 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 16:07:33,933 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 16:07:33,934 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 16:07:57,407 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-08 16:07:57,407 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 16:07:57,494 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 16:07:57,495 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 16:07:57,495 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 16:07:57,495 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 16:08:01,563 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 16:08:01,839 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 16:08:01,840 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 16:08:01,840 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 16:08:01,840 [printer.py:log_counts()] - # Fans: 3
2025-09-08 16:08:01,840 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 16:08:01,840 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 16:08:01,840 [printer.py:log_counts()] - # Leds: 1
2025-09-08 16:08:02,085 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 16:08:02,086 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 16:08:02,086 [screen.py:init_klipper()] - Printer initialized
2025-09-08 16:08:02,087 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-08 16:08:02,087 [printer.py:change_state()] - Adding callback for state: error
2025-09-08 16:08:02,147 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 16:08:02,147 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 16:08:02,148 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 16:09:17,916 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-08 16:09:17,917 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 16:09:17,997 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 16:09:17,997 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 16:09:17,997 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 16:09:17,998 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 16:09:22,566 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 16:09:22,731 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 16:09:22,731 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 16:09:22,731 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 16:09:22,732 [printer.py:log_counts()] - # Fans: 3
2025-09-08 16:09:22,732 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 16:09:22,732 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 16:09:22,732 [printer.py:log_counts()] - # Leds: 1
2025-09-08 16:09:22,986 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 16:09:22,987 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 16:09:22,988 [screen.py:init_klipper()] - Printer initialized
2025-09-08 16:09:22,989 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-08 16:09:22,989 [printer.py:change_state()] - Adding callback for state: error
2025-09-08 16:09:23,047 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 16:09:23,048 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 16:09:23,048 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 16:09:44,384 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-08 16:09:44,385 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 16:09:44,472 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 16:09:44,473 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 16:09:44,473 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 16:09:44,474 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 16:09:48,569 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 16:09:48,671 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 16:09:48,672 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 16:09:48,672 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 16:09:48,672 [printer.py:log_counts()] - # Fans: 3
2025-09-08 16:09:48,672 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 16:09:48,672 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 16:09:48,672 [printer.py:log_counts()] - # Leds: 1
2025-09-08 16:09:48,925 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 16:09:48,926 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 16:09:48,927 [screen.py:init_klipper()] - Printer initialized
2025-09-08 16:09:48,927 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-08 16:09:48,927 [printer.py:change_state()] - Adding callback for state: error
2025-09-08 16:09:48,986 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 16:09:48,986 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 16:09:48,987 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 16:14:49,549 [screensaver.py:show()] - Showing Screensaver
2025-09-08 16:20:33,967 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-08 16:20:33,967 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 16:20:33,969 [screensaver.py:close()] - Closing Screensaver
2025-09-08 16:20:33,973 [screen.py:wake_screen()] - Screen wake up
2025-09-08 16:20:34,121 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 16:20:34,122 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 16:20:34,122 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 16:20:34,123 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 16:20:38,573 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 16:20:38,841 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 16:20:38,841 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 16:20:38,841 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 16:20:38,841 [printer.py:log_counts()] - # Fans: 3
2025-09-08 16:20:38,841 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 16:20:38,841 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 16:20:38,841 [printer.py:log_counts()] - # Leds: 1
2025-09-08 16:20:39,092 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 16:20:39,094 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 16:20:39,095 [screen.py:init_klipper()] - Printer initialized
2025-09-08 16:20:39,096 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-08 16:20:39,096 [printer.py:change_state()] - Adding callback for state: error
2025-09-08 16:20:39,156 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 16:20:39,156 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 16:20:39,157 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 16:20:51,007 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-08 16:20:51,008 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 16:20:51,095 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 16:20:51,095 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 16:20:51,096 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 16:20:51,096 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 16:20:55,566 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 16:20:55,839 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 16:20:55,840 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 16:20:55,840 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 16:20:55,840 [printer.py:log_counts()] - # Fans: 3
2025-09-08 16:20:55,840 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 16:20:55,840 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 16:20:55,840 [printer.py:log_counts()] - # Leds: 1
2025-09-08 16:20:56,096 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 16:20:56,097 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 16:20:56,097 [screen.py:init_klipper()] - Printer initialized
2025-09-08 16:20:56,098 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2025-09-08 16:20:56,099 [printer.py:change_state()] - Adding callback for state: startup
2025-09-08 16:20:56,155 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 16:20:56,156 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 16:20:56,582 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2025-09-08 16:20:56,582 [printer.py:change_state()] - Adding callback for state: ready
2025-09-08 16:20:56,638 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 16:20:56,639 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 16:20:56,639 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-08 16:20:56,642 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-08 16:20:56,701 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-08 16:20:56,795 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-08 16:20:56,807 [main_menu.py:add_device()] - Adding device: extruder
2025-09-08 16:20:56,811 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-08 16:20:56,840 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-08 16:20:56,854 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-08 16:20:56,883 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-08 16:20:56,903 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-08 16:21:06,466 [screen.py:show_popup_message()] - error: Invalid adxl345 id (got 0 vs e5).
2025-09-08 16:21:34,375 [screen.py:show_popup_message()] - error: Invalid adxl345 id (got 0 vs e5).
2025-09-08 16:22:09,554 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-08 16:22:09,555 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 16:22:09,634 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 16:22:09,635 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 16:22:09,635 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 16:22:09,637 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-08 16:22:09,708 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-08 16:22:09,747 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-08 16:22:13,573 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 16:22:13,827 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 16:22:13,827 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 16:22:13,827 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 16:22:13,827 [printer.py:log_counts()] - # Fans: 3
2025-09-08 16:22:13,828 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 16:22:13,828 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 16:22:13,828 [printer.py:log_counts()] - # Leds: 1
2025-09-08 16:22:14,111 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 16:22:14,112 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 16:22:14,113 [screen.py:init_klipper()] - Printer initialized
2025-09-08 16:22:14,113 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2025-09-08 16:22:14,114 [printer.py:change_state()] - Adding callback for state: startup
2025-09-08 16:22:14,202 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 16:22:14,202 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 16:22:15,314 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2025-09-08 16:22:15,315 [printer.py:change_state()] - Adding callback for state: ready
2025-09-08 16:22:15,369 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 16:22:15,369 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 16:22:15,370 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-08 16:22:15,373 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-08 16:22:15,434 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-08 16:22:15,536 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-08 16:22:15,548 [main_menu.py:add_device()] - Adding device: extruder
2025-09-08 16:22:15,553 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-08 16:22:15,584 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-08 16:22:15,599 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-08 16:22:15,632 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-08 16:22:15,653 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-08 16:22:23,059 [screen.py:show_popup_message()] - error: Invalid lis2dw id (got 0 vs 44).
2025-09-08 16:23:42,867 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-08 16:23:42,868 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 16:23:42,955 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 16:23:42,955 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 16:23:42,956 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 16:23:42,957 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-08 16:23:43,027 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-08 16:23:43,073 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-08 16:23:47,562 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'shutdown', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 16:23:47,777 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 16:23:47,777 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 16:23:47,777 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 16:23:47,777 [printer.py:log_counts()] - # Fans: 3
2025-09-08 16:23:47,777 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 16:23:47,779 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 16:23:47,779 [printer.py:log_counts()] - # Leds: 1
2025-09-08 16:23:48,027 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 16:23:48,029 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 16:23:48,029 [screen.py:init_klipper()] - Printer initialized
2025-09-08 16:23:48,030 [printer.py:change_state()] - Changing state from 'disconnected' to 'shutdown'
2025-09-08 16:23:48,030 [printer.py:change_state()] - Adding callback for state: shutdown
2025-09-08 16:23:48,087 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 16:23:48,088 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 16:23:48,088 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 16:26:47,942 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2025-09-08 16:26:47,942 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 16:26:48,062 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 16:26:48,063 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 16:26:48,063 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 16:26:48,063 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 16:26:52,598 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 16:26:52,804 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 16:26:52,804 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 16:26:52,804 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 16:26:52,804 [printer.py:log_counts()] - # Fans: 3
2025-09-08 16:26:52,805 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 16:26:52,805 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 16:26:52,805 [printer.py:log_counts()] - # Leds: 1
2025-09-08 16:26:53,057 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 16:26:53,059 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 16:26:53,059 [screen.py:init_klipper()] - Printer initialized
2025-09-08 16:26:53,060 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-08 16:26:53,060 [printer.py:change_state()] - Adding callback for state: error
2025-09-08 16:26:53,136 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 16:26:53,137 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 16:26:53,137 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 16:29:31,981 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-08 16:29:31,981 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 16:29:32,078 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 16:29:32,079 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 16:29:32,079 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 16:29:32,079 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 16:29:36,565 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 16:29:36,665 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 16:29:36,665 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 16:29:36,665 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 16:29:36,665 [printer.py:log_counts()] - # Fans: 3
2025-09-08 16:29:36,665 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 16:29:36,666 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 16:29:36,666 [printer.py:log_counts()] - # Leds: 1
2025-09-08 16:29:36,909 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 16:29:36,910 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 16:29:36,911 [screen.py:init_klipper()] - Printer initialized
2025-09-08 16:29:36,911 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-08 16:29:36,912 [printer.py:change_state()] - Adding callback for state: error
2025-09-08 16:29:36,973 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 16:29:36,974 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 16:29:36,974 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 16:34:37,549 [screensaver.py:show()] - Showing Screensaver
2025-09-08 17:05:27,819 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-08 17:05:27,820 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 17:05:27,821 [screensaver.py:close()] - Closing Screensaver
2025-09-08 17:05:27,823 [screen.py:wake_screen()] - Screen wake up
2025-09-08 17:05:27,965 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 17:05:27,965 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 17:05:27,965 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 17:05:27,965 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 17:05:32,565 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 17:05:32,718 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 17:05:32,719 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 17:05:32,720 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 17:05:32,720 [printer.py:log_counts()] - # Fans: 3
2025-09-08 17:05:32,721 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 17:05:32,721 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 17:05:32,722 [printer.py:log_counts()] - # Leds: 1
2025-09-08 17:05:32,947 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 17:05:32,948 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 17:05:32,949 [screen.py:init_klipper()] - Printer initialized
2025-09-08 17:05:32,949 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-08 17:05:32,949 [printer.py:change_state()] - Adding callback for state: error
2025-09-08 17:05:33,015 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 17:05:33,015 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 17:05:33,015 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 17:05:34,154 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-08 17:05:34,154 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 17:05:34,248 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 17:05:34,249 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 17:05:34,250 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 17:05:34,251 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 17:05:38,564 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 17:05:38,786 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 17:05:38,786 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 17:05:38,786 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 17:05:38,786 [printer.py:log_counts()] - # Fans: 3
2025-09-08 17:05:38,786 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 17:05:38,787 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 17:05:38,787 [printer.py:log_counts()] - # Leds: 1
2025-09-08 17:05:39,037 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 17:05:39,039 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 17:05:39,039 [screen.py:init_klipper()] - Printer initialized
2025-09-08 17:05:39,040 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-08 17:05:39,040 [printer.py:change_state()] - Adding callback for state: error
2025-09-08 17:05:39,100 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 17:05:39,101 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 17:05:39,101 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 17:10:39,550 [screensaver.py:show()] - Showing Screensaver
2025-09-08 17:19:17,893 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-08 17:19:17,893 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 17:19:17,896 [screensaver.py:close()] - Closing Screensaver
2025-09-08 17:19:17,898 [screen.py:wake_screen()] - Screen wake up
2025-09-08 17:19:18,063 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 17:19:18,064 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 17:19:18,064 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 17:19:18,065 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 17:19:22,568 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 17:19:22,760 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 17:19:22,760 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 17:19:22,760 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 17:19:22,761 [printer.py:log_counts()] - # Fans: 3
2025-09-08 17:19:22,761 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 17:19:22,761 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 17:19:22,761 [printer.py:log_counts()] - # Leds: 1
2025-09-08 17:19:23,008 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 17:19:23,009 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 17:19:23,009 [screen.py:init_klipper()] - Printer initialized
2025-09-08 17:19:23,010 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-08 17:19:23,010 [printer.py:change_state()] - Adding callback for state: error
2025-09-08 17:19:23,072 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 17:19:23,072 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 17:19:23,072 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 17:19:37,642 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-08 17:19:37,642 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 17:19:37,751 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 17:19:37,752 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 17:19:37,753 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 17:19:37,753 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 17:19:41,571 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 17:19:41,891 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 17:19:41,891 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 17:19:41,892 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 17:19:41,892 [printer.py:log_counts()] - # Fans: 3
2025-09-08 17:19:41,892 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 17:19:41,892 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 17:19:41,892 [printer.py:log_counts()] - # Leds: 1
2025-09-08 17:19:42,105 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 17:19:42,107 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 17:19:42,107 [screen.py:init_klipper()] - Printer initialized
2025-09-08 17:19:42,108 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2025-09-08 17:19:42,108 [printer.py:change_state()] - Adding callback for state: startup
2025-09-08 17:19:42,176 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 17:19:42,177 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 17:19:42,867 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2025-09-08 17:19:42,868 [printer.py:change_state()] - Adding callback for state: ready
2025-09-08 17:19:42,931 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 17:19:42,932 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 17:19:42,932 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-08 17:19:42,938 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-08 17:19:43,002 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-08 17:19:43,105 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-08 17:19:43,117 [main_menu.py:add_device()] - Adding device: extruder
2025-09-08 17:19:43,123 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-08 17:19:43,155 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-08 17:19:43,167 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-08 17:19:43,207 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-08 17:19:43,230 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-08 17:21:30,385 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-08 17:21:30,386 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 17:21:30,456 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 17:21:30,457 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 17:21:30,457 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 17:21:30,458 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-08 17:21:30,554 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-08 17:21:30,601 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-08 17:21:34,575 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 17:21:34,761 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 17:21:34,762 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 17:21:34,762 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 17:21:34,762 [printer.py:log_counts()] - # Fans: 3
2025-09-08 17:21:34,762 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 17:21:34,762 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 17:21:34,762 [printer.py:log_counts()] - # Leds: 1
2025-09-08 17:21:35,001 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 17:21:35,002 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 17:21:35,003 [screen.py:init_klipper()] - Printer initialized
2025-09-08 17:21:35,003 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2025-09-08 17:21:35,004 [printer.py:change_state()] - Adding callback for state: startup
2025-09-08 17:21:35,103 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 17:21:35,103 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 17:21:36,001 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2025-09-08 17:21:36,001 [printer.py:change_state()] - Adding callback for state: ready
2025-09-08 17:21:36,074 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 17:21:36,075 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 17:21:36,075 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-08 17:21:36,097 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-08 17:21:36,173 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-08 17:21:36,295 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-08 17:21:36,312 [main_menu.py:add_device()] - Adding device: extruder
2025-09-08 17:21:36,318 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-08 17:21:36,357 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-08 17:21:36,371 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-08 17:21:36,409 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-08 17:21:36,443 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-08 17:26:36,548 [screensaver.py:show()] - Showing Screensaver
2025-09-08 17:32:20,054 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-08 17:32:20,054 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 17:32:20,056 [screensaver.py:close()] - Closing Screensaver
2025-09-08 17:32:20,059 [screen.py:wake_screen()] - Screen wake up
2025-09-08 17:32:20,206 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 17:32:20,207 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 17:32:20,207 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 17:32:20,207 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-08 17:32:20,288 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-08 17:32:20,325 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-08 17:32:24,564 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 8, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 17:32:24,793 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 17:32:24,793 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 17:32:24,793 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 17:32:24,793 [printer.py:log_counts()] - # Fans: 3
2025-09-08 17:32:24,793 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 17:32:24,793 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 17:32:24,793 [printer.py:log_counts()] - # Leds: 1
2025-09-08 17:32:25,042 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 17:32:25,044 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 17:32:25,044 [screen.py:init_klipper()] - Printer initialized
2025-09-08 17:32:25,044 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-08 17:32:25,045 [printer.py:change_state()] - Adding callback for state: error
2025-09-08 17:32:25,108 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 17:32:25,108 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 17:32:25,109 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 17:35:28,808 [KlippyWebsocket.py:on_close()] - 1001 Server Shutdown
2025-09-08 17:35:28,810 [screen.py:websocket_disconnected()] - ### websocket_disconnected
2025-09-08 17:35:28,810 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 17:35:28,818 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2025-09-08 17:35:28,906 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-09-08 17:35:28,907 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 17:35:28,920 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-08 17:35:28,920 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-08 17:35:33,555 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-08 17:35:33,555 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-08 17:35:37,556 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-08 17:35:37,556 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-08 17:35:41,557 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-08 17:35:41,557 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-08 17:35:45,557 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-08 17:35:45,557 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-08 17:35:49,550 [screen.py:connect_to_moonraker()] - Stopping Retries
2025-09-08 17:37:25,549 [screensaver.py:show()] - Showing Screensaver
2025-09-08 17:18:09,638 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-09-08 17:18:09,640 [functions.py:log_start()] - KlipperScreen Version: v0.4.6-11-g6b6f63b6
2025-09-08 17:18:09,642 [functions.py:log_start()] - Python version: 3.9
2025-09-08 17:18:09,913 [config.py:get_config_file_location()] - Passed config (-c): .
2025-09-08 17:18:09,913 [config.py:__init__()] - Config path location: /home/sonic/printer_data/config/KlipperScreen.conf
2025-09-08 17:18:09,917 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/main_menu.conf']
2025-09-08 17:18:09,933 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/splash_menu.conf']
2025-09-08 17:18:09,940 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/print_menu.conf']
2025-09-08 17:18:09,954 [config.py:_include_config()] - Parsing files: ['/home/sonic/KlipperScreen/config/move_menu.conf']
2025-09-08 17:18:09,974 [config.py:log_config()] - ===== Config File =====

=======================
2025-09-08 17:18:09,978 [config.py:__init__()] - ====== Saved Def ======

[main]
screen_blanking = 300
screen_blanking_printing = 300
24htime = False
font_size = small
show_heater_power = True

=======================
2025-09-08 17:18:09,979 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_path": "",
      "moonraker_ssl": null,
      "moonraker_api_key": ""
    }
  }
]
2025-09-08 17:18:10,205 [config.py:create_translations()] - Selected lang: system_lang OS lang: en_US
2025-09-08 17:18:10,205 [config.py:install_language()] - Using lang en
2025-09-08 17:18:10,228 [screen.py:__init__()] - Display for xset: :0
2025-09-08 17:18:10,230 [screen.py:__init__()] - Screen 0: 1024x600
2025-09-08 17:18:10,231 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-09-08 17:18:10,231 [screen.py:__init__()] - Wayland: False Display name: :0
2025-09-08 17:18:10,237 [screen.py:__init__()] - Screen resolution: 1024x600
2025-09-08 17:18:10,579 [KlippyGtk.py:__init__()] - Font size: 20.2 (small)
2025-09-08 17:18:10,851 [base_panel.py:battery_percentage()] - Battery information not available.
2025-09-08 17:18:11,276 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 17:18:11,279 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 17:18:11,280 [screen.py:initial_connection()] - Default printer: None
2025-09-08 17:18:11,348 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-09-08 17:18:11,349 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-08 17:18:11,404 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-09-08 17:18:11,472 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-08 17:18:11,510 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-09-08 17:18:11,510 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-09-08 17:18:11,536 [_logging.py:info()] - Websocket connected
2025-09-08 17:18:11,543 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-09-08 17:18:11,588 [screen.py:websocket_connected()] - ### websocket_connected
2025-09-08 17:18:11,672 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-09-08 17:18:11,699 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 30, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': 'http://192.168.1.14:8081/?action=stream', 'snapshot_url': 'http://192.168.1.14:8081/snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-09-08 17:18:11,719 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 17:18:11,751 [KlippyRest.py:_do_request()] - 404 Client Error>>Not Found for url>>http://127.0.0.1:7125/printer/info
2025-09-08 17:18:13,947 [screen.py:_go_to_submenu()] - #### Go to submenu 
2025-09-08 17:18:13,947 [screen.py:_go_to_submenu()] - #### Menu __splashscreen
2025-09-08 17:18:13,951 [screen.py:_load_panel()] - Loading panel: menu
2025-09-08 17:18:13,982 [menu.py:evaluate_enable()] - moonraker connected True
2025-09-08 17:18:13,985 [menu.py:evaluate_enable()] - moonraker connected True
2025-09-08 17:18:14,056 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen > 
2025-09-08 17:18:14,061 [menu.py:arrangeMenuItems()] - X > power
2025-09-08 17:18:14,064 [menu.py:evaluate_enable()] - moonraker connected True
2025-09-08 17:18:14,067 [menu.py:evaluate_enable()] - moonraker connected True
2025-09-08 17:18:14,080 [screen.py:_go_to_submenu()] - menu, {{ gettext('Menu') }}, panel_name=, items=[{'power': {'name': "{{ gettext('Power') }}", 'icon': 'shutdown', 'panel': 'power', 'method': None, 'confirm': None, 'enable': '{{ moonraker.power_devices.count > 0 }}', 'params': '{}', 'style': None}}, {'network': {'name': "{{ gettext('Network') }}", 'icon': 'network', 'panel': 'network', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'updater': {'name': "{{ gettext('Update') }}", 'icon': 'refresh', 'panel': 'updater', 'method': None, 'confirm': None, 'enable': '{{ moonraker_connected }}', 'params': '{}', 'style': None}}, {'settings': {'name': 'KlipperScreen', 'icon': 'settings', 'panel': 'settings', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'system': {'name': "{{ gettext('System') }}", 'icon': 'info', 'panel': 'system', 'method': None, 'confirm': None, 'enable': '{{ moonraker_connected }}', 'params': '{}', 'style': None}}]
2025-09-08 17:18:15,161 [screen.py:_load_panel()] - Loading panel: network
2025-09-08 17:18:15,890 [network.py:__init__()] - Network interfaces: ['lo', 'eth0', 'p2p0', 'wlan0', 'p2p-dev-wlan0']
2025-09-08 17:18:15,906 [network.py:__init__()] - Wireless interfaces: ['p2p0', 'wlan0']
2025-09-08 17:18:15,910 [network.py:__init__()] - Primary interface: p2p0
2025-09-08 17:18:15,945 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen >  > network
2025-09-08 17:18:15,956 [screen.py:show_popup_message()] - error: Unexpected error: Scanning not allowed while unavailable
2025-09-08 17:18:16,135 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 17:18:16,251 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 17:18:16,251 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 17:18:16,252 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 17:18:16,252 [printer.py:log_counts()] - # Fans: 3
2025-09-08 17:18:16,252 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 17:18:16,252 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 17:18:16,252 [printer.py:log_counts()] - # Leds: 1
2025-09-08 17:18:16,504 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 17:18:16,511 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 17:18:16,511 [screen.py:init_klipper()] - Printer initialized
2025-09-08 17:18:16,512 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-08 17:18:16,512 [printer.py:change_state()] - Adding callback for state: error
2025-09-08 17:18:16,598 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 17:18:16,598 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 17:18:16,599 [screen.py:_menu_go_back()] - #### Menu go home
2025-09-08 17:18:16,601 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-08 17:18:16,710 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-08 17:18:16,844 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-08 17:18:16,899 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen > splash_screen
2025-09-08 17:18:17,042 [sdbus_nm.py:monitor_connection_status()] - State changed: 10 (10, 0)
2025-09-08 17:18:17,043 [sdbus_nm.py:monitor_connection_status()] - Starting to monitor state
2025-09-08 17:18:19,593 [screen.py:_go_to_submenu()] - #### Go to submenu 
2025-09-08 17:18:19,594 [screen.py:_go_to_submenu()] - #### Menu __splashscreen
2025-09-08 17:18:19,597 [screen.py:show_panel()] - Reinitializing panel menu
2025-09-08 17:18:19,620 [menu.py:evaluate_enable()] - moonraker connected True
2025-09-08 17:18:19,623 [menu.py:evaluate_enable()] - moonraker connected True
2025-09-08 17:18:19,689 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen > splash_screen > 
2025-09-08 17:18:19,699 [menu.py:arrangeMenuItems()] - X > power
2025-09-08 17:18:19,702 [menu.py:evaluate_enable()] - moonraker connected True
2025-09-08 17:18:19,704 [menu.py:evaluate_enable()] - moonraker connected True
2025-09-08 17:18:19,715 [screen.py:_go_to_submenu()] - menu, {{ gettext('Menu') }}, panel_name=, items=[{'power': {'name': "{{ gettext('Power') }}", 'icon': 'shutdown', 'panel': 'power', 'method': None, 'confirm': None, 'enable': '{{ moonraker.power_devices.count > 0 }}', 'params': '{}', 'style': None}}, {'network': {'name': "{{ gettext('Network') }}", 'icon': 'network', 'panel': 'network', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'updater': {'name': "{{ gettext('Update') }}", 'icon': 'refresh', 'panel': 'updater', 'method': None, 'confirm': None, 'enable': '{{ moonraker_connected }}', 'params': '{}', 'style': None}}, {'settings': {'name': 'KlipperScreen', 'icon': 'settings', 'panel': 'settings', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'system': {'name': "{{ gettext('System') }}", 'icon': 'info', 'panel': 'system', 'method': None, 'confirm': None, 'enable': '{{ moonraker_connected }}', 'params': '{}', 'style': None}}]
2025-09-08 17:18:20,465 [screen.py:show_panel()] - Reinitializing panel network
2025-09-08 17:18:20,540 [network.py:__init__()] - Network interfaces: ['lo', 'eth0', 'p2p0', 'wlan0', 'p2p-dev-wlan0']
2025-09-08 17:18:20,558 [network.py:__init__()] - Wireless interfaces: ['p2p0', 'wlan0']
2025-09-08 17:18:20,564 [network.py:__init__()] - Primary interface: wlan0
2025-09-08 17:18:20,592 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen > splash_screen >  > network
2025-09-08 17:18:20,599 [screen.py:show_popup_message()] - error: Unexpected error: Scanning not allowed while unavailable
2025-09-08 17:18:22,040 [sdbus_nm.py:monitor_connection_status()] - State changed: 10 (10, 0)
2025-09-08 17:18:22,040 [sdbus_nm.py:monitor_connection_status()] - Starting to monitor state
2025-09-08 17:44:15,200 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-08 17:44:15,200 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 17:44:15,271 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 17:44:15,271 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 17:44:15,271 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 17:44:15,272 [screen.py:_menu_go_back()] - #### Menu go home
2025-09-08 17:44:15,274 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-08 17:44:15,344 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-08 17:44:15,374 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-08 17:44:15,384 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen > splash_screen
2025-09-08 17:44:19,810 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 7, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 17:44:19,993 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 17:44:19,993 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 17:44:19,993 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 17:44:19,994 [printer.py:log_counts()] - # Fans: 3
2025-09-08 17:44:19,994 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 17:44:19,994 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 17:44:19,994 [printer.py:log_counts()] - # Leds: 1
2025-09-08 17:44:20,250 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 17:44:20,252 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 17:44:20,252 [screen.py:init_klipper()] - Printer initialized
2025-09-08 17:44:20,253 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-08 17:44:20,253 [printer.py:change_state()] - Adding callback for state: error
2025-09-08 17:44:20,309 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 17:44:20,309 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 17:44:20,310 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 17:44:34,793 [base_panel.py:battery_percentage()] - Battery information not available.
2025-09-08 17:48:12,955 [KlippyWebsocket.py:on_close()] - 1001 Server Shutdown
2025-09-08 17:48:12,956 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2025-09-08 17:48:12,957 [screen.py:websocket_disconnected()] - ### websocket_disconnected
2025-09-08 17:48:12,958 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 17:48:13,068 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-09-08 17:48:13,069 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 17:48:13,083 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-08 17:48:13,083 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-08 17:48:17,810 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-09-08 17:48:17,811 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-09-08 17:48:17,824 [_logging.py:info()] - Websocket connected
2025-09-08 17:48:17,824 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-09-08 17:48:17,825 [screen.py:websocket_connected()] - ### websocket_connected
2025-09-08 17:48:17,917 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-09-08 17:48:17,938 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 30, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': 'http://192.168.1.14:8081/?action=stream', 'snapshot_url': 'http://192.168.1.14:8081/snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-09-08 17:48:17,953 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 17:48:18,152 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 17:48:18,152 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 17:48:18,152 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 17:48:18,152 [printer.py:log_counts()] - # Fans: 3
2025-09-08 17:48:18,152 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 17:48:18,153 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 17:48:18,153 [printer.py:log_counts()] - # Leds: 1
2025-09-08 17:48:18,404 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 17:48:18,406 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 17:48:18,406 [screen.py:init_klipper()] - Printer initialized
2025-09-08 17:48:18,407 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-08 17:48:18,407 [printer.py:change_state()] - Adding callback for state: error
2025-09-08 17:48:18,460 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 17:48:18,461 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 17:48:18,461 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 17:48:31,614 [KlippyWebsocket.py:on_close()] - 1001 Server Shutdown
2025-09-08 17:48:31,616 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2025-09-08 17:48:31,617 [screen.py:websocket_disconnected()] - ### websocket_disconnected
2025-09-08 17:48:31,617 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 17:48:31,706 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-09-08 17:48:31,707 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 17:48:31,721 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-08 17:48:31,721 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-08 17:48:35,808 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-09-08 17:48:35,809 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-09-08 17:48:35,818 [_logging.py:info()] - Websocket connected
2025-09-08 17:48:35,818 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-09-08 17:48:35,819 [screen.py:websocket_connected()] - ### websocket_connected
2025-09-08 17:48:35,897 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-09-08 17:48:35,903 [screen.py:show_popup_message()] - warning: 
Moonraker warnings:
Unparsed config option 'trusted_methods:
 
machine.shell_command' detected in section [authorization].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.

2025-09-08 17:48:35,924 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 30, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': 'http://192.168.1.14:8081/?action=stream', 'snapshot_url': 'http://192.168.1.14:8081/snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-09-08 17:48:35,937 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': ["Unparsed config option 'trusted_methods: <br/>machine.shell_command' detected in section [authorization].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error."], 'websocket_count': 3, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 17:48:35,988 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 17:48:35,989 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 17:48:35,989 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 17:48:35,989 [printer.py:log_counts()] - # Fans: 3
2025-09-08 17:48:35,989 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 17:48:35,989 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 17:48:35,989 [printer.py:log_counts()] - # Leds: 1
2025-09-08 17:48:36,241 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 17:48:36,242 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 17:48:36,243 [screen.py:init_klipper()] - Printer initialized
2025-09-08 17:48:36,244 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-08 17:48:36,244 [printer.py:change_state()] - Adding callback for state: error
2025-09-08 17:48:36,360 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 17:48:36,361 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 17:48:36,361 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 17:52:26,920 [KlippyWebsocket.py:on_close()] - 1001 Server Shutdown
2025-09-08 17:52:26,922 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2025-09-08 17:52:26,923 [screen.py:websocket_disconnected()] - ### websocket_disconnected
2025-09-08 17:52:26,924 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 17:52:27,025 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-09-08 17:52:27,025 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 17:52:27,041 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-08 17:52:27,042 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-08 17:52:31,809 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-09-08 17:52:31,810 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-09-08 17:52:31,819 [_logging.py:info()] - Websocket connected
2025-09-08 17:52:31,820 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-09-08 17:52:31,821 [screen.py:websocket_connected()] - ### websocket_connected
2025-09-08 17:52:31,900 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-09-08 17:52:31,907 [screen.py:show_popup_message()] - warning: 
Moonraker warnings:
Unparsed config option 'trusted_methods:
 
machine.shell_command' detected in section [authorization].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.

2025-09-08 17:52:31,935 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 30, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': 'http://192.168.1.14:8081/?action=stream', 'snapshot_url': 'http://192.168.1.14:8081/snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-09-08 17:52:31,949 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': ["Unparsed config option 'trusted_methods: <br/>machine.shell_command' detected in section [authorization].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error."], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 17:52:32,184 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 17:52:32,184 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 17:52:32,184 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 17:52:32,185 [printer.py:log_counts()] - # Fans: 3
2025-09-08 17:52:32,185 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 17:52:32,185 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 17:52:32,185 [printer.py:log_counts()] - # Leds: 1
2025-09-08 17:52:32,434 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 17:52:32,435 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 17:52:32,435 [screen.py:init_klipper()] - Printer initialized
2025-09-08 17:52:32,436 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-08 17:52:32,436 [printer.py:change_state()] - Adding callback for state: error
2025-09-08 17:52:32,552 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 17:52:32,552 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 17:52:32,553 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 17:52:37,842 [KlippyWebsocket.py:on_close()] - 1001 Server Shutdown
2025-09-08 17:52:37,843 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2025-09-08 17:52:37,845 [screen.py:websocket_disconnected()] - ### websocket_disconnected
2025-09-08 17:52:37,845 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 17:52:37,942 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-09-08 17:52:37,943 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 17:52:37,958 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-08 17:52:37,958 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-08 17:52:41,824 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-09-08 17:52:41,825 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-09-08 17:52:41,840 [_logging.py:info()] - Websocket connected
2025-09-08 17:52:41,841 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-09-08 17:52:41,842 [screen.py:websocket_connected()] - ### websocket_connected
2025-09-08 17:52:41,945 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-09-08 17:52:41,953 [screen.py:show_popup_message()] - warning: 
Moonraker warnings:
Unparsed config option 'trusted_methods:
 
machine.shell_command' detected in section [authorization].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.

2025-09-08 17:52:41,977 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 30, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': 'http://192.168.1.14:8081/?action=stream', 'snapshot_url': 'http://192.168.1.14:8081/snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-09-08 17:52:41,993 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': ["Unparsed config option 'trusted_methods: <br/>machine.shell_command' detected in section [authorization].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error."], 'websocket_count': 3, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 17:52:42,073 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 17:52:42,073 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 17:52:42,073 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 17:52:42,073 [printer.py:log_counts()] - # Fans: 3
2025-09-08 17:52:42,074 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 17:52:42,074 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 17:52:42,074 [printer.py:log_counts()] - # Leds: 1
2025-09-08 17:52:42,325 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 17:52:42,328 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 17:52:42,328 [screen.py:init_klipper()] - Printer initialized
2025-09-08 17:52:42,329 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-09-08 17:52:42,329 [printer.py:change_state()] - Adding callback for state: error
2025-09-08 17:52:42,460 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 17:52:42,460 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 17:52:42,461 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 17:54:53,682 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-09-08 17:54:53,683 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 17:54:53,810 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 17:54:53,810 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 17:54:53,811 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 17:54:53,811 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 17:54:57,809 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': ["Unparsed config option 'trusted_methods: <br/>machine.shell_command' detected in section [authorization].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error."], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 17:54:57,969 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 17:54:57,969 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 17:54:57,969 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 17:54:57,970 [printer.py:log_counts()] - # Fans: 3
2025-09-08 17:54:57,970 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 17:54:57,970 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 17:54:57,970 [printer.py:log_counts()] - # Leds: 1
2025-09-08 17:54:58,219 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 17:54:58,220 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 17:54:58,220 [screen.py:init_klipper()] - Printer initialized
2025-09-08 17:54:58,221 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2025-09-08 17:54:58,221 [printer.py:change_state()] - Adding callback for state: startup
2025-09-08 17:54:58,283 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 17:54:58,284 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 17:54:59,232 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2025-09-08 17:54:59,233 [printer.py:change_state()] - Adding callback for state: ready
2025-09-08 17:54:59,287 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 17:54:59,288 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 17:54:59,288 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-08 17:54:59,291 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-08 17:54:59,364 [screen.py:_load_panel()] - Loading panel: main_menu
2025-09-08 17:54:59,514 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-08 17:54:59,527 [main_menu.py:add_device()] - Adding device: extruder
2025-09-08 17:54:59,538 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-08 17:54:59,575 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-08 17:54:59,591 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-08 17:54:59,608 [screen.py:init_tempstore()] - Tempstore not ready: {} Retrying in 5 seconds
2025-09-08 17:54:59,671 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-09-08 17:54:59,695 [screen.py:init_tempstore()] - Tempstore not ready: {} Retrying in 5 seconds
2025-09-08 17:54:59,755 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-09-08 17:54:59,771 [screen.py:init_tempstore()] - Tempstore not ready: {} Retrying in 5 seconds
2025-09-08 17:54:59,994 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-09-08 17:55:00,012 [screen.py:init_tempstore()] - Tempstore not ready: {} Retrying in 5 seconds
2025-09-08 17:55:00,242 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-09-08 17:55:00,262 [screen.py:init_tempstore()] - Tempstore not ready: {} Retrying in 5 seconds
2025-09-08 17:55:00,497 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-09-08 17:55:00,516 [screen.py:init_tempstore()] - Tempstore not ready: {} Retrying in 5 seconds
2025-09-08 17:55:00,742 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-09-08 17:55:00,774 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-08 17:55:00,792 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-08 17:55:36,052 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-09-08 17:55:36,053 [printer.py:change_state()] - Adding callback for state: disconnected
2025-09-08 17:55:36,137 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 17:55:36,138 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 17:55:36,138 [screen.py:state_disconnected()] - ### Going to disconnected
2025-09-08 17:55:36,147 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-08 17:55:36,267 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-08 17:55:36,307 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-08 17:55:40,813 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': ["Unparsed config option 'trusted_methods: <br/>machine.shell_command' detected in section [authorization].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error."], 'websocket_count': 7, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 17:55:41,088 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 17:55:41,088 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 17:55:41,088 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 17:55:41,088 [printer.py:log_counts()] - # Fans: 3
2025-09-08 17:55:41,088 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 17:55:41,089 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 17:55:41,089 [printer.py:log_counts()] - # Leds: 1
2025-09-08 17:55:41,345 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 17:55:41,347 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 17:55:41,347 [screen.py:init_klipper()] - Printer initialized
2025-09-08 17:55:41,348 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2025-09-08 17:55:41,349 [printer.py:change_state()] - Adding callback for state: startup
2025-09-08 17:55:41,421 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 17:55:41,422 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 17:55:42,363 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2025-09-08 17:55:42,363 [printer.py:change_state()] - Adding callback for state: ready
2025-09-08 17:55:42,431 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 17:55:42,431 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 17:55:42,432 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-08 17:55:42,438 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-08 17:55:42,524 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-08 17:55:42,635 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-08 17:55:42,647 [main_menu.py:add_device()] - Adding device: extruder
2025-09-08 17:55:42,652 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-08 17:55:42,680 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-08 17:55:42,692 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-08 17:55:42,726 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-08 17:55:42,748 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-08 18:00:42,794 [screensaver.py:show()] - Showing Screensaver
2025-09-08 19:00:24,927 [KlippyWebsocket.py:on_close()] - 1001 Server Shutdown
2025-09-08 19:00:24,929 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2025-09-08 19:00:24,934 [screen.py:websocket_disconnected()] - ### websocket_disconnected
2025-09-08 19:00:24,935 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-08 19:00:24,942 [screensaver.py:close()] - Closing Screensaver
2025-09-08 19:00:24,946 [screen.py:wake_screen()] - Screen wake up
2025-09-08 19:00:25,085 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-09-08 19:00:25,126 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-09-08 19:00:25,224 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-09-08 19:00:25,225 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 19:00:25,242 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2025-09-08 19:00:25,243 [screen.py:connect_to_moonraker()] - Cannot get server info
2025-09-08 19:00:29,810 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-09-08 19:00:29,810 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-09-08 19:00:29,824 [_logging.py:info()] - Websocket connected
2025-09-08 19:00:29,825 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-09-08 19:00:29,825 [screen.py:websocket_connected()] - ### websocket_connected
2025-09-08 19:00:29,909 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-09-08 19:00:29,934 [printer.py:configure_cameras()] - Cameras: [{'name': 'Side', 'enabled': True, 'icon': 'mdiWebcam', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 30, 'location': 'printer', 'service': 'mjpegstreamer', 'stream_url': 'http://192.168.1.14:8081/?action=stream', 'snapshot_url': 'http://192.168.1.14:8081/snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {'nozzleCrosshair': False}, 'uid': '43ac7168-93bb-4cf3-b7ee-42aeb1678654'}]
2025-09-08 19:00:29,952 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'database', 'dbus_manager', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'history', 'http_client', 'announcements', 'webcam', 'extensions', 'timelapse', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'timelapse', 'timelapse_frames', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 6, 'moonraker_version': 'v0.9.3-104-g52e3158', 'missing_klippy_requirements': [], 'api_version': [1, 5, 0], 'api_version_string': '1.5.0'}
2025-09-08 19:00:30,085 [printer.py:log_counts()] - Klipper version: v0.13.0-252-g68b67a16d
2025-09-08 19:00:30,085 [printer.py:log_counts()] - # Extruders: 1
2025-09-08 19:00:30,085 [printer.py:log_counts()] - # Temperature devices: 1
2025-09-08 19:00:30,086 [printer.py:log_counts()] - # Fans: 3
2025-09-08 19:00:30,086 [printer.py:log_counts()] - # Output pins: 0
2025-09-08 19:00:30,086 [printer.py:log_counts()] - # PWM tools: 0
2025-09-08 19:00:30,086 [printer.py:log_counts()] - # Leds: 1
2025-09-08 19:00:30,328 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-09-08 19:00:30,329 [files.py:set_gcodes_path()] - Gcodes path: /home/sonic/printer_data/gcodes
2025-09-08 19:00:30,330 [screen.py:init_klipper()] - Printer initialized
2025-09-08 19:00:30,330 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-09-08 19:00:30,332 [printer.py:change_state()] - Adding callback for state: ready
2025-09-08 19:00:30,397 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 19:00:30,398 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 19:00:30,398 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-09-08 19:00:30,403 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-08 19:00:30,494 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-09-08 19:00:30,752 [main_menu.py:__init__()] - ### Making MainMenu
2025-09-08 19:00:30,765 [main_menu.py:add_device()] - Adding device: extruder
2025-09-08 19:00:30,770 [main_menu.py:add_device()] - Adding device: heater_bed
2025-09-08 19:00:30,798 [menu.py:arrangeMenuItems()] - X > gcodes
2025-09-08 19:00:30,812 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-09-08 19:00:30,858 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-09-08 19:00:30,878 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-09-08 19:01:45,105 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-08 19:01:45,106 [printer.py:change_state()] - Adding callback for state: printing
2025-09-08 19:01:45,326 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 19:01:45,327 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 19:01:45,328 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-08 19:01:45,497 [screen.py:_load_panel()] - Loading panel: job_status
2025-09-08 19:01:45,751 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-08 19:01:45,766 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-08 19:01:45,803 [job_status.py:update_filename()] - Updating filename to Pinky+Buddy_0.2mm_PLA_Generic Klipper Printer_51m12s.gcode
2025-09-08 19:01:45,804 [job_status.py:_update_file_metadata()] - Update Metadata. File: Pinky+Buddy_0.2mm_PLA_Generic Klipper Printer_51m12s.gcode Size: 6528414
2025-09-08 19:06:45,796 [screensaver.py:show()] - Showing Screensaver
2025-09-08 19:51:50,557 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2025-09-08 19:51:50,558 [printer.py:change_state()] - Adding callback for state: paused
2025-09-08 19:51:50,567 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'paused'
2025-09-08 19:51:50,579 [screensaver.py:close()] - Closing Screensaver
2025-09-08 19:51:50,590 [screen.py:wake_screen()] - Screen wake up
2025-09-08 19:51:50,726 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 19:51:50,726 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 19:51:50,727 [screen.py:show_panel()] - Panel is already is in view
2025-09-08 19:51:50,736 [screen.py:_load_panel()] - Loading panel: extrude
2025-09-08 19:51:50,872 [screen.py:attach_panel()] - Current panel hierarchy: job_status > extrude
2025-09-08 19:52:25,172 [printer.py:change_state()] - Changing state from 'paused' to 'ready'
2025-09-08 19:52:25,172 [printer.py:change_state()] - Adding callback for state: ready
2025-09-08 19:52:25,266 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 19:52:25,266 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 19:57:25,796 [screensaver.py:show()] - Showing Screensaver
2025-09-08 20:22:53,953 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2025-09-08 20:22:53,953 [printer.py:change_state()] - Adding callback for state: printing
2025-09-08 20:22:53,956 [screensaver.py:close()] - Closing Screensaver
2025-09-08 20:22:53,959 [screen.py:wake_screen()] - Screen wake up
2025-09-08 20:22:54,106 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 300
2025-09-08 20:22:54,107 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 300 DPMS:True
2025-09-08 20:22:54,108 [screen.py:_menu_go_back()] - #### Menu go home
2025-09-08 20:22:54,111 [screen.py:_remove_all_panels()] - Removing all panels
2025-09-08 20:22:54,202 [screen.py:show_panel()] - Reinitializing panel job_status
2025-09-08 20:22:54,313 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2025-09-08 20:22:54,328 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2025-09-08 20:22:54,350 [job_status.py:update_filename()] - Updating filename to result - 2025-07-25T081619.603_0.2mm_PLA_Generic Klipper Printer_4h58m.gcode
2025-09-08 20:22:54,351 [job_status.py:_update_file_metadata()] - Update Metadata. File: result - 2025-07-25T081619.603_0.2mm_PLA_Generic Klipper Printer_4h58m.gcode Size: 43449261
2025-09-08 20:22:54,421 [screen.py:attach_panel()] - Current panel hierarchy: job_status > job_status
2025-09-08 20:27:54,795 [screensaver.py:show()] - Showing Screensaver
